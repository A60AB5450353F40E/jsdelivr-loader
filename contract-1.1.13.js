/*! For license information please see contract-1.1.13.js.LICENSE.txt */
(() => {
  var e,
    t,
    r,
    i,
    n,
    o,
    A,
    a,
    s = {
      12288: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      55041: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      98820: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ANTLRInputStream = void 0);
        const n = r(71696),
          o = r(681),
          A = r(42628);
        class a {
          constructor(e) {
            (this.p = 0), (this.data = e), (this.n = e.length);
          }
          reset() {
            this.p = 0;
          }
          consume() {
            if (this.p >= this.n)
              throw (
                (n(this.LA(1) === A.IntStream.EOF),
                new Error("cannot consume EOF"))
              );
            this.p < this.n && this.p++;
          }
          LA(e) {
            return 0 === e
              ? 0
              : (e < 0 && (e++, this.p + e - 1 < 0)) || this.p + e - 1 >= this.n
              ? A.IntStream.EOF
              : this.data.charCodeAt(this.p + e - 1);
          }
          LT(e) {
            return this.LA(e);
          }
          get index() {
            return this.p;
          }
          get size() {
            return this.n;
          }
          mark() {
            return -1;
          }
          release(e) {}
          seek(e) {
            if (e <= this.p) this.p = e;
            else for (e = Math.min(e, this.n); this.p < e; ) this.consume();
          }
          getText(e) {
            let t = e.a,
              r = e.b;
            r >= this.n && (r = this.n - 1);
            let i = r - t + 1;
            return t >= this.n ? "" : this.data.substr(t, i);
          }
          get sourceName() {
            return this.name ? this.name : A.IntStream.UNKNOWN_SOURCE_NAME;
          }
          toString() {
            return this.data;
          }
        }
        i([o.Override], a.prototype, "consume", null),
          i([o.Override], a.prototype, "LA", null),
          i([o.Override], a.prototype, "index", null),
          i([o.Override], a.prototype, "size", null),
          i([o.Override], a.prototype, "mark", null),
          i([o.Override], a.prototype, "release", null),
          i([o.Override], a.prototype, "seek", null),
          i([o.Override], a.prototype, "getText", null),
          i([o.Override], a.prototype, "sourceName", null),
          i([o.Override], a.prototype, "toString", null),
          (t.ANTLRInputStream = a);
      },
      80856: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BailErrorStrategy = void 0);
        const n = r(34242),
          o = r(27432),
          A = r(681),
          a = r(37455);
        class s extends n.DefaultErrorStrategy {
          recover(e, t) {
            for (let r = e.context; r; r = r.parent) r.exception = t;
            throw new a.ParseCancellationException(t);
          }
          recoverInline(e) {
            let t = new o.InputMismatchException(e);
            for (let r = e.context; r; r = r.parent) r.exception = t;
            throw new a.ParseCancellationException(t);
          }
          sync(e) {}
        }
        i([A.Override], s.prototype, "recover", null),
          i([A.Override], s.prototype, "recoverInline", null),
          i([A.Override], s.prototype, "sync", null),
          (t.BailErrorStrategy = s);
      },
      40672: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BufferedTokenStream = void 0);
        const o = r(71696),
          A = r(92058),
          a = r(94378),
          s = r(8170),
          c = r(681),
          g = r(48999);
        let l = class {
          constructor(e) {
            if (
              ((this.tokens = []),
              (this.p = -1),
              (this.fetchedEOF = !1),
              null == e)
            )
              throw new Error("tokenSource cannot be null");
            this._tokenSource = e;
          }
          get tokenSource() {
            return this._tokenSource;
          }
          set tokenSource(e) {
            (this._tokenSource = e),
              (this.tokens.length = 0),
              (this.p = -1),
              (this.fetchedEOF = !1);
          }
          get index() {
            return this.p;
          }
          mark() {
            return 0;
          }
          release(e) {}
          seek(e) {
            this.lazyInit(), (this.p = this.adjustSeekIndex(e));
          }
          get size() {
            return this.tokens.length;
          }
          consume() {
            let e;
            if (
              ((e =
                this.p >= 0 &&
                (this.fetchedEOF
                  ? this.p < this.tokens.length - 1
                  : this.p < this.tokens.length)),
              !e && this.LA(1) === g.Token.EOF)
            )
              throw new Error("cannot consume EOF");
            this.sync(this.p + 1) &&
              (this.p = this.adjustSeekIndex(this.p + 1));
          }
          sync(e) {
            o(e >= 0);
            let t = e - this.tokens.length + 1;
            return !(t > 0) || this.fetch(t) >= t;
          }
          fetch(e) {
            if (this.fetchedEOF) return 0;
            for (let t = 0; t < e; t++) {
              let e = this.tokenSource.nextToken();
              if (
                (this.isWritableToken(e) && (e.tokenIndex = this.tokens.length),
                this.tokens.push(e),
                e.type === g.Token.EOF)
              )
                return (this.fetchedEOF = !0), t + 1;
            }
            return e;
          }
          get(e) {
            if (e < 0 || e >= this.tokens.length)
              throw new RangeError(
                "token index " +
                  e +
                  " out of range 0.." +
                  (this.tokens.length - 1)
              );
            return this.tokens[e];
          }
          getRange(e, t) {
            if (e < 0 || t < 0) return [];
            this.lazyInit();
            let r = new Array();
            t >= this.tokens.length && (t = this.tokens.length - 1);
            for (let i = e; i <= t; i++) {
              let e = this.tokens[i];
              if (e.type === g.Token.EOF) break;
              r.push(e);
            }
            return r;
          }
          LA(e) {
            let t = this.LT(e);
            return t ? t.type : g.Token.INVALID_TYPE;
          }
          tryLB(e) {
            if (!(this.p - e < 0)) return this.tokens[this.p - e];
          }
          LT(e) {
            let t = this.tryLT(e);
            if (void 0 === t)
              throw new RangeError("requested lookback index out of range");
            return t;
          }
          tryLT(e) {
            if ((this.lazyInit(), 0 === e))
              throw new RangeError("0 is not a valid lookahead index");
            if (e < 0) return this.tryLB(-e);
            let t = this.p + e - 1;
            return (
              this.sync(t),
              t >= this.tokens.length
                ? this.tokens[this.tokens.length - 1]
                : this.tokens[t]
            );
          }
          adjustSeekIndex(e) {
            return e;
          }
          lazyInit() {
            -1 === this.p && this.setup();
          }
          setup() {
            this.sync(0), (this.p = this.adjustSeekIndex(0));
          }
          getTokens(e, t, r) {
            if ((this.lazyInit(), void 0 === e))
              return o(void 0 === t && void 0 === r), this.tokens;
            if (
              (void 0 === t && (t = this.tokens.length - 1),
              e < 0 ||
                t >= this.tokens.length ||
                t < 0 ||
                e >= this.tokens.length)
            )
              throw new RangeError(
                "start " +
                  e +
                  " or stop " +
                  t +
                  " not in 0.." +
                  (this.tokens.length - 1)
              );
            if (e > t) return [];
            if (void 0 === r) return this.tokens.slice(e, t + 1);
            "number" == typeof r && (r = new Set().add(r));
            let i = r,
              n = this.tokens.slice(e, t + 1);
            return (n = n.filter((e) => i.has(e.type))), n;
          }
          nextTokenOnChannel(e, t) {
            if ((this.sync(e), e >= this.size)) return this.size - 1;
            let r = this.tokens[e];
            for (; r.channel !== t; ) {
              if (r.type === g.Token.EOF) return e;
              e++, this.sync(e), (r = this.tokens[e]);
            }
            return e;
          }
          previousTokenOnChannel(e, t) {
            if ((this.sync(e), e >= this.size)) return this.size - 1;
            for (; e >= 0; ) {
              let r = this.tokens[e];
              if (r.type === g.Token.EOF || r.channel === t) return e;
              e--;
            }
            return e;
          }
          getHiddenTokensToRight(e, t = -1) {
            if ((this.lazyInit(), e < 0 || e >= this.tokens.length))
              throw new RangeError(
                e + " not in 0.." + (this.tokens.length - 1)
              );
            let r,
              i = this.nextTokenOnChannel(e + 1, s.Lexer.DEFAULT_TOKEN_CHANNEL),
              n = e + 1;
            return (
              (r = -1 === i ? this.size - 1 : i), this.filterForChannel(n, r, t)
            );
          }
          getHiddenTokensToLeft(e, t = -1) {
            if ((this.lazyInit(), e < 0 || e >= this.tokens.length))
              throw new RangeError(
                e + " not in 0.." + (this.tokens.length - 1)
              );
            if (0 === e) return [];
            let r = this.previousTokenOnChannel(
              e - 1,
              s.Lexer.DEFAULT_TOKEN_CHANNEL
            );
            if (r === e - 1) return [];
            let i = r + 1,
              n = e - 1;
            return this.filterForChannel(i, n, t);
          }
          filterForChannel(e, t, r) {
            let i = new Array();
            for (let n = e; n <= t; n++) {
              let e = this.tokens[n];
              -1 === r
                ? e.channel !== s.Lexer.DEFAULT_TOKEN_CHANNEL && i.push(e)
                : e.channel === r && i.push(e);
            }
            return i;
          }
          get sourceName() {
            return this.tokenSource.sourceName;
          }
          getText(e) {
            void 0 === e
              ? (e = a.Interval.of(0, this.size - 1))
              : e instanceof a.Interval || (e = e.sourceInterval);
            let t = e.a,
              r = e.b;
            if (t < 0 || r < 0) return "";
            this.fill(),
              r >= this.tokens.length && (r = this.tokens.length - 1);
            let i = "";
            for (let e = t; e <= r; e++) {
              let t = this.tokens[e];
              if (t.type === g.Token.EOF) break;
              i += t.text;
            }
            return i.toString();
          }
          getTextFromRange(e, t) {
            return this.isToken(e) && this.isToken(t)
              ? this.getText(a.Interval.of(e.tokenIndex, t.tokenIndex))
              : "";
          }
          fill() {
            for (this.lazyInit(); ; ) if (this.fetch(1e3) < 1e3) return;
          }
          isWritableToken(e) {
            return e instanceof A.CommonToken;
          }
          isToken(e) {
            return e instanceof A.CommonToken;
          }
        };
        i([c.NotNull], l.prototype, "_tokenSource", void 0),
          i([c.Override], l.prototype, "tokenSource", null),
          i([c.Override], l.prototype, "index", null),
          i([c.Override], l.prototype, "mark", null),
          i([c.Override], l.prototype, "release", null),
          i([c.Override], l.prototype, "seek", null),
          i([c.Override], l.prototype, "size", null),
          i([c.Override], l.prototype, "consume", null),
          i([c.Override], l.prototype, "get", null),
          i([c.Override], l.prototype, "LA", null),
          i([c.NotNull, c.Override], l.prototype, "LT", null),
          i([c.Override], l.prototype, "sourceName", null),
          i([c.NotNull, c.Override], l.prototype, "getText", null),
          i([c.NotNull, c.Override], l.prototype, "getTextFromRange", null),
          (l = i([n(0, c.NotNull)], l)),
          (t.BufferedTokenStream = l);
      },
      66599: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      73259: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CharStreams = void 0);
        const i = r(23421),
          n = r(11978),
          o = r(42628);
        (t.CharStreams || (t.CharStreams = {})).fromString = function (e, t) {
          (void 0 !== t && 0 !== t.length) ||
            (t = o.IntStream.UNKNOWN_SOURCE_NAME);
          let r = i.CodePointBuffer.builder(e.length),
            A = new Uint16Array(e.length);
          for (let t = 0; t < e.length; t++) A[t] = e.charCodeAt(t);
          return r.append(A), n.CodePointCharStream.fromBuffer(r.build(), t);
        };
      },
      23421: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CodePointBuffer = void 0);
        const i = r(71696),
          n = r(44084);
        class o {
          constructor(e, t) {
            (this.buffer = e), (this._position = 0), (this._size = t);
          }
          static withArray(e) {
            return new o(e, e.length);
          }
          get position() {
            return this._position;
          }
          set position(e) {
            if (e < 0 || e > this._size) throw new RangeError();
            this._position = e;
          }
          get remaining() {
            return this._size - this.position;
          }
          get(e) {
            return this.buffer[e];
          }
          array() {
            return this.buffer.slice(0, this._size);
          }
          static builder(e) {
            return new o.Builder(e);
          }
        }
        (t.CodePointBuffer = o),
          (function (e) {
            let t;
            !(function (e) {
              (e[(e.BYTE = 0)] = "BYTE"),
                (e[(e.CHAR = 1)] = "CHAR"),
                (e[(e.INT = 2)] = "INT");
            })(t || (t = {}));
            class r {
              constructor(e) {
                (this.type = 0),
                  (this.buffer = new Uint8Array(e)),
                  (this.prevHighSurrogate = -1),
                  (this.position = 0);
              }
              build() {
                return new e(this.buffer, this.position);
              }
              static roundUpToNextPowerOfTwo(e) {
                let t = 32 - Math.clz32(e - 1);
                return Math.pow(2, t);
              }
              ensureRemaining(e) {
                switch (this.type) {
                  case 0:
                    if (this.buffer.length - this.position < e) {
                      let t = r.roundUpToNextPowerOfTwo(this.buffer.length + e),
                        i = new Uint8Array(t);
                      i.set(this.buffer.subarray(0, this.position), 0),
                        (this.buffer = i);
                    }
                    break;
                  case 1:
                    if (this.buffer.length - this.position < e) {
                      let t = r.roundUpToNextPowerOfTwo(this.buffer.length + e),
                        i = new Uint16Array(t);
                      i.set(this.buffer.subarray(0, this.position), 0),
                        (this.buffer = i);
                    }
                    break;
                  case 2:
                    if (this.buffer.length - this.position < e) {
                      let t = r.roundUpToNextPowerOfTwo(this.buffer.length + e),
                        i = new Int32Array(t);
                      i.set(this.buffer.subarray(0, this.position), 0),
                        (this.buffer = i);
                    }
                }
              }
              append(e) {
                this.ensureRemaining(e.length), this.appendArray(e);
              }
              appendArray(e) {
                switch (this.type) {
                  case 0:
                    this.appendArrayByte(e);
                    break;
                  case 1:
                    this.appendArrayChar(e);
                    break;
                  case 2:
                    this.appendArrayInt(e);
                }
              }
              appendArrayByte(e) {
                i(-1 === this.prevHighSurrogate);
                let t = e,
                  r = 0,
                  o = e.length,
                  A = this.buffer,
                  a = this.position;
                for (; r < o; ) {
                  let i = t[r];
                  if (!(i <= 255))
                    return (
                      (e = e.subarray(r, o)),
                      (this.position = a),
                      n.isHighSurrogate(i)
                        ? (this.byteToIntBuffer(e.length),
                          void this.appendArrayInt(e))
                        : (this.byteToCharBuffer(e.length),
                          void this.appendArrayChar(e))
                    );
                  (A[a] = i), r++, a++;
                }
                this.position = a;
              }
              appendArrayChar(e) {
                i(-1 === this.prevHighSurrogate);
                let t = e,
                  r = 0,
                  o = e.length,
                  A = this.buffer,
                  a = this.position;
                for (; r < o; ) {
                  let i = t[r];
                  if (n.isHighSurrogate(i))
                    return (
                      (e = e.subarray(r, o)),
                      (this.position = a),
                      this.charToIntBuffer(e.length),
                      void this.appendArrayInt(e)
                    );
                  (A[a] = i), r++, a++;
                }
                this.position = a;
              }
              appendArrayInt(e) {
                let t = e,
                  r = 0,
                  i = e.length,
                  o = this.buffer,
                  A = this.position;
                for (; r < i; ) {
                  let e = t[r];
                  r++,
                    -1 !== this.prevHighSurrogate
                      ? n.isLowSurrogate(e)
                        ? ((o[A] = String.fromCharCode(
                            this.prevHighSurrogate,
                            e
                          ).codePointAt(0)),
                          A++,
                          (this.prevHighSurrogate = -1))
                        : ((o[A] = this.prevHighSurrogate),
                          A++,
                          n.isHighSurrogate(e)
                            ? (this.prevHighSurrogate = e)
                            : ((o[A] = e), A++, (this.prevHighSurrogate = -1)))
                      : n.isHighSurrogate(e)
                      ? (this.prevHighSurrogate = e)
                      : ((o[A] = e), A++);
                }
                -1 !== this.prevHighSurrogate &&
                  ((o[A] = this.prevHighSurrogate), A++),
                  (this.position = A);
              }
              byteToCharBuffer(e) {
                let t = new Uint16Array(
                  Math.max(this.position + e, this.buffer.length >> 1)
                );
                t.set(this.buffer.subarray(0, this.position), 0),
                  (this.type = 1),
                  (this.buffer = t);
              }
              byteToIntBuffer(e) {
                let t = new Int32Array(
                  Math.max(this.position + e, this.buffer.length >> 2)
                );
                t.set(this.buffer.subarray(0, this.position), 0),
                  (this.type = 2),
                  (this.buffer = t);
              }
              charToIntBuffer(e) {
                let t = new Int32Array(
                  Math.max(this.position + e, this.buffer.length >> 1)
                );
                t.set(this.buffer.subarray(0, this.position), 0),
                  (this.type = 2),
                  (this.buffer = t);
              }
            }
            e.Builder = r;
          })((o = t.CodePointBuffer || (t.CodePointBuffer = {})));
      },
      11978: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CodePointCharStream = void 0);
        const n = r(71696),
          o = r(42628),
          A = r(94378),
          a = r(681);
        class s {
          constructor(e, t, r, i) {
            n(0 === t),
              (this._array = e),
              (this._size = r),
              (this._name = i),
              (this._position = 0);
          }
          get internalStorage() {
            return this._array;
          }
          static fromBuffer(e, t) {
            return (
              (void 0 !== t && 0 !== t.length) ||
                (t = o.IntStream.UNKNOWN_SOURCE_NAME),
              new s(e.array(), e.position, e.remaining, t)
            );
          }
          consume() {
            if (this._size - this._position == 0)
              throw (
                (n(this.LA(1) === o.IntStream.EOF),
                new RangeError("cannot consume EOF"))
              );
            this._position++;
          }
          get index() {
            return this._position;
          }
          get size() {
            return this._size;
          }
          mark() {
            return -1;
          }
          release(e) {}
          seek(e) {
            this._position = e;
          }
          get sourceName() {
            return this._name;
          }
          toString() {
            return this.getText(A.Interval.of(0, this.size - 1));
          }
          LA(e) {
            let t;
            switch (Math.sign(e)) {
              case -1:
                return (
                  (t = this.index + e), t < 0 ? o.IntStream.EOF : this._array[t]
                );
              case 0:
                return 0;
              case 1:
                return (
                  (t = this.index + e - 1),
                  t >= this.size ? o.IntStream.EOF : this._array[t]
                );
            }
            throw new RangeError("Not reached");
          }
          getText(e) {
            const t = Math.min(e.a, this.size),
              r = Math.min(e.b - e.a + 1, this.size - t);
            return this._array instanceof Int32Array
              ? String.fromCodePoint(
                  ...Array.from(this._array.subarray(t, t + r))
                )
              : String.fromCharCode(
                  ...Array.from(this._array.subarray(t, t + r))
                );
          }
        }
        i([a.Override], s.prototype, "consume", null),
          i([a.Override], s.prototype, "index", null),
          i([a.Override], s.prototype, "size", null),
          i([a.Override], s.prototype, "mark", null),
          i([a.Override], s.prototype, "release", null),
          i([a.Override], s.prototype, "seek", null),
          i([a.Override], s.prototype, "sourceName", null),
          i([a.Override], s.prototype, "toString", null),
          i([a.Override], s.prototype, "LA", null),
          i([a.Override], s.prototype, "getText", null),
          (t.CodePointCharStream = s);
      },
      92058: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CommonToken = void 0);
        const o = r(94378),
          A = r(681),
          a = r(48999);
        let s = class e {
          constructor(
            t,
            r,
            i = e.EMPTY_SOURCE,
            n = a.Token.DEFAULT_CHANNEL,
            o = 0,
            A = 0
          ) {
            (this._line = 0),
              (this._charPositionInLine = -1),
              (this._channel = a.Token.DEFAULT_CHANNEL),
              (this.index = -1),
              (this._text = r),
              (this._type = t),
              (this.source = i),
              (this._channel = n),
              (this.start = o),
              (this.stop = A),
              null != i.source &&
                ((this._line = i.source.line),
                (this._charPositionInLine = i.source.charPositionInLine));
          }
          static fromToken(t) {
            let r = new e(
              t.type,
              void 0,
              e.EMPTY_SOURCE,
              t.channel,
              t.startIndex,
              t.stopIndex
            );
            return (
              (r._line = t.line),
              (r.index = t.tokenIndex),
              (r._charPositionInLine = t.charPositionInLine),
              t instanceof e
                ? ((r._text = t._text), (r.source = t.source))
                : ((r._text = t.text),
                  (r.source = {
                    source: t.tokenSource,
                    stream: t.inputStream,
                  })),
              r
            );
          }
          get type() {
            return this._type;
          }
          set type(e) {
            this._type = e;
          }
          get line() {
            return this._line;
          }
          set line(e) {
            this._line = e;
          }
          get text() {
            if (null != this._text) return this._text;
            let e = this.inputStream;
            if (null == e) return;
            let t = e.size;
            return this.start < t && this.stop < t
              ? e.getText(o.Interval.of(this.start, this.stop))
              : "<EOF>";
          }
          set text(e) {
            this._text = e;
          }
          get charPositionInLine() {
            return this._charPositionInLine;
          }
          set charPositionInLine(e) {
            this._charPositionInLine = e;
          }
          get channel() {
            return this._channel;
          }
          set channel(e) {
            this._channel = e;
          }
          get startIndex() {
            return this.start;
          }
          set startIndex(e) {
            this.start = e;
          }
          get stopIndex() {
            return this.stop;
          }
          set stopIndex(e) {
            this.stop = e;
          }
          get tokenIndex() {
            return this.index;
          }
          set tokenIndex(e) {
            this.index = e;
          }
          get tokenSource() {
            return this.source.source;
          }
          get inputStream() {
            return this.source.stream;
          }
          toString(e) {
            let t = "";
            this._channel > 0 && (t = ",channel=" + this._channel);
            let r = this.text;
            null != r
              ? ((r = r.replace(/\n/g, "\\n")),
                (r = r.replace(/\r/g, "\\r")),
                (r = r.replace(/\t/g, "\\t")))
              : (r = "<no text>");
            let i = String(this._type);
            return (
              e && (i = e.vocabulary.getDisplayName(this._type)),
              "[@" +
                this.tokenIndex +
                "," +
                this.start +
                ":" +
                this.stop +
                "='" +
                r +
                "',<" +
                i +
                ">" +
                t +
                "," +
                this._line +
                ":" +
                this.charPositionInLine +
                "]"
            );
          }
        };
        (s.EMPTY_SOURCE = { source: void 0, stream: void 0 }),
          i([A.NotNull], s.prototype, "source", void 0),
          i([A.Override], s.prototype, "type", null),
          i([A.Override], s.prototype, "line", null),
          i([A.Override], s.prototype, "text", null),
          i([A.Override], s.prototype, "charPositionInLine", null),
          i([A.Override], s.prototype, "channel", null),
          i([A.Override], s.prototype, "startIndex", null),
          i([A.Override], s.prototype, "stopIndex", null),
          i([A.Override], s.prototype, "tokenIndex", null),
          i([A.Override], s.prototype, "tokenSource", null),
          i([A.Override], s.prototype, "inputStream", null),
          i([A.Override], s.prototype, "toString", null),
          i([n(0, A.NotNull)], s, "fromToken", null),
          (s = i([n(2, A.NotNull)], s)),
          (t.CommonToken = s);
      },
      2929: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CommonTokenFactory = void 0);
        const n = r(92058),
          o = r(94378),
          A = r(681);
        class a {
          constructor(e = !1) {
            this.copyText = e;
          }
          create(e, t, r, i, A, a, s, c) {
            let g = new n.CommonToken(t, r, e, i, A, a);
            return (
              (g.line = s),
              (g.charPositionInLine = c),
              null == r &&
                this.copyText &&
                null != e.stream &&
                (g.text = e.stream.getText(o.Interval.of(A, a))),
              g
            );
          }
          createSimple(e, t) {
            return new n.CommonToken(e, t);
          }
        }
        i([A.Override], a.prototype, "create", null),
          i([A.Override], a.prototype, "createSimple", null),
          (t.CommonTokenFactory = a),
          (function (e) {
            e.DEFAULT = new e();
          })((a = t.CommonTokenFactory || (t.CommonTokenFactory = {})));
      },
      92217: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CommonTokenStream = void 0);
        const o = r(40672),
          A = r(681),
          a = r(48999);
        let s = class extends o.BufferedTokenStream {
          constructor(e, t = a.Token.DEFAULT_CHANNEL) {
            super(e), (this.channel = t);
          }
          adjustSeekIndex(e) {
            return this.nextTokenOnChannel(e, this.channel);
          }
          tryLB(e) {
            if (this.p - e < 0) return;
            let t = this.p,
              r = 1;
            for (; r <= e && t > 0; )
              (t = this.previousTokenOnChannel(t - 1, this.channel)), r++;
            return t < 0 ? void 0 : this.tokens[t];
          }
          tryLT(e) {
            if ((this.lazyInit(), 0 === e))
              throw new RangeError("0 is not a valid lookahead index");
            if (e < 0) return this.tryLB(-e);
            let t = this.p,
              r = 1;
            for (; r < e; )
              this.sync(t + 1) &&
                (t = this.nextTokenOnChannel(t + 1, this.channel)),
                r++;
            return this.tokens[t];
          }
          getNumberOfOnChannelTokens() {
            let e = 0;
            this.fill();
            for (let t of this.tokens)
              if ((t.channel === this.channel && e++, t.type === a.Token.EOF))
                break;
            return e;
          }
        };
        i([A.Override], s.prototype, "adjustSeekIndex", null),
          i([A.Override], s.prototype, "tryLB", null),
          i([A.Override], s.prototype, "tryLT", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.CommonTokenStream = s);
      },
      78778: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ConsoleErrorListener = void 0);
        class r {
          syntaxError(e, t, r, i, n, o) {
            console.error(`line ${r}:${i} ${n}`);
          }
        }
        (t.ConsoleErrorListener = r), (r.INSTANCE = new r());
      },
      681: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SuppressWarnings = t.Override = t.Nullable = t.NotNull = void 0),
          (t.NotNull = function (e, t, r) {}),
          (t.Nullable = function (e, t, r) {}),
          (t.Override = function (e, t, r) {}),
          (t.SuppressWarnings = function (e) {
            return (e, t, r) => {};
          });
      },
      34242: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DefaultErrorStrategy = void 0);
        const o = r(21971),
          A = r(89602),
          a = r(81103),
          s = r(27432),
          c = r(45462),
          g = r(61202),
          l = r(11229),
          u = r(48999),
          h = r(681);
        class I {
          constructor() {
            (this.errorRecoveryMode = !1),
              (this.lastErrorIndex = -1),
              (this.nextTokensState = o.ATNState.INVALID_STATE_NUMBER);
          }
          reset(e) {
            this.endErrorCondition(e);
          }
          beginErrorCondition(e) {
            this.errorRecoveryMode = !0;
          }
          inErrorRecoveryMode(e) {
            return this.errorRecoveryMode;
          }
          endErrorCondition(e) {
            (this.errorRecoveryMode = !1),
              (this.lastErrorStates = void 0),
              (this.lastErrorIndex = -1);
          }
          reportMatch(e) {
            this.endErrorCondition(e);
          }
          reportError(e, t) {
            this.inErrorRecoveryMode(e) ||
              (this.beginErrorCondition(e),
              t instanceof g.NoViableAltException
                ? this.reportNoViableAlternative(e, t)
                : t instanceof s.InputMismatchException
                ? this.reportInputMismatch(e, t)
                : t instanceof a.FailedPredicateException
                ? this.reportFailedPredicate(e, t)
                : (console.error(`unknown recognition error type: ${t}`),
                  this.notifyErrorListeners(e, t.toString(), t)));
          }
          notifyErrorListeners(e, t, r) {
            let i = r.getOffendingToken(e);
            void 0 === i && (i = null), e.notifyErrorListeners(t, i, r);
          }
          recover(e, t) {
            this.lastErrorIndex === e.inputStream.index &&
              this.lastErrorStates &&
              this.lastErrorStates.contains(e.state) &&
              e.consume(),
              (this.lastErrorIndex = e.inputStream.index),
              this.lastErrorStates ||
                (this.lastErrorStates = new c.IntervalSet()),
              this.lastErrorStates.add(e.state);
            let r = this.getErrorRecoverySet(e);
            this.consumeUntil(e, r);
          }
          sync(e) {
            let t = e.interpreter.atn.states[e.state];
            if (this.inErrorRecoveryMode(e)) return;
            let r = e.inputStream.LA(1),
              i = e.atn.nextTokens(t);
            if (i.contains(r))
              return (
                (this.nextTokensContext = void 0),
                void (this.nextTokensState = o.ATNState.INVALID_STATE_NUMBER)
              );
            if (i.contains(u.Token.EPSILON))
              void 0 === this.nextTokensContext &&
                ((this.nextTokensContext = e.context),
                (this.nextTokensState = e.state));
            else
              switch (t.stateType) {
                case A.ATNStateType.BLOCK_START:
                case A.ATNStateType.STAR_BLOCK_START:
                case A.ATNStateType.PLUS_BLOCK_START:
                case A.ATNStateType.STAR_LOOP_ENTRY:
                  if (this.singleTokenDeletion(e)) return;
                  throw new s.InputMismatchException(e);
                case A.ATNStateType.PLUS_LOOP_BACK:
                case A.ATNStateType.STAR_LOOP_BACK:
                  this.reportUnwantedToken(e);
                  let t = e.getExpectedTokens().or(this.getErrorRecoverySet(e));
                  this.consumeUntil(e, t);
              }
          }
          reportNoViableAlternative(e, t) {
            let r,
              i = e.inputStream;
            r = i
              ? t.startToken.type === u.Token.EOF
                ? "<EOF>"
                : i.getTextFromRange(t.startToken, t.getOffendingToken())
              : "<unknown input>";
            let n =
              "no viable alternative at input " + this.escapeWSAndQuote(r);
            this.notifyErrorListeners(e, n, t);
          }
          reportInputMismatch(e, t) {
            let r = t.expectedTokens,
              i = r ? r.toStringVocabulary(e.vocabulary) : "",
              n =
                "mismatched input " +
                this.getTokenErrorDisplay(t.getOffendingToken(e)) +
                " expecting " +
                i;
            this.notifyErrorListeners(e, n, t);
          }
          reportFailedPredicate(e, t) {
            let r =
              "rule " + e.ruleNames[e.context.ruleIndex] + " " + t.message;
            this.notifyErrorListeners(e, r, t);
          }
          reportUnwantedToken(e) {
            if (this.inErrorRecoveryMode(e)) return;
            this.beginErrorCondition(e);
            let t = e.currentToken,
              r =
                "extraneous input " +
                this.getTokenErrorDisplay(t) +
                " expecting " +
                this.getExpectedTokens(e).toStringVocabulary(e.vocabulary);
            e.notifyErrorListeners(r, t, void 0);
          }
          reportMissingToken(e) {
            if (this.inErrorRecoveryMode(e)) return;
            this.beginErrorCondition(e);
            let t = e.currentToken,
              r =
                "missing " +
                this.getExpectedTokens(e).toStringVocabulary(e.vocabulary) +
                " at " +
                this.getTokenErrorDisplay(t);
            e.notifyErrorListeners(r, t, void 0);
          }
          recoverInline(e) {
            let t = this.singleTokenDeletion(e);
            if (t) return e.consume(), t;
            if (this.singleTokenInsertion(e)) return this.getMissingSymbol(e);
            throw void 0 === this.nextTokensContext
              ? new s.InputMismatchException(e)
              : new s.InputMismatchException(
                  e,
                  this.nextTokensState,
                  this.nextTokensContext
                );
          }
          singleTokenInsertion(e) {
            let t = e.inputStream.LA(1),
              r = e.interpreter.atn.states[e.state].transition(0).target,
              i = e.interpreter.atn;
            return (
              !!i
                .nextTokens(
                  r,
                  l.PredictionContext.fromRuleContext(i, e.context)
                )
                .contains(t) && (this.reportMissingToken(e), !0)
            );
          }
          singleTokenDeletion(e) {
            let t = e.inputStream.LA(2);
            if (this.getExpectedTokens(e).contains(t)) {
              this.reportUnwantedToken(e), e.consume();
              let t = e.currentToken;
              return this.reportMatch(e), t;
            }
          }
          getMissingSymbol(e) {
            let t,
              r = e.currentToken,
              i = this.getExpectedTokens(e),
              n = u.Token.INVALID_TYPE;
            i.isNil || (n = i.minElement),
              (t =
                n === u.Token.EOF
                  ? "<missing EOF>"
                  : "<missing " + e.vocabulary.getDisplayName(n) + ">");
            let o = r,
              A = e.inputStream.tryLT(-1);
            return (
              o.type === u.Token.EOF && null != A && (o = A),
              this.constructToken(e.inputStream.tokenSource, n, t, o)
            );
          }
          constructToken(e, t, r, i) {
            let n = e.tokenFactory,
              o = i.tokenSource,
              A = o ? o.inputStream : void 0;
            return n.create(
              { source: e, stream: A },
              t,
              r,
              u.Token.DEFAULT_CHANNEL,
              -1,
              -1,
              i.line,
              i.charPositionInLine
            );
          }
          getExpectedTokens(e) {
            return e.getExpectedTokens();
          }
          getTokenErrorDisplay(e) {
            if (!e) return "<no token>";
            let t = this.getSymbolText(e);
            return (
              t ||
                (t =
                  this.getSymbolType(e) === u.Token.EOF
                    ? "<EOF>"
                    : `<${this.getSymbolType(e)}>`),
              this.escapeWSAndQuote(t)
            );
          }
          getSymbolText(e) {
            return e.text;
          }
          getSymbolType(e) {
            return e.type;
          }
          escapeWSAndQuote(e) {
            return (
              "'" +
              (e = (e = (e = e.replace("\n", "\\n")).replace(
                "\r",
                "\\r"
              )).replace("\t", "\\t")) +
              "'"
            );
          }
          getErrorRecoverySet(e) {
            let t = e.interpreter.atn,
              r = e.context,
              i = new c.IntervalSet();
            for (; r && r.invokingState >= 0; ) {
              let e = t.states[r.invokingState].transition(0),
                n = t.nextTokens(e.followState);
              i.addAll(n), (r = r._parent);
            }
            return i.remove(u.Token.EPSILON), i;
          }
          consumeUntil(e, t) {
            let r = e.inputStream.LA(1);
            for (; r !== u.Token.EOF && !t.contains(r); )
              e.consume(), (r = e.inputStream.LA(1));
          }
        }
        i([h.Override], I.prototype, "reset", null),
          i([n(0, h.NotNull)], I.prototype, "beginErrorCondition", null),
          i([h.Override], I.prototype, "inErrorRecoveryMode", null),
          i([n(0, h.NotNull)], I.prototype, "endErrorCondition", null),
          i([h.Override], I.prototype, "reportMatch", null),
          i([h.Override], I.prototype, "reportError", null),
          i([n(0, h.NotNull)], I.prototype, "notifyErrorListeners", null),
          i([h.Override], I.prototype, "recover", null),
          i([h.Override], I.prototype, "sync", null),
          i(
            [n(0, h.NotNull), n(1, h.NotNull)],
            I.prototype,
            "reportNoViableAlternative",
            null
          ),
          i(
            [n(0, h.NotNull), n(1, h.NotNull)],
            I.prototype,
            "reportInputMismatch",
            null
          ),
          i(
            [n(0, h.NotNull), n(1, h.NotNull)],
            I.prototype,
            "reportFailedPredicate",
            null
          ),
          i([n(0, h.NotNull)], I.prototype, "reportUnwantedToken", null),
          i([n(0, h.NotNull)], I.prototype, "reportMissingToken", null),
          i([h.Override], I.prototype, "recoverInline", null),
          i([n(0, h.NotNull)], I.prototype, "singleTokenInsertion", null),
          i([n(0, h.NotNull)], I.prototype, "singleTokenDeletion", null),
          i(
            [h.NotNull, n(0, h.NotNull)],
            I.prototype,
            "getMissingSymbol",
            null
          ),
          i(
            [h.NotNull, n(0, h.NotNull)],
            I.prototype,
            "getExpectedTokens",
            null
          ),
          i([n(0, h.NotNull)], I.prototype, "getSymbolText", null),
          i([n(0, h.NotNull)], I.prototype, "getSymbolType", null),
          i(
            [h.NotNull, n(0, h.NotNull)],
            I.prototype,
            "escapeWSAndQuote",
            null
          ),
          i(
            [h.NotNull, n(0, h.NotNull)],
            I.prototype,
            "getErrorRecoverySet",
            null
          ),
          i(
            [n(0, h.NotNull), n(1, h.NotNull)],
            I.prototype,
            "consumeUntil",
            null
          ),
          (t.DefaultErrorStrategy = I);
      },
      58140: (e, t) => {
        "use strict";
        var r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Dependents = void 0),
          ((r = t.Dependents || (t.Dependents = {}))[(r.SELF = 0)] = "SELF"),
          (r[(r.PARENTS = 1)] = "PARENTS"),
          (r[(r.CHILDREN = 2)] = "CHILDREN"),
          (r[(r.ANCESTORS = 3)] = "ANCESTORS"),
          (r[(r.DESCENDANTS = 4)] = "DESCENDANTS"),
          (r[(r.SIBLINGS = 5)] = "SIBLINGS"),
          (r[(r.PRECEEDING_SIBLINGS = 6)] = "PRECEEDING_SIBLINGS"),
          (r[(r.FOLLOWING_SIBLINGS = 7)] = "FOLLOWING_SIBLINGS"),
          (r[(r.PRECEEDING = 8)] = "PRECEEDING"),
          (r[(r.FOLLOWING = 9)] = "FOLLOWING");
      },
      2155: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DiagnosticErrorListener = void 0);
        const o = r(13300),
          A = r(681),
          a = r(94378);
        class s {
          constructor(e = !0) {
            (this.exactOnly = e), (this.exactOnly = e);
          }
          syntaxError(e, t, r, i, n, o) {}
          reportAmbiguity(e, t, r, i, n, o, A) {
            if (this.exactOnly && !n) return;
            let s = `reportAmbiguity d=${this.getDecisionDescription(
              e,
              t
            )}: ambigAlts=${this.getConflictingAlts(
              o,
              A
            )}, input='${e.inputStream.getText(a.Interval.of(r, i))}'`;
            e.notifyErrorListeners(s);
          }
          reportAttemptingFullContext(e, t, r, i, n, o) {
            let A = `reportAttemptingFullContext d=${this.getDecisionDescription(
              e,
              t
            )}, input='${e.inputStream.getText(a.Interval.of(r, i))}'`;
            e.notifyErrorListeners(A);
          }
          reportContextSensitivity(e, t, r, i, n, o) {
            let A = `reportContextSensitivity d=${this.getDecisionDescription(
              e,
              t
            )}, input='${e.inputStream.getText(a.Interval.of(r, i))}'`;
            e.notifyErrorListeners(A);
          }
          getDecisionDescription(e, t) {
            let r = t.decision,
              i = t.atnStartState.ruleIndex,
              n = e.ruleNames;
            if (i < 0 || i >= n.length) return r.toString();
            let o = n[i];
            return o ? `${r} (${o})` : r.toString();
          }
          getConflictingAlts(e, t) {
            if (null != e) return e;
            let r = new o.BitSet();
            for (let e of t) r.set(e.alt);
            return r;
          }
        }
        i([A.Override], s.prototype, "syntaxError", null),
          i(
            [A.Override, n(0, A.NotNull), n(1, A.NotNull), n(6, A.NotNull)],
            s.prototype,
            "reportAmbiguity",
            null
          ),
          i(
            [A.Override, n(0, A.NotNull), n(1, A.NotNull), n(5, A.NotNull)],
            s.prototype,
            "reportAttemptingFullContext",
            null
          ),
          i(
            [A.Override, n(0, A.NotNull), n(1, A.NotNull), n(5, A.NotNull)],
            s.prototype,
            "reportContextSensitivity",
            null
          ),
          i(
            [n(0, A.NotNull), n(1, A.NotNull)],
            s.prototype,
            "getDecisionDescription",
            null
          ),
          i(
            [A.NotNull, n(1, A.NotNull)],
            s.prototype,
            "getConflictingAlts",
            null
          ),
          (t.DiagnosticErrorListener = s);
      },
      81103: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.FailedPredicateException = void 0);
        const o = r(1100),
          A = r(681),
          a = r(21290);
        let s = class e extends o.RecognitionException {
          constructor(t, r, i) {
            super(t, t.inputStream, t.context, e.formatMessage(r, i));
            let n = t.interpreter.atn.states[t.state].transition(0);
            n instanceof a.PredicateTransition
              ? ((this._ruleIndex = n.ruleIndex),
                (this._predicateIndex = n.predIndex))
              : ((this._ruleIndex = 0), (this._predicateIndex = 0)),
              (this._predicate = r),
              super.setOffendingToken(t, t.currentToken);
          }
          get ruleIndex() {
            return this._ruleIndex;
          }
          get predicateIndex() {
            return this._predicateIndex;
          }
          get predicate() {
            return this._predicate;
          }
          static formatMessage(e, t) {
            return t || `failed predicate: {${e}}?`;
          }
        };
        i([A.NotNull], s, "formatMessage", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.FailedPredicateException = s);
      },
      27432: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InputMismatchException = void 0);
        const o = r(1100),
          A = r(681);
        let a = class extends o.RecognitionException {
          constructor(e, t, r) {
            void 0 === r && (r = e.context),
              super(e, e.inputStream, r),
              void 0 !== t && this.setOffendingState(t),
              this.setOffendingToken(e, e.currentToken);
          }
        };
        (a = i([n(0, A.NotNull)], a)), (t.InputMismatchException = a);
      },
      42628: (e, t) => {
        "use strict";
        var r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.IntStream = void 0),
          ((r = t.IntStream || (t.IntStream = {})).EOF = -1),
          (r.UNKNOWN_SOURCE_NAME = "<unknown>");
      },
      69725: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InterpreterRuleContext = void 0);
        const n = r(681),
          o = r(39248);
        class A extends o.ParserRuleContext {
          constructor(e, t, r) {
            void 0 !== r ? super(t, r) : super(), (this._ruleIndex = e);
          }
          get ruleIndex() {
            return this._ruleIndex;
          }
        }
        i([n.Override], A.prototype, "ruleIndex", null),
          (t.InterpreterRuleContext = A);
      },
      8170: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Lexer = void 0);
        const n = r(2929),
          o = r(55555),
          A = r(94378),
          a = r(42628),
          s = r(49796),
          c = r(95154),
          g = r(681),
          l = r(54780),
          u = r(48999);
        class h extends l.Recognizer {
          constructor(e) {
            super(),
              (this._factory = n.CommonTokenFactory.DEFAULT),
              (this._tokenStartCharIndex = -1),
              (this._tokenStartLine = 0),
              (this._tokenStartCharPositionInLine = 0),
              (this._hitEOF = !1),
              (this._channel = 0),
              (this._type = 0),
              (this._modeStack = new o.IntegerStack()),
              (this._mode = h.DEFAULT_MODE),
              (this._input = e),
              (this._tokenFactorySourcePair = { source: this, stream: e });
          }
          static get DEFAULT_TOKEN_CHANNEL() {
            return u.Token.DEFAULT_CHANNEL;
          }
          static get HIDDEN() {
            return u.Token.HIDDEN_CHANNEL;
          }
          reset(e) {
            (void 0 === e || e) && this._input.seek(0),
              (this._token = void 0),
              (this._type = u.Token.INVALID_TYPE),
              (this._channel = u.Token.DEFAULT_CHANNEL),
              (this._tokenStartCharIndex = -1),
              (this._tokenStartCharPositionInLine = -1),
              (this._tokenStartLine = -1),
              (this._text = void 0),
              (this._hitEOF = !1),
              (this._mode = h.DEFAULT_MODE),
              this._modeStack.clear(),
              this.interpreter.reset();
          }
          nextToken() {
            if (null == this._input)
              throw new Error("nextToken requires a non-null input stream.");
            let e = this._input.mark();
            try {
              e: for (;;) {
                if (this._hitEOF) return this.emitEOF();
                (this._token = void 0),
                  (this._channel = u.Token.DEFAULT_CHANNEL),
                  (this._tokenStartCharIndex = this._input.index),
                  (this._tokenStartCharPositionInLine =
                    this.interpreter.charPositionInLine),
                  (this._tokenStartLine = this.interpreter.line),
                  (this._text = void 0);
                do {
                  let e;
                  this._type = u.Token.INVALID_TYPE;
                  try {
                    e = this.interpreter.match(this._input, this._mode);
                  } catch (t) {
                    if (!(t instanceof c.LexerNoViableAltException)) throw t;
                    this.notifyListeners(t), this.recover(t), (e = h.SKIP);
                  }
                  if (
                    (this._input.LA(1) === a.IntStream.EOF &&
                      (this._hitEOF = !0),
                    this._type === u.Token.INVALID_TYPE && (this._type = e),
                    this._type === h.SKIP)
                  )
                    continue e;
                } while (this._type === h.MORE);
                return null == this._token ? this.emit() : this._token;
              }
            } finally {
              this._input.release(e);
            }
          }
          skip() {
            this._type = h.SKIP;
          }
          more() {
            this._type = h.MORE;
          }
          mode(e) {
            this._mode = e;
          }
          pushMode(e) {
            s.LexerATNSimulator.debug && console.log("pushMode " + e),
              this._modeStack.push(this._mode),
              this.mode(e);
          }
          popMode() {
            if (this._modeStack.isEmpty) throw new Error("EmptyStackException");
            return (
              s.LexerATNSimulator.debug &&
                console.log("popMode back to " + this._modeStack.peek()),
              this.mode(this._modeStack.pop()),
              this._mode
            );
          }
          get tokenFactory() {
            return this._factory;
          }
          set tokenFactory(e) {
            this._factory = e;
          }
          get inputStream() {
            return this._input;
          }
          set inputStream(e) {
            this.reset(!1),
              (this._input = e),
              (this._tokenFactorySourcePair = {
                source: this,
                stream: this._input,
              });
          }
          get sourceName() {
            return this._input.sourceName;
          }
          emit(e) {
            return (
              e ||
                (e = this._factory.create(
                  this._tokenFactorySourcePair,
                  this._type,
                  this._text,
                  this._channel,
                  this._tokenStartCharIndex,
                  this.charIndex - 1,
                  this._tokenStartLine,
                  this._tokenStartCharPositionInLine
                )),
              (this._token = e),
              e
            );
          }
          emitEOF() {
            let e = this.charPositionInLine,
              t = this.line,
              r = this._factory.create(
                this._tokenFactorySourcePair,
                u.Token.EOF,
                void 0,
                u.Token.DEFAULT_CHANNEL,
                this._input.index,
                this._input.index - 1,
                t,
                e
              );
            return this.emit(r), r;
          }
          get line() {
            return this.interpreter.line;
          }
          set line(e) {
            this.interpreter.line = e;
          }
          get charPositionInLine() {
            return this.interpreter.charPositionInLine;
          }
          set charPositionInLine(e) {
            this.interpreter.charPositionInLine = e;
          }
          get charIndex() {
            return this._input.index;
          }
          get text() {
            return null != this._text
              ? this._text
              : this.interpreter.getText(this._input);
          }
          set text(e) {
            this._text = e;
          }
          get token() {
            return this._token;
          }
          set token(e) {
            this._token = e;
          }
          set type(e) {
            this._type = e;
          }
          get type() {
            return this._type;
          }
          set channel(e) {
            this._channel = e;
          }
          get channel() {
            return this._channel;
          }
          getAllTokens() {
            let e = [],
              t = this.nextToken();
            for (; t.type !== u.Token.EOF; ) e.push(t), (t = this.nextToken());
            return e;
          }
          notifyListeners(e) {
            let t = this._input.getText(
                A.Interval.of(this._tokenStartCharIndex, this._input.index)
              ),
              r =
                "token recognition error at: '" + this.getErrorDisplay(t) + "'",
              i = this.getErrorListenerDispatch();
            i.syntaxError &&
              i.syntaxError(
                this,
                void 0,
                this._tokenStartLine,
                this._tokenStartCharPositionInLine,
                r,
                e
              );
          }
          getErrorDisplay(e) {
            if ("number" == typeof e) {
              switch (e) {
                case u.Token.EOF:
                  return "<EOF>";
                case 10:
                  return "\\n";
                case 9:
                  return "\\t";
                case 13:
                  return "\\r";
              }
              return String.fromCharCode(e);
            }
            return e
              .replace(/\n/g, "\\n")
              .replace(/\t/g, "\\t")
              .replace(/\r/g, "\\r");
          }
          getCharErrorDisplay(e) {
            return "'" + this.getErrorDisplay(e) + "'";
          }
          recover(e) {
            e instanceof c.LexerNoViableAltException
              ? this._input.LA(1) !== a.IntStream.EOF &&
                this.interpreter.consume(this._input)
              : this._input.consume();
          }
        }
        (h.DEFAULT_MODE = 0),
          (h.MORE = -2),
          (h.SKIP = -3),
          (h.MIN_CHAR_VALUE = 0),
          (h.MAX_CHAR_VALUE = 1114111),
          i([g.Override], h.prototype, "nextToken", null),
          i([g.Override], h.prototype, "tokenFactory", null),
          i([g.Override], h.prototype, "inputStream", null),
          i([g.Override], h.prototype, "sourceName", null),
          i([g.Override], h.prototype, "line", null),
          i([g.Override], h.prototype, "charPositionInLine", null),
          (t.Lexer = h);
      },
      20573: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerInterpreter = void 0);
        const o = r(8170),
          A = r(49796),
          a = r(681),
          s = r(681);
        let c = class extends o.Lexer {
          constructor(e, t, r, i, n, o, a) {
            if ((super(a), 0 !== o.grammarType))
              throw new Error(
                "IllegalArgumentException: The ATN must be a lexer ATN."
              );
            (this._grammarFileName = e),
              (this._atn = o),
              (this._ruleNames = r.slice(0)),
              (this._channelNames = i.slice(0)),
              (this._modeNames = n.slice(0)),
              (this._vocabulary = t),
              (this._interp = new A.LexerATNSimulator(o, this));
          }
          get atn() {
            return this._atn;
          }
          get grammarFileName() {
            return this._grammarFileName;
          }
          get ruleNames() {
            return this._ruleNames;
          }
          get channelNames() {
            return this._channelNames;
          }
          get modeNames() {
            return this._modeNames;
          }
          get vocabulary() {
            return this._vocabulary;
          }
        };
        i([a.NotNull], c.prototype, "_vocabulary", void 0),
          i([s.Override], c.prototype, "atn", null),
          i([s.Override], c.prototype, "grammarFileName", null),
          i([s.Override], c.prototype, "ruleNames", null),
          i([s.Override], c.prototype, "channelNames", null),
          i([s.Override], c.prototype, "modeNames", null),
          i([s.Override], c.prototype, "vocabulary", null),
          (c = i([n(1, a.NotNull)], c)),
          (t.LexerInterpreter = c);
      },
      95154: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerNoViableAltException = void 0);
        const o = r(1100),
          A = r(681),
          a = r(94378),
          s = r(93070);
        let c = class extends o.RecognitionException {
          constructor(e, t, r, i) {
            super(e, t), (this._startIndex = r), (this._deadEndConfigs = i);
          }
          get startIndex() {
            return this._startIndex;
          }
          get deadEndConfigs() {
            return this._deadEndConfigs;
          }
          get inputStream() {
            return super.inputStream;
          }
          toString() {
            let e = "";
            return (
              this._startIndex >= 0 &&
                this._startIndex < this.inputStream.size &&
                ((e = this.inputStream.getText(
                  a.Interval.of(this._startIndex, this._startIndex)
                )),
                (e = s.escapeWhitespace(e, !1))),
              `LexerNoViableAltException('${e}')`
            );
          }
        };
        i([A.Override], c.prototype, "inputStream", null),
          i([A.Override], c.prototype, "toString", null),
          (c = i([n(1, A.NotNull)], c)),
          (t.LexerNoViableAltException = c);
      },
      84265: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ListTokenSource = void 0);
        const o = r(2929),
          A = r(681),
          a = r(48999);
        let s = class {
          constructor(e, t) {
            if (
              ((this.i = 0),
              (this._factory = o.CommonTokenFactory.DEFAULT),
              null == e)
            )
              throw new Error("tokens cannot be null");
            (this.tokens = e), (this._sourceName = t);
          }
          get charPositionInLine() {
            if (this.i < this.tokens.length)
              return this.tokens[this.i].charPositionInLine;
            if (null != this.eofToken) return this.eofToken.charPositionInLine;
            if (this.tokens.length > 0) {
              let e = this.tokens[this.tokens.length - 1],
                t = e.text;
              if (null != t) {
                let e = t.lastIndexOf("\n");
                if (e >= 0) return t.length - e - 1;
              }
              return e.charPositionInLine + e.stopIndex - e.startIndex + 1;
            }
            return 0;
          }
          nextToken() {
            if (this.i >= this.tokens.length) {
              if (null == this.eofToken) {
                let e = -1;
                if (this.tokens.length > 0) {
                  let t = this.tokens[this.tokens.length - 1].stopIndex;
                  -1 !== t && (e = t + 1);
                }
                let t = Math.max(-1, e - 1);
                this.eofToken = this._factory.create(
                  { source: this, stream: this.inputStream },
                  a.Token.EOF,
                  "EOF",
                  a.Token.DEFAULT_CHANNEL,
                  e,
                  t,
                  this.line,
                  this.charPositionInLine
                );
              }
              return this.eofToken;
            }
            let e = this.tokens[this.i];
            return (
              this.i === this.tokens.length - 1 &&
                e.type === a.Token.EOF &&
                (this.eofToken = e),
              this.i++,
              e
            );
          }
          get line() {
            if (this.i < this.tokens.length) return this.tokens[this.i].line;
            if (null != this.eofToken) return this.eofToken.line;
            if (this.tokens.length > 0) {
              let e = this.tokens[this.tokens.length - 1],
                t = e.line,
                r = e.text;
              if (null != r)
                for (let e = 0; e < r.length; e++) "\n" === r.charAt(e) && t++;
              return t;
            }
            return 1;
          }
          get inputStream() {
            return this.i < this.tokens.length
              ? this.tokens[this.i].inputStream
              : null != this.eofToken
              ? this.eofToken.inputStream
              : this.tokens.length > 0
              ? this.tokens[this.tokens.length - 1].inputStream
              : void 0;
          }
          get sourceName() {
            if (this._sourceName) return this._sourceName;
            let e = this.inputStream;
            return null != e ? e.sourceName : "List";
          }
          set tokenFactory(e) {
            this._factory = e;
          }
          get tokenFactory() {
            return this._factory;
          }
        };
        i([A.Override], s.prototype, "charPositionInLine", null),
          i([A.Override], s.prototype, "nextToken", null),
          i([A.Override], s.prototype, "line", null),
          i([A.Override], s.prototype, "inputStream", null),
          i([A.Override], s.prototype, "sourceName", null),
          i(
            [A.Override, A.NotNull, n(0, A.NotNull)],
            s.prototype,
            "tokenFactory",
            null
          ),
          (s = i([n(0, A.NotNull)], s)),
          (t.ListTokenSource = s);
      },
      61202: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.NoViableAltException = void 0);
        const n = r(53679),
          o = r(1100),
          A = r(681);
        class a extends o.RecognitionException {
          constructor(e, t, r, i, o, A) {
            e instanceof n.Parser &&
              (void 0 === t && (t = e.inputStream),
              void 0 === r && (r = e.currentToken),
              void 0 === i && (i = e.currentToken),
              void 0 === A && (A = e.context)),
              super(e, t, A),
              (this._deadEndConfigs = o),
              (this._startToken = r),
              this.setOffendingToken(e, i);
          }
          get startToken() {
            return this._startToken;
          }
          get deadEndConfigs() {
            return this._deadEndConfigs;
          }
        }
        i([A.NotNull], a.prototype, "_startToken", void 0),
          (t.NoViableAltException = a);
      },
      53679: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            },
          o =
            (this && this.__awaiter) ||
            function (e, t, r, i) {
              return new (r || (r = Promise))(function (n, o) {
                function A(e) {
                  try {
                    s(i.next(e));
                  } catch (e) {
                    o(e);
                  }
                }
                function a(e) {
                  try {
                    s(i.throw(e));
                  } catch (e) {
                    o(e);
                  }
                }
                function s(e) {
                  var t;
                  e.done
                    ? n(e.value)
                    : ((t = e.value),
                      t instanceof r
                        ? t
                        : new r(function (e) {
                            e(t);
                          })).then(A, a);
                }
                s((i = i.apply(e, t || [])).next());
              });
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Parser = void 0);
        const A = r(93070),
          a = r(14258),
          s = r(56349),
          c = r(34242),
          g = r(50135),
          l = r(55555),
          u = r(8170),
          h = r(681),
          I = r(28180),
          p = r(14217),
          d = r(94075),
          f = r(54780),
          C = r(49466),
          B = r(48999);
        class E {
          constructor(e, t) {
            (this.ruleNames = e), (this.tokenStream = t);
          }
          enterEveryRule(e) {
            console.log(
              "enter   " +
                this.ruleNames[e.ruleIndex] +
                ", LT(1)=" +
                this.tokenStream.LT(1).text
            );
          }
          exitEveryRule(e) {
            console.log(
              "exit    " +
                this.ruleNames[e.ruleIndex] +
                ", LT(1)=" +
                this.tokenStream.LT(1).text
            );
          }
          visitErrorNode(e) {}
          visitTerminal(e) {
            let t = e.parent.ruleContext,
              r = e.symbol;
            console.log(
              "consume " + r + " rule " + this.ruleNames[t.ruleIndex]
            );
          }
        }
        i([h.Override], E.prototype, "enterEveryRule", null),
          i([h.Override], E.prototype, "exitEveryRule", null),
          i([h.Override], E.prototype, "visitErrorNode", null),
          i([h.Override], E.prototype, "visitTerminal", null);
        class y extends f.Recognizer {
          constructor(e) {
            super(),
              (this._errHandler = new c.DefaultErrorStrategy()),
              (this._precedenceStack = new l.IntegerStack()),
              (this._buildParseTrees = !0),
              (this._parseListeners = []),
              (this._syntaxErrors = 0),
              (this.matchedEOF = !1),
              this._precedenceStack.push(0),
              (this.inputStream = e);
          }
          reset(e) {
            (void 0 === e || e) && this.inputStream.seek(0),
              this._errHandler.reset(this),
              (this._ctx = void 0),
              (this._syntaxErrors = 0),
              (this.matchedEOF = !1),
              (this.isTrace = !1),
              this._precedenceStack.clear(),
              this._precedenceStack.push(0);
            let t = this.interpreter;
            null != t && t.reset();
          }
          match(e) {
            let t = this.currentToken;
            return (
              t.type === e
                ? (e === B.Token.EOF && (this.matchedEOF = !0),
                  this._errHandler.reportMatch(this),
                  this.consume())
                : ((t = this._errHandler.recoverInline(this)),
                  this._buildParseTrees &&
                    -1 === t.tokenIndex &&
                    this._ctx.addErrorNode(this.createErrorNode(this._ctx, t))),
              t
            );
          }
          matchWildcard() {
            let e = this.currentToken;
            return (
              e.type > 0
                ? (this._errHandler.reportMatch(this), this.consume())
                : ((e = this._errHandler.recoverInline(this)),
                  this._buildParseTrees &&
                    -1 === e.tokenIndex &&
                    this._ctx.addErrorNode(this.createErrorNode(this._ctx, e))),
              e
            );
          }
          set buildParseTree(e) {
            this._buildParseTrees = e;
          }
          get buildParseTree() {
            return this._buildParseTrees;
          }
          getParseListeners() {
            return this._parseListeners;
          }
          addParseListener(e) {
            if (null == e) throw new TypeError("listener cannot be null");
            this._parseListeners.push(e);
          }
          removeParseListener(e) {
            let t = this._parseListeners.findIndex((t) => t === e);
            -1 !== t && this._parseListeners.splice(t, 1);
          }
          removeParseListeners() {
            this._parseListeners.length = 0;
          }
          triggerEnterRuleEvent() {
            for (let e of this._parseListeners)
              e.enterEveryRule && e.enterEveryRule(this._ctx),
                this._ctx.enterRule(e);
          }
          triggerExitRuleEvent() {
            for (let e = this._parseListeners.length - 1; e >= 0; e--) {
              let t = this._parseListeners[e];
              this._ctx.exitRule(t),
                t.exitEveryRule && t.exitEveryRule(this._ctx);
            }
          }
          get numberOfSyntaxErrors() {
            return this._syntaxErrors;
          }
          get tokenFactory() {
            return this._input.tokenSource.tokenFactory;
          }
          getATNWithBypassAlts() {
            let e = this.serializedATN;
            if (null == e)
              throw new Error(
                "The current parser does not support an ATN with bypass alternatives."
              );
            let t = y.bypassAltsAtnCache.get(e);
            if (null == t) {
              let r = new a.ATNDeserializationOptions();
              (r.isGenerateRuleBypassTransitions = !0),
                (t = new s.ATNDeserializer(r).deserialize(A.toCharArray(e))),
                y.bypassAltsAtnCache.set(e, t);
            }
            return t;
          }
          compileParseTreePattern(e, t, i) {
            return o(this, void 0, void 0, function* () {
              if (!i) {
                if (this.inputStream) {
                  let e = this.inputStream.tokenSource;
                  e instanceof u.Lexer && (i = e);
                }
                if (!i) throw new Error("Parser can't discover a lexer to use");
              }
              let n = i;
              return new (yield Promise.resolve().then(() =>
                r(97657)
              )).ParseTreePatternMatcher(n, this).compile(e, t);
            });
          }
          get errorHandler() {
            return this._errHandler;
          }
          set errorHandler(e) {
            this._errHandler = e;
          }
          get inputStream() {
            return this._input;
          }
          set inputStream(e) {
            this.reset(!1), (this._input = e);
          }
          get currentToken() {
            return this._input.LT(1);
          }
          notifyErrorListeners(e, t, r) {
            void 0 === t ? (t = this.currentToken) : null === t && (t = void 0),
              this._syntaxErrors++;
            let i = -1,
              n = -1;
            null != t && ((i = t.line), (n = t.charPositionInLine));
            let o = this.getErrorListenerDispatch();
            o.syntaxError && o.syntaxError(this, t, i, n, e, r);
          }
          consume() {
            let e = this.currentToken;
            e.type !== y.EOF && this.inputStream.consume();
            let t = 0 !== this._parseListeners.length;
            if (this._buildParseTrees || t)
              if (this._errHandler.inErrorRecoveryMode(this)) {
                let r = this._ctx.addErrorNode(
                  this.createErrorNode(this._ctx, e)
                );
                if (t)
                  for (let e of this._parseListeners)
                    e.visitErrorNode && e.visitErrorNode(r);
              } else {
                let r = this.createTerminalNode(this._ctx, e);
                if ((this._ctx.addChild(r), t))
                  for (let e of this._parseListeners)
                    e.visitTerminal && e.visitTerminal(r);
              }
            return e;
          }
          createTerminalNode(e, t) {
            return new C.TerminalNode(t);
          }
          createErrorNode(e, t) {
            return new g.ErrorNode(t);
          }
          addContextToParseTree() {
            let e = this._ctx._parent;
            null != e && e.addChild(this._ctx);
          }
          enterRule(e, t, r) {
            (this.state = t),
              (this._ctx = e),
              (this._ctx._start = this._input.LT(1)),
              this._buildParseTrees && this.addContextToParseTree(),
              this.triggerEnterRuleEvent();
          }
          enterLeftFactoredRule(e, t, r) {
            if (((this.state = t), this._buildParseTrees)) {
              let t = this._ctx.getChild(this._ctx.childCount - 1);
              this._ctx.removeLastChild(), (t._parent = e), e.addChild(t);
            }
            (this._ctx = e),
              (this._ctx._start = this._input.LT(1)),
              this._buildParseTrees && this.addContextToParseTree(),
              this.triggerEnterRuleEvent();
          }
          exitRule() {
            this.matchedEOF
              ? (this._ctx._stop = this._input.LT(1))
              : (this._ctx._stop = this._input.tryLT(-1)),
              this.triggerExitRuleEvent(),
              (this.state = this._ctx.invokingState),
              (this._ctx = this._ctx._parent);
          }
          enterOuterAlt(e, t) {
            if (((e.altNumber = t), this._buildParseTrees && this._ctx !== e)) {
              let t = this._ctx._parent;
              null != t && (t.removeLastChild(), t.addChild(e));
            }
            this._ctx = e;
          }
          get precedence() {
            return this._precedenceStack.isEmpty
              ? -1
              : this._precedenceStack.peek();
          }
          enterRecursionRule(e, t, r, i) {
            (this.state = t),
              this._precedenceStack.push(i),
              (this._ctx = e),
              (this._ctx._start = this._input.LT(1)),
              this.triggerEnterRuleEvent();
          }
          pushNewRecursionContext(e, t, r) {
            let i = this._ctx;
            (i._parent = e),
              (i.invokingState = t),
              (i._stop = this._input.tryLT(-1)),
              (this._ctx = e),
              (this._ctx._start = i._start),
              this._buildParseTrees && this._ctx.addChild(i),
              this.triggerEnterRuleEvent();
          }
          unrollRecursionContexts(e) {
            this._precedenceStack.pop(),
              (this._ctx._stop = this._input.tryLT(-1));
            let t = this._ctx;
            if (this._parseListeners.length > 0)
              for (; this._ctx !== e; )
                this.triggerExitRuleEvent(), (this._ctx = this._ctx._parent);
            else this._ctx = e;
            (t._parent = e),
              this._buildParseTrees && null != e && e.addChild(t);
          }
          getInvokingContext(e) {
            let t = this._ctx;
            for (; t && t.ruleIndex !== e; ) t = t._parent;
            return t;
          }
          get context() {
            return this._ctx;
          }
          set context(e) {
            this._ctx = e;
          }
          precpred(e, t) {
            return t >= this._precedenceStack.peek();
          }
          getErrorListenerDispatch() {
            return new d.ProxyParserErrorListener(this.getErrorListeners());
          }
          inContext(e) {
            return !1;
          }
          isExpectedToken(e) {
            let t = this.interpreter.atn,
              r = this._ctx,
              i = t.states[this.state],
              n = t.nextTokens(i);
            if (n.contains(e)) return !0;
            if (!n.contains(B.Token.EPSILON)) return !1;
            for (
              ;
              null != r && r.invokingState >= 0 && n.contains(B.Token.EPSILON);

            ) {
              let i = t.states[r.invokingState].transition(0);
              if (((n = t.nextTokens(i.followState)), n.contains(e))) return !0;
              r = r._parent;
            }
            return !(!n.contains(B.Token.EPSILON) || e !== B.Token.EOF);
          }
          get isMatchedEOF() {
            return this.matchedEOF;
          }
          getExpectedTokens() {
            return this.atn.getExpectedTokens(this.state, this.context);
          }
          getExpectedTokensWithinCurrentRule() {
            let e = this.interpreter.atn,
              t = e.states[this.state];
            return e.nextTokens(t);
          }
          getRuleIndex(e) {
            let t = this.getRuleIndexMap().get(e);
            return null != t ? t : -1;
          }
          get ruleContext() {
            return this._ctx;
          }
          getRuleInvocationStack(e = this._ctx) {
            let t = e,
              r = this.ruleNames,
              i = [];
            for (; null != t; ) {
              let e = t.ruleIndex;
              e < 0 ? i.push("n/a") : i.push(r[e]), (t = t._parent);
            }
            return i;
          }
          getDFAStrings() {
            let e = [];
            for (let t of this._interp.atn.decisionToDFA)
              e.push(t.toString(this.vocabulary, this.ruleNames));
            return e;
          }
          dumpDFA() {
            let e = !1;
            for (let t of this._interp.atn.decisionToDFA)
              t.isEmpty ||
                (e && console.log(),
                console.log("Decision " + t.decision + ":"),
                process.stdout.write(
                  t.toString(this.vocabulary, this.ruleNames)
                ),
                (e = !0));
          }
          get sourceName() {
            return this._input.sourceName;
          }
          get parseInfo() {
            return Promise.resolve()
              .then(() => r(49696))
              .then((e) => {
                let t = this.interpreter;
                if (t instanceof e.ProfilingATNSimulator)
                  return new I.ParseInfo(t);
              });
          }
          setProfile(e) {
            return o(this, void 0, void 0, function* () {
              let t = yield Promise.resolve().then(() => r(49696)),
                i = this.interpreter;
              e
                ? i instanceof t.ProfilingATNSimulator ||
                  (this.interpreter = new t.ProfilingATNSimulator(this))
                : i instanceof t.ProfilingATNSimulator &&
                  (this.interpreter = new p.ParserATNSimulator(this.atn, this)),
                this.interpreter.setPredictionMode(i.getPredictionMode());
            });
          }
          set isTrace(e) {
            e
              ? (this._tracer
                  ? this.removeParseListener(this._tracer)
                  : (this._tracer = new E(this.ruleNames, this._input)),
                this.addParseListener(this._tracer))
              : this._tracer &&
                (this.removeParseListener(this._tracer),
                (this._tracer = void 0));
          }
          get isTrace() {
            return null != this._tracer;
          }
        }
        (y.bypassAltsAtnCache = new Map()),
          i([h.NotNull], y.prototype, "_errHandler", void 0),
          i([h.NotNull], y.prototype, "match", null),
          i([h.NotNull], y.prototype, "matchWildcard", null),
          i([h.NotNull], y.prototype, "getParseListeners", null),
          i([n(0, h.NotNull)], y.prototype, "addParseListener", null),
          i([h.NotNull], y.prototype, "getATNWithBypassAlts", null),
          i([h.NotNull, n(0, h.NotNull)], y.prototype, "errorHandler", null),
          i([h.Override], y.prototype, "inputStream", null),
          i([h.NotNull], y.prototype, "currentToken", null),
          i([n(0, h.NotNull)], y.prototype, "enterRule", null),
          i([h.Override, n(0, h.Nullable)], y.prototype, "precpred", null),
          i([h.Override], y.prototype, "getErrorListenerDispatch", null),
          i([h.NotNull], y.prototype, "getExpectedTokens", null),
          i(
            [h.NotNull],
            y.prototype,
            "getExpectedTokensWithinCurrentRule",
            null
          ),
          i([h.Override], y.prototype, "parseInfo", null),
          (t.Parser = y);
      },
      99463: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      2676: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParserInterpreter = void 0);
        const o = r(21971),
          A = r(89602),
          a = r(13300),
          s = r(81103),
          c = r(27432),
          g = r(69725),
          l = r(50029),
          u = r(681),
          h = r(681),
          I = r(53679),
          p = r(14217),
          d = r(1100),
          f = r(84816),
          C = r(48999);
        let B = class e extends I.Parser {
          constructor(t, r, i, n, o) {
            if (
              (super(t instanceof e ? t.inputStream : o),
              (this._parentContextStack = []),
              (this.overrideDecision = -1),
              (this.overrideDecisionInputIndex = -1),
              (this.overrideDecisionAlt = -1),
              (this.overrideDecisionReached = !1),
              (this._overrideDecisionRoot = void 0),
              t instanceof e)
            ) {
              let e = t;
              (this._grammarFileName = e._grammarFileName),
                (this._atn = e._atn),
                (this.pushRecursionContextStates =
                  e.pushRecursionContextStates),
                (this._ruleNames = e._ruleNames),
                (this._vocabulary = e._vocabulary),
                (this.interpreter = new p.ParserATNSimulator(this._atn, this));
            } else {
              (this._grammarFileName = t),
                (this._atn = n),
                (this._ruleNames = i.slice(0)),
                (this._vocabulary = r),
                (this.pushRecursionContextStates = new a.BitSet(
                  n.states.length
                ));
              for (let e of n.states)
                e instanceof f.StarLoopEntryState &&
                  e.precedenceRuleDecision &&
                  this.pushRecursionContextStates.set(e.stateNumber);
              this.interpreter = new p.ParserATNSimulator(n, this);
            }
          }
          reset(e) {
            void 0 === e ? super.reset() : super.reset(e),
              (this.overrideDecisionReached = !1),
              (this._overrideDecisionRoot = void 0);
          }
          get atn() {
            return this._atn;
          }
          get vocabulary() {
            return this._vocabulary;
          }
          get ruleNames() {
            return this._ruleNames;
          }
          get grammarFileName() {
            return this._grammarFileName;
          }
          parse(e) {
            let t = this._atn.ruleToStartState[e];
            for (
              this._rootContext = this.createInterpreterRuleContext(
                void 0,
                o.ATNState.INVALID_STATE_NUMBER,
                e
              ),
                t.isPrecedenceRule
                  ? this.enterRecursionRule(
                      this._rootContext,
                      t.stateNumber,
                      e,
                      0
                    )
                  : this.enterRule(this._rootContext, t.stateNumber, e);
              ;

            ) {
              let e = this.atnState;
              if (e.stateType === A.ATNStateType.RULE_STOP) {
                if (this._ctx.isEmpty) {
                  if (t.isPrecedenceRule) {
                    let e = this._ctx,
                      t = this._parentContextStack.pop();
                    return this.unrollRecursionContexts(t[0]), e;
                  }
                  return this.exitRule(), this._rootContext;
                }
                this.visitRuleStopState(e);
              } else
                try {
                  this.visitState(e);
                } catch (t) {
                  if (!(t instanceof d.RecognitionException)) throw t;
                  (this.state =
                    this._atn.ruleToStopState[e.ruleIndex].stateNumber),
                    (this.context.exception = t),
                    this.errorHandler.reportError(this, t),
                    this.recover(t);
                }
            }
          }
          enterRecursionRule(e, t, r, i) {
            this._parentContextStack.push([this._ctx, e.invokingState]),
              super.enterRecursionRule(e, t, r, i);
          }
          get atnState() {
            return this._atn.states[this.state];
          }
          visitState(e) {
            let t = 1;
            e.numberOfTransitions > 1 && (t = this.visitDecisionState(e));
            let r = e.transition(t - 1);
            switch (r.serializationType) {
              case 1:
                if (
                  this.pushRecursionContextStates.get(e.stateNumber) &&
                  !(r.target instanceof l.LoopEndState)
                ) {
                  let t =
                      this._parentContextStack[
                        this._parentContextStack.length - 1
                      ],
                    r = this.createInterpreterRuleContext(
                      t[0],
                      t[1],
                      this._ctx.ruleIndex
                    );
                  this.pushNewRecursionContext(
                    r,
                    this._atn.ruleToStartState[e.ruleIndex].stateNumber,
                    this._ctx.ruleIndex
                  );
                }
                break;
              case 5:
                this.match(r._label);
                break;
              case 2:
              case 7:
              case 8:
                r.matches(
                  this._input.LA(1),
                  C.Token.MIN_USER_TOKEN_TYPE,
                  65535
                ) || this.recoverInline(),
                  this.matchWildcard();
                break;
              case 9:
                this.matchWildcard();
                break;
              case 3:
                let t = r.target,
                  i = t.ruleIndex,
                  n = this.createInterpreterRuleContext(
                    this._ctx,
                    e.stateNumber,
                    i
                  );
                t.isPrecedenceRule
                  ? this.enterRecursionRule(n, t.stateNumber, i, r.precedence)
                  : this.enterRule(n, r.target.stateNumber, i);
                break;
              case 4:
                let o = r;
                if (!this.sempred(this._ctx, o.ruleIndex, o.predIndex))
                  throw new s.FailedPredicateException(this);
                break;
              case 6:
                let A = r;
                this.action(this._ctx, A.ruleIndex, A.actionIndex);
                break;
              case 10:
                if (!this.precpred(this._ctx, r.precedence)) {
                  let e = r.precedence;
                  throw new s.FailedPredicateException(
                    this,
                    `precpred(_ctx, ${e})`
                  );
                }
                break;
              default:
                throw new Error(
                  "UnsupportedOperationException: Unrecognized ATN transition type."
                );
            }
            this.state = r.target.stateNumber;
          }
          visitDecisionState(e) {
            let t;
            this.errorHandler.sync(this);
            let r = e.decision;
            return (
              r !== this.overrideDecision ||
              this._input.index !== this.overrideDecisionInputIndex ||
              this.overrideDecisionReached
                ? (t = this.interpreter.adaptivePredict(
                    this._input,
                    r,
                    this._ctx
                  ))
                : ((t = this.overrideDecisionAlt),
                  (this.overrideDecisionReached = !0)),
              t
            );
          }
          createInterpreterRuleContext(e, t, r) {
            return new g.InterpreterRuleContext(r, e, t);
          }
          visitRuleStopState(e) {
            if (this._atn.ruleToStartState[e.ruleIndex].isPrecedenceRule) {
              let e = this._parentContextStack.pop();
              this.unrollRecursionContexts(e[0]), (this.state = e[1]);
            } else this.exitRule();
            let t = this._atn.states[this.state].transition(0);
            this.state = t.followState.stateNumber;
          }
          addDecisionOverride(e, t, r) {
            (this.overrideDecision = e),
              (this.overrideDecisionInputIndex = t),
              (this.overrideDecisionAlt = r);
          }
          get overrideDecisionRoot() {
            return this._overrideDecisionRoot;
          }
          recover(e) {
            let t = this._input.index;
            if ((this.errorHandler.recover(this, e), this._input.index === t)) {
              let t = e.getOffendingToken();
              if (!t)
                throw new Error(
                  "Expected exception to have an offending token"
                );
              let r = t.tokenSource,
                i = {
                  source: r,
                  stream: void 0 !== r ? r.inputStream : void 0,
                };
              if (e instanceof c.InputMismatchException) {
                let r = e.expectedTokens;
                if (void 0 === r)
                  throw new Error(
                    "Expected the exception to provide expected tokens"
                  );
                let n = C.Token.INVALID_TYPE;
                r.isNil || (n = r.minElement);
                let o = this.tokenFactory.create(
                  i,
                  n,
                  t.text,
                  C.Token.DEFAULT_CHANNEL,
                  -1,
                  -1,
                  t.line,
                  t.charPositionInLine
                );
                this._ctx.addErrorNode(this.createErrorNode(this._ctx, o));
              } else {
                t.tokenSource;
                let e = this.tokenFactory.create(
                  i,
                  C.Token.INVALID_TYPE,
                  t.text,
                  C.Token.DEFAULT_CHANNEL,
                  -1,
                  -1,
                  t.line,
                  t.charPositionInLine
                );
                this._ctx.addErrorNode(this.createErrorNode(this._ctx, e));
              }
            }
          }
          recoverInline() {
            return this._errHandler.recoverInline(this);
          }
          get rootContext() {
            return this._rootContext;
          }
        };
        i([u.NotNull], B.prototype, "_vocabulary", void 0),
          i([h.Override], B.prototype, "reset", null),
          i([h.Override], B.prototype, "atn", null),
          i([h.Override], B.prototype, "vocabulary", null),
          i([h.Override], B.prototype, "ruleNames", null),
          i([h.Override], B.prototype, "grammarFileName", null),
          i([h.Override], B.prototype, "enterRecursionRule", null),
          (B = i([n(1, u.NotNull)], B)),
          (t.ParserInterpreter = B);
      },
      39248: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParserRuleContext = void 0);
        const n = r(50135),
          o = r(94378),
          A = r(681),
          a = r(84224),
          s = r(49466);
        class c extends a.RuleContext {
          constructor(e, t) {
            null == t ? super() : super(e, t);
          }
          static emptyContext() {
            return c.EMPTY;
          }
          copyFrom(e) {
            if (
              ((this._parent = e._parent),
              (this.invokingState = e.invokingState),
              (this._start = e._start),
              (this._stop = e._stop),
              e.children)
            ) {
              this.children = [];
              for (let t of e.children)
                t instanceof n.ErrorNode && this.addChild(t);
            }
          }
          enterRule(e) {}
          exitRule(e) {}
          addAnyChild(e) {
            return (
              this.children ? this.children.push(e) : (this.children = [e]), e
            );
          }
          addChild(e) {
            return e instanceof s.TerminalNode
              ? (e.setParent(this), void this.addAnyChild(e))
              : e instanceof a.RuleContext
              ? void this.addAnyChild(e)
              : ((e = new s.TerminalNode(e)),
                this.addAnyChild(e),
                e.setParent(this),
                e);
          }
          addErrorNode(e) {
            if (e instanceof n.ErrorNode) {
              const t = e;
              return t.setParent(this), this.addAnyChild(t);
            }
            {
              const t = e;
              let r = new n.ErrorNode(t);
              return this.addAnyChild(r), r.setParent(this), r;
            }
          }
          removeLastChild() {
            this.children && this.children.pop();
          }
          get parent() {
            let e = super.parent;
            if (void 0 === e || e instanceof c) return e;
            throw new TypeError("Invalid parent type for ParserRuleContext");
          }
          getChild(e, t) {
            if (!this.children || e < 0 || e >= this.children.length)
              throw new RangeError(
                "index parameter must be between >= 0 and <= number of children."
              );
            if (null == t) return this.children[e];
            let r = this.tryGetChild(e, t);
            if (void 0 === r)
              throw new Error("The specified node does not exist");
            return r;
          }
          tryGetChild(e, t) {
            if (!this.children || e < 0 || e >= this.children.length) return;
            let r = -1;
            for (let i of this.children)
              if (i instanceof t && (r++, r === e)) return i;
          }
          getToken(e, t) {
            let r = this.tryGetToken(e, t);
            if (void 0 === r)
              throw new Error("The specified token does not exist");
            return r;
          }
          tryGetToken(e, t) {
            if (!this.children || t < 0 || t >= this.children.length) return;
            let r = -1;
            for (let i of this.children)
              if (
                i instanceof s.TerminalNode &&
                i.symbol.type === e &&
                (r++, r === t)
              )
                return i;
          }
          getTokens(e) {
            let t = [];
            if (!this.children) return t;
            for (let r of this.children)
              r instanceof s.TerminalNode && r.symbol.type === e && t.push(r);
            return t;
          }
          get ruleContext() {
            return this;
          }
          getRuleContext(e, t) {
            return this.getChild(e, t);
          }
          tryGetRuleContext(e, t) {
            return this.tryGetChild(e, t);
          }
          getRuleContexts(e) {
            let t = [];
            if (!this.children) return t;
            for (let r of this.children) r instanceof e && t.push(r);
            return t;
          }
          get childCount() {
            return this.children ? this.children.length : 0;
          }
          get sourceInterval() {
            return this._start
              ? !this._stop || this._stop.tokenIndex < this._start.tokenIndex
                ? o.Interval.of(
                    this._start.tokenIndex,
                    this._start.tokenIndex - 1
                  )
                : o.Interval.of(this._start.tokenIndex, this._stop.tokenIndex)
              : o.Interval.INVALID;
          }
          get start() {
            return this._start;
          }
          get stop() {
            return this._stop;
          }
          toInfoString(e) {
            return (
              "ParserRuleContext" +
              e.getRuleInvocationStack(this).reverse() +
              "{start=" +
              this._start +
              ", stop=" +
              this._stop +
              "}"
            );
          }
        }
        (c.EMPTY = new c()),
          i([A.Override], c.prototype, "parent", null),
          i([A.Override], c.prototype, "childCount", null),
          i([A.Override], c.prototype, "sourceInterval", null),
          (t.ParserRuleContext = c);
      },
      67751: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ProxyErrorListener = void 0);
        const o = r(681);
        class A {
          constructor(e) {
            if (((this.delegates = e), !e))
              throw new Error("Invalid delegates");
          }
          getDelegates() {
            return this.delegates;
          }
          syntaxError(e, t, r, i, n, o) {
            this.delegates.forEach((A) => {
              A.syntaxError && A.syntaxError(e, t, r, i, n, o);
            });
          }
        }
        i(
          [o.Override, n(0, o.NotNull), n(4, o.NotNull)],
          A.prototype,
          "syntaxError",
          null
        ),
          (t.ProxyErrorListener = A);
      },
      94075: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ProxyParserErrorListener = void 0);
        const n = r(67751),
          o = r(681);
        class A extends n.ProxyErrorListener {
          constructor(e) {
            super(e);
          }
          reportAmbiguity(e, t, r, i, n, o, A) {
            this.getDelegates().forEach((a) => {
              a.reportAmbiguity && a.reportAmbiguity(e, t, r, i, n, o, A);
            });
          }
          reportAttemptingFullContext(e, t, r, i, n, o) {
            this.getDelegates().forEach((A) => {
              A.reportAttemptingFullContext &&
                A.reportAttemptingFullContext(e, t, r, i, n, o);
            });
          }
          reportContextSensitivity(e, t, r, i, n, o) {
            this.getDelegates().forEach((A) => {
              A.reportContextSensitivity &&
                A.reportContextSensitivity(e, t, r, i, n, o);
            });
          }
        }
        i([o.Override], A.prototype, "reportAmbiguity", null),
          i([o.Override], A.prototype, "reportAttemptingFullContext", null),
          i([o.Override], A.prototype, "reportContextSensitivity", null),
          (t.ProxyParserErrorListener = A);
      },
      1100: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RecognitionException = void 0);
        class r extends Error {
          constructor(e, t, r, i) {
            super(i),
              (this._offendingState = -1),
              (this._recognizer = e),
              (this.input = t),
              (this.ctx = r),
              e && (this._offendingState = e.state);
          }
          get offendingState() {
            return this._offendingState;
          }
          setOffendingState(e) {
            this._offendingState = e;
          }
          get expectedTokens() {
            if (this._recognizer)
              return this._recognizer.atn.getExpectedTokens(
                this._offendingState,
                this.ctx
              );
          }
          get context() {
            return this.ctx;
          }
          get inputStream() {
            return this.input;
          }
          getOffendingToken(e) {
            if (!e || e === this._recognizer) return this.offendingToken;
          }
          setOffendingToken(e, t) {
            e === this._recognizer && (this.offendingToken = t);
          }
          get recognizer() {
            return this._recognizer;
          }
        }
        t.RecognitionException = r;
      },
      54780: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Recognizer = void 0);
        const o = r(78778),
          A = r(67751),
          a = r(681),
          s = r(48999),
          c = r(93070);
        class g {
          constructor() {
            (this._listeners = [o.ConsoleErrorListener.INSTANCE]),
              (this._stateNumber = -1);
          }
          getTokenTypeMap() {
            let e = this.vocabulary,
              t = g.tokenTypeMapCache.get(e);
            if (null == t) {
              let r = new Map();
              for (let t = 0; t <= this.atn.maxTokenType; t++) {
                let i = e.getLiteralName(t);
                null != i && r.set(i, t);
                let n = e.getSymbolicName(t);
                null != n && r.set(n, t);
              }
              r.set("EOF", s.Token.EOF), (t = r), g.tokenTypeMapCache.set(e, t);
            }
            return t;
          }
          getRuleIndexMap() {
            let e = this.ruleNames;
            if (null == e)
              throw new Error(
                "The current recognizer does not provide a list of rule names."
              );
            let t = g.ruleIndexMapCache.get(e);
            return (
              null == t && ((t = c.toMap(e)), g.ruleIndexMapCache.set(e, t)), t
            );
          }
          getTokenType(e) {
            let t = this.getTokenTypeMap().get(e);
            return null != t ? t : s.Token.INVALID_TYPE;
          }
          get serializedATN() {
            throw new Error("there is no serialized ATN");
          }
          get atn() {
            return this._interp.atn;
          }
          get interpreter() {
            return this._interp;
          }
          set interpreter(e) {
            this._interp = e;
          }
          get parseInfo() {
            return Promise.resolve(void 0);
          }
          getErrorHeader(e) {
            let t = e.getOffendingToken();
            return t ? "line " + t.line + ":" + t.charPositionInLine : "";
          }
          addErrorListener(e) {
            if (!e) throw new TypeError("listener must not be null");
            this._listeners.push(e);
          }
          removeErrorListener(e) {
            let t = this._listeners.indexOf(e);
            -1 !== t && this._listeners.splice(t, 1);
          }
          removeErrorListeners() {
            this._listeners.length = 0;
          }
          getErrorListeners() {
            return this._listeners.slice(0);
          }
          getErrorListenerDispatch() {
            return new A.ProxyErrorListener(this.getErrorListeners());
          }
          sempred(e, t, r) {
            return !0;
          }
          precpred(e, t) {
            return !0;
          }
          action(e, t, r) {}
          get state() {
            return this._stateNumber;
          }
          set state(e) {
            this._stateNumber = e;
          }
        }
        (g.EOF = -1),
          (g.tokenTypeMapCache = new WeakMap()),
          (g.ruleIndexMapCache = new WeakMap()),
          i(
            [a.SuppressWarnings("serial"), a.NotNull],
            g.prototype,
            "_listeners",
            void 0
          ),
          i([a.NotNull], g.prototype, "getTokenTypeMap", null),
          i([a.NotNull], g.prototype, "getRuleIndexMap", null),
          i([a.NotNull], g.prototype, "serializedATN", null),
          i([a.NotNull], g.prototype, "atn", null),
          i([a.NotNull, n(0, a.NotNull)], g.prototype, "interpreter", null),
          i([a.NotNull, n(0, a.NotNull)], g.prototype, "getErrorHeader", null),
          i([n(0, a.NotNull)], g.prototype, "addErrorListener", null),
          i([n(0, a.NotNull)], g.prototype, "removeErrorListener", null),
          i([a.NotNull], g.prototype, "getErrorListeners", null),
          (t.Recognizer = g);
      },
      84224: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleContext = void 0);
        const n = r(68148),
          o = r(54780),
          A = r(9297),
          a = r(94378),
          s = r(681),
          c = r(91180),
          g = r(39248);
        class l extends A.RuleNode {
          constructor(e, t) {
            super(),
              (this._parent = e),
              (this.invokingState = null != t ? t : -1);
          }
          static getChildContext(e, t) {
            return new l(e, t);
          }
          depth() {
            let e = 0,
              t = this;
            for (; t; ) (t = t._parent), e++;
            return e;
          }
          get isEmpty() {
            return -1 === this.invokingState;
          }
          get sourceInterval() {
            return a.Interval.INVALID;
          }
          get ruleContext() {
            return this;
          }
          get parent() {
            return this._parent;
          }
          setParent(e) {
            this._parent = e;
          }
          get payload() {
            return this;
          }
          get text() {
            if (0 === this.childCount) return "";
            let e = "";
            for (let t = 0; t < this.childCount; t++)
              e += this.getChild(t).text;
            return e.toString();
          }
          get ruleIndex() {
            return -1;
          }
          get altNumber() {
            return n.ATN.INVALID_ALT_NUMBER;
          }
          set altNumber(e) {}
          getChild(e) {
            throw new RangeError(
              "i must be greater than or equal to 0 and less than childCount"
            );
          }
          get childCount() {
            return 0;
          }
          accept(e) {
            return e.visitChildren(this);
          }
          toStringTree(e) {
            return c.Trees.toStringTree(this, e);
          }
          toString(e, t) {
            const r = e instanceof o.Recognizer ? e.ruleNames : e;
            t = t || g.ParserRuleContext.emptyContext();
            let i = "",
              n = this;
            for (i += "["; n && n !== t; ) {
              if (r) {
                let e = n.ruleIndex;
                i += e >= 0 && e < r.length ? r[e] : e.toString();
              } else n.isEmpty || (i += n.invokingState);
              !n._parent || (!r && n._parent.isEmpty) || (i += " "),
                (n = n._parent);
            }
            return (i += "]"), i.toString();
          }
        }
        i([s.Override], l.prototype, "sourceInterval", null),
          i([s.Override], l.prototype, "ruleContext", null),
          i([s.Override], l.prototype, "parent", null),
          i([s.Override], l.prototype, "setParent", null),
          i([s.Override], l.prototype, "payload", null),
          i([s.Override], l.prototype, "text", null),
          i([s.Override], l.prototype, "getChild", null),
          i([s.Override], l.prototype, "childCount", null),
          i([s.Override], l.prototype, "accept", null),
          i([s.Override], l.prototype, "toStringTree", null),
          (t.RuleContext = l);
      },
      87817: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleContextWithAltNum = void 0);
        const n = r(68148),
          o = r(681),
          A = r(39248);
        class a extends A.ParserRuleContext {
          constructor(e, t) {
            void 0 !== t ? super(e, t) : super(),
              (this._altNumber = n.ATN.INVALID_ALT_NUMBER);
          }
          get altNumber() {
            return this._altNumber;
          }
          set altNumber(e) {
            this._altNumber = e;
          }
        }
        i([o.Override], a.prototype, "altNumber", null),
          (t.RuleContextWithAltNum = a);
      },
      96032: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleDependency = void 0),
          (t.RuleDependency = function (e) {
            return (e, t, r) => {};
          });
      },
      31248: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleVersion = void 0),
          (t.RuleVersion = function (e) {
            return (e, t, r) => {};
          });
      },
      48999: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Token = void 0);
        const i = r(42628);
        var n;
        ((n = t.Token || (t.Token = {})).INVALID_TYPE = 0),
          (n.EPSILON = -2),
          (n.MIN_USER_TOKEN_TYPE = 1),
          (n.EOF = i.IntStream.EOF),
          (n.DEFAULT_CHANNEL = 0),
          (n.HIDDEN_CHANNEL = 1),
          (n.MIN_USER_CHANNEL_VALUE = 2);
      },
      69427: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      17725: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      29234: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      62052: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RewriteOperation = t.TokenStreamRewriter = void 0);
        const n = r(94378),
          o = r(681),
          A = r(48999);
        class a {
          constructor(e) {
            (this.tokens = e),
              (this.programs = new Map()),
              this.programs.set(a.DEFAULT_PROGRAM_NAME, []),
              (this.lastRewriteTokenIndexes = new Map());
          }
          getTokenStream() {
            return this.tokens;
          }
          rollback(e, t = a.DEFAULT_PROGRAM_NAME) {
            let r = this.programs.get(t);
            null != r && this.programs.set(t, r.slice(a.MIN_TOKEN_INDEX, e));
          }
          deleteProgram(e = a.DEFAULT_PROGRAM_NAME) {
            this.rollback(a.MIN_TOKEN_INDEX, e);
          }
          insertAfter(e, t, r = a.DEFAULT_PROGRAM_NAME) {
            let i;
            i = "number" == typeof e ? e : e.tokenIndex;
            let n = this.getProgram(r),
              o = new g(this.tokens, i, n.length, t);
            n.push(o);
          }
          insertBefore(e, t, r = a.DEFAULT_PROGRAM_NAME) {
            let i;
            i = "number" == typeof e ? e : e.tokenIndex;
            let n = this.getProgram(r),
              o = new c(this.tokens, i, n.length, t);
            n.push(o);
          }
          replaceSingle(e, t) {
            this.replace(e, e, t);
          }
          replace(e, t, r, i = a.DEFAULT_PROGRAM_NAME) {
            if (
              ("number" != typeof e && (e = e.tokenIndex),
              "number" != typeof t && (t = t.tokenIndex),
              e > t || e < 0 || t < 0 || t >= this.tokens.size)
            )
              throw new RangeError(
                `replace: range invalid: ${e}..${t}(size=${this.tokens.size})`
              );
            let n = this.getProgram(i),
              o = new l(this.tokens, e, t, n.length, r);
            n.push(o);
          }
          delete(e, t, r = a.DEFAULT_PROGRAM_NAME) {
            void 0 === t && (t = e), this.replace(e, t, "", r);
          }
          getLastRewriteTokenIndex(e = a.DEFAULT_PROGRAM_NAME) {
            let t = this.lastRewriteTokenIndexes.get(e);
            return null == t ? -1 : t;
          }
          setLastRewriteTokenIndex(e, t) {
            this.lastRewriteTokenIndexes.set(e, t);
          }
          getProgram(e) {
            let t = this.programs.get(e);
            return null == t && (t = this.initializeProgram(e)), t;
          }
          initializeProgram(e) {
            let t = [];
            return this.programs.set(e, t), t;
          }
          getText(e, t = a.DEFAULT_PROGRAM_NAME) {
            let r;
            (r =
              e instanceof n.Interval
                ? e
                : n.Interval.of(0, this.tokens.size - 1)),
              "string" == typeof e && (t = e);
            let i = this.programs.get(t),
              o = r.a,
              s = r.b;
            if (
              (s > this.tokens.size - 1 && (s = this.tokens.size - 1),
              o < 0 && (o = 0),
              null == i || 0 === i.length)
            )
              return this.tokens.getText(r);
            let c = [],
              g = this.reduceToSingleOperationPerIndex(i),
              l = o;
            for (; l <= s && l < this.tokens.size; ) {
              let e = g.get(l);
              g.delete(l);
              let t = this.tokens.get(l);
              null == e
                ? (t.type !== A.Token.EOF && c.push(String(t.text)), l++)
                : (l = e.execute(c));
            }
            if (s === this.tokens.size - 1)
              for (let e of g.values())
                e.index >= this.tokens.size - 1 && c.push(e.text.toString());
            return c.join("");
          }
          reduceToSingleOperationPerIndex(e) {
            for (let t = 0; t < e.length; t++) {
              let r = e[t];
              if (null == r) continue;
              if (!(r instanceof l)) continue;
              let i = r,
                n = this.getKindOfOps(e, c, t);
              for (let t of n)
                t.index === i.index
                  ? ((e[t.instructionIndex] = void 0),
                    (i.text =
                      t.text.toString() +
                      (null != i.text ? i.text.toString() : "")))
                  : t.index > i.index &&
                    t.index <= i.lastIndex &&
                    (e[t.instructionIndex] = void 0);
              let o = this.getKindOfOps(e, l, t);
              for (let t of o) {
                if (t.index >= i.index && t.lastIndex <= i.lastIndex) {
                  e[t.instructionIndex] = void 0;
                  continue;
                }
                let r = t.lastIndex < i.index || t.index > i.lastIndex;
                if (null != t.text || null != i.text || r) {
                  if (!r)
                    throw new Error(
                      `replace op boundaries of ${i} overlap with previous ${t}`
                    );
                } else
                  (e[t.instructionIndex] = void 0),
                    (i.index = Math.min(t.index, i.index)),
                    (i.lastIndex = Math.max(t.lastIndex, i.lastIndex));
              }
            }
            for (let t = 0; t < e.length; t++) {
              let r = e[t];
              if (null == r) continue;
              if (!(r instanceof c)) continue;
              let i = r,
                n = this.getKindOfOps(e, c, t);
              for (let t of n)
                t.index === i.index &&
                  (t instanceof g
                    ? ((i.text = this.catOpText(t.text, i.text)),
                      (e[t.instructionIndex] = void 0))
                    : t instanceof c &&
                      ((i.text = this.catOpText(i.text, t.text)),
                      (e[t.instructionIndex] = void 0)));
              let o = this.getKindOfOps(e, l, t);
              for (let r of o)
                if (i.index !== r.index) {
                  if (i.index >= r.index && i.index <= r.lastIndex)
                    throw new Error(
                      `insert op ${i} within boundaries of previous ${r}`
                    );
                } else
                  (r.text = this.catOpText(i.text, r.text)), (e[t] = void 0);
            }
            let t = new Map();
            for (let r of e)
              if (null != r) {
                if (null != t.get(r.index))
                  throw new Error("should only be one op per index");
                t.set(r.index, r);
              }
            return t;
          }
          catOpText(e, t) {
            let r = "",
              i = "";
            return (
              null != e && (r = e.toString()),
              null != t && (i = t.toString()),
              r + i
            );
          }
          getKindOfOps(e, t, r) {
            let i = [];
            for (let n = 0; n < r && n < e.length; n++) {
              let r = e[n];
              null != r && r instanceof t && i.push(r);
            }
            return i;
          }
        }
        (t.TokenStreamRewriter = a),
          (a.DEFAULT_PROGRAM_NAME = "default"),
          (a.PROGRAM_INIT_SIZE = 100),
          (a.MIN_TOKEN_INDEX = 0);
        class s {
          constructor(e, t, r, i) {
            (this.tokens = e),
              (this.instructionIndex = r),
              (this.index = t),
              (this.text = void 0 === i ? "" : i);
          }
          execute(e) {
            return this.index;
          }
          toString() {
            let e = this.constructor.name,
              t = e.indexOf("$");
            return (
              (e = e.substring(t + 1, e.length)),
              "<" +
                e +
                "@" +
                this.tokens.get(this.index) +
                ':"' +
                this.text +
                '">'
            );
          }
        }
        i([o.Override], s.prototype, "toString", null),
          (t.RewriteOperation = s);
        class c extends s {
          constructor(e, t, r, i) {
            super(e, t, r, i);
          }
          execute(e) {
            return (
              e.push(this.text.toString()),
              this.tokens.get(this.index).type !== A.Token.EOF &&
                e.push(String(this.tokens.get(this.index).text)),
              this.index + 1
            );
          }
        }
        i([o.Override], c.prototype, "execute", null);
        class g extends c {
          constructor(e, t, r, i) {
            super(e, t + 1, r, i);
          }
        }
        class l extends s {
          constructor(e, t, r, i, n) {
            super(e, t, i, n), (this.lastIndex = r);
          }
          execute(e) {
            return (
              null != this.text && e.push(this.text.toString()),
              this.lastIndex + 1
            );
          }
          toString() {
            return null == this.text
              ? "<DeleteOp@" +
                  this.tokens.get(this.index) +
                  ".." +
                  this.tokens.get(this.lastIndex) +
                  ">"
              : "<ReplaceOp@" +
                  this.tokens.get(this.index) +
                  ".." +
                  this.tokens.get(this.lastIndex) +
                  ':"' +
                  this.text +
                  '">';
          }
        }
        i([o.Override], l.prototype, "execute", null),
          i([o.Override], l.prototype, "toString", null);
      },
      19269: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      61434: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.VocabularyImpl = void 0);
        const n = r(681),
          o = r(48999);
        class A {
          constructor(e, t, r) {
            (this.literalNames = e),
              (this.symbolicNames = t),
              (this.displayNames = r),
              (this._maxTokenType =
                Math.max(
                  this.displayNames.length,
                  Math.max(this.literalNames.length, this.symbolicNames.length)
                ) - 1);
          }
          get maxTokenType() {
            return this._maxTokenType;
          }
          getLiteralName(e) {
            if (e >= 0 && e < this.literalNames.length)
              return this.literalNames[e];
          }
          getSymbolicName(e) {
            return e >= 0 && e < this.symbolicNames.length
              ? this.symbolicNames[e]
              : e === o.Token.EOF
              ? "EOF"
              : void 0;
          }
          getDisplayName(e) {
            if (e >= 0 && e < this.displayNames.length) {
              let t = this.displayNames[e];
              if (t) return t;
            }
            let t = this.getLiteralName(e);
            return t || this.getSymbolicName(e) || String(e);
          }
        }
        (A.EMPTY_VOCABULARY = new A([], [], [])),
          i([n.NotNull], A.prototype, "literalNames", void 0),
          i([n.NotNull], A.prototype, "symbolicNames", void 0),
          i([n.NotNull], A.prototype, "displayNames", void 0),
          i([n.Override], A.prototype, "maxTokenType", null),
          i([n.Override], A.prototype, "getLiteralName", null),
          i([n.Override], A.prototype, "getSymbolicName", null),
          i([n.Override, n.NotNull], A.prototype, "getDisplayName", null),
          i([n.NotNull], A, "EMPTY_VOCABULARY", void 0),
          (t.VocabularyImpl = A);
      },
      74010: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      68148: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.ATN = void 0);
        const o = r(42835),
          A = r(81707),
          a = r(45462),
          s = r(7678),
          c = r(76181),
          g = r(681),
          l = r(78578),
          u = r(11229),
          h = r(48999),
          I = r(71696);
        let p = class {
          constructor(e, t) {
            (this.states = []),
              (this.decisionToState = []),
              (this.modeNameToStartState = new Map()),
              (this.modeToStartState = []),
              (this.contextCache = new o.Array2DHashMap(
                l.ObjectEqualityComparator.INSTANCE
              )),
              (this.decisionToDFA = []),
              (this.modeToDFA = []),
              (this.LL1Table = new Map()),
              (this.grammarType = e),
              (this.maxTokenType = t);
          }
          clearDFA() {
            this.decisionToDFA = new Array(this.decisionToState.length);
            for (let e = 0; e < this.decisionToDFA.length; e++)
              this.decisionToDFA[e] = new A.DFA(this.decisionToState[e], e);
            this.modeToDFA = new Array(this.modeToStartState.length);
            for (let e = 0; e < this.modeToDFA.length; e++)
              this.modeToDFA[e] = new A.DFA(this.modeToStartState[e]);
            this.contextCache.clear(), this.LL1Table.clear();
          }
          get contextCacheSize() {
            return this.contextCache.size;
          }
          getCachedContext(e) {
            return u.PredictionContext.getCachedContext(
              e,
              this.contextCache,
              new u.PredictionContext.IdentityHashMap()
            );
          }
          getDecisionToDFA() {
            return (
              I(
                null != this.decisionToDFA &&
                  this.decisionToDFA.length === this.decisionToState.length
              ),
              this.decisionToDFA
            );
          }
          nextTokens(e, t) {
            return t
              ? new c.LL1Analyzer(this).LOOK(e, t)
              : (e.nextTokenWithinRule ||
                  ((e.nextTokenWithinRule = this.nextTokens(
                    e,
                    u.PredictionContext.EMPTY_LOCAL
                  )),
                  e.nextTokenWithinRule.setReadonly(!0)),
                e.nextTokenWithinRule);
          }
          addState(e) {
            (e.atn = this),
              (e.stateNumber = this.states.length),
              this.states.push(e);
          }
          removeState(e) {
            let t = new s.InvalidState();
            (t.atn = this),
              (t.stateNumber = e.stateNumber),
              (this.states[e.stateNumber] = t);
          }
          defineMode(e, t) {
            this.modeNameToStartState.set(e, t),
              this.modeToStartState.push(t),
              this.modeToDFA.push(new A.DFA(t)),
              this.defineDecisionState(t);
          }
          defineDecisionState(e) {
            return (
              this.decisionToState.push(e),
              (e.decision = this.decisionToState.length - 1),
              this.decisionToDFA.push(new A.DFA(e, e.decision)),
              e.decision
            );
          }
          getDecisionState(e) {
            if (this.decisionToState.length > 0) return this.decisionToState[e];
          }
          get numberOfDecisions() {
            return this.decisionToState.length;
          }
          getExpectedTokens(e, t) {
            if (e < 0 || e >= this.states.length)
              throw new RangeError("Invalid state number.");
            let r = t,
              i = this.states[e],
              n = this.nextTokens(i);
            if (!n.contains(h.Token.EPSILON)) return n;
            let o = new a.IntervalSet();
            for (
              o.addAll(n), o.remove(h.Token.EPSILON);
              null != r && r.invokingState >= 0 && n.contains(h.Token.EPSILON);

            ) {
              let e = this.states[r.invokingState].transition(0);
              (n = this.nextTokens(e.followState)),
                o.addAll(n),
                o.remove(h.Token.EPSILON),
                (r = r._parent);
            }
            return n.contains(h.Token.EPSILON) && o.add(h.Token.EOF), o;
          }
        };
        i([g.NotNull], p.prototype, "states", void 0),
          i([g.NotNull], p.prototype, "decisionToState", void 0),
          i([g.NotNull], p.prototype, "modeNameToStartState", void 0),
          i([g.NotNull], p.prototype, "modeToStartState", void 0),
          i([g.NotNull], p.prototype, "decisionToDFA", void 0),
          i([g.NotNull], p.prototype, "modeToDFA", void 0),
          i([g.NotNull], p.prototype, "nextTokens", null),
          i([n(0, g.NotNull)], p.prototype, "removeState", null),
          i(
            [n(0, g.NotNull), n(1, g.NotNull)],
            p.prototype,
            "defineMode",
            null
          ),
          i([n(0, g.NotNull)], p.prototype, "defineDecisionState", null),
          i([g.NotNull], p.prototype, "getExpectedTokens", null),
          (p = i([n(0, g.NotNull)], p)),
          (t.ATN = p),
          (function (e) {
            e.INVALID_ALT_NUMBER = 0;
          })((p = t.ATN || (t.ATN = {}))),
          (t.ATN = p);
      },
      30735: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNConfig = void 0);
        const o = r(42835),
          A = r(64993),
          a = r(97789),
          s = r(681),
          c = r(78578),
          g = r(11229),
          l = r(78300),
          u = r(71696),
          h = 2147483648;
        let I = class e {
          constructor(e, t, r) {
            "number" == typeof t
              ? (u((16777215 & t) === t),
                (this._state = e),
                (this.altAndOuterContextDepth = t),
                (this._context = r))
              : ((this._state = e),
                (this.altAndOuterContextDepth = t.altAndOuterContextDepth),
                (this._context = r));
          }
          static create(t, r, i, n = l.SemanticContext.NONE, o) {
            return n !== l.SemanticContext.NONE
              ? null != o
                ? new f(o, n, t, r, i, !1)
                : new p(n, t, r, i)
              : null != o
              ? new d(o, t, r, i, !1)
              : new e(t, r, i);
          }
          get state() {
            return this._state;
          }
          get alt() {
            return 16777215 & this.altAndOuterContextDepth;
          }
          get context() {
            return this._context;
          }
          set context(e) {
            this._context = e;
          }
          get reachesIntoOuterContext() {
            return 0 !== this.outerContextDepth;
          }
          get outerContextDepth() {
            return (this.altAndOuterContextDepth >>> 24) & 127;
          }
          set outerContextDepth(e) {
            u(e >= 0),
              (e = Math.min(e, 127)),
              (this.altAndOuterContextDepth =
                (e << 24) |
                ((-2130706433 & this.altAndOuterContextDepth) >>> 0));
          }
          get lexerActionExecutor() {}
          get semanticContext() {
            return l.SemanticContext.NONE;
          }
          get hasPassedThroughNonGreedyDecision() {
            return !1;
          }
          clone() {
            return this.transform(this.state, !1);
          }
          transform(e, t, r) {
            return null == r
              ? this.transformImpl(
                  e,
                  this._context,
                  this.semanticContext,
                  t,
                  this.lexerActionExecutor
                )
              : r instanceof g.PredictionContext
              ? this.transformImpl(
                  e,
                  r,
                  this.semanticContext,
                  t,
                  this.lexerActionExecutor
                )
              : r instanceof l.SemanticContext
              ? this.transformImpl(
                  e,
                  this._context,
                  r,
                  t,
                  this.lexerActionExecutor
                )
              : this.transformImpl(
                  e,
                  this._context,
                  this.semanticContext,
                  t,
                  r
                );
          }
          transformImpl(t, r, i, n, o) {
            let A = n && e.checkNonGreedyDecision(this, t);
            return i !== l.SemanticContext.NONE
              ? null != o || A
                ? new f(o, i, t, this, r, A)
                : new p(i, t, this, r)
              : null != o || A
              ? new d(o, t, this, r, A)
              : new e(t, this, r);
          }
          static checkNonGreedyDecision(e, t) {
            return (
              e.hasPassedThroughNonGreedyDecision ||
              (t instanceof A.DecisionState && t.nonGreedy)
            );
          }
          appendContext(e, t) {
            if ("number" == typeof e) {
              let r = this.context.appendSingleContext(e, t);
              return this.transform(this.state, !1, r);
            }
            {
              let r = this.context.appendContext(e, t);
              return this.transform(this.state, !1, r);
            }
          }
          contains(e) {
            if (
              this.state.stateNumber !== e.state.stateNumber ||
              this.alt !== e.alt ||
              !this.semanticContext.equals(e.semanticContext)
            )
              return !1;
            let t = [],
              r = [];
            for (t.push(this.context), r.push(e.context); ; ) {
              let e = t.pop(),
                i = r.pop();
              if (!e || !i) break;
              if (e === i) return !0;
              if (e.size < i.size) return !1;
              if (i.isEmpty) return e.hasEmpty;
              for (let n = 0; n < i.size; n++) {
                let o = e.findReturnState(i.getReturnState(n));
                if (o < 0) return !1;
                t.push(e.getParent(o)), r.push(i.getParent(n));
              }
            }
            return !1;
          }
          get isPrecedenceFilterSuppressed() {
            return 0 != (this.altAndOuterContextDepth & h);
          }
          set isPrecedenceFilterSuppressed(e) {
            e
              ? (this.altAndOuterContextDepth |= h)
              : (this.altAndOuterContextDepth &= 2147483647);
          }
          equals(t) {
            return (
              this === t ||
              (t instanceof e &&
                this.state.stateNumber === t.state.stateNumber &&
                this.alt === t.alt &&
                this.reachesIntoOuterContext === t.reachesIntoOuterContext &&
                this.context.equals(t.context) &&
                this.semanticContext.equals(t.semanticContext) &&
                this.isPrecedenceFilterSuppressed ===
                  t.isPrecedenceFilterSuppressed &&
                this.hasPassedThroughNonGreedyDecision ===
                  t.hasPassedThroughNonGreedyDecision &&
                c.ObjectEqualityComparator.INSTANCE.equals(
                  this.lexerActionExecutor,
                  t.lexerActionExecutor
                ))
            );
          }
          hashCode() {
            let e = a.MurmurHash.initialize(7);
            return (
              (e = a.MurmurHash.update(e, this.state.stateNumber)),
              (e = a.MurmurHash.update(e, this.alt)),
              (e = a.MurmurHash.update(
                e,
                this.reachesIntoOuterContext ? 1 : 0
              )),
              (e = a.MurmurHash.update(e, this.context)),
              (e = a.MurmurHash.update(e, this.semanticContext)),
              (e = a.MurmurHash.update(
                e,
                this.hasPassedThroughNonGreedyDecision ? 1 : 0
              )),
              (e = a.MurmurHash.update(e, this.lexerActionExecutor)),
              (e = a.MurmurHash.finish(e, 7)),
              e
            );
          }
          toDotString() {
            let e = "";
            (e += "digraph G {\n"), (e += "rankdir=LR;\n");
            let t = new o.Array2DHashMap(
                g.PredictionContext.IdentityEqualityComparator.INSTANCE
              ),
              r = [];
            function i(e) {
              let i = t.size,
                n = t.putIfAbsent(e, i);
              return null != n ? n : (r.push(e), i);
            }
            for (r.push(this.context), t.put(this.context, 0); ; ) {
              let t = r.pop();
              if (!t) break;
              for (let r = 0; r < t.size; r++)
                (e += "  s" + i(t)),
                  (e += "->"),
                  (e += "s" + i(t.getParent(r))),
                  (e += '[label="' + t.getReturnState(r) + '"];\n');
            }
            return (e += "}\n"), e.toString();
          }
          toString(e, t, r) {
            null == r && (r = null != t), null == t && (t = !0);
            let i,
              n = "";
            i = r ? this.context.toStrings(e, this.state.stateNumber) : ["?"];
            let o = !0;
            for (let e of i)
              o ? (o = !1) : (n += ", "),
                (n += "("),
                (n += this.state),
                t && ((n += ","), (n += this.alt)),
                this.context && ((n += ","), (n += e)),
                this.semanticContext !== l.SemanticContext.NONE &&
                  ((n += ","), (n += this.semanticContext)),
                this.reachesIntoOuterContext &&
                  (n += ",up=" + this.outerContextDepth),
                (n += ")");
            return n.toString();
          }
        };
        i([s.NotNull], I.prototype, "_state", void 0),
          i([s.NotNull], I.prototype, "_context", void 0),
          i([s.NotNull], I.prototype, "state", null),
          i([s.NotNull, n(0, s.NotNull)], I.prototype, "context", null),
          i([s.NotNull], I.prototype, "semanticContext", null),
          i([s.Override], I.prototype, "clone", null),
          i(
            [n(0, s.NotNull), n(2, s.NotNull)],
            I.prototype,
            "transformImpl",
            null
          ),
          i([s.Override], I.prototype, "equals", null),
          i([s.Override], I.prototype, "hashCode", null),
          i([n(0, s.NotNull), n(3, s.NotNull)], I, "create", null),
          (I = i([n(0, s.NotNull), n(2, s.NotNull)], I)),
          (t.ATNConfig = I);
        let p = class extends I {
          constructor(e, t, r, i) {
            super(t, r, i), (this._semanticContext = e);
          }
          get semanticContext() {
            return this._semanticContext;
          }
        };
        i([s.NotNull], p.prototype, "_semanticContext", void 0),
          i([s.Override], p.prototype, "semanticContext", null),
          (p = i([n(1, s.NotNull), n(2, s.NotNull)], p));
        let d = class extends I {
          constructor(e, t, r, i, n) {
            if ("number" == typeof r) super(t, r, i);
            else if (
              (super(t, r, i), r.semanticContext !== l.SemanticContext.NONE)
            )
              throw new Error("Not supported");
            (this._lexerActionExecutor = e),
              (this.passedThroughNonGreedyDecision = n);
          }
          get lexerActionExecutor() {
            return this._lexerActionExecutor;
          }
          get hasPassedThroughNonGreedyDecision() {
            return this.passedThroughNonGreedyDecision;
          }
        };
        i([s.Override], d.prototype, "lexerActionExecutor", null),
          i(
            [s.Override],
            d.prototype,
            "hasPassedThroughNonGreedyDecision",
            null
          ),
          (d = i([n(1, s.NotNull), n(2, s.NotNull)], d));
        let f = class extends p {
          constructor(e, t, r, i, n, o) {
            super(t, r, i, n),
              (this._lexerActionExecutor = e),
              (this.passedThroughNonGreedyDecision = o);
          }
          get lexerActionExecutor() {
            return this._lexerActionExecutor;
          }
          get hasPassedThroughNonGreedyDecision() {
            return this.passedThroughNonGreedyDecision;
          }
        };
        i([s.Override], f.prototype, "lexerActionExecutor", null),
          i(
            [s.Override],
            f.prototype,
            "hasPassedThroughNonGreedyDecision",
            null
          ),
          (f = i([n(1, s.NotNull), n(2, s.NotNull)], f));
      },
      80256: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNConfigSet = void 0);
        const n = r(42835),
          o = r(15265),
          A = r(44339),
          a = r(68148),
          s = r(30735),
          c = r(13300),
          g = r(681),
          l = r(78578),
          u = r(11229),
          h = r(31435),
          I = r(78300),
          p = r(71696),
          d = r(93070);
        class f {
          hashCode(e) {
            return e.state ^ e.alt;
          }
          equals(e, t) {
            return e.state === t.state && e.alt === t.alt;
          }
        }
        function C(e) {
          return e ? new n.Array2DHashMap(e) : new n.Array2DHashMap(f.INSTANCE);
        }
        f.INSTANCE = new f();
        class B {
          constructor(e, t) {
            (this._uniqueAlt = 0),
              (this._hasSemanticContext = !1),
              (this._dipsIntoOuterContext = !1),
              (this.outermostConfigSet = !1),
              (this.cachedHashCode = -1),
              e
                ? (t
                    ? ((this.mergedConfigs = void 0), (this.unmerged = void 0))
                    : e.isReadOnly
                    ? ((this.mergedConfigs = C()), (this.unmerged = []))
                    : ((this.mergedConfigs = C(e.mergedConfigs)),
                      (this.unmerged = e.unmerged.slice(0))),
                  (this.configs = e.configs.slice(0)),
                  (this._dipsIntoOuterContext = e._dipsIntoOuterContext),
                  (this._hasSemanticContext = e._hasSemanticContext),
                  (this.outermostConfigSet = e.outermostConfigSet),
                  (!t && e.isReadOnly) ||
                    ((this._uniqueAlt = e._uniqueAlt),
                    (this._conflictInfo = e._conflictInfo)))
                : ((this.mergedConfigs = C()),
                  (this.unmerged = []),
                  (this.configs = []),
                  (this._uniqueAlt = a.ATN.INVALID_ALT_NUMBER));
          }
          getRepresentedAlternatives() {
            if (null != this._conflictInfo)
              return this._conflictInfo.conflictedAlts.clone();
            let e = new c.BitSet();
            for (let t of this) e.set(t.alt);
            return e;
          }
          get isReadOnly() {
            return null == this.mergedConfigs;
          }
          get isOutermostConfigSet() {
            return this.outermostConfigSet;
          }
          set isOutermostConfigSet(e) {
            if (this.outermostConfigSet && !e)
              throw new Error("IllegalStateException");
            p(!e || !this._dipsIntoOuterContext), (this.outermostConfigSet = e);
          }
          getStates() {
            let e = new o.Array2DHashSet(l.ObjectEqualityComparator.INSTANCE);
            for (let t of this.configs) e.add(t.state);
            return e;
          }
          optimizeConfigs(e) {
            if (0 !== this.configs.length)
              for (let t of this.configs)
                t.context = e.atn.getCachedContext(t.context);
          }
          clone(e) {
            let t = new B(this, e);
            return !e && this.isReadOnly && t.addAll(this.configs), t;
          }
          get size() {
            return this.configs.length;
          }
          get isEmpty() {
            return 0 === this.configs.length;
          }
          contains(e) {
            if (!(e instanceof s.ATNConfig)) return !1;
            if (this.mergedConfigs && this.unmerged) {
              let t = e,
                r = this.getKey(t),
                i = this.mergedConfigs.get(r);
              if (null != i && this.canMerge(t, r, i)) return i.contains(t);
              for (let t of this.unmerged) if (t.contains(e)) return !0;
            } else for (let t of this.configs) if (t.contains(e)) return !0;
            return !1;
          }
          *[Symbol.iterator]() {
            yield* this.configs;
          }
          toArray() {
            return this.configs;
          }
          add(e, t) {
            if ((this.ensureWritable(), !this.mergedConfigs || !this.unmerged))
              throw new Error(
                "Covered by ensureWritable but duplicated here for strict null check limitation"
              );
            let r;
            p(!this.outermostConfigSet || !e.reachesIntoOuterContext),
              null == t && (t = h.PredictionContextCache.UNCACHED);
            let i = this.getKey(e),
              n = this.mergedConfigs.get(i);
            if (((r = null == n), null != n && this.canMerge(e, i, n))) {
              (n.outerContextDepth = Math.max(
                n.outerContextDepth,
                e.outerContextDepth
              )),
                e.isPrecedenceFilterSuppressed &&
                  (n.isPrecedenceFilterSuppressed = !0);
              let r = u.PredictionContext.join(n.context, e.context, t);
              return (
                this.updatePropertiesForMergedConfig(e),
                n.context !== r && ((n.context = r), !0)
              );
            }
            for (let n = 0; n < this.unmerged.length; n++) {
              let o = this.unmerged[n];
              if (this.canMerge(e, i, o)) {
                (o.outerContextDepth = Math.max(
                  o.outerContextDepth,
                  e.outerContextDepth
                )),
                  e.isPrecedenceFilterSuppressed &&
                    (o.isPrecedenceFilterSuppressed = !0);
                let A = u.PredictionContext.join(o.context, e.context, t);
                return (
                  this.updatePropertiesForMergedConfig(e),
                  o.context !== A &&
                    ((o.context = A),
                    r &&
                      (this.mergedConfigs.put(i, o),
                      this.unmerged.splice(n, 1)),
                    !0)
                );
              }
            }
            return (
              this.configs.push(e),
              r ? this.mergedConfigs.put(i, e) : this.unmerged.push(e),
              this.updatePropertiesForAddedConfig(e),
              !0
            );
          }
          updatePropertiesForMergedConfig(e) {
            (this._dipsIntoOuterContext =
              this._dipsIntoOuterContext || e.reachesIntoOuterContext),
              p(!this.outermostConfigSet || !this._dipsIntoOuterContext);
          }
          updatePropertiesForAddedConfig(e) {
            1 === this.configs.length
              ? (this._uniqueAlt = e.alt)
              : this._uniqueAlt !== e.alt &&
                (this._uniqueAlt = a.ATN.INVALID_ALT_NUMBER),
              (this._hasSemanticContext =
                this._hasSemanticContext ||
                !I.SemanticContext.NONE.equals(e.semanticContext)),
              (this._dipsIntoOuterContext =
                this._dipsIntoOuterContext || e.reachesIntoOuterContext),
              p(!this.outermostConfigSet || !this._dipsIntoOuterContext);
          }
          canMerge(e, t, r) {
            return (
              e.state.stateNumber === r.state.stateNumber &&
              t.alt === r.alt &&
              e.semanticContext.equals(r.semanticContext)
            );
          }
          getKey(e) {
            return { state: e.state.stateNumber, alt: e.alt };
          }
          containsAll(e) {
            for (let t of e) {
              if (!(t instanceof s.ATNConfig)) return !1;
              if (!this.contains(t)) return !1;
            }
            return !0;
          }
          addAll(e, t) {
            this.ensureWritable();
            let r = !1;
            for (let i of e) this.add(i, t) && (r = !0);
            return r;
          }
          clear() {
            if ((this.ensureWritable(), !this.mergedConfigs || !this.unmerged))
              throw new Error(
                "Covered by ensureWritable but duplicated here for strict null check limitation"
              );
            this.mergedConfigs.clear(),
              (this.unmerged.length = 0),
              (this.configs.length = 0),
              (this._dipsIntoOuterContext = !1),
              (this._hasSemanticContext = !1),
              (this._uniqueAlt = a.ATN.INVALID_ALT_NUMBER),
              (this._conflictInfo = void 0);
          }
          equals(e) {
            return (
              this === e ||
              (e instanceof B &&
                this.outermostConfigSet === e.outermostConfigSet &&
                d.equals(this._conflictInfo, e._conflictInfo) &&
                A.ArrayEqualityComparator.INSTANCE.equals(
                  this.configs,
                  e.configs
                ))
            );
          }
          hashCode() {
            if (this.isReadOnly && -1 !== this.cachedHashCode)
              return this.cachedHashCode;
            let e = 1;
            return (
              (e = (5 * e) ^ (this.outermostConfigSet ? 1 : 0)),
              (e =
                (5 * e) ^
                A.ArrayEqualityComparator.INSTANCE.hashCode(this.configs)),
              this.isReadOnly && (this.cachedHashCode = e),
              e
            );
          }
          toString(e) {
            null == e && (e = !1);
            let t = "",
              r = this.configs.slice(0);
            r.sort((e, t) =>
              e.alt !== t.alt
                ? e.alt - t.alt
                : e.state.stateNumber !== t.state.stateNumber
                ? e.state.stateNumber - t.state.stateNumber
                : e.semanticContext
                    .toString()
                    .localeCompare(t.semanticContext.toString())
            ),
              (t += "[");
            for (let i = 0; i < r.length; i++)
              i > 0 && (t += ", "), (t += r[i].toString(void 0, !0, e));
            return (
              (t += "]"),
              this._hasSemanticContext &&
                (t += ",hasSemanticContext=" + this._hasSemanticContext),
              this._uniqueAlt !== a.ATN.INVALID_ALT_NUMBER &&
                (t += ",uniqueAlt=" + this._uniqueAlt),
              null != this._conflictInfo &&
                ((t += ",conflictingAlts=" + this._conflictInfo.conflictedAlts),
                this._conflictInfo.isExact || (t += "*")),
              this._dipsIntoOuterContext && (t += ",dipsIntoOuterContext"),
              t.toString()
            );
          }
          get uniqueAlt() {
            return this._uniqueAlt;
          }
          get hasSemanticContext() {
            return this._hasSemanticContext;
          }
          set hasSemanticContext(e) {
            this.ensureWritable(), (this._hasSemanticContext = e);
          }
          get conflictInfo() {
            return this._conflictInfo;
          }
          set conflictInfo(e) {
            this.ensureWritable(), (this._conflictInfo = e);
          }
          get conflictingAlts() {
            if (null != this._conflictInfo)
              return this._conflictInfo.conflictedAlts;
          }
          get isExactConflict() {
            return null != this._conflictInfo && this._conflictInfo.isExact;
          }
          get dipsIntoOuterContext() {
            return this._dipsIntoOuterContext;
          }
          get(e) {
            return this.configs[e];
          }
          ensureWritable() {
            if (this.isReadOnly)
              throw new Error("This ATNConfigSet is read only.");
          }
        }
        i([g.NotNull], B.prototype, "getRepresentedAlternatives", null),
          i([g.Override], B.prototype, "size", null),
          i([g.Override], B.prototype, "isEmpty", null),
          i([g.Override], B.prototype, "contains", null),
          i([g.Override], B.prototype, Symbol.iterator, null),
          i([g.Override], B.prototype, "toArray", null),
          i([g.Override], B.prototype, "containsAll", null),
          i([g.Override], B.prototype, "clear", null),
          i([g.Override], B.prototype, "equals", null),
          i([g.Override], B.prototype, "hashCode", null),
          (t.ATNConfigSet = B);
      },
      14258: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNDeserializationOptions = void 0);
        const n = r(681);
        class o {
          constructor(e) {
            (this.readOnly = !1),
              e
                ? ((this.verifyATN = e.verifyATN),
                  (this.generateRuleBypassTransitions =
                    e.generateRuleBypassTransitions),
                  (this.optimize = e.optimize))
                : ((this.verifyATN = !0),
                  (this.generateRuleBypassTransitions = !1),
                  (this.optimize = !0));
          }
          static get defaultOptions() {
            return (
              null == o._defaultOptions &&
                ((o._defaultOptions = new o()),
                o._defaultOptions.makeReadOnly()),
              o._defaultOptions
            );
          }
          get isReadOnly() {
            return this.readOnly;
          }
          makeReadOnly() {
            this.readOnly = !0;
          }
          get isVerifyATN() {
            return this.verifyATN;
          }
          set isVerifyATN(e) {
            this.throwIfReadOnly(), (this.verifyATN = e);
          }
          get isGenerateRuleBypassTransitions() {
            return this.generateRuleBypassTransitions;
          }
          set isGenerateRuleBypassTransitions(e) {
            this.throwIfReadOnly(), (this.generateRuleBypassTransitions = e);
          }
          get isOptimize() {
            return this.optimize;
          }
          set isOptimize(e) {
            this.throwIfReadOnly(), (this.optimize = e);
          }
          throwIfReadOnly() {
            if (this.isReadOnly) throw new Error("The object is read only.");
          }
        }
        i([n.NotNull], o, "defaultOptions", null),
          (t.ATNDeserializationOptions = o);
      },
      56349: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNDeserializer = void 0);
        const o = r(67766),
          A = r(15265),
          a = r(68148),
          s = r(14258),
          c = r(89602),
          g = r(981),
          l = r(86193),
          u = r(74546),
          h = r(13300),
          I = r(43328),
          p = r(19954),
          d = r(64993),
          f = r(81707),
          C = r(27973),
          B = r(45462),
          E = r(7678),
          y = r(92247),
          m = r(94743),
          Q = r(6452),
          v = r(45974),
          S = r(1349),
          w = r(10038),
          b = r(20415),
          k = r(74006),
          N = r(50029),
          _ = r(681),
          D = r(70845),
          O = r(14217),
          T = r(79815),
          P = r(61232),
          x = r(68889),
          R = r(21290),
          U = r(61369),
          F = r(78128),
          H = r(23776),
          M = r(15239),
          G = r(14442),
          L = r(39678),
          K = r(14542),
          Y = r(84816),
          q = r(48999),
          J = r(43998),
          j = r(48992),
          z = r(70401);
        var V;
        !(function (e) {
          (e[(e.UNICODE_BMP = 0)] = "UNICODE_BMP"),
            (e[(e.UNICODE_SMP = 1)] = "UNICODE_SMP");
        })(V || (V = {}));
        class W {
          constructor(e) {
            void 0 === e && (e = s.ATNDeserializationOptions.defaultOptions),
              (this.deserializationOptions = e);
          }
          static get SERIALIZED_VERSION() {
            return 3;
          }
          static isFeatureSupported(e, t) {
            let r = W.SUPPORTED_UUIDS.findIndex((t) => t.equals(e));
            return (
              !(r < 0) && W.SUPPORTED_UUIDS.findIndex((e) => e.equals(t)) >= r
            );
          }
          static getUnicodeDeserializer(e) {
            return 0 === e
              ? { readUnicode: (e, t) => W.toInt(e[t]), size: 1 }
              : { readUnicode: (e, t) => W.toInt32(e, t), size: 2 };
          }
          deserialize(e) {
            e = e.slice(0);
            for (let t = 1; t < e.length; t++) e[t] = (e[t] - 2) & 65535;
            let t = 0,
              r = W.toInt(e[t++]);
            if (r !== W.SERIALIZED_VERSION) {
              let e = `Could not deserialize ATN with version ${r} (expected ${W.SERIALIZED_VERSION}).`;
              throw new Error(e);
            }
            let i = W.toUUID(e, t);
            if (
              ((t += 8), W.SUPPORTED_UUIDS.findIndex((e) => e.equals(i)) < 0)
            ) {
              let e = `Could not deserialize ATN with UUID ${i} (expected ${W.SERIALIZED_UUID} or a legacy UUID).`;
              throw new Error(e);
            }
            let n = W.isFeatureSupported(W.ADDED_LEXER_ACTIONS, i),
              s = W.toInt(e[t++]),
              h = W.toInt(e[t++]),
              d = new a.ATN(s, h),
              B = [],
              y = [],
              Q = W.toInt(e[t++]);
            for (let r = 0; r < Q; r++) {
              let r = W.toInt(e[t++]);
              if (r === c.ATNStateType.INVALID_TYPE) {
                d.addState(new E.InvalidState());
                continue;
              }
              let i = W.toInt(e[t++]);
              65535 === i && (i = -1);
              let n = this.stateFactory(r, i);
              if (r === c.ATNStateType.LOOP_END) {
                let r = W.toInt(e[t++]);
                B.push([n, r]);
              } else if (n instanceof p.BlockStartState) {
                let r = W.toInt(e[t++]);
                y.push([n, r]);
              }
              d.addState(n);
            }
            for (let e of B) e[0].loopBackState = d.states[e[1]];
            for (let e of y) e[0].endState = d.states[e[1]];
            let v = W.toInt(e[t++]);
            for (let r = 0; r < v; r++) {
              let r = W.toInt(e[t++]);
              d.states[r].nonGreedy = !0;
            }
            let S = W.toInt(e[t++]);
            for (let r = 0; r < S; r++) {
              let r = W.toInt(e[t++]);
              d.states[r].sll = !0;
            }
            let w = W.toInt(e[t++]);
            for (let r = 0; r < w; r++) {
              let r = W.toInt(e[t++]);
              d.states[r].isPrecedenceRule = !0;
            }
            let b = W.toInt(e[t++]);
            0 === d.grammarType && (d.ruleToTokenType = new Int32Array(b)),
              (d.ruleToStartState = new Array(b));
            for (let r = 0; r < b; r++) {
              let n = W.toInt(e[t++]),
                o = d.states[n];
              if (
                ((o.leftFactored = 0 !== W.toInt(e[t++])),
                (d.ruleToStartState[r] = o),
                0 === d.grammarType)
              ) {
                let n = W.toInt(e[t++]);
                if (
                  (65535 === n && (n = q.Token.EOF),
                  (d.ruleToTokenType[r] = n),
                  !W.isFeatureSupported(W.ADDED_LEXER_ACTIONS, i))
                ) {
                  let r = W.toInt(e[t++]);
                  65535 === r && (r = -1);
                }
              }
            }
            d.ruleToStopState = new Array(b);
            for (let e of d.states)
              e instanceof H.RuleStopState &&
                ((d.ruleToStopState[e.ruleIndex] = e),
                (d.ruleToStartState[e.ruleIndex].stopState = e));
            let k = W.toInt(e[t++]);
            for (let r = 0; r < k; r++) {
              let r = W.toInt(e[t++]);
              d.modeToStartState.push(d.states[r]);
            }
            d.modeToDFA = new Array(k);
            for (let e = 0; e < k; e++)
              d.modeToDFA[e] = new f.DFA(d.modeToStartState[e]);
            let _ = [];
            (t = this.deserializeSets(e, t, _, W.getUnicodeDeserializer(0))),
              W.isFeatureSupported(W.ADDED_UNICODE_SMP, i) &&
                (t = this.deserializeSets(
                  e,
                  t,
                  _,
                  W.getUnicodeDeserializer(1)
                ));
            let D = W.toInt(e[t++]);
            for (let r = 0; r < D; r++) {
              let r = W.toInt(e[t]),
                i = W.toInt(e[t + 1]),
                n = W.toInt(e[t + 2]),
                o = W.toInt(e[t + 3]),
                A = W.toInt(e[t + 4]),
                a = W.toInt(e[t + 5]),
                s = this.edgeFactory(d, n, r, i, o, A, a, _);
              d.states[r].addTransition(s), (t += 6);
            }
            let O = new A.Array2DHashSet({
                hashCode: (e) =>
                  e.stopState ^ e.returnState ^ e.outermostPrecedenceReturn,
                equals: (e, t) =>
                  e.stopState === t.stopState &&
                  e.returnState === t.returnState &&
                  e.outermostPrecedenceReturn === t.outermostPrecedenceReturn,
              }),
              x = [];
            for (let e of d.states) {
              let t =
                e.ruleIndex >= 0 &&
                d.ruleToStartState[e.ruleIndex].leftFactored;
              for (let r = 0; r < e.numberOfTransitions; r++) {
                let i = e.transition(r);
                if (!(i instanceof M.RuleTransition)) continue;
                let n = i;
                if (!d.ruleToStartState[n.target.ruleIndex].leftFactored && t)
                  continue;
                let o = -1;
                d.ruleToStartState[n.target.ruleIndex].isPrecedenceRule &&
                  0 === n.precedence &&
                  (o = n.target.ruleIndex);
                let A = {
                  stopState: n.target.ruleIndex,
                  returnState: n.followState.stateNumber,
                  outermostPrecedenceReturn: o,
                };
                O.add(A) && x.push(A);
              }
            }
            for (let e of x) {
              let t = new C.EpsilonTransition(
                d.states[e.returnState],
                e.outermostPrecedenceReturn
              );
              d.ruleToStopState[e.stopState].addTransition(t);
            }
            for (let e of d.states) {
              if (e instanceof p.BlockStartState) {
                if (void 0 === e.endState)
                  throw new Error("IllegalStateException");
                if (void 0 !== e.endState.startState)
                  throw new Error("IllegalStateException");
                e.endState.startState = e;
              }
              if (e instanceof P.PlusLoopbackState) {
                let t = e;
                for (let e = 0; e < t.numberOfTransitions; e++) {
                  let r = t.transition(e).target;
                  r instanceof T.PlusBlockStartState && (r.loopBackState = t);
                }
              } else if (e instanceof K.StarLoopbackState) {
                let t = e;
                for (let e = 0; e < t.numberOfTransitions; e++) {
                  let r = t.transition(e).target;
                  r instanceof Y.StarLoopEntryState && (r.loopBackState = t);
                }
              }
            }
            let R = W.toInt(e[t++]);
            for (let r = 1; r <= R; r++) {
              let i = W.toInt(e[t++]),
                n = d.states[i];
              d.decisionToState.push(n), (n.decision = r - 1);
            }
            if (0 === d.grammarType)
              if (n) {
                d.lexerActions = new Array(W.toInt(e[t++]));
                for (let r = 0; r < d.lexerActions.length; r++) {
                  let i = W.toInt(e[t++]),
                    n = W.toInt(e[t++]);
                  65535 === n && (n = -1);
                  let o = W.toInt(e[t++]);
                  65535 === o && (o = -1);
                  let A = this.lexerActionFactory(i, n, o);
                  d.lexerActions[r] = A;
                }
              } else {
                let e = [];
                for (let t of d.states)
                  for (let r = 0; r < t.numberOfTransitions; r++) {
                    let i = t.transition(r);
                    if (!(i instanceof o.ActionTransition)) continue;
                    let n = i.ruleIndex,
                      A = i.actionIndex,
                      a = new m.LexerCustomAction(n, A);
                    t.setTransition(
                      r,
                      new o.ActionTransition(i.target, n, e.length, !1)
                    ),
                      e.push(a);
                  }
                d.lexerActions = e;
              }
            this.markPrecedenceDecisions(d), (d.decisionToDFA = new Array(R));
            for (let e = 0; e < R; e++)
              d.decisionToDFA[e] = new f.DFA(d.decisionToState[e], e);
            if (
              (this.deserializationOptions.isVerifyATN && this.verifyATN(d),
              this.deserializationOptions.isGenerateRuleBypassTransitions &&
                1 === d.grammarType)
            ) {
              d.ruleToTokenType = new Int32Array(d.ruleToStartState.length);
              for (let e = 0; e < d.ruleToStartState.length; e++)
                d.ruleToTokenType[e] = d.maxTokenType + e + 1;
              for (let e = 0; e < d.ruleToStartState.length; e++) {
                let t = new l.BasicBlockStartState();
                (t.ruleIndex = e), d.addState(t);
                let r,
                  i,
                  n = new I.BlockEndState();
                if (
                  ((n.ruleIndex = e),
                  d.addState(n),
                  (t.endState = n),
                  d.defineDecisionState(t),
                  (n.startState = t),
                  d.ruleToStartState[e].isPrecedenceRule)
                ) {
                  r = void 0;
                  for (let t of d.states) {
                    if (t.ruleIndex !== e) continue;
                    if (!(t instanceof Y.StarLoopEntryState)) continue;
                    let i = t.transition(t.numberOfTransitions - 1).target;
                    if (
                      i instanceof N.LoopEndState &&
                      i.epsilonOnlyTransitions &&
                      i.transition(0).target instanceof H.RuleStopState
                    ) {
                      r = t;
                      break;
                    }
                  }
                  if (!r)
                    throw new Error(
                      "Couldn't identify final state of the precedence rule prefix section."
                    );
                  i = r.loopBackState.transition(0);
                } else r = d.ruleToStopState[e];
                for (let e of d.states)
                  for (let t = 0; t < e.numberOfTransitions; t++) {
                    let o = e.transition(t);
                    o !== i && o.target === r && (o.target = n);
                  }
                for (; d.ruleToStartState[e].numberOfTransitions > 0; ) {
                  let r = d.ruleToStartState[e].removeTransition(
                    d.ruleToStartState[e].numberOfTransitions - 1
                  );
                  t.addTransition(r);
                }
                d.ruleToStartState[e].addTransition(new C.EpsilonTransition(t)),
                  n.addTransition(new C.EpsilonTransition(r));
                let o = new u.BasicState();
                d.addState(o),
                  o.addTransition(
                    new g.AtomTransition(n, d.ruleToTokenType[e])
                  ),
                  t.addTransition(new C.EpsilonTransition(o));
              }
              this.deserializationOptions.isVerifyATN && this.verifyATN(d);
            }
            if (this.deserializationOptions.isOptimize) {
              for (;;) {
                let e = 0;
                (e += W.inlineSetRules(d)), (e += W.combineChainedEpsilons(d));
                let t = 0 === d.grammarType;
                if (((e += W.optimizeSets(d, t)), 0 === e)) break;
              }
              this.deserializationOptions.isVerifyATN && this.verifyATN(d);
            }
            return W.identifyTailCalls(d), d;
          }
          deserializeSets(e, t, r, i) {
            let n = W.toInt(e[t++]);
            for (let o = 0; o < n; o++) {
              let n = W.toInt(e[t]);
              t++;
              let o = new B.IntervalSet();
              r.push(o), 0 !== W.toInt(e[t++]) && o.add(-1);
              for (let r = 0; r < n; r++) {
                let r = i.readUnicode(e, t);
                t += i.size;
                let n = i.readUnicode(e, t);
                (t += i.size), o.add(r, n);
              }
            }
            return t;
          }
          markPrecedenceDecisions(e) {
            let t = new Map();
            for (let r of e.states)
              if (
                r instanceof Y.StarLoopEntryState &&
                e.ruleToStartState[r.ruleIndex].isPrecedenceRule
              ) {
                let i = r.transition(r.numberOfTransitions - 1).target;
                i instanceof N.LoopEndState &&
                  i.epsilonOnlyTransitions &&
                  i.transition(0).target instanceof H.RuleStopState &&
                  (t.set(r.ruleIndex, r),
                  (r.precedenceRuleDecision = !0),
                  (r.precedenceLoopbackStates = new h.BitSet(e.states.length)));
              }
            for (let r of t)
              for (let t of e.ruleToStopState[r[0]].getTransitions())
                1 === t.serializationType &&
                  -1 === t.outermostPrecedenceReturn &&
                  r[1].precedenceLoopbackStates.set(t.target.stateNumber);
          }
          verifyATN(e) {
            for (let t of e.states)
              if (
                (this.checkCondition(
                  void 0 !== t,
                  "ATN states should not be undefined."
                ),
                t.stateType !== c.ATNStateType.INVALID_TYPE)
              ) {
                if (
                  (this.checkCondition(
                    t.onlyHasEpsilonTransitions || t.numberOfTransitions <= 1
                  ),
                  t instanceof T.PlusBlockStartState &&
                    this.checkCondition(void 0 !== t.loopBackState),
                  t instanceof Y.StarLoopEntryState)
                ) {
                  let e = t;
                  if (
                    (this.checkCondition(void 0 !== e.loopBackState),
                    this.checkCondition(2 === e.numberOfTransitions),
                    e.transition(0).target instanceof L.StarBlockStartState)
                  )
                    this.checkCondition(
                      e.transition(1).target instanceof N.LoopEndState
                    ),
                      this.checkCondition(!e.nonGreedy);
                  else {
                    if (!(e.transition(0).target instanceof N.LoopEndState))
                      throw new Error("IllegalStateException");
                    this.checkCondition(
                      e.transition(1).target instanceof L.StarBlockStartState
                    ),
                      this.checkCondition(e.nonGreedy);
                  }
                }
                if (
                  (t instanceof K.StarLoopbackState &&
                    (this.checkCondition(1 === t.numberOfTransitions),
                    this.checkCondition(
                      t.transition(0).target instanceof Y.StarLoopEntryState
                    )),
                  t instanceof N.LoopEndState &&
                    this.checkCondition(void 0 !== t.loopBackState),
                  t instanceof F.RuleStartState &&
                    this.checkCondition(void 0 !== t.stopState),
                  t instanceof p.BlockStartState &&
                    this.checkCondition(void 0 !== t.endState),
                  t instanceof I.BlockEndState &&
                    this.checkCondition(void 0 !== t.startState),
                  t instanceof d.DecisionState)
                ) {
                  let e = t;
                  this.checkCondition(
                    e.numberOfTransitions <= 1 || e.decision >= 0
                  );
                } else
                  this.checkCondition(
                    t.numberOfTransitions <= 1 || t instanceof H.RuleStopState
                  );
              }
          }
          checkCondition(e, t) {
            if (!e) throw new Error("IllegalStateException: " + t);
          }
          static inlineSetRules(e) {
            let t = 0,
              r = new Array(e.ruleToStartState.length);
            for (let t = 0; t < e.ruleToStartState.length; t++) {
              let i = e.ruleToStartState[t];
              for (
                ;
                i.onlyHasEpsilonTransitions &&
                1 === i.numberOfOptimizedTransitions &&
                1 === i.getOptimizedTransition(0).serializationType;

              )
                i = i.getOptimizedTransition(0).target;
              if (1 !== i.numberOfOptimizedTransitions) continue;
              let n = i.getOptimizedTransition(0),
                o = n.target;
              if (
                !n.isEpsilon &&
                o.onlyHasEpsilonTransitions &&
                1 === o.numberOfOptimizedTransitions &&
                o.getOptimizedTransition(0).target instanceof H.RuleStopState
              )
                switch (n.serializationType) {
                  case 5:
                  case 2:
                  case 7:
                    r[t] = n;
                    break;
                  default:
                    continue;
                }
            }
            for (let i of e.states) {
              if (i.ruleIndex < 0) continue;
              let n;
              for (let o = 0; o < i.numberOfOptimizedTransitions; o++) {
                let A = i.getOptimizedTransition(o);
                if (!(A instanceof M.RuleTransition)) {
                  void 0 !== n && n.push(A);
                  continue;
                }
                let a = A,
                  s = r[a.target.ruleIndex];
                if (void 0 === s) {
                  void 0 !== n && n.push(A);
                  continue;
                }
                if (void 0 === n) {
                  n = [];
                  for (let e = 0; e < o; e++)
                    n.push(i.getOptimizedTransition(o));
                }
                t++;
                let c = a.followState,
                  l = new u.BasicState();
                switch (
                  (l.setRuleIndex(c.ruleIndex),
                  e.addState(l),
                  n.push(new C.EpsilonTransition(l)),
                  s.serializationType)
                ) {
                  case 5:
                    l.addTransition(new g.AtomTransition(c, s._label));
                    break;
                  case 2:
                    l.addTransition(new U.RangeTransition(c, s.from, s.to));
                    break;
                  case 7:
                    l.addTransition(new G.SetTransition(c, s.label));
                    break;
                  default:
                    throw new Error("UnsupportedOperationException");
                }
              }
              if (void 0 !== n) {
                if (i.isOptimized)
                  for (; i.numberOfOptimizedTransitions > 0; )
                    i.removeOptimizedTransition(
                      i.numberOfOptimizedTransitions - 1
                    );
                for (let e of n) i.addOptimizedTransition(e);
              }
            }
            return (
              O.ParserATNSimulator.debug &&
                console.log(
                  "ATN runtime optimizer removed " +
                    t +
                    " rule invocations by inlining sets."
                ),
              t
            );
          }
          static combineChainedEpsilons(e) {
            let t = 0;
            for (let r of e.states) {
              if (!r.onlyHasEpsilonTransitions || r instanceof H.RuleStopState)
                continue;
              let e;
              e: for (let i = 0; i < r.numberOfOptimizedTransitions; i++) {
                let n = r.getOptimizedTransition(i),
                  o = n.target;
                if (
                  1 === n.serializationType &&
                  -1 === n.outermostPrecedenceReturn &&
                  o.stateType === c.ATNStateType.BASIC &&
                  o.onlyHasEpsilonTransitions
                ) {
                  for (let t = 0; t < o.numberOfOptimizedTransitions; t++)
                    if (
                      1 !== o.getOptimizedTransition(t).serializationType ||
                      -1 !==
                        o.getOptimizedTransition(t).outermostPrecedenceReturn
                    ) {
                      void 0 !== e && e.push(n);
                      continue e;
                    }
                  if ((t++, void 0 === e)) {
                    e = [];
                    for (let t = 0; t < i; t++)
                      e.push(r.getOptimizedTransition(t));
                  }
                  for (let t = 0; t < o.numberOfOptimizedTransitions; t++) {
                    let r = o.getOptimizedTransition(t).target;
                    e.push(new C.EpsilonTransition(r));
                  }
                } else void 0 !== e && e.push(n);
              }
              if (void 0 !== e) {
                if (r.isOptimized)
                  for (; r.numberOfOptimizedTransitions > 0; )
                    r.removeOptimizedTransition(
                      r.numberOfOptimizedTransitions - 1
                    );
                for (let t of e) r.addOptimizedTransition(t);
              }
            }
            return (
              O.ParserATNSimulator.debug &&
                console.log(
                  "ATN runtime optimizer removed " +
                    t +
                    " transitions by combining chained epsilon transitions."
                ),
              t
            );
          }
          static optimizeSets(e, t) {
            if (t) return 0;
            let r = 0,
              i = e.decisionToState;
            for (let t of i) {
              let i = new B.IntervalSet();
              for (let e = 0; e < t.numberOfOptimizedTransitions; e++) {
                let r = t.getOptimizedTransition(e);
                if (!(r instanceof C.EpsilonTransition)) continue;
                if (1 !== r.target.numberOfOptimizedTransitions) continue;
                let n = r.target.getOptimizedTransition(0);
                n.target instanceof I.BlockEndState &&
                  (n instanceof D.NotSetTransition ||
                    ((n instanceof g.AtomTransition ||
                      n instanceof U.RangeTransition ||
                      n instanceof G.SetTransition) &&
                      i.add(e)));
              }
              if (i.size <= 1) continue;
              let n = [];
              for (let e = 0; e < t.numberOfOptimizedTransitions; e++)
                i.contains(e) || n.push(t.getOptimizedTransition(e));
              let o,
                A = t
                  .getOptimizedTransition(i.minElement)
                  .target.getOptimizedTransition(0).target,
                a = new B.IntervalSet();
              for (let e of i.intervals)
                for (let r = e.a; r <= e.b; r++) {
                  let e = t
                    .getOptimizedTransition(r)
                    .target.getOptimizedTransition(0);
                  if (e instanceof D.NotSetTransition)
                    throw new Error("Not yet implemented.");
                  a.addAll(e.label);
                }
              if (1 === a.intervals.length)
                if (1 === a.size) o = new g.AtomTransition(A, a.minElement);
                else {
                  let e = a.intervals[0];
                  o = new U.RangeTransition(A, e.a, e.b);
                }
              else o = new G.SetTransition(A, a);
              let s = new u.BasicState();
              if (
                (s.setRuleIndex(t.ruleIndex),
                e.addState(s),
                s.addTransition(o),
                n.push(new C.EpsilonTransition(s)),
                (r += t.numberOfOptimizedTransitions - n.length),
                t.isOptimized)
              )
                for (; t.numberOfOptimizedTransitions > 0; )
                  t.removeOptimizedTransition(
                    t.numberOfOptimizedTransitions - 1
                  );
              for (let e of n) t.addOptimizedTransition(e);
            }
            return (
              O.ParserATNSimulator.debug &&
                console.log(
                  "ATN runtime optimizer removed " +
                    r +
                    " paths by collapsing sets."
                ),
              r
            );
          }
          static identifyTailCalls(e) {
            for (let t of e.states) {
              for (let r = 0; r < t.numberOfTransitions; r++) {
                let i = t.transition(r);
                i instanceof M.RuleTransition &&
                  ((i.tailCall = this.testTailCall(e, i, !1)),
                  (i.optimizedTailCall = this.testTailCall(e, i, !0)));
              }
              if (t.isOptimized)
                for (let r = 0; r < t.numberOfOptimizedTransitions; r++) {
                  let i = t.getOptimizedTransition(r);
                  i instanceof M.RuleTransition &&
                    ((i.tailCall = this.testTailCall(e, i, !1)),
                    (i.optimizedTailCall = this.testTailCall(e, i, !0)));
                }
            }
          }
          static testTailCall(e, t, r) {
            if (!r && t.tailCall) return !0;
            if (r && t.optimizedTailCall) return !0;
            let i = new h.BitSet(e.states.length),
              n = [];
            for (n.push(t.followState); ; ) {
              let e = n.pop();
              if (!e) break;
              if (i.get(e.stateNumber)) continue;
              if (e instanceof H.RuleStopState) continue;
              if (!e.onlyHasEpsilonTransitions) return !1;
              let t = r
                ? e.numberOfOptimizedTransitions
                : e.numberOfTransitions;
              for (let i = 0; i < t; i++) {
                let t = r ? e.getOptimizedTransition(i) : e.transition(i);
                if (1 !== t.serializationType) return !1;
                n.push(t.target);
              }
            }
            return !0;
          }
          static toInt(e) {
            return e;
          }
          static toInt32(e, t) {
            return (e[t] | (e[t + 1] << 16)) >>> 0;
          }
          static toUUID(e, t) {
            let r = W.toInt32(e, t),
              i = W.toInt32(e, t + 2),
              n = W.toInt32(e, t + 4),
              o = W.toInt32(e, t + 6);
            return new j.UUID(o, n, i, r);
          }
          edgeFactory(e, t, r, i, n, A, a, s) {
            let c = e.states[i];
            switch (t) {
              case 1:
                return new C.EpsilonTransition(c);
              case 2:
                return 0 !== a
                  ? new U.RangeTransition(c, q.Token.EOF, A)
                  : new U.RangeTransition(c, n, A);
              case 3:
                return new M.RuleTransition(e.states[n], A, a, c);
              case 4:
                return new R.PredicateTransition(c, n, A, 0 !== a);
              case 10:
                return new x.PrecedencePredicateTransition(c, n);
              case 5:
                return 0 !== a
                  ? new g.AtomTransition(c, q.Token.EOF)
                  : new g.AtomTransition(c, n);
              case 6:
                return new o.ActionTransition(c, n, A, 0 !== a);
              case 7:
                return new G.SetTransition(c, s[n]);
              case 8:
                return new D.NotSetTransition(c, s[n]);
              case 9:
                return new z.WildcardTransition(c);
            }
            throw new Error("The specified transition type is not valid.");
          }
          stateFactory(e, t) {
            let r;
            switch (e) {
              case c.ATNStateType.INVALID_TYPE:
                return new E.InvalidState();
              case c.ATNStateType.BASIC:
                r = new u.BasicState();
                break;
              case c.ATNStateType.RULE_START:
                r = new F.RuleStartState();
                break;
              case c.ATNStateType.BLOCK_START:
                r = new l.BasicBlockStartState();
                break;
              case c.ATNStateType.PLUS_BLOCK_START:
                r = new T.PlusBlockStartState();
                break;
              case c.ATNStateType.STAR_BLOCK_START:
                r = new L.StarBlockStartState();
                break;
              case c.ATNStateType.TOKEN_START:
                r = new J.TokensStartState();
                break;
              case c.ATNStateType.RULE_STOP:
                r = new H.RuleStopState();
                break;
              case c.ATNStateType.BLOCK_END:
                r = new I.BlockEndState();
                break;
              case c.ATNStateType.STAR_LOOP_BACK:
                r = new K.StarLoopbackState();
                break;
              case c.ATNStateType.STAR_LOOP_ENTRY:
                r = new Y.StarLoopEntryState();
                break;
              case c.ATNStateType.PLUS_LOOP_BACK:
                r = new P.PlusLoopbackState();
                break;
              case c.ATNStateType.LOOP_END:
                r = new N.LoopEndState();
                break;
              default:
                throw new Error(`The specified state type ${e} is not valid.`);
            }
            return (r.ruleIndex = t), r;
          }
          lexerActionFactory(e, t, r) {
            switch (e) {
              case 0:
                return new y.LexerChannelAction(t);
              case 1:
                return new m.LexerCustomAction(t, r);
              case 2:
                return new Q.LexerModeAction(t);
              case 3:
                return v.LexerMoreAction.INSTANCE;
              case 4:
                return S.LexerPopModeAction.INSTANCE;
              case 5:
                return new w.LexerPushModeAction(t);
              case 6:
                return b.LexerSkipAction.INSTANCE;
              case 7:
                return new k.LexerTypeAction(t);
              default:
                throw new Error(
                  `The specified lexer action type ${e} is not valid.`
                );
            }
          }
        }
        (W.BASE_SERIALIZED_UUID = j.UUID.fromString(
          "E4178468-DF95-44D0-AD87-F22A5D5FB6D3"
        )),
          (W.ADDED_LEXER_ACTIONS = j.UUID.fromString(
            "AB35191A-1603-487E-B75A-479B831EAF6D"
          )),
          (W.ADDED_UNICODE_SMP = j.UUID.fromString(
            "C23FEA89-0605-4f51-AFB8-058BCAB8C91B"
          )),
          (W.SUPPORTED_UUIDS = [
            W.BASE_SERIALIZED_UUID,
            W.ADDED_LEXER_ACTIONS,
            W.ADDED_UNICODE_SMP,
          ]),
          (W.SERIALIZED_UUID = W.ADDED_UNICODE_SMP),
          i([_.NotNull], W.prototype, "deserializationOptions", void 0),
          i([n(0, _.NotNull)], W.prototype, "deserialize", null),
          i([n(0, _.NotNull)], W.prototype, "markPrecedenceDecisions", null),
          i([_.NotNull, n(0, _.NotNull)], W.prototype, "edgeFactory", null),
          (t.ATNDeserializer = W);
      },
      73296: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNSimulator = void 0);
        const o = r(80256),
          A = r(94981),
          a = r(681),
          s = r(11229);
        let c = class e {
          constructor(e) {
            this.atn = e;
          }
          static get ERROR() {
            return (
              e._ERROR ||
                ((e._ERROR = new A.DFAState(new o.ATNConfigSet())),
                (e._ERROR.stateNumber =
                  s.PredictionContext.EMPTY_FULL_STATE_KEY)),
              e._ERROR
            );
          }
          clearDFA() {
            this.atn.clearDFA();
          }
        };
        i([a.NotNull], c.prototype, "atn", void 0),
          i([a.NotNull], c, "ERROR", null),
          (c = i([n(0, a.NotNull)], c)),
          (t.ATNSimulator = c),
          (c = t.ATNSimulator || (t.ATNSimulator = {})),
          (t.ATNSimulator = c);
      },
      21971: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNState = void 0);
        const n = r(681);
        class o {
          constructor() {
            (this.stateNumber = o.INVALID_STATE_NUMBER),
              (this.ruleIndex = 0),
              (this.epsilonOnlyTransitions = !1),
              (this.transitions = []),
              (this.optimizedTransitions = this.transitions);
          }
          getStateNumber() {
            return this.stateNumber;
          }
          get nonStopStateNumber() {
            return this.getStateNumber();
          }
          hashCode() {
            return this.stateNumber;
          }
          equals(e) {
            return e instanceof o && this.stateNumber === e.stateNumber;
          }
          get isNonGreedyExitState() {
            return !1;
          }
          toString() {
            return String(this.stateNumber);
          }
          getTransitions() {
            return this.transitions.slice(0);
          }
          get numberOfTransitions() {
            return this.transitions.length;
          }
          addTransition(e, t) {
            if (0 === this.transitions.length)
              this.epsilonOnlyTransitions = e.isEpsilon;
            else if (this.epsilonOnlyTransitions !== e.isEpsilon)
              throw (
                ((this.epsilonOnlyTransitions = !1),
                new Error(
                  "ATN state " +
                    this.stateNumber +
                    " has both epsilon and non-epsilon transitions."
                ))
              );
            this.transitions.splice(
              void 0 !== t ? t : this.transitions.length,
              0,
              e
            );
          }
          transition(e) {
            return this.transitions[e];
          }
          setTransition(e, t) {
            this.transitions[e] = t;
          }
          removeTransition(e) {
            return this.transitions.splice(e, 1)[0];
          }
          get onlyHasEpsilonTransitions() {
            return this.epsilonOnlyTransitions;
          }
          setRuleIndex(e) {
            this.ruleIndex = e;
          }
          get isOptimized() {
            return this.optimizedTransitions !== this.transitions;
          }
          get numberOfOptimizedTransitions() {
            return this.optimizedTransitions.length;
          }
          getOptimizedTransition(e) {
            return this.optimizedTransitions[e];
          }
          addOptimizedTransition(e) {
            this.isOptimized || (this.optimizedTransitions = new Array()),
              this.optimizedTransitions.push(e);
          }
          setOptimizedTransition(e, t) {
            if (!this.isOptimized)
              throw new Error("This ATNState is not optimized.");
            this.optimizedTransitions[e] = t;
          }
          removeOptimizedTransition(e) {
            if (!this.isOptimized)
              throw new Error("This ATNState is not optimized.");
            this.optimizedTransitions.splice(e, 1);
          }
        }
        i([n.Override], o.prototype, "hashCode", null),
          i([n.Override], o.prototype, "equals", null),
          i([n.Override], o.prototype, "toString", null),
          (t.ATNState = o),
          (function (e) {
            e.INVALID_STATE_NUMBER = -1;
          })((o = t.ATNState || (t.ATNState = {})));
      },
      89602: (e, t) => {
        "use strict";
        var r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ATNStateType = void 0),
          ((r = t.ATNStateType || (t.ATNStateType = {}))[(r.INVALID_TYPE = 0)] =
            "INVALID_TYPE"),
          (r[(r.BASIC = 1)] = "BASIC"),
          (r[(r.RULE_START = 2)] = "RULE_START"),
          (r[(r.BLOCK_START = 3)] = "BLOCK_START"),
          (r[(r.PLUS_BLOCK_START = 4)] = "PLUS_BLOCK_START"),
          (r[(r.STAR_BLOCK_START = 5)] = "STAR_BLOCK_START"),
          (r[(r.TOKEN_START = 6)] = "TOKEN_START"),
          (r[(r.RULE_STOP = 7)] = "RULE_STOP"),
          (r[(r.BLOCK_END = 8)] = "BLOCK_END"),
          (r[(r.STAR_LOOP_BACK = 9)] = "STAR_LOOP_BACK"),
          (r[(r.STAR_LOOP_ENTRY = 10)] = "STAR_LOOP_ENTRY"),
          (r[(r.PLUS_LOOP_BACK = 11)] = "PLUS_LOOP_BACK"),
          (r[(r.LOOP_END = 12)] = "LOOP_END");
      },
      98356: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AbstractPredicateTransition = void 0);
        const i = r(45922);
        class n extends i.Transition {
          constructor(e) {
            super(e);
          }
        }
        t.AbstractPredicateTransition = n;
      },
      67766: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ActionTransition = void 0);
        const o = r(681),
          A = r(45922);
        let a = class extends A.Transition {
          constructor(e, t, r = -1, i = !1) {
            super(e),
              (this.ruleIndex = t),
              (this.actionIndex = r),
              (this.isCtxDependent = i);
          }
          get serializationType() {
            return 6;
          }
          get isEpsilon() {
            return !0;
          }
          matches(e, t, r) {
            return !1;
          }
          toString() {
            return "action_" + this.ruleIndex + ":" + this.actionIndex;
          }
        };
        i([o.Override], a.prototype, "serializationType", null),
          i([o.Override], a.prototype, "isEpsilon", null),
          i([o.Override], a.prototype, "matches", null),
          i([o.Override], a.prototype, "toString", null),
          (a = i([n(0, o.NotNull)], a)),
          (t.ActionTransition = a);
      },
      12646: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AmbiguityInfo = void 0);
        const o = r(91548),
          A = r(681);
        let a = class extends o.DecisionEventInfo {
          constructor(e, t, r, i, n, o) {
            super(e, t, i, n, o, t.useContext), (this.ambigAlts = r);
          }
          get ambiguousAlternatives() {
            return this.ambigAlts;
          }
        };
        i([A.NotNull], a.prototype, "ambigAlts", void 0),
          i([A.NotNull], a.prototype, "ambiguousAlternatives", null),
          (a = i([n(1, A.NotNull), n(2, A.NotNull), n(3, A.NotNull)], a)),
          (t.AmbiguityInfo = a);
      },
      981: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AtomTransition = void 0);
        const o = r(45462),
          A = r(681),
          a = r(45922);
        let s = class extends a.Transition {
          constructor(e, t) {
            super(e), (this._label = t);
          }
          get serializationType() {
            return 5;
          }
          get label() {
            return o.IntervalSet.of(this._label);
          }
          matches(e, t, r) {
            return this._label === e;
          }
          toString() {
            return String(this.label);
          }
        };
        i([A.Override], s.prototype, "serializationType", null),
          i([A.Override, A.NotNull], s.prototype, "label", null),
          i([A.Override], s.prototype, "matches", null),
          i([A.Override, A.NotNull], s.prototype, "toString", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.AtomTransition = s);
      },
      86193: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BasicBlockStartState = void 0);
        const n = r(89602),
          o = r(19954),
          A = r(681);
        class a extends o.BlockStartState {
          get stateType() {
            return n.ATNStateType.BLOCK_START;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.BasicBlockStartState = a);
      },
      74546: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BasicState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          get stateType() {
            return o.ATNStateType.BASIC;
          }
        }
        i([A.Override], a.prototype, "stateType", null), (t.BasicState = a);
      },
      43328: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BlockEndState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          get stateType() {
            return o.ATNStateType.BLOCK_END;
          }
        }
        i([A.Override], a.prototype, "stateType", null), (t.BlockEndState = a);
      },
      19954: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BlockStartState = void 0);
        const i = r(64993);
        class n extends i.DecisionState {}
        t.BlockStartState = n;
      },
      90977: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ConflictInfo = void 0);
        const n = r(681),
          o = r(93070);
        class A {
          constructor(e, t) {
            (this._conflictedAlts = e), (this.exact = t);
          }
          get conflictedAlts() {
            return this._conflictedAlts;
          }
          get isExact() {
            return this.exact;
          }
          equals(e) {
            return (
              e === this ||
              (e instanceof A &&
                this.isExact === e.isExact &&
                o.equals(this.conflictedAlts, e.conflictedAlts))
            );
          }
          hashCode() {
            return this.conflictedAlts.hashCode();
          }
        }
        i([n.Override], A.prototype, "equals", null),
          i([n.Override], A.prototype, "hashCode", null),
          (t.ConflictInfo = A);
      },
      26744: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ContextSensitivityInfo = void 0);
        const o = r(91548),
          A = r(681);
        let a = class extends o.DecisionEventInfo {
          constructor(e, t, r, i, n) {
            super(e, t, r, i, n, !0);
          }
        };
        (a = i([n(1, A.NotNull), n(2, A.NotNull)], a)),
          (t.ContextSensitivityInfo = a);
      },
      91548: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DecisionEventInfo = void 0);
        const o = r(681);
        let A = class {
          constructor(e, t, r, i, n, o) {
            (this.decision = e),
              (this.fullCtx = o),
              (this.stopIndex = n),
              (this.input = r),
              (this.startIndex = i),
              (this.state = t);
          }
        };
        i([o.NotNull], A.prototype, "input", void 0),
          (A = i([n(2, o.NotNull)], A)),
          (t.DecisionEventInfo = A);
      },
      74501: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DecisionInfo = void 0);
        const n = r(681);
        class o {
          constructor(e) {
            (this.invocations = 0),
              (this.timeInPrediction = 0),
              (this.SLL_TotalLook = 0),
              (this.SLL_MinLook = 0),
              (this.SLL_MaxLook = 0),
              (this.LL_TotalLook = 0),
              (this.LL_MinLook = 0),
              (this.LL_MaxLook = 0),
              (this.contextSensitivities = []),
              (this.errors = []),
              (this.ambiguities = []),
              (this.predicateEvals = []),
              (this.SLL_ATNTransitions = 0),
              (this.SLL_DFATransitions = 0),
              (this.LL_Fallback = 0),
              (this.LL_ATNTransitions = 0),
              (this.LL_DFATransitions = 0),
              (this.decision = e);
          }
          toString() {
            return (
              "{decision=" +
              this.decision +
              ", contextSensitivities=" +
              this.contextSensitivities.length +
              ", errors=" +
              this.errors.length +
              ", ambiguities=" +
              this.ambiguities.length +
              ", SLL_lookahead=" +
              this.SLL_TotalLook +
              ", SLL_ATNTransitions=" +
              this.SLL_ATNTransitions +
              ", SLL_DFATransitions=" +
              this.SLL_DFATransitions +
              ", LL_Fallback=" +
              this.LL_Fallback +
              ", LL_lookahead=" +
              this.LL_TotalLook +
              ", LL_ATNTransitions=" +
              this.LL_ATNTransitions +
              "}"
            );
          }
        }
        i([n.Override], o.prototype, "toString", null), (t.DecisionInfo = o);
      },
      64993: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DecisionState = void 0);
        const i = r(21971);
        class n extends i.ATNState {
          constructor() {
            super(...arguments),
              (this.decision = -1),
              (this.nonGreedy = !1),
              (this.sll = !1);
          }
        }
        t.DecisionState = n;
      },
      27973: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.EpsilonTransition = void 0);
        const o = r(681),
          A = r(45922);
        let a = class extends A.Transition {
          constructor(e, t = -1) {
            super(e), (this._outermostPrecedenceReturn = t);
          }
          get outermostPrecedenceReturn() {
            return this._outermostPrecedenceReturn;
          }
          get serializationType() {
            return 1;
          }
          get isEpsilon() {
            return !0;
          }
          matches(e, t, r) {
            return !1;
          }
          toString() {
            return "epsilon";
          }
        };
        i([o.Override], a.prototype, "serializationType", null),
          i([o.Override], a.prototype, "isEpsilon", null),
          i([o.Override], a.prototype, "matches", null),
          i([o.Override, o.NotNull], a.prototype, "toString", null),
          (a = i([n(0, o.NotNull)], a)),
          (t.EpsilonTransition = a);
      },
      90544: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ErrorInfo = void 0);
        const o = r(91548),
          A = r(681);
        let a = class extends o.DecisionEventInfo {
          constructor(e, t, r, i, n) {
            super(e, t, r, i, n, t.useContext);
          }
        };
        (a = i([n(1, A.NotNull), n(2, A.NotNull)], a)), (t.ErrorInfo = a);
      },
      7678: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidState = void 0);
        const n = r(89602),
          o = r(74546),
          A = r(681);
        class a extends o.BasicState {
          get stateType() {
            return n.ATNStateType.INVALID_TYPE;
          }
        }
        i([A.Override], a.prototype, "stateType", null), (t.InvalidState = a);
      },
      76181: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LL1Analyzer = void 0);
        const o = r(98356),
          A = r(15265),
          a = r(30735),
          s = r(13300),
          c = r(45462),
          g = r(681),
          l = r(70845),
          u = r(78578),
          h = r(11229),
          I = r(23776),
          p = r(15239),
          d = r(48999),
          f = r(70401);
        let C = class e {
          constructor(e) {
            this.atn = e;
          }
          getDecisionLookahead(t) {
            if (null == t) return;
            let r = new Array(t.numberOfTransitions);
            for (let i = 0; i < t.numberOfTransitions; i++) {
              let n = new c.IntervalSet();
              r[i] = n;
              let o = new A.Array2DHashSet(u.ObjectEqualityComparator.INSTANCE),
                a = !1;
              this._LOOK(
                t.transition(i).target,
                void 0,
                h.PredictionContext.EMPTY_LOCAL,
                n,
                o,
                new s.BitSet(),
                a,
                !1
              ),
                (0 === n.size || n.contains(e.HIT_PRED)) &&
                  ((n = void 0), (r[i] = n));
            }
            return r;
          }
          LOOK(e, t, r) {
            if (void 0 === r) {
              if (null == e.atn) throw new Error("Illegal state");
              r = e.atn.ruleToStopState[e.ruleIndex];
            } else null === r && (r = void 0);
            let i = new c.IntervalSet();
            return (
              this._LOOK(
                e,
                r,
                t,
                i,
                new A.Array2DHashSet(),
                new s.BitSet(),
                !0,
                !0
              ),
              i
            );
          }
          _LOOK(t, r, i, n, A, s, g, u) {
            let C = a.ATNConfig.create(t, 0, i);
            if (!A.add(C)) return;
            if (t === r) {
              if (h.PredictionContext.isEmptyLocal(i))
                return void n.add(d.Token.EPSILON);
              if (i.isEmpty) return void (u && n.add(d.Token.EOF));
            }
            if (t instanceof I.RuleStopState) {
              if (i.isEmpty && !h.PredictionContext.isEmptyLocal(i))
                return void (u && n.add(d.Token.EOF));
              let e = s.get(t.ruleIndex);
              try {
                s.clear(t.ruleIndex);
                for (let e = 0; e < i.size; e++) {
                  if (
                    i.getReturnState(e) ===
                    h.PredictionContext.EMPTY_FULL_STATE_KEY
                  )
                    continue;
                  let t = this.atn.states[i.getReturnState(e)];
                  this._LOOK(t, r, i.getParent(e), n, A, s, g, u);
                }
              } finally {
                e && s.set(t.ruleIndex);
              }
            }
            let B = t.numberOfTransitions;
            for (let a = 0; a < B; a++) {
              let h = t.transition(a);
              if (h instanceof p.RuleTransition) {
                if (s.get(h.ruleIndex)) continue;
                let e = i.getChild(h.followState.stateNumber);
                try {
                  s.set(h.ruleIndex), this._LOOK(h.target, r, e, n, A, s, g, u);
                } finally {
                  s.clear(h.ruleIndex);
                }
              } else if (h instanceof o.AbstractPredicateTransition)
                g
                  ? this._LOOK(h.target, r, i, n, A, s, g, u)
                  : n.add(e.HIT_PRED);
              else if (h.isEpsilon) this._LOOK(h.target, r, i, n, A, s, g, u);
              else if (h instanceof f.WildcardTransition)
                n.addAll(
                  c.IntervalSet.of(
                    d.Token.MIN_USER_TOKEN_TYPE,
                    this.atn.maxTokenType
                  )
                );
              else {
                let e = h.label;
                null != e &&
                  (h instanceof l.NotSetTransition &&
                    (e = e.complement(
                      c.IntervalSet.of(
                        d.Token.MIN_USER_TOKEN_TYPE,
                        this.atn.maxTokenType
                      )
                    )),
                  n.addAll(e));
              }
            }
          }
        };
        (C.HIT_PRED = d.Token.INVALID_TYPE),
          i([g.NotNull], C.prototype, "atn", void 0),
          i(
            [g.NotNull, n(0, g.NotNull), n(1, g.NotNull)],
            C.prototype,
            "LOOK",
            null
          ),
          i(
            [
              n(0, g.NotNull),
              n(2, g.NotNull),
              n(3, g.NotNull),
              n(4, g.NotNull),
              n(5, g.NotNull),
            ],
            C.prototype,
            "_LOOK",
            null
          ),
          (C = i([n(0, g.NotNull)], C)),
          (t.LL1Analyzer = C);
      },
      49796: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerATNSimulator = void 0);
        const o = r(51431),
          A = r(68148),
          a = r(30735),
          s = r(80256),
          c = r(73296),
          g = r(94981),
          l = r(94378),
          u = r(42628),
          h = r(8170),
          I = r(90044),
          p = r(95154),
          d = r(681),
          f = r(4235),
          C = r(11229),
          B = r(23776),
          E = r(48999),
          y = r(71696);
        let m = class e extends c.ATNSimulator {
          constructor(t, r) {
            super(t),
              (this.optimize_tail_calls = !0),
              (this.startIndex = -1),
              (this._line = 1),
              (this._charPositionInLine = 0),
              (this.mode = h.Lexer.DEFAULT_MODE),
              (this.prevAccept = new e.SimState()),
              (this.recog = r);
          }
          copyState(e) {
            (this._charPositionInLine = e.charPositionInLine),
              (this._line = e._line),
              (this.mode = e.mode),
              (this.startIndex = e.startIndex);
          }
          match(e, t) {
            this.mode = t;
            let r = e.mark();
            try {
              (this.startIndex = e.index), this.prevAccept.reset();
              let i = this.atn.modeToDFA[t].s0;
              return null == i ? this.matchATN(e) : this.execATN(e, i);
            } finally {
              e.release(r);
            }
          }
          reset() {
            this.prevAccept.reset(),
              (this.startIndex = -1),
              (this._line = 1),
              (this._charPositionInLine = 0),
              (this.mode = h.Lexer.DEFAULT_MODE);
          }
          matchATN(t) {
            let r = this.atn.modeToStartState[this.mode];
            e.debug && console.log(`matchATN mode ${this.mode} start: ${r}`);
            let i = this.mode,
              n = this.computeStartState(t, r),
              o = n.hasSemanticContext;
            o && (n.hasSemanticContext = !1);
            let A = this.addDFAState(n);
            if (!o) {
              let e = this.atn.modeToDFA[this.mode];
              e.s0 ? (A = e.s0) : (e.s0 = A);
            }
            let a = this.execATN(t, A);
            return (
              e.debug &&
                console.log(
                  `DFA after matchATN: ${this.atn.modeToDFA[i].toLexerString()}`
                ),
              a
            );
          }
          execATN(t, r) {
            e.debug && console.log(`start state closure=${r.configs}`),
              r.isAcceptState && this.captureSimState(this.prevAccept, t, r);
            let i = t.LA(1),
              n = r;
            for (;;) {
              e.debug &&
                console.log(`execATN loop starting closure: ${n.configs}`);
              let r = this.getExistingTargetState(n, i);
              if (
                (null == r && (r = this.computeTargetState(t, n, i)),
                r === c.ATNSimulator.ERROR)
              )
                break;
              if (
                (i !== u.IntStream.EOF && this.consume(t),
                r.isAcceptState &&
                  (this.captureSimState(this.prevAccept, t, r),
                  i === u.IntStream.EOF))
              )
                break;
              (i = t.LA(1)), (n = r);
            }
            return this.failOrAccept(this.prevAccept, t, n.configs, i);
          }
          getExistingTargetState(t, r) {
            let i = t.getTarget(r);
            return (
              e.debug &&
                null != i &&
                console.log(
                  "reuse state " + t.stateNumber + " edge to " + i.stateNumber
                ),
              i
            );
          }
          computeTargetState(e, t, r) {
            let i = new f.OrderedATNConfigSet();
            return (
              this.getReachableConfigSet(e, t.configs, i, r),
              i.isEmpty
                ? (i.hasSemanticContext ||
                    this.addDFAEdge(t, r, c.ATNSimulator.ERROR),
                  c.ATNSimulator.ERROR)
                : this.addDFAEdge(t, r, i)
            );
          }
          failOrAccept(e, t, r, i) {
            if (null != e.dfaState) {
              let r = e.dfaState.lexerActionExecutor;
              return (
                this.accept(t, r, this.startIndex, e.index, e.line, e.charPos),
                e.dfaState.prediction
              );
            }
            if (i === u.IntStream.EOF && t.index === this.startIndex)
              return E.Token.EOF;
            throw new p.LexerNoViableAltException(
              this.recog,
              t,
              this.startIndex,
              r
            );
          }
          getReachableConfigSet(t, r, i, n) {
            let o = A.ATN.INVALID_ALT_NUMBER;
            for (let A of r) {
              let r = A.alt === o;
              if (r && A.hasPassedThroughNonGreedyDecision) continue;
              e.debug &&
                console.log(
                  `testing ${this.getTokenName(n)} at ${A.toString(
                    this.recog,
                    !0
                  )}`
                );
              let a = A.state.numberOfOptimizedTransitions;
              for (let e = 0; e < a; e++) {
                let a = A.state.getOptimizedTransition(e),
                  s = this.getReachableTarget(a, n);
                if (null != s) {
                  let e,
                    a = A.lexerActionExecutor;
                  null != a
                    ? ((a = a.fixOffsetBeforeMatch(t.index - this.startIndex)),
                      (e = A.transform(s, !0, a)))
                    : (y(null == A.lexerActionExecutor),
                      (e = A.transform(s, !0)));
                  let c = n === u.IntStream.EOF;
                  if (this.closure(t, e, i, r, !0, c)) {
                    o = A.alt;
                    break;
                  }
                }
              }
            }
          }
          accept(t, r, i, n, o, A) {
            e.debug && console.log(`ACTION ${r}`),
              t.seek(n),
              (this._line = o),
              (this._charPositionInLine = A),
              null != r && null != this.recog && r.execute(this.recog, t, i);
          }
          getReachableTarget(e, t) {
            if (e.matches(t, h.Lexer.MIN_CHAR_VALUE, h.Lexer.MAX_CHAR_VALUE))
              return e.target;
          }
          computeStartState(e, t) {
            let r = C.PredictionContext.EMPTY_FULL,
              i = new f.OrderedATNConfigSet();
            for (let n = 0; n < t.numberOfTransitions; n++) {
              let o = t.transition(n).target,
                A = a.ATNConfig.create(o, n + 1, r);
              this.closure(e, A, i, !1, !1, !1);
            }
            return i;
          }
          closure(t, r, i, n, o, A) {
            if (
              (e.debug &&
                console.log("closure(" + r.toString(this.recog, !0) + ")"),
              r.state instanceof B.RuleStopState)
            ) {
              e.debug &&
                (null != this.recog
                  ? console.log(
                      `closure at ${
                        this.recog.ruleNames[r.state.ruleIndex]
                      } rule stop ${r}`
                    )
                  : console.log(`closure at rule stop ${r}`));
              let a = r.context;
              if (a.isEmpty) return i.add(r), !0;
              a.hasEmpty &&
                (i.add(
                  r.transform(r.state, !0, C.PredictionContext.EMPTY_FULL)
                ),
                (n = !0));
              for (let e = 0; e < a.size; e++) {
                let s = a.getReturnState(e);
                if (s === C.PredictionContext.EMPTY_FULL_STATE_KEY) continue;
                let c = a.getParent(e),
                  g = this.atn.states[s],
                  l = r.transform(g, !1, c);
                n = this.closure(t, l, i, n, o, A);
              }
              return n;
            }
            r.state.onlyHasEpsilonTransitions ||
              (n && r.hasPassedThroughNonGreedyDecision) ||
              i.add(r);
            let a = r.state;
            for (let e = 0; e < a.numberOfOptimizedTransitions; e++) {
              let s = a.getOptimizedTransition(e),
                c = this.getEpsilonTarget(t, r, s, i, o, A);
              null != c && (n = this.closure(t, c, i, n, o, A));
            }
            return n;
          }
          getEpsilonTarget(t, r, i, n, o, A) {
            let a;
            switch (i.serializationType) {
              case 3:
                let s = i;
                if (
                  this.optimize_tail_calls &&
                  s.optimizedTailCall &&
                  !r.context.hasEmpty
                )
                  a = r.transform(i.target, !0);
                else {
                  let e = r.context.getChild(s.followState.stateNumber);
                  a = r.transform(i.target, !0, e);
                }
                break;
              case 10:
                throw new Error(
                  "Precedence predicates are not supported in lexers."
                );
              case 4:
                let c = i;
                e.debug &&
                  console.log("EVAL rule " + c.ruleIndex + ":" + c.predIndex),
                  (n.hasSemanticContext = !0),
                  (a = this.evaluatePredicate(t, c.ruleIndex, c.predIndex, o)
                    ? r.transform(i.target, !0)
                    : void 0);
                break;
              case 6:
                if (r.context.hasEmpty) {
                  let e = I.LexerActionExecutor.append(
                    r.lexerActionExecutor,
                    this.atn.lexerActions[i.actionIndex]
                  );
                  a = r.transform(i.target, !0, e);
                  break;
                }
                a = r.transform(i.target, !0);
                break;
              case 1:
                a = r.transform(i.target, !0);
                break;
              case 5:
              case 2:
              case 7:
                if (
                  A &&
                  i.matches(
                    u.IntStream.EOF,
                    h.Lexer.MIN_CHAR_VALUE,
                    h.Lexer.MAX_CHAR_VALUE
                  )
                ) {
                  a = r.transform(i.target, !1);
                  break;
                }
                a = void 0;
                break;
              default:
                a = void 0;
            }
            return a;
          }
          evaluatePredicate(e, t, r, i) {
            if (null == this.recog) return !0;
            if (!i) return this.recog.sempred(void 0, t, r);
            let n = this._charPositionInLine,
              o = this._line,
              A = e.index,
              a = e.mark();
            try {
              return this.consume(e), this.recog.sempred(void 0, t, r);
            } finally {
              (this._charPositionInLine = n),
                (this._line = o),
                e.seek(A),
                e.release(a);
            }
          }
          captureSimState(e, t, r) {
            (e.index = t.index),
              (e.line = this._line),
              (e.charPos = this._charPositionInLine),
              (e.dfaState = r);
          }
          addDFAEdge(t, r, i) {
            if (i instanceof s.ATNConfigSet) {
              let e = i.hasSemanticContext;
              e && (i.hasSemanticContext = !1);
              let n = this.addDFAState(i);
              return e || this.addDFAEdge(t, r, n), n;
            }
            e.debug &&
              console.log(
                "EDGE " + t + " -> " + i + " upon " + String.fromCharCode(r)
              ),
              null != t && t.setTarget(r, i);
          }
          addDFAState(e) {
            y(!e.hasSemanticContext);
            let t = new g.DFAState(e),
              r = this.atn.modeToDFA[this.mode].states.get(t);
            if (null != r) return r;
            e.optimizeConfigs(this);
            let i,
              n = new g.DFAState(e.clone(!0));
            for (let t of e)
              if (t.state instanceof B.RuleStopState) {
                i = t;
                break;
              }
            if (null != i) {
              let e = this.atn.ruleToTokenType[i.state.ruleIndex],
                t = i.lexerActionExecutor;
              n.acceptStateInfo = new o.AcceptStateInfo(e, t);
            }
            return this.atn.modeToDFA[this.mode].addState(n);
          }
          getDFA(e) {
            return this.atn.modeToDFA[e];
          }
          getText(e) {
            return e.getText(l.Interval.of(this.startIndex, e.index - 1));
          }
          get line() {
            return this._line;
          }
          set line(e) {
            this._line = e;
          }
          get charPositionInLine() {
            return this._charPositionInLine;
          }
          set charPositionInLine(e) {
            this._charPositionInLine = e;
          }
          consume(e) {
            e.LA(1) === "\n".charCodeAt(0)
              ? (this._line++, (this._charPositionInLine = 0))
              : this._charPositionInLine++,
              e.consume();
          }
          getTokenName(e) {
            return -1 === e ? "EOF" : "'" + String.fromCharCode(e) + "'";
          }
        };
        i([d.NotNull], m.prototype, "prevAccept", void 0),
          i([n(0, d.NotNull)], m.prototype, "copyState", null),
          i([n(0, d.NotNull)], m.prototype, "match", null),
          i([d.Override], m.prototype, "reset", null),
          i([n(0, d.NotNull)], m.prototype, "matchATN", null),
          i([n(0, d.NotNull), n(1, d.NotNull)], m.prototype, "execATN", null),
          i([n(0, d.NotNull)], m.prototype, "getExistingTargetState", null),
          i(
            [d.NotNull, n(0, d.NotNull), n(1, d.NotNull)],
            m.prototype,
            "computeTargetState",
            null
          ),
          i(
            [n(0, d.NotNull), n(1, d.NotNull), n(2, d.NotNull)],
            m.prototype,
            "getReachableConfigSet",
            null
          ),
          i([n(0, d.NotNull)], m.prototype, "accept", null),
          i(
            [d.NotNull, n(0, d.NotNull), n(1, d.NotNull)],
            m.prototype,
            "computeStartState",
            null
          ),
          i(
            [n(0, d.NotNull), n(1, d.NotNull), n(2, d.NotNull)],
            m.prototype,
            "closure",
            null
          ),
          i(
            [
              n(0, d.NotNull),
              n(1, d.NotNull),
              n(2, d.NotNull),
              n(3, d.NotNull),
            ],
            m.prototype,
            "getEpsilonTarget",
            null
          ),
          i([n(0, d.NotNull)], m.prototype, "evaluatePredicate", null),
          i(
            [n(0, d.NotNull), n(1, d.NotNull), n(2, d.NotNull)],
            m.prototype,
            "captureSimState",
            null
          ),
          i([d.NotNull, n(0, d.NotNull)], m.prototype, "addDFAState", null),
          i([d.NotNull], m.prototype, "getDFA", null),
          i([d.NotNull, n(0, d.NotNull)], m.prototype, "getText", null),
          i([n(0, d.NotNull)], m.prototype, "consume", null),
          i([d.NotNull], m.prototype, "getTokenName", null),
          (m = i([n(0, d.NotNull)], m)),
          (t.LexerATNSimulator = m),
          (function (e) {
            (e.debug = !1),
              (e.dfa_debug = !1),
              (e.SimState = class {
                constructor() {
                  (this.index = -1), (this.line = 0), (this.charPos = -1);
                }
                reset() {
                  (this.index = -1),
                    (this.line = 0),
                    (this.charPos = -1),
                    (this.dfaState = void 0);
                }
              });
          })((m = t.LexerATNSimulator || (t.LexerATNSimulator = {}))),
          (t.LexerATNSimulator = m);
      },
      90044: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerActionExecutor = void 0);
        const o = r(44339),
          A = r(30737),
          a = r(97789),
          s = r(681);
        let c = class e {
          constructor(e) {
            this._lexerActions = e;
            let t = a.MurmurHash.initialize();
            for (let r of e) t = a.MurmurHash.update(t, r);
            this.cachedHashCode = a.MurmurHash.finish(t, e.length);
          }
          static append(t, r) {
            if (!t) return new e([r]);
            let i = t._lexerActions.slice(0);
            return i.push(r), new e(i);
          }
          fixOffsetBeforeMatch(t) {
            let r;
            for (let e = 0; e < this._lexerActions.length; e++)
              !this._lexerActions[e].isPositionDependent ||
                this._lexerActions[e] instanceof A.LexerIndexedCustomAction ||
                (r || (r = this._lexerActions.slice(0)),
                (r[e] = new A.LexerIndexedCustomAction(
                  t,
                  this._lexerActions[e]
                )));
            return r ? new e(r) : this;
          }
          get lexerActions() {
            return this._lexerActions;
          }
          execute(e, t, r) {
            let i = !1,
              n = t.index;
            try {
              for (let o of this._lexerActions) {
                if (o instanceof A.LexerIndexedCustomAction) {
                  let e = o.offset;
                  t.seek(r + e), (o = o.action), (i = r + e !== n);
                } else o.isPositionDependent && (t.seek(n), (i = !1));
                o.execute(e);
              }
            } finally {
              i && t.seek(n);
            }
          }
          hashCode() {
            return this.cachedHashCode;
          }
          equals(t) {
            return (
              t === this ||
              (t instanceof e &&
                this.cachedHashCode === t.cachedHashCode &&
                o.ArrayEqualityComparator.INSTANCE.equals(
                  this._lexerActions,
                  t._lexerActions
                ))
            );
          }
        };
        i([s.NotNull], c.prototype, "_lexerActions", void 0),
          i([s.NotNull], c.prototype, "lexerActions", null),
          i([n(0, s.NotNull)], c.prototype, "execute", null),
          i([s.Override], c.prototype, "hashCode", null),
          i([s.Override], c.prototype, "equals", null),
          i([s.NotNull, n(1, s.NotNull)], c, "append", null),
          (c = i([n(0, s.NotNull)], c)),
          (t.LexerActionExecutor = c);
      },
      92247: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerChannelAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor(e) {
            this._channel = e;
          }
          get channel() {
            return this._channel;
          }
          get actionType() {
            return 0;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.channel = this._channel;
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              (e = o.MurmurHash.update(e, this._channel)),
              o.MurmurHash.finish(e, 2)
            );
          }
          equals(e) {
            return (
              e === this || (e instanceof a && this._channel === e._channel)
            );
          }
          toString() {
            return `channel(${this._channel})`;
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerChannelAction = a);
      },
      94743: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerCustomAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor(e, t) {
            (this._ruleIndex = e), (this._actionIndex = t);
          }
          get ruleIndex() {
            return this._ruleIndex;
          }
          get actionIndex() {
            return this._actionIndex;
          }
          get actionType() {
            return 1;
          }
          get isPositionDependent() {
            return !0;
          }
          execute(e) {
            e.action(void 0, this._ruleIndex, this._actionIndex);
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              (e = o.MurmurHash.update(e, this._ruleIndex)),
              (e = o.MurmurHash.update(e, this._actionIndex)),
              o.MurmurHash.finish(e, 3)
            );
          }
          equals(e) {
            return (
              e === this ||
              (e instanceof a &&
                this._ruleIndex === e._ruleIndex &&
                this._actionIndex === e._actionIndex)
            );
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          (t.LexerCustomAction = a);
      },
      30737: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerIndexedCustomAction = void 0);
        const o = r(97789),
          A = r(681);
        let a = class e {
          constructor(e, t) {
            (this._offset = e), (this._action = t);
          }
          get offset() {
            return this._offset;
          }
          get action() {
            return this._action;
          }
          get actionType() {
            return this._action.actionType;
          }
          get isPositionDependent() {
            return !0;
          }
          execute(e) {
            this._action.execute(e);
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this._offset)),
              (e = o.MurmurHash.update(e, this._action)),
              o.MurmurHash.finish(e, 2)
            );
          }
          equals(t) {
            return (
              t === this ||
              (t instanceof e &&
                this._offset === t._offset &&
                this._action.equals(t._action))
            );
          }
        };
        i([A.NotNull], a.prototype, "action", null),
          i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          (a = i([n(1, A.NotNull)], a)),
          (t.LexerIndexedCustomAction = a);
      },
      6452: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerModeAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor(e) {
            this._mode = e;
          }
          get mode() {
            return this._mode;
          }
          get actionType() {
            return 2;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.mode(this._mode);
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              (e = o.MurmurHash.update(e, this._mode)),
              o.MurmurHash.finish(e, 2)
            );
          }
          equals(e) {
            return e === this || (e instanceof a && this._mode === e._mode);
          }
          toString() {
            return `mode(${this._mode})`;
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerModeAction = a);
      },
      45974: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerMoreAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor() {}
          get actionType() {
            return 3;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.more();
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              o.MurmurHash.finish(e, 1)
            );
          }
          equals(e) {
            return e === this;
          }
          toString() {
            return "more";
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerMoreAction = a),
          (function (e) {
            e.INSTANCE = new e();
          })((a = t.LexerMoreAction || (t.LexerMoreAction = {})));
      },
      1349: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerPopModeAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor() {}
          get actionType() {
            return 4;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.popMode();
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              o.MurmurHash.finish(e, 1)
            );
          }
          equals(e) {
            return e === this;
          }
          toString() {
            return "popMode";
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerPopModeAction = a),
          (function (e) {
            e.INSTANCE = new e();
          })((a = t.LexerPopModeAction || (t.LexerPopModeAction = {})));
      },
      10038: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerPushModeAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor(e) {
            this._mode = e;
          }
          get mode() {
            return this._mode;
          }
          get actionType() {
            return 5;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.pushMode(this._mode);
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              (e = o.MurmurHash.update(e, this._mode)),
              o.MurmurHash.finish(e, 2)
            );
          }
          equals(e) {
            return e === this || (e instanceof a && this._mode === e._mode);
          }
          toString() {
            return `pushMode(${this._mode})`;
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerPushModeAction = a);
      },
      20415: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerSkipAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor() {}
          get actionType() {
            return 6;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.skip();
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              o.MurmurHash.finish(e, 1)
            );
          }
          equals(e) {
            return e === this;
          }
          toString() {
            return "skip";
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerSkipAction = a),
          (function (e) {
            e.INSTANCE = new e();
          })((a = t.LexerSkipAction || (t.LexerSkipAction = {})));
      },
      74006: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerTypeAction = void 0);
        const o = r(97789),
          A = r(681);
        class a {
          constructor(e) {
            this._type = e;
          }
          get type() {
            return this._type;
          }
          get actionType() {
            return 7;
          }
          get isPositionDependent() {
            return !1;
          }
          execute(e) {
            e.type = this._type;
          }
          hashCode() {
            let e = o.MurmurHash.initialize();
            return (
              (e = o.MurmurHash.update(e, this.actionType)),
              (e = o.MurmurHash.update(e, this._type)),
              o.MurmurHash.finish(e, 2)
            );
          }
          equals(e) {
            return e === this || (e instanceof a && this._type === e._type);
          }
          toString() {
            return `type(${this._type})`;
          }
        }
        i([A.Override], a.prototype, "actionType", null),
          i([A.Override], a.prototype, "isPositionDependent", null),
          i([A.Override, n(0, A.NotNull)], a.prototype, "execute", null),
          i([A.Override], a.prototype, "hashCode", null),
          i([A.Override], a.prototype, "equals", null),
          i([A.Override], a.prototype, "toString", null),
          (t.LexerTypeAction = a);
      },
      33604: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LookaheadEventInfo = void 0);
        const o = r(91548),
          A = r(681);
        let a = class extends o.DecisionEventInfo {
          constructor(e, t, r, i, n, o, A) {
            super(e, t, i, n, o, A), (this.predictedAlt = r);
          }
        };
        (a = i([n(3, A.NotNull)], a)), (t.LookaheadEventInfo = a);
      },
      50029: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LoopEndState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          get stateType() {
            return o.ATNStateType.LOOP_END;
          }
        }
        i([A.Override], a.prototype, "stateType", null), (t.LoopEndState = a);
      },
      70845: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.NotSetTransition = void 0);
        const o = r(681),
          A = r(14442);
        let a = class extends A.SetTransition {
          constructor(e, t) {
            super(e, t);
          }
          get serializationType() {
            return 8;
          }
          matches(e, t, r) {
            return e >= t && e <= r && !super.matches(e, t, r);
          }
          toString() {
            return "~" + super.toString();
          }
        };
        i([o.Override], a.prototype, "serializationType", null),
          i([o.Override], a.prototype, "matches", null),
          i([o.Override], a.prototype, "toString", null),
          (a = i([n(0, o.NotNull), n(1, o.Nullable)], a)),
          (t.NotSetTransition = a);
      },
      4235: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.OrderedATNConfigSet = void 0);
        const n = r(80256),
          o = r(681);
        class A extends n.ATNConfigSet {
          constructor(e, t) {
            null != e && null != t ? super(e, t) : super();
          }
          clone(e) {
            let t = new A(this, e);
            return !e && this.isReadOnly && t.addAll(this), t;
          }
          getKey(e) {
            return { state: 0, alt: e.hashCode() };
          }
          canMerge(e, t, r) {
            return e.equals(r);
          }
        }
        i([o.Override], A.prototype, "clone", null),
          i([o.Override], A.prototype, "getKey", null),
          i([o.Override], A.prototype, "canMerge", null),
          (t.OrderedATNConfigSet = A);
      },
      28180: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParseInfo = void 0);
        const o = r(681);
        let A = class {
          constructor(e) {
            this.atnSimulator = e;
          }
          getDecisionInfo() {
            return this.atnSimulator.getDecisionInfo();
          }
          getLLDecisions() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = [];
            for (let r = 0; r < e.length; r++)
              e[r].LL_Fallback > 0 && t.push(r);
            return t;
          }
          getTotalTimeInPrediction() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e) t += r.timeInPrediction;
            return t;
          }
          getTotalSLLLookaheadOps() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e) t += r.SLL_TotalLook;
            return t;
          }
          getTotalLLLookaheadOps() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e) t += r.LL_TotalLook;
            return t;
          }
          getTotalSLLATNLookaheadOps() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e) t += r.SLL_ATNTransitions;
            return t;
          }
          getTotalLLATNLookaheadOps() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e) t += r.LL_ATNTransitions;
            return t;
          }
          getTotalATNLookaheadOps() {
            let e = this.atnSimulator.getDecisionInfo(),
              t = 0;
            for (let r of e)
              (t += r.SLL_ATNTransitions), (t += r.LL_ATNTransitions);
            return t;
          }
          getDFASize(e) {
            if (e) return this.atnSimulator.atn.decisionToDFA[e].states.size;
            {
              let e = 0,
                t = this.atnSimulator.atn.decisionToDFA;
              for (let r = 0; r < t.length; r++) e += this.getDFASize(r);
              return e;
            }
          }
        };
        i([o.NotNull], A.prototype, "getDecisionInfo", null),
          i([o.NotNull], A.prototype, "getLLDecisions", null),
          (A = i([n(0, o.NotNull)], A)),
          (t.ParseInfo = A);
      },
      14217: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParserATNSimulator = void 0);
        const o = r(51431),
          A = r(67766),
          a = r(15265),
          s = r(67464),
          c = r(68148),
          g = r(30735),
          l = r(80256),
          u = r(73296),
          h = r(89602),
          I = r(981),
          p = r(13300),
          d = r(90977),
          f = r(64993),
          C = r(94981),
          B = r(78163),
          E = r(94378),
          y = r(42628),
          m = r(681),
          Q = r(70845),
          v = r(61202),
          S = r(78578),
          w = r(39248),
          b = r(11229),
          k = r(31435),
          N = r(30118),
          _ = r(23776),
          D = r(15239),
          O = r(78300),
          T = r(14442),
          P = r(56965),
          x = r(48999),
          R = r(61434),
          U = r(71696),
          F = -2147483648;
        let H = class e extends u.ATNSimulator {
          constructor(e, t) {
            super(e),
              (this.predictionMode = N.PredictionMode.LL),
              (this.force_global_context = !1),
              (this.always_try_local_context = !0),
              (this.enable_global_context_dfa = !1),
              (this.optimize_unique_closure = !0),
              (this.optimize_ll1 = !0),
              (this.optimize_tail_calls = !0),
              (this.tail_call_preserves_sll = !0),
              (this.treat_sllk1_conflict_as_ambiguity = !1),
              (this.reportAmbiguities = !1),
              (this.userWantsCtxSensitive = !0),
              (this._parser = t);
          }
          getPredictionMode() {
            return this.predictionMode;
          }
          setPredictionMode(e) {
            this.predictionMode = e;
          }
          reset() {}
          adaptivePredict(t, r, i, n) {
            void 0 === n && (n = !1);
            let o,
              A = this.atn.decisionToDFA[r];
            if (
              (U(null != A),
              this.optimize_ll1 && !A.isPrecedenceDfa && !A.isEmpty)
            ) {
              let e = t.LA(1);
              if (e >= 0 && e <= 65535) {
                let t = ((r << 16) >>> 0) + e,
                  i = this.atn.LL1Table.get(t);
                if (null != i) return i;
              }
            }
            (this.dfa = A),
              this.force_global_context
                ? (n = !0)
                : this.always_try_local_context ||
                  (n = n || A.isContextSensitive),
              (this.userWantsCtxSensitive =
                n ||
                (this.predictionMode !== N.PredictionMode.SLL &&
                  null != i &&
                  !this.atn.decisionToState[r].sll)),
              null == i && (i = w.ParserRuleContext.emptyContext()),
              A.isEmpty || (o = this.getStartState(A, t, i, n)),
              null == o &&
                (null == i && (i = w.ParserRuleContext.emptyContext()),
                e.debug &&
                  console.log(
                    "ATN decision " +
                      A.decision +
                      " exec LA(1)==" +
                      this.getLookaheadName(t) +
                      ", outerContext=" +
                      i.toString(this._parser)
                  ),
                (o = this.computeStartState(A, i, n)));
            let a = t.mark(),
              s = t.index;
            try {
              let r = this.execDFA(A, t, s, o);
              return (
                e.debug &&
                  console.log(
                    "DFA after predictATN: " +
                      A.toString(
                        this._parser.vocabulary,
                        this._parser.ruleNames
                      )
                  ),
                r
              );
            } finally {
              (this.dfa = void 0), t.seek(s), t.release(a);
            }
          }
          getStartState(e, t, r, i) {
            if (!i) {
              if (e.isPrecedenceDfa) {
                let t = e.getPrecedenceStartState(this._parser.precedence, !1);
                if (null == t) return;
                return new P.SimulatorState(r, t, !1, r);
              }
              if (null == e.s0) return;
              return new P.SimulatorState(r, e.s0, !1, r);
            }
            if (!this.enable_global_context_dfa) return;
            let n,
              o = r;
            for (
              U(null != r),
                n = e.isPrecedenceDfa
                  ? e.getPrecedenceStartState(this._parser.precedence, !0)
                  : e.s0full;
              null != o && null != n && n.isContextSensitive;

            )
              (o = this.skipTailCalls(o)),
                (n = n.getContextTarget(this.getReturnState(o))),
                o.isEmpty
                  ? U(null == n || !n.isContextSensitive)
                  : (o = o.parent);
            return null != n ? new P.SimulatorState(r, n, i, o) : void 0;
          }
          execDFA(t, r, i, n) {
            let o = n.outerContext;
            e.dfa_debug &&
              console.log(
                "DFA decision " +
                  t.decision +
                  " exec LA(1)==" +
                  this.getLookaheadName(r) +
                  ", outerContext=" +
                  o.toString(this._parser)
              ),
              e.dfa_debug &&
                console.log(
                  t.toString(this._parser.vocabulary, this._parser.ruleNames)
                );
            let A = n.s0,
              a = r.LA(1),
              s = n.remainingOuterContext;
            for (;;) {
              if (
                (e.dfa_debug &&
                  console.log(
                    "DFA state " +
                      A.stateNumber +
                      " LA(1)==" +
                      this.getLookaheadName(r)
                  ),
                n.useContext)
              )
                for (; A.isContextSymbol(a); ) {
                  let e;
                  if (
                    (null != s &&
                      ((s = this.skipTailCalls(s)),
                      (e = A.getContextTarget(this.getReturnState(s)))),
                    null == e)
                  ) {
                    let e = new P.SimulatorState(
                      n.outerContext,
                      A,
                      n.useContext,
                      s
                    );
                    return this.execATN(t, r, i, e);
                  }
                  U(null != s), (s = s.parent), (A = e);
                }
              if (this.isAcceptState(A, n.useContext)) {
                null != A.predicates
                  ? e.dfa_debug && console.log("accept " + A)
                  : e.dfa_debug &&
                    console.log(
                      "accept; predict " +
                        A.prediction +
                        " in state " +
                        A.stateNumber
                    );
                break;
              }
              U(!this.isAcceptState(A, n.useContext));
              let c = this.getExistingTargetState(A, a);
              if (null == c) {
                let c;
                if (
                  (e.dfa_debug &&
                    a >= 0 &&
                    console.log(
                      "no edge for " + this._parser.vocabulary.getDisplayName(a)
                    ),
                  e.dfa_debug)
                ) {
                  let e = E.Interval.of(i, this._parser.inputStream.index);
                  console.log(
                    "ATN exec upon " +
                      this._parser.inputStream.getText(e) +
                      " at DFA state " +
                      A.stateNumber
                  );
                }
                let g = new P.SimulatorState(o, A, n.useContext, s);
                return (
                  (c = this.execATN(t, r, i, g)),
                  e.dfa_debug &&
                    console.log(
                      "back from DFA update, alt=" +
                        c +
                        ", dfa=\n" +
                        t.toString(
                          this._parser.vocabulary,
                          this._parser.ruleNames
                        )
                    ),
                  e.dfa_debug &&
                    console.log(
                      "DFA decision " + t.decision + " predicts " + c
                    ),
                  c
                );
              }
              if (c === u.ATNSimulator.ERROR) {
                let e = new P.SimulatorState(o, A, n.useContext, s);
                return this.handleNoViableAlt(r, i, e);
              }
              (A = c),
                this.isAcceptState(A, n.useContext) ||
                  a === y.IntStream.EOF ||
                  (r.consume(), (a = r.LA(1)));
            }
            if (
              !n.useContext &&
              null != A.configs.conflictInfo &&
              t.atnStartState instanceof f.DecisionState &&
              !(
                !this.userWantsCtxSensitive ||
                (!A.configs.dipsIntoOuterContext &&
                  A.configs.isExactConflict) ||
                (this.treat_sllk1_conflict_as_ambiguity && r.index === i)
              )
            ) {
              let e;
              U(!n.useContext);
              let a = A.predicates;
              if (null != a) {
                let t = r.index;
                if (
                  (t !== i && r.seek(i),
                  (e = this.evalSemanticContext(a, o, !0)),
                  1 === e.cardinality())
                )
                  return e.nextSetBit(0);
                t !== i && r.seek(t);
              }
              if (this.reportAmbiguities) {
                let a = new P.SimulatorState(o, A, n.useContext, s);
                this.reportAttemptingFullContext(t, e, a, i, r.index);
              }
              return r.seek(i), this.adaptivePredict(r, t.decision, o, !0);
            }
            let c = A.predicates;
            if (null != c) {
              let e = r.index;
              i !== e && r.seek(i);
              let n = this.evalSemanticContext(
                c,
                o,
                this.reportAmbiguities &&
                  this.predictionMode ===
                    N.PredictionMode.LL_EXACT_AMBIG_DETECTION
              );
              switch (n.cardinality()) {
                case 0:
                  throw this.noViableAlt(r, o, A.configs, i);
                case 1:
                  return n.nextSetBit(0);
                default:
                  return (
                    i !== e && r.seek(e),
                    this.reportAmbiguity(
                      t,
                      A,
                      i,
                      e,
                      A.configs.isExactConflict,
                      n,
                      A.configs
                    ),
                    n.nextSetBit(0)
                  );
              }
            }
            return (
              e.dfa_debug &&
                console.log(
                  "DFA decision " + t.decision + " predicts " + A.prediction
                ),
              A.prediction
            );
          }
          isAcceptState(e, t) {
            return (
              !!e.isAcceptState &&
              (null == e.configs.conflictingAlts ||
                !t ||
                this.predictionMode !==
                  N.PredictionMode.LL_EXACT_AMBIG_DETECTION ||
                e.configs.isExactConflict)
            );
          }
          execATN(t, r, i, n) {
            e.debug &&
              console.log(
                "execATN decision " +
                  t.decision +
                  " exec LA(1)==" +
                  this.getLookaheadName(r)
              );
            let o = n.outerContext,
              A = n.useContext,
              a = r.LA(1),
              s = n,
              g = new k.PredictionContextCache();
            for (;;) {
              let n = this.computeReachSet(t, s, a, g);
              if (null == n)
                return (
                  this.setDFAEdge(s.s0, r.LA(1), u.ATNSimulator.ERROR),
                  this.handleNoViableAlt(r, i, s)
                );
              let l = n.s0;
              if (
                (U(
                  l.isAcceptState || l.prediction === c.ATN.INVALID_ALT_NUMBER
                ),
                U(l.isAcceptState || null == l.configs.conflictInfo),
                this.isAcceptState(l, A))
              ) {
                let s = l.configs.conflictingAlts,
                  g = null == s ? l.prediction : c.ATN.INVALID_ALT_NUMBER;
                if (g !== c.ATN.INVALID_ALT_NUMBER) {
                  if (
                    this.optimize_ll1 &&
                    r.index === i &&
                    !t.isPrecedenceDfa &&
                    n.outerContext === n.remainingOuterContext &&
                    t.decision >= 0 &&
                    !l.configs.hasSemanticContext &&
                    a >= 0 &&
                    a <= 65535
                  ) {
                    let e = ((t.decision << 16) >>> 0) + a;
                    this.atn.LL1Table.set(e, g);
                  }
                  A &&
                    this.always_try_local_context &&
                    this.reportContextSensitivity(t, g, n, i, r.index);
                }
                g = l.prediction;
                let u = null != s && this.userWantsCtxSensitive;
                if (
                  (u &&
                    (u =
                      !A &&
                      (l.configs.dipsIntoOuterContext ||
                        !l.configs.isExactConflict) &&
                      (!this.treat_sllk1_conflict_as_ambiguity ||
                        r.index !== i)),
                  l.configs.hasSemanticContext)
                ) {
                  let e = l.predicates;
                  if (null != e) {
                    let t = r.index;
                    switch (
                      (t !== i && r.seek(i),
                      (s = this.evalSemanticContext(
                        e,
                        o,
                        u || this.reportAmbiguities
                      )),
                      s.cardinality())
                    ) {
                      case 0:
                        throw this.noViableAlt(r, o, l.configs, i);
                      case 1:
                        return s.nextSetBit(0);
                    }
                    t !== i && r.seek(t);
                  }
                }
                if (u) {
                  U(!A),
                    U(this.isAcceptState(l, !1)),
                    e.debug && console.log("RETRY with outerContext=" + o);
                  let a = this.computeStartState(t, o, !0);
                  return (
                    this.reportAmbiguities &&
                      this.reportAttemptingFullContext(t, s, n, i, r.index),
                    r.seek(i),
                    this.execATN(t, r, i, a)
                  );
                }
                return (
                  null != s &&
                    (this.reportAmbiguities &&
                      s.cardinality() > 1 &&
                      this.reportAmbiguity(
                        t,
                        l,
                        i,
                        r.index,
                        l.configs.isExactConflict,
                        s,
                        l.configs
                      ),
                    (g = s.nextSetBit(0))),
                  g
                );
              }
              (s = n), a !== y.IntStream.EOF && (r.consume(), (a = r.LA(1)));
            }
          }
          handleNoViableAlt(e, t, r) {
            if (null != r.s0) {
              let i = new p.BitSet(),
                n = 0;
              for (let e of r.s0.configs)
                (e.reachesIntoOuterContext ||
                  e.state instanceof _.RuleStopState) &&
                  (i.set(e.alt), (n = Math.max(n, e.alt)));
              switch (i.cardinality()) {
                case 0:
                  break;
                case 1:
                  return i.nextSetBit(0);
                default:
                  if (!r.s0.configs.hasSemanticContext) return i.nextSetBit(0);
                  let o = new l.ATNConfigSet();
                  for (let e of r.s0.configs)
                    (e.reachesIntoOuterContext ||
                      e.state instanceof _.RuleStopState) &&
                      o.add(e);
                  let A = this.getPredsForAmbigAlts(i, o, n);
                  if (null != A) {
                    let n = this.getPredicatePredictions(i, A);
                    if (null != n) {
                      let i = e.index;
                      try {
                        e.seek(t);
                        let o = this.evalSemanticContext(n, r.outerContext, !1);
                        if (!o.isEmpty) return o.nextSetBit(0);
                      } finally {
                        e.seek(i);
                      }
                    }
                  }
                  return i.nextSetBit(0);
              }
            }
            throw this.noViableAlt(e, r.outerContext, r.s0.configs, t);
          }
          computeReachSet(e, t, r, i) {
            let n = t.useContext,
              o = t.remainingOuterContext,
              A = t.s0;
            if (n)
              for (; A.isContextSymbol(r); ) {
                let e;
                if (
                  (null != o &&
                    ((o = this.skipTailCalls(o)),
                    (e = A.getContextTarget(this.getReturnState(o)))),
                  null == e)
                )
                  break;
                U(null != o), (o = o.parent), (A = e);
              }
            if ((U(!this.isAcceptState(A, n)), this.isAcceptState(A, n)))
              return new P.SimulatorState(t.outerContext, A, n, o);
            let a = A,
              s = this.getExistingTargetState(a, r);
            if (null == s) {
              let t = this.computeTargetState(e, a, o, r, n, i);
              (s = t[0]), (o = t[1]);
            }
            return s !== u.ATNSimulator.ERROR
              ? (U(!n || !s.configs.dipsIntoOuterContext),
                new P.SimulatorState(t.outerContext, s, n, o))
              : void 0;
          }
          getExistingTargetState(e, t) {
            return e.getTarget(t);
          }
          computeTargetState(t, r, i, n, o, A) {
            let a,
              s,
              g = r.configs.toArray(),
              h = new l.ATNConfigSet();
            do {
              let t = !o || null != i;
              t || (h.isOutermostConfigSet = !0);
              let r,
                u = new l.ATNConfigSet();
              for (let t of g) {
                if (
                  (e.debug &&
                    console.log(
                      "testing " + this.getTokenName(n) + " at " + t.toString()
                    ),
                  t.state instanceof _.RuleStopState)
                ) {
                  U(t.context.isEmpty),
                    ((o && !t.reachesIntoOuterContext) ||
                      n === y.IntStream.EOF) &&
                      (null == r && (r = []), r.push(t));
                  continue;
                }
                let i = t.state.numberOfOptimizedTransitions;
                for (let e = 0; e < i; e++) {
                  let r = t.state.getOptimizedTransition(e),
                    i = this.getReachableTarget(t, r, n);
                  null != i && u.add(t.transform(i, !1), A);
                }
              }
              if (
                this.optimize_unique_closure &&
                null == r &&
                n !== x.Token.EOF &&
                u.uniqueAlt !== c.ATN.INVALID_ALT_NUMBER
              ) {
                (u.isOutermostConfigSet = h.isOutermostConfigSet), (h = u);
                break;
              }
              let I = !1,
                p = n === x.Token.EOF;
              if (
                (this.closure(u, h, I, t, A, p),
                (s = h.dipsIntoOuterContext),
                n === y.IntStream.EOF &&
                  (h = this.removeAllConfigsNotInRuleStopState(h, A)),
                !(
                  null == r ||
                  (o && N.PredictionMode.hasConfigInRuleStopState(h))
                ))
              ) {
                U(r.length > 0);
                for (let e of r) h.add(e, A);
              }
              if (o && s) {
                h.clear(), (i = this.skipTailCalls(i));
                let e = this.getReturnState(i);
                if (
                  (null == a && (a = new B.IntegerList()),
                  (i = i.isEmpty ? void 0 : i.parent),
                  a.add(e),
                  e !== b.PredictionContext.EMPTY_FULL_STATE_KEY)
                )
                  for (let t = 0; t < g.length; t++)
                    g[t] = g[t].appendContext(e, A);
              }
            } while (o && s);
            return h.isEmpty
              ? (this.setDFAEdge(r, n, u.ATNSimulator.ERROR),
                [u.ATNSimulator.ERROR, i])
              : [this.addDFAEdge(t, r, n, a, h, A), i];
          }
          removeAllConfigsNotInRuleStopState(e, t) {
            if (N.PredictionMode.allConfigsInRuleStopStates(e)) return e;
            let r = new l.ATNConfigSet();
            for (let i of e) i.state instanceof _.RuleStopState && r.add(i, t);
            return r;
          }
          computeStartState(e, t, r) {
            let i = e.isPrecedenceDfa
              ? e.getPrecedenceStartState(this._parser.precedence, r)
              : r
              ? e.s0full
              : e.s0;
            if (null != i) {
              if (!r) return new P.SimulatorState(t, i, r, t);
              i.setContextSensitive(this.atn);
            }
            e.decision;
            let n = e.atnStartState,
              o = 0,
              A = t,
              a = r
                ? b.PredictionContext.EMPTY_FULL
                : b.PredictionContext.EMPTY_LOCAL,
              s = new k.PredictionContextCache();
            if (r) {
              if (!this.enable_global_context_dfa)
                for (; null != A; )
                  A.isEmpty
                    ? ((o = b.PredictionContext.EMPTY_FULL_STATE_KEY),
                      (A = void 0))
                    : ((o = this.getReturnState(A)),
                      (a = a.appendSingleContext(o, s)),
                      (A = A.parent));
              for (; null != i && i.isContextSensitive && null != A; ) {
                let e;
                if (
                  ((A = this.skipTailCalls(A)),
                  A.isEmpty
                    ? ((e = i.getContextTarget(
                        b.PredictionContext.EMPTY_FULL_STATE_KEY
                      )),
                      (o = b.PredictionContext.EMPTY_FULL_STATE_KEY),
                      (A = void 0))
                    : ((o = this.getReturnState(A)),
                      (e = i.getContextTarget(o)),
                      (a = a.appendSingleContext(o, s)),
                      (A = A.parent)),
                  null == e)
                )
                  break;
                i = e;
              }
            }
            if (null != i && !i.isContextSensitive)
              return new P.SimulatorState(t, i, r, A);
            let c = new l.ATNConfigSet();
            for (;;) {
              let u = new l.ATNConfigSet(),
                h = n.numberOfTransitions;
              for (let e = 0; e < h; e++) {
                let t = n.transition(e).target;
                u.add(g.ATNConfig.create(t, e + 1, a));
              }
              let I = null != A;
              I || (c.isOutermostConfigSet = !0);
              let p = !0;
              this.closure(u, c, p, I, s, !1);
              let d,
                f = c.dipsIntoOuterContext;
              if (r && !this.enable_global_context_dfa) {
                i = this.addDFAState(e, c, s);
                break;
              }
              if (
                (null == i
                  ? e.isPrecedenceDfa
                    ? ((c = this.applyPrecedenceFilter(c, t, s)),
                      (d = this.addDFAState(e, c, s)),
                      e.setPrecedenceStartState(this._parser.precedence, r, d))
                    : ((d = this.addDFAState(e, c, s)),
                      r
                        ? e.s0full
                          ? (d = e.s0full)
                          : (e.s0full = d)
                        : e.s0
                        ? (d = e.s0)
                        : (e.s0 = d))
                  : (e.isPrecedenceDfa &&
                      (c = this.applyPrecedenceFilter(c, t, s)),
                    (d = this.addDFAState(e, c, s)),
                    i.setContextTarget(o, d)),
                (i = d),
                !r || !f)
              )
                break;
              d.setContextSensitive(this.atn),
                c.clear(),
                (A = this.skipTailCalls(A));
              let C = this.getReturnState(A);
              (A = A.isEmpty ? void 0 : A.parent),
                C !== b.PredictionContext.EMPTY_FULL_STATE_KEY &&
                  (a = a.appendSingleContext(C, s)),
                (o = C);
            }
            return new P.SimulatorState(t, i, r, A);
          }
          applyPrecedenceFilter(e, t, r) {
            let i = new Map(),
              n = new l.ATNConfigSet();
            for (let o of e) {
              if (1 !== o.alt) continue;
              let e = o.semanticContext.evalPrecedence(this._parser, t);
              null != e &&
                (i.set(o.state.stateNumber, o.context),
                e !== o.semanticContext
                  ? n.add(o.transform(o.state, !1, e), r)
                  : n.add(o, r));
            }
            for (let t of e)
              if (1 !== t.alt) {
                if (!t.isPrecedenceFilterSuppressed) {
                  let e = i.get(t.state.stateNumber);
                  if (null != e && e.equals(t.context)) continue;
                }
                n.add(t, r);
              }
            return n;
          }
          getReachableTarget(e, t, r) {
            if (t.matches(r, 0, this.atn.maxTokenType)) return t.target;
          }
          predicateDFAState(t, r, i) {
            let n = this.getConflictingAltsFromConfigSet(r);
            if (!n)
              throw new Error(
                "This unhandled scenario is intended to be unreachable, but I'm currently not sure of why we know that's the case."
              );
            e.debug && console.log("predicateDFAState " + t);
            let o,
              A = this.getPredsForAmbigAlts(n, r, i);
            return (
              null != A &&
                ((o = this.getPredicatePredictions(n, A)), (t.predicates = o)),
              o
            );
          }
          getPredsForAmbigAlts(t, r, i) {
            let n = new Array(i + 1),
              o = n.length;
            for (let e of r)
              t.get(e.alt) &&
                (n[e.alt] = O.SemanticContext.or(n[e.alt], e.semanticContext));
            let A = 0;
            for (let e = 0; e < o; e++)
              null == n[e]
                ? (n[e] = O.SemanticContext.NONE)
                : n[e] !== O.SemanticContext.NONE && A++;
            let a = n;
            return (
              0 === A && (a = void 0),
              e.debug &&
                console.log(
                  "getPredsForAmbigAlts result " +
                    (a ? s.Arrays.toString(a) : "undefined")
                ),
              a
            );
          }
          getPredicatePredictions(e, t) {
            let r = [],
              i = !1;
            for (let n = 1; n < t.length; n++) {
              let o = t[n];
              U(null != o),
                null != e && e.get(n) && o === O.SemanticContext.NONE
                  ? r.push(new C.DFAState.PredPrediction(o, n))
                  : o !== O.SemanticContext.NONE &&
                    ((i = !0), r.push(new C.DFAState.PredPrediction(o, n)));
            }
            if (i) return r;
          }
          evalSemanticContext(t, r, i) {
            let n = new p.BitSet();
            for (let o of t) {
              if (o.pred === O.SemanticContext.NONE) {
                if ((n.set(o.alt), !i)) break;
                continue;
              }
              let t = this.evalSemanticContextImpl(o.pred, r, o.alt);
              if (
                ((e.debug || e.dfa_debug) &&
                  console.log("eval pred " + o + "=" + t),
                t &&
                  ((e.debug || e.dfa_debug) && console.log("PREDICT " + o.alt),
                  n.set(o.alt),
                  !i))
              )
                break;
            }
            return n;
          }
          evalSemanticContextImpl(e, t, r) {
            return e.eval(this._parser, t);
          }
          closure(e, t, r, i, n, o) {
            null == n && (n = k.PredictionContextCache.UNCACHED);
            let A = e,
              s = new a.Array2DHashSet(S.ObjectEqualityComparator.INSTANCE);
            for (; A.size > 0; ) {
              let e = new l.ATNConfigSet();
              for (let a of A) this.closureImpl(a, t, e, s, r, i, n, 0, o);
              A = e;
            }
          }
          closureImpl(t, r, i, n, o, a, s, c, l) {
            if (
              (e.debug &&
                console.log("closure(" + t.toString(this._parser, !0) + ")"),
              t.state instanceof _.RuleStopState)
            )
              if (t.context.isEmpty) {
                if (!a) return void r.add(t, s);
                e.debug &&
                  console.log(
                    "FALLING off rule " + this.getRuleName(t.state.ruleIndex)
                  ),
                  t.context === b.PredictionContext.EMPTY_FULL
                    ? (t = t.transform(
                        t.state,
                        !1,
                        b.PredictionContext.EMPTY_LOCAL
                      ))
                    : !t.reachesIntoOuterContext &&
                      b.PredictionContext.isEmptyLocal(t.context) &&
                      r.add(t, s);
              } else {
                let e = t.context.hasEmpty,
                  A = t.context.size - (e ? 1 : 0);
                for (let e = 0; e < A; e++) {
                  let A = t.context.getParent(e),
                    u = this.atn.states[t.context.getReturnState(e)],
                    h = g.ATNConfig.create(u, t.alt, A, t.semanticContext);
                  (h.outerContextDepth = t.outerContextDepth),
                    (h.isPrecedenceFilterSuppressed =
                      t.isPrecedenceFilterSuppressed),
                    U(c > F),
                    this.closureImpl(h, r, i, n, o, a, s, c - 1, l);
                }
                if (!e || !a) return;
                t = t.transform(t.state, !1, b.PredictionContext.EMPTY_LOCAL);
              }
            let u = t.state;
            u.onlyHasEpsilonTransitions ||
              (r.add(t, s), e.debug && console.log("added config " + r));
            for (let g = 0; g < u.numberOfOptimizedTransitions; g++) {
              if (
                0 === g &&
                u.stateType === h.ATNStateType.STAR_LOOP_ENTRY &&
                u.precedenceRuleDecision &&
                !t.context.hasEmpty
              ) {
                let e = u,
                  r = !0;
                for (let i = 0; i < t.context.size; i++)
                  if (
                    !e.precedenceLoopbackStates.get(t.context.getReturnState(i))
                  ) {
                    r = !1;
                    break;
                  }
                if (r) continue;
              }
              let I = u.getOptimizedTransition(g),
                p = !(I instanceof A.ActionTransition) && o,
                d = this.getEpsilonTarget(t, I, p, 0 === c, s, l);
              if (null != d) {
                if (I instanceof D.RuleTransition && null != i && !o) {
                  i.add(d, s);
                  continue;
                }
                let A = c;
                if (t.state instanceof _.RuleStopState) {
                  if (
                    (null != this.dfa &&
                      this.dfa.isPrecedenceDfa &&
                      I.outermostPrecedenceReturn ===
                        this.dfa.atnStartState.ruleIndex &&
                      (d.isPrecedenceFilterSuppressed = !0),
                    (d.outerContextDepth = d.outerContextDepth + 1),
                    !n.add(d))
                  )
                    continue;
                  U(A > F),
                    A--,
                    e.debug && console.log("dips into outer ctx: " + d);
                } else if (I instanceof D.RuleTransition)
                  !this.optimize_tail_calls ||
                  !I.optimizedTailCall ||
                  (this.tail_call_preserves_sll &&
                    b.PredictionContext.isEmptyLocal(t.context))
                    ? A >= 0 && A++
                    : (U(d.context === t.context),
                      0 === A &&
                        (A--,
                        !this.tail_call_preserves_sll &&
                          b.PredictionContext.isEmptyLocal(t.context) &&
                          (d.outerContextDepth = d.outerContextDepth + 1)));
                else if (!I.isEpsilon && !n.add(d)) continue;
                this.closureImpl(d, r, i, n, p, a, s, A, l);
              }
            }
          }
          getRuleName(e) {
            return null != this._parser && e >= 0
              ? this._parser.ruleNames[e]
              : "<rule " + e + ">";
          }
          getEpsilonTarget(e, t, r, i, n, o) {
            switch (t.serializationType) {
              case 3:
                return this.ruleTransition(e, t, n);
              case 10:
                return this.precedenceTransition(e, t, r, i);
              case 4:
                return this.predTransition(e, t, r, i);
              case 6:
                return this.actionTransition(e, t);
              case 1:
                return e.transform(t.target, !1);
              case 5:
              case 2:
              case 7:
                return o && t.matches(x.Token.EOF, 0, 1)
                  ? e.transform(t.target, !1)
                  : void 0;
              default:
                return;
            }
          }
          actionTransition(t, r) {
            return (
              e.debug &&
                console.log("ACTION edge " + r.ruleIndex + ":" + r.actionIndex),
              t.transform(r.target, !1)
            );
          }
          precedenceTransition(t, r, i, n) {
            let o;
            if (
              (e.debug &&
                (console.log(
                  "PRED (collectPredicates=" +
                    i +
                    ") " +
                    r.precedence +
                    ">=_p, ctx dependent=true"
                ),
                null != this._parser &&
                  console.log(
                    "context surrounding pred is " +
                      this._parser.getRuleInvocationStack()
                  )),
              i && n)
            ) {
              let e = O.SemanticContext.and(t.semanticContext, r.predicate);
              o = t.transform(r.target, !1, e);
            } else o = t.transform(r.target, !1);
            return (
              e.debug && console.log("config from pred transition=" + o), o
            );
          }
          predTransition(t, r, i, n) {
            let o;
            if (
              (e.debug &&
                (console.log(
                  "PRED (collectPredicates=" +
                    i +
                    ") " +
                    r.ruleIndex +
                    ":" +
                    r.predIndex +
                    ", ctx dependent=" +
                    r.isCtxDependent
                ),
                null != this._parser &&
                  console.log(
                    "context surrounding pred is " +
                      this._parser.getRuleInvocationStack()
                  )),
              i && (!r.isCtxDependent || (r.isCtxDependent && n)))
            ) {
              let e = O.SemanticContext.and(t.semanticContext, r.predicate);
              o = t.transform(r.target, !1, e);
            } else o = t.transform(r.target, !1);
            return (
              e.debug && console.log("config from pred transition=" + o), o
            );
          }
          ruleTransition(t, r, i) {
            e.debug &&
              console.log(
                "CALL rule " +
                  this.getRuleName(r.target.ruleIndex) +
                  ", ctx=" +
                  t.context
              );
            let n,
              o = r.followState;
            return (
              (n =
                !this.optimize_tail_calls ||
                !r.optimizedTailCall ||
                (this.tail_call_preserves_sll &&
                  b.PredictionContext.isEmptyLocal(t.context))
                  ? null != i
                    ? i.getChild(t.context, o.stateNumber)
                    : t.context.getChild(o.stateNumber)
                  : t.context),
              t.transform(r.target, !1, n)
            );
          }
          isConflicted(t, r) {
            if (t.uniqueAlt !== c.ATN.INVALID_ALT_NUMBER || t.size <= 1) return;
            let i = t.toArray();
            i.sort(e.STATE_ALT_SORT_COMPARATOR);
            let n = !t.dipsIntoOuterContext,
              o = new p.BitSet(),
              A = i[0].alt;
            o.set(A);
            let a,
              s = i[0].state.nonStopStateNumber;
            for (let e of i) {
              let t = e.state.nonStopStateNumber;
              if (t !== s) {
                if (e.alt !== A) return;
                s = t;
              }
            }
            if (n) {
              (s = i[0].state.nonStopStateNumber), (a = new p.BitSet());
              let e = A;
              for (let t of i) {
                if (t.state.nonStopStateNumber !== s) break;
                let r = t.alt;
                a.set(r), (e = r);
              }
              s = i[0].state.nonStopStateNumber;
              let t = A;
              for (let r of i) {
                let i = r.state.nonStopStateNumber,
                  o = r.alt;
                if (i !== s) {
                  if (t !== e) {
                    n = !1;
                    break;
                  }
                  (s = i), (t = A);
                } else if (o !== t) {
                  if (o !== a.nextSetBit(t + 1)) {
                    n = !1;
                    break;
                  }
                  t = o;
                }
              }
            }
            s = i[0].state.nonStopStateNumber;
            let g = 0,
              l = 0,
              u = i[0].context;
            for (let e = 1; e < i.length; e++) {
              let t = i[e];
              if (t.alt !== A) break;
              if (t.state.nonStopStateNumber !== s) break;
              (l = e), (u = r.join(u, i[e].context));
            }
            for (let e = l + 1; e < i.length; e++) {
              let t = i[e],
                a = t.state;
              if ((o.set(t.alt), a.nonStopStateNumber !== s)) {
                (s = a.nonStopStateNumber), (g = e), (l = e), (u = t.context);
                for (let e = g + 1; e < i.length; e++) {
                  let t = i[e];
                  if (t.alt !== A) break;
                  if (t.state.nonStopStateNumber !== s) break;
                  (l = e), (u = r.join(u, t.context));
                }
                e = l;
                continue;
              }
              let c = t.context,
                h = t.alt,
                I = e;
              for (let e = I + 1; e < i.length; e++) {
                let t = i[e];
                if (t.alt !== h) break;
                if (t.state.nonStopStateNumber !== s) break;
                (I = e), (c = r.join(c, t.context));
              }
              e = I;
              let p = r.join(u, c);
              if (!u.equals(p)) return;
              n = n && u.equals(c);
            }
            return new d.ConflictInfo(o, n);
          }
          getConflictingAltsFromConfigSet(e) {
            let t = e.conflictingAlts;
            return (
              null == t &&
                e.uniqueAlt !== c.ATN.INVALID_ALT_NUMBER &&
                ((t = new p.BitSet()), t.set(e.uniqueAlt)),
              t
            );
          }
          getTokenName(e) {
            if (e === x.Token.EOF) return "EOF";
            let t = (
              null != this._parser
                ? this._parser.vocabulary
                : R.VocabularyImpl.EMPTY_VOCABULARY
            ).getDisplayName(e);
            return t === String(e) ? t : t + "<" + e + ">";
          }
          getLookaheadName(e) {
            return this.getTokenName(e.LA(1));
          }
          dumpDeadEndConfigs(e) {
            console.log("dead end configs: ");
            let t = e.deadEndConfigs;
            if (t)
              for (let e of t) {
                let t = "no edges";
                if (e.state.numberOfOptimizedTransitions > 0) {
                  let r = e.state.getOptimizedTransition(0);
                  r instanceof I.AtomTransition
                    ? (t = "Atom " + this.getTokenName(r._label))
                    : r instanceof T.SetTransition &&
                      (t =
                        (r instanceof Q.NotSetTransition ? "~" : "") +
                        "Set " +
                        r.set.toString());
                }
                console.log(e.toString(this._parser, !0) + ":" + t);
              }
          }
          noViableAlt(e, t, r, i) {
            return new v.NoViableAltException(
              this._parser,
              e,
              e.get(i),
              e.LT(1),
              r,
              t
            );
          }
          getUniqueAlt(e) {
            let t = c.ATN.INVALID_ALT_NUMBER;
            for (let r of e)
              if (t === c.ATN.INVALID_ALT_NUMBER) t = r.alt;
              else if (r.alt !== t) return c.ATN.INVALID_ALT_NUMBER;
            return t;
          }
          configWithAltAtStopState(e, t) {
            for (let r of e)
              if (r.alt === t && r.state instanceof _.RuleStopState) return !0;
            return !1;
          }
          addDFAEdge(t, r, i, n, o, A) {
            U(null == n || n.isEmpty || t.isContextSensitive);
            let a = r,
              s = this.addDFAState(t, o, A);
            if (null != n)
              for (let e of n.toArray()) {
                if (
                  e === b.PredictionContext.EMPTY_FULL_STATE_KEY &&
                  a.configs.isOutermostConfigSet
                )
                  continue;
                a.setContextSensitive(this.atn), a.setContextSymbol(i);
                let r = a.getContextTarget(e);
                null == r
                  ? ((r = this.addDFAContextState(t, a.configs, e, A)),
                    U(
                      e !== b.PredictionContext.EMPTY_FULL_STATE_KEY ||
                        r.configs.isOutermostConfigSet
                    ),
                    a.setContextTarget(e, r),
                    (a = r))
                  : (a = r);
              }
            return (
              e.debug &&
                console.log(
                  "EDGE " + a + " -> " + s + " upon " + this.getTokenName(i)
                ),
              this.setDFAEdge(a, i, s),
              e.debug &&
                console.log(
                  "DFA=\n" +
                    t.toString(
                      null != this._parser
                        ? this._parser.vocabulary
                        : R.VocabularyImpl.EMPTY_VOCABULARY,
                      null != this._parser ? this._parser.ruleNames : void 0
                    )
                ),
              s
            );
          }
          setDFAEdge(e, t, r) {
            null != e && e.setTarget(t, r);
          }
          addDFAContextState(e, t, r, i) {
            if (r !== b.PredictionContext.EMPTY_FULL_STATE_KEY) {
              let n = new l.ATNConfigSet();
              for (let e of t) n.add(e.appendContext(r, i));
              return this.addDFAState(e, n, i);
            }
            return (
              U(
                !t.isOutermostConfigSet,
                "Shouldn't be adding a duplicate edge."
              ),
              ((t = t.clone(!0)).isOutermostConfigSet = !0),
              this.addDFAState(e, t, i)
            );
          }
          addDFAState(t, r, i) {
            let n = this.enable_global_context_dfa || !r.isOutermostConfigSet;
            if (n) {
              r.isReadOnly || r.optimizeConfigs(this);
              let e = this.createDFAState(t, r),
                i = t.states.get(e);
              if (null != i) return i;
            }
            r.isReadOnly ||
              (null == r.conflictInfo &&
                (r.conflictInfo = this.isConflicted(r, i)));
            let A = this.createDFAState(t, r.clone(!0)),
              a = this.atn.getDecisionState(t.decision),
              s = this.getUniqueAlt(r);
            if (s !== c.ATN.INVALID_ALT_NUMBER)
              A.acceptStateInfo = new o.AcceptStateInfo(s);
            else if (null != r.conflictingAlts) {
              let e = r.conflictingAlts;
              e && (A.acceptStateInfo = new o.AcceptStateInfo(e.nextSetBit(0)));
            }
            if (
              (A.isAcceptState &&
                r.hasSemanticContext &&
                this.predicateDFAState(A, r, a.numberOfTransitions),
              !n)
            )
              return A;
            let g = t.addState(A);
            return (
              e.debug && g === A && console.log("adding new DFA state: " + A), g
            );
          }
          createDFAState(e, t) {
            return new C.DFAState(t);
          }
          reportAttemptingFullContext(t, r, i, n, o) {
            if (e.debug || e.retry_debug) {
              let e = E.Interval.of(n, o);
              console.log(
                "reportAttemptingFullContext decision=" +
                  t.decision +
                  ":" +
                  i.s0.configs +
                  ", input=" +
                  this._parser.inputStream.getText(e)
              );
            }
            if (null != this._parser) {
              let e = this._parser.getErrorListenerDispatch();
              e.reportAttemptingFullContext &&
                e.reportAttemptingFullContext(this._parser, t, n, o, r, i);
            }
          }
          reportContextSensitivity(t, r, i, n, o) {
            if (e.debug || e.retry_debug) {
              let e = E.Interval.of(n, o);
              console.log(
                "reportContextSensitivity decision=" +
                  t.decision +
                  ":" +
                  i.s0.configs +
                  ", input=" +
                  this._parser.inputStream.getText(e)
              );
            }
            if (null != this._parser) {
              let e = this._parser.getErrorListenerDispatch();
              e.reportContextSensitivity &&
                e.reportContextSensitivity(this._parser, t, n, o, r, i);
            }
          }
          reportAmbiguity(t, r, i, n, o, A, a) {
            if (e.debug || e.retry_debug) {
              let e = E.Interval.of(i, n);
              console.log(
                "reportAmbiguity " +
                  A +
                  ":" +
                  a +
                  ", input=" +
                  this._parser.inputStream.getText(e)
              );
            }
            if (null != this._parser) {
              let e = this._parser.getErrorListenerDispatch();
              e.reportAmbiguity &&
                e.reportAmbiguity(this._parser, t, i, n, o, A, a);
            }
          }
          getReturnState(e) {
            return e.isEmpty
              ? b.PredictionContext.EMPTY_FULL_STATE_KEY
              : this.atn.states[e.invokingState].transition(0).followState
                  .stateNumber;
          }
          skipTailCalls(e) {
            if (!this.optimize_tail_calls) return e;
            for (; !e.isEmpty; ) {
              let t = this.atn.states[e.invokingState];
              if (
                (U(
                  1 === t.numberOfTransitions &&
                    3 === t.transition(0).serializationType
                ),
                !t.transition(0).tailCall)
              )
                break;
              e = e.parent;
            }
            return e;
          }
          get parser() {
            return this._parser;
          }
        };
        (H.debug = !1),
          (H.dfa_debug = !1),
          (H.retry_debug = !1),
          (H.STATE_ALT_SORT_COMPARATOR = (e, t) => {
            let r = e.state.nonStopStateNumber - t.state.nonStopStateNumber;
            return 0 !== r ? r : ((r = e.alt - t.alt), 0 !== r ? r : 0);
          }),
          i([m.NotNull], H.prototype, "predictionMode", void 0),
          i([m.NotNull], H.prototype, "getPredictionMode", null),
          i([n(0, m.NotNull)], H.prototype, "setPredictionMode", null),
          i([m.Override], H.prototype, "reset", null),
          i([n(0, m.NotNull)], H.prototype, "adaptivePredict", null),
          i(
            [n(0, m.NotNull), n(1, m.NotNull), n(2, m.NotNull)],
            H.prototype,
            "getStartState",
            null
          ),
          i(
            [n(0, m.NotNull), n(1, m.NotNull), n(3, m.NotNull)],
            H.prototype,
            "execDFA",
            null
          ),
          i(
            [n(0, m.NotNull), n(1, m.NotNull), n(3, m.NotNull)],
            H.prototype,
            "execATN",
            null
          ),
          i(
            [n(0, m.NotNull), n(2, m.NotNull)],
            H.prototype,
            "handleNoViableAlt",
            null
          ),
          i([n(0, m.NotNull)], H.prototype, "getExistingTargetState", null),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "computeTargetState",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull)],
            H.prototype,
            "removeAllConfigsNotInRuleStopState",
            null
          ),
          i([m.NotNull], H.prototype, "computeStartState", null),
          i(
            [m.NotNull, n(0, m.NotNull)],
            H.prototype,
            "applyPrecedenceFilter",
            null
          ),
          i(
            [n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "getReachableTarget",
            null
          ),
          i(
            [n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "getPredsForAmbigAlts",
            null
          ),
          i([n(0, m.NotNull)], H.prototype, "evalSemanticContext", null),
          i([n(0, m.NotNull)], H.prototype, "evalSemanticContextImpl", null),
          i([n(1, m.NotNull), n(4, m.Nullable)], H.prototype, "closure", null),
          i(
            [
              n(0, m.NotNull),
              n(1, m.NotNull),
              n(2, m.Nullable),
              n(3, m.NotNull),
              n(6, m.NotNull),
            ],
            H.prototype,
            "closureImpl",
            null
          ),
          i([m.NotNull], H.prototype, "getRuleName", null),
          i(
            [n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "getEpsilonTarget",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "actionTransition",
            null
          ),
          i(
            [m.Nullable, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "precedenceTransition",
            null
          ),
          i(
            [m.Nullable, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "predTransition",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull), n(2, m.Nullable)],
            H.prototype,
            "ruleTransition",
            null
          ),
          i([n(0, m.NotNull)], H.prototype, "isConflicted", null),
          i([m.NotNull], H.prototype, "getTokenName", null),
          i([n(0, m.NotNull)], H.prototype, "dumpDeadEndConfigs", null),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull), n(2, m.NotNull)],
            H.prototype,
            "noViableAlt",
            null
          ),
          i([n(0, m.NotNull)], H.prototype, "getUniqueAlt", null),
          i([n(0, m.NotNull)], H.prototype, "configWithAltAtStopState", null),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull), n(4, m.NotNull)],
            H.prototype,
            "addDFAEdge",
            null
          ),
          i(
            [n(0, m.Nullable), n(2, m.Nullable)],
            H.prototype,
            "setDFAEdge",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "addDFAContextState",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "addDFAState",
            null
          ),
          i(
            [m.NotNull, n(0, m.NotNull), n(1, m.NotNull)],
            H.prototype,
            "createDFAState",
            null
          ),
          i(
            [n(0, m.NotNull), n(2, m.NotNull)],
            H.prototype,
            "reportAttemptingFullContext",
            null
          ),
          i(
            [n(0, m.NotNull), n(2, m.NotNull)],
            H.prototype,
            "reportContextSensitivity",
            null
          ),
          i(
            [n(0, m.NotNull), n(5, m.NotNull), n(6, m.NotNull)],
            H.prototype,
            "reportAmbiguity",
            null
          ),
          (H = i([n(0, m.NotNull)], H)),
          (t.ParserATNSimulator = H);
      },
      79815: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PlusBlockStartState = void 0);
        const n = r(89602),
          o = r(19954),
          A = r(681);
        class a extends o.BlockStartState {
          get stateType() {
            return n.ATNStateType.PLUS_BLOCK_START;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.PlusBlockStartState = a);
      },
      61232: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PlusLoopbackState = void 0);
        const n = r(89602),
          o = r(64993),
          A = r(681);
        class a extends o.DecisionState {
          get stateType() {
            return n.ATNStateType.PLUS_LOOP_BACK;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.PlusLoopbackState = a);
      },
      68889: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PrecedencePredicateTransition = void 0);
        const o = r(98356),
          A = r(681),
          a = r(78300);
        let s = class extends o.AbstractPredicateTransition {
          constructor(e, t) {
            super(e), (this.precedence = t);
          }
          get serializationType() {
            return 10;
          }
          get isEpsilon() {
            return !0;
          }
          matches(e, t, r) {
            return !1;
          }
          get predicate() {
            return new a.SemanticContext.PrecedencePredicate(this.precedence);
          }
          toString() {
            return this.precedence + " >= _p";
          }
        };
        i([A.Override], s.prototype, "serializationType", null),
          i([A.Override], s.prototype, "isEpsilon", null),
          i([A.Override], s.prototype, "matches", null),
          i([A.Override], s.prototype, "toString", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.PrecedencePredicateTransition = s);
      },
      37576: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PredicateEvalInfo = void 0);
        const o = r(91548),
          A = r(681);
        let a = class extends o.DecisionEventInfo {
          constructor(e, t, r, i, n, o, A, a) {
            super(t, e, r, i, n, e.useContext),
              (this.semctx = o),
              (this.evalResult = A),
              (this.predictedAlt = a);
          }
        };
        (a = i([n(0, A.NotNull), n(2, A.NotNull), n(5, A.NotNull)], a)),
          (t.PredicateEvalInfo = a);
      },
      21290: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PredicateTransition = void 0);
        const o = r(98356),
          A = r(681),
          a = r(78300);
        let s = class extends o.AbstractPredicateTransition {
          constructor(e, t, r, i) {
            super(e),
              (this.ruleIndex = t),
              (this.predIndex = r),
              (this.isCtxDependent = i);
          }
          get serializationType() {
            return 4;
          }
          get isEpsilon() {
            return !0;
          }
          matches(e, t, r) {
            return !1;
          }
          get predicate() {
            return new a.SemanticContext.Predicate(
              this.ruleIndex,
              this.predIndex,
              this.isCtxDependent
            );
          }
          toString() {
            return "pred_" + this.ruleIndex + ":" + this.predIndex;
          }
        };
        i([A.Override], s.prototype, "serializationType", null),
          i([A.Override], s.prototype, "isEpsilon", null),
          i([A.Override], s.prototype, "matches", null),
          i([A.Override, A.NotNull], s.prototype, "toString", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.PredicateTransition = s);
      },
      11229: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SingletonPredictionContext = t.PredictionContext = void 0);
        const o = r(42835),
          A = r(15265),
          a = r(67464),
          s = r(97789),
          c = r(681),
          g = r(31435),
          l = r(71696);
        class u {
          constructor(e) {
            this.cachedHashCode = e;
          }
          static calculateEmptyHashCode() {
            let e = s.MurmurHash.initialize(1);
            return (e = s.MurmurHash.finish(e, 0)), e;
          }
          static calculateSingleHashCode(e, t) {
            let r = s.MurmurHash.initialize(1);
            return (
              (r = s.MurmurHash.update(r, e)),
              (r = s.MurmurHash.update(r, t)),
              (r = s.MurmurHash.finish(r, 2)),
              r
            );
          }
          static calculateHashCode(e, t) {
            let r = s.MurmurHash.initialize(1);
            for (let t of e) r = s.MurmurHash.update(r, t);
            for (let e of t) r = s.MurmurHash.update(r, e);
            return (r = s.MurmurHash.finish(r, 2 * e.length)), r;
          }
          static fromRuleContext(e, t, r = !0) {
            if (t.isEmpty) return r ? u.EMPTY_FULL : u.EMPTY_LOCAL;
            let i;
            i = t._parent
              ? u.fromRuleContext(e, t._parent, r)
              : r
              ? u.EMPTY_FULL
              : u.EMPTY_LOCAL;
            let n = e.states[t.invokingState].transition(0);
            return i.getChild(n.followState.stateNumber);
          }
          static addEmptyContext(e) {
            return e.addEmptyContext();
          }
          static removeEmptyContext(e) {
            return e.removeEmptyContext();
          }
          static join(e, t, r = g.PredictionContextCache.UNCACHED) {
            if (e === t) return e;
            if (e.isEmpty) return u.isEmptyLocal(e) ? e : u.addEmptyContext(t);
            if (t.isEmpty) return u.isEmptyLocal(t) ? t : u.addEmptyContext(e);
            let i = e.size,
              n = t.size;
            if (
              1 === i &&
              1 === n &&
              e.getReturnState(0) === t.getReturnState(0)
            ) {
              let i = r.join(e.getParent(0), t.getParent(0));
              return i === e.getParent(0)
                ? e
                : i === t.getParent(0)
                ? t
                : i.getChild(e.getReturnState(0));
            }
            let o = 0,
              A = new Array(i + n),
              a = new Array(A.length),
              s = 0,
              c = 0,
              h = !0,
              d = !0;
            for (; s < i && c < n; )
              e.getReturnState(s) === t.getReturnState(c)
                ? ((A[o] = r.join(e.getParent(s), t.getParent(c))),
                  (a[o] = e.getReturnState(s)),
                  (h = h && A[o] === e.getParent(s)),
                  (d = d && A[o] === t.getParent(c)),
                  s++,
                  c++)
                : e.getReturnState(s) < t.getReturnState(c)
                ? ((A[o] = e.getParent(s)),
                  (a[o] = e.getReturnState(s)),
                  (d = !1),
                  s++)
                : (l(t.getReturnState(c) < e.getReturnState(s)),
                  (A[o] = t.getParent(c)),
                  (a[o] = t.getReturnState(c)),
                  (h = !1),
                  c++),
                o++;
            for (; s < i; )
              (A[o] = e.getParent(s)),
                (a[o] = e.getReturnState(s)),
                s++,
                (d = !1),
                o++;
            for (; c < n; )
              (A[o] = t.getParent(c)),
                (a[o] = t.getReturnState(c)),
                c++,
                (h = !1),
                o++;
            return h
              ? e
              : d
              ? t
              : (o < A.length && ((A = A.slice(0, o)), (a = a.slice(0, o))),
                0 === A.length
                  ? u.EMPTY_FULL
                  : 1 === A.length
                  ? new p(A[0], a[0])
                  : new I(A, a));
          }
          static isEmptyLocal(e) {
            return e === u.EMPTY_LOCAL;
          }
          static getCachedContext(e, t, r) {
            if (e.isEmpty) return e;
            let i = r.get(e);
            if (i) return i;
            if (((i = t.get(e)), i)) return r.put(e, i), i;
            let n,
              o = !1,
              A = new Array(e.size);
            for (let i = 0; i < A.length; i++) {
              let n = u.getCachedContext(e.getParent(i), t, r);
              if (o || n !== e.getParent(i)) {
                if (!o) {
                  A = new Array(e.size);
                  for (let t = 0; t < e.size; t++) A[t] = e.getParent(t);
                  o = !0;
                }
                A[i] = n;
              }
            }
            if (!o)
              return (i = t.putIfAbsent(e, e)), r.put(e, null != i ? i : e), e;
            if (1 === A.length) n = new p(A[0], e.getReturnState(0));
            else {
              let t = new Array(e.size);
              for (let r = 0; r < e.size; r++) t[r] = e.getReturnState(r);
              n = new I(A, t, e.hashCode());
            }
            return (
              (i = t.putIfAbsent(n, n)), r.put(n, i || n), r.put(e, i || n), n
            );
          }
          appendSingleContext(e, t) {
            return this.appendContext(u.EMPTY_FULL.getChild(e), t);
          }
          getChild(e) {
            return new p(this, e);
          }
          hashCode() {
            return this.cachedHashCode;
          }
          toStrings(e, t, r = u.EMPTY_FULL) {
            let i = [];
            e: for (let n = 0; ; n++) {
              let o = 0,
                A = !0,
                a = this,
                s = t,
                c = "";
              for (c += "["; !a.isEmpty && a !== r; ) {
                let t = 0;
                if (a.size > 0) {
                  let e = 1;
                  for (; (1 << e) >>> 0 < a.size; ) e++;
                  if (
                    ((t = (n >> o) & (((1 << e) >>> 0) - 1)),
                    (A = A && t >= a.size - 1),
                    t >= a.size)
                  )
                    continue e;
                  o += e;
                }
                if (e) {
                  c.length > 1 && (c += " ");
                  let t = e.atn.states[s];
                  c += e.ruleNames[t.ruleIndex];
                } else
                  a.getReturnState(t) !== u.EMPTY_FULL_STATE_KEY &&
                    (a.isEmpty ||
                      (c.length > 1 && (c += " "), (c += a.getReturnState(t))));
                (s = a.getReturnState(t)), (a = a.getParent(t));
              }
              if (((c += "]"), i.push(c), A)) break;
            }
            return i;
          }
        }
        i([c.Override], u.prototype, "hashCode", null),
          i(
            [n(0, c.NotNull), n(1, c.NotNull), n(2, c.NotNull)],
            u,
            "join",
            null
          ),
          i(
            [n(0, c.NotNull), n(1, c.NotNull), n(2, c.NotNull)],
            u,
            "getCachedContext",
            null
          ),
          (t.PredictionContext = u);
        class h extends u {
          constructor(e) {
            super(u.calculateEmptyHashCode()), (this.fullContext = e);
          }
          get isFullContext() {
            return this.fullContext;
          }
          addEmptyContext() {
            return this;
          }
          removeEmptyContext() {
            throw new Error("Cannot remove the empty context from itself.");
          }
          getParent(e) {
            throw new Error("index out of bounds");
          }
          getReturnState(e) {
            throw new Error("index out of bounds");
          }
          findReturnState(e) {
            return -1;
          }
          get size() {
            return 0;
          }
          appendSingleContext(e, t) {
            return t.getChild(this, e);
          }
          appendContext(e, t) {
            return e;
          }
          get isEmpty() {
            return !0;
          }
          get hasEmpty() {
            return !0;
          }
          equals(e) {
            return this === e;
          }
          toStrings(e, t, r) {
            return ["[]"];
          }
        }
        i([c.Override], h.prototype, "addEmptyContext", null),
          i([c.Override], h.prototype, "removeEmptyContext", null),
          i([c.Override], h.prototype, "getParent", null),
          i([c.Override], h.prototype, "getReturnState", null),
          i([c.Override], h.prototype, "findReturnState", null),
          i([c.Override], h.prototype, "size", null),
          i([c.Override], h.prototype, "appendSingleContext", null),
          i([c.Override], h.prototype, "appendContext", null),
          i([c.Override], h.prototype, "isEmpty", null),
          i([c.Override], h.prototype, "hasEmpty", null),
          i([c.Override], h.prototype, "equals", null),
          i([c.Override], h.prototype, "toStrings", null);
        let I = class e extends u {
          constructor(e, t, r) {
            super(r || u.calculateHashCode(e, t)),
              l(e.length === t.length),
              l(
                t.length > 1 || t[0] !== u.EMPTY_FULL_STATE_KEY,
                "Should be using PredictionContext.EMPTY instead."
              ),
              (this.parents = e),
              (this.returnStates = t);
          }
          getParent(e) {
            return this.parents[e];
          }
          getReturnState(e) {
            return this.returnStates[e];
          }
          findReturnState(e) {
            return a.Arrays.binarySearch(this.returnStates, e);
          }
          get size() {
            return this.returnStates.length;
          }
          get isEmpty() {
            return !1;
          }
          get hasEmpty() {
            return (
              this.returnStates[this.returnStates.length - 1] ===
              u.EMPTY_FULL_STATE_KEY
            );
          }
          addEmptyContext() {
            if (this.hasEmpty) return this;
            let t = this.parents.slice(0),
              r = this.returnStates.slice(0);
            return (
              t.push(u.EMPTY_FULL), r.push(u.EMPTY_FULL_STATE_KEY), new e(t, r)
            );
          }
          removeEmptyContext() {
            if (!this.hasEmpty) return this;
            if (2 === this.returnStates.length)
              return new p(this.parents[0], this.returnStates[0]);
            {
              let t = this.parents.slice(0, this.parents.length - 1),
                r = this.returnStates.slice(0, this.returnStates.length - 1);
              return new e(t, r);
            }
          }
          appendContext(t, r) {
            return e.appendContextImpl(this, t, new u.IdentityHashMap());
          }
          static appendContextImpl(t, r, i) {
            if (r.isEmpty) {
              if (u.isEmptyLocal(r)) {
                if (t.hasEmpty) return u.EMPTY_LOCAL;
                throw new Error("what to do here?");
              }
              return t;
            }
            if (1 !== r.size)
              throw new Error("Appending a tree suffix is not yet supported.");
            let n = i.get(t);
            if (!n) {
              if (t.isEmpty) n = r;
              else {
                let o = t.size;
                t.hasEmpty && o--;
                let A = new Array(o),
                  a = new Array(o);
                for (let e = 0; e < o; e++) a[e] = t.getReturnState(e);
                for (let n = 0; n < o; n++)
                  A[n] = e.appendContextImpl(t.getParent(n), r, i);
                1 === A.length
                  ? (n = new p(A[0], a[0]))
                  : (l(A.length > 1), (n = new e(A, a))),
                  t.hasEmpty && (n = u.join(n, r));
              }
              i.put(t, n);
            }
            return n;
          }
          equals(t) {
            if (this === t) return !0;
            if (!(t instanceof e)) return !1;
            if (this.hashCode() !== t.hashCode()) return !1;
            let r = t;
            return this.equalsImpl(r, new A.Array2DHashSet());
          }
          equalsImpl(e, t) {
            let r = [],
              i = [];
            for (r.push(this), i.push(e); ; ) {
              let e = r.pop(),
                n = i.pop();
              if (!e || !n) break;
              let o =
                new g.PredictionContextCache.IdentityCommutativePredictionContextOperands(
                  e,
                  n
                );
              if (!t.add(o)) continue;
              let A = o.x.size;
              if (0 !== A) {
                if (A !== o.y.size) return !1;
                for (let e = 0; e < A; e++) {
                  if (o.x.getReturnState(e) !== o.y.getReturnState(e))
                    return !1;
                  let t = o.x.getParent(e),
                    n = o.y.getParent(e);
                  if (t.hashCode() !== n.hashCode()) return !1;
                  t !== n && (r.push(t), i.push(n));
                }
              } else if (!o.x.equals(o.y)) return !1;
            }
            return !0;
          }
        };
        i([c.NotNull], I.prototype, "parents", void 0),
          i([c.NotNull], I.prototype, "returnStates", void 0),
          i([c.Override], I.prototype, "getParent", null),
          i([c.Override], I.prototype, "getReturnState", null),
          i([c.Override], I.prototype, "findReturnState", null),
          i([c.Override], I.prototype, "size", null),
          i([c.Override], I.prototype, "isEmpty", null),
          i([c.Override], I.prototype, "hasEmpty", null),
          i([c.Override], I.prototype, "addEmptyContext", null),
          i([c.Override], I.prototype, "removeEmptyContext", null),
          i([c.Override], I.prototype, "appendContext", null),
          i([c.Override], I.prototype, "equals", null),
          (I = i([n(0, c.NotNull)], I));
        let p = class e extends u {
          constructor(e, t) {
            super(u.calculateSingleHashCode(e, t)),
              (this.parent = e),
              (this.returnState = t);
          }
          getParent(e) {
            return this.parent;
          }
          getReturnState(e) {
            return this.returnState;
          }
          findReturnState(e) {
            return this.returnState === e ? 0 : -1;
          }
          get size() {
            return 1;
          }
          get isEmpty() {
            return !1;
          }
          get hasEmpty() {
            return !1;
          }
          appendContext(e, t) {
            return t.getChild(
              this.parent.appendContext(e, t),
              this.returnState
            );
          }
          addEmptyContext() {
            let e = [this.parent, u.EMPTY_FULL],
              t = [this.returnState, u.EMPTY_FULL_STATE_KEY];
            return new I(e, t);
          }
          removeEmptyContext() {
            return this;
          }
          equals(t) {
            if (t === this) return !0;
            if (!(t instanceof e)) return !1;
            let r = t;
            return (
              this.hashCode() === r.hashCode() &&
              this.returnState === r.returnState &&
              this.parent.equals(r.parent)
            );
          }
        };
        i([c.NotNull], p.prototype, "parent", void 0),
          i([c.Override], p.prototype, "getParent", null),
          i([c.Override], p.prototype, "getReturnState", null),
          i([c.Override], p.prototype, "findReturnState", null),
          i([c.Override], p.prototype, "size", null),
          i([c.Override], p.prototype, "isEmpty", null),
          i([c.Override], p.prototype, "hasEmpty", null),
          i([c.Override], p.prototype, "appendContext", null),
          i([c.Override], p.prototype, "addEmptyContext", null),
          i([c.Override], p.prototype, "removeEmptyContext", null),
          i([c.Override], p.prototype, "equals", null),
          (p = i([n(0, c.NotNull)], p)),
          (t.SingletonPredictionContext = p),
          (function (e) {
            (e.EMPTY_LOCAL = new h(!1)),
              (e.EMPTY_FULL = new h(!0)),
              (e.EMPTY_LOCAL_STATE_KEY = -2147483648),
              (e.EMPTY_FULL_STATE_KEY = 2147483647);
            class t extends o.Array2DHashMap {
              constructor() {
                super(r.INSTANCE);
              }
            }
            e.IdentityHashMap = t;
            class r {
              IdentityEqualityComparator() {}
              hashCode(e) {
                return e.hashCode();
              }
              equals(e, t) {
                return e === t;
              }
            }
            (r.INSTANCE = new r()),
              i([c.Override], r.prototype, "hashCode", null),
              i([c.Override], r.prototype, "equals", null),
              (e.IdentityEqualityComparator = r);
          })((u = t.PredictionContext || (t.PredictionContext = {})));
      },
      31435: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PredictionContextCache = void 0);
        const n = r(42835),
          o = r(681),
          A = r(78578),
          a = r(11229),
          s = r(71696);
        class c {
          constructor(e = !0) {
            (this.contexts = new n.Array2DHashMap(
              A.ObjectEqualityComparator.INSTANCE
            )),
              (this.childContexts = new n.Array2DHashMap(
                A.ObjectEqualityComparator.INSTANCE
              )),
              (this.joinContexts = new n.Array2DHashMap(
                A.ObjectEqualityComparator.INSTANCE
              )),
              (this.enableCache = e);
          }
          getAsCached(e) {
            if (!this.enableCache) return e;
            let t = this.contexts.get(e);
            return t || ((t = e), this.contexts.put(e, e)), t;
          }
          getChild(e, t) {
            if (!this.enableCache) return e.getChild(t);
            let r = new c.PredictionContextAndInt(e, t),
              i = this.childContexts.get(r);
            return (
              i ||
                ((i = e.getChild(t)),
                (i = this.getAsCached(i)),
                this.childContexts.put(r, i)),
              i
            );
          }
          join(e, t) {
            if (!this.enableCache) return a.PredictionContext.join(e, t, this);
            let r = new c.IdentityCommutativePredictionContextOperands(e, t),
              i = this.joinContexts.get(r);
            return (
              i ||
              ((i = a.PredictionContext.join(e, t, this)),
              (i = this.getAsCached(i)),
              this.joinContexts.put(r, i),
              i)
            );
          }
        }
        (t.PredictionContextCache = c),
          (c.UNCACHED = new c(!1)),
          (function (e) {
            class t {
              constructor(e, t) {
                (this.obj = e), (this.value = t);
              }
              equals(e) {
                if (!(e instanceof t)) return !1;
                if (e === this) return !0;
                let r = e;
                return (
                  this.value === r.value &&
                  (this.obj === r.obj ||
                    (null != this.obj && this.obj.equals(r.obj)))
                );
              }
              hashCode() {
                let e = 5;
                return (
                  (e = 7 * e + (null != this.obj ? this.obj.hashCode() : 0)),
                  (e = 7 * e + this.value),
                  e
                );
              }
            }
            i([o.Override], t.prototype, "equals", null),
              i([o.Override], t.prototype, "hashCode", null),
              (e.PredictionContextAndInt = t);
            class r {
              constructor(e, t) {
                s(null != e), s(null != t), (this._x = e), (this._y = t);
              }
              get x() {
                return this._x;
              }
              get y() {
                return this._y;
              }
              equals(e) {
                if (!(e instanceof r)) return !1;
                if (this === e) return !0;
                let t = e;
                return (
                  (this._x === t._x && this._y === t._y) ||
                  (this._x === t._y && this._y === t._x)
                );
              }
              hashCode() {
                return this._x.hashCode() ^ this._y.hashCode();
              }
            }
            i([o.Override], r.prototype, "equals", null),
              i([o.Override], r.prototype, "hashCode", null),
              (e.IdentityCommutativePredictionContextOperands = r);
          })((c = t.PredictionContextCache || (t.PredictionContextCache = {})));
      },
      30118: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PredictionMode = void 0);
        const n = r(42835),
          o = r(97789),
          A = r(681),
          a = r(23776);
        var s;
        ((s = t.PredictionMode || (t.PredictionMode = {}))[(s.SLL = 0)] =
          "SLL"),
          (s[(s.LL = 1)] = "LL"),
          (s[(s.LL_EXACT_AMBIG_DETECTION = 2)] = "LL_EXACT_AMBIG_DETECTION"),
          (function (e) {
            class t extends n.Array2DHashMap {
              constructor() {
                super(r.INSTANCE);
              }
            }
            class r {
              AltAndContextConfigEqualityComparator() {}
              hashCode(e) {
                let t = o.MurmurHash.initialize(7);
                return (
                  (t = o.MurmurHash.update(t, e.state.stateNumber)),
                  (t = o.MurmurHash.update(t, e.context)),
                  (t = o.MurmurHash.finish(t, 2)),
                  t
                );
              }
              equals(e, t) {
                return (
                  e === t ||
                  (null != e &&
                    null != t &&
                    e.state.stateNumber === t.state.stateNumber &&
                    e.context.equals(t.context))
                );
              }
            }
            (r.INSTANCE = new r()),
              i([A.Override], r.prototype, "hashCode", null),
              i([A.Override], r.prototype, "equals", null),
              (e.hasConfigInRuleStopState = function (e) {
                for (let t of e)
                  if (t.state instanceof a.RuleStopState) return !0;
                return !1;
              }),
              (e.allConfigsInRuleStopStates = function (e) {
                for (let t of e)
                  if (!(t.state instanceof a.RuleStopState)) return !1;
                return !0;
              });
          })(t.PredictionMode || (t.PredictionMode = {}));
      },
      49696: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ProfilingATNSimulator = void 0);
        const o = r(12646),
          A = r(68148),
          a = r(73296),
          s = r(26744),
          c = r(74501),
          g = r(90544),
          l = r(681),
          u = r(33604),
          h = r(14217),
          I = r(37576),
          p = r(78300),
          d = r(56965);
        class f extends h.ParserATNSimulator {
          constructor(e) {
            super(e.interpreter.atn, e),
              (this._startIndex = 0),
              (this._sllStopIndex = 0),
              (this._llStopIndex = 0),
              (this.currentDecision = 0),
              (this.conflictingAltResolvedBySLL = 0),
              (this.optimize_ll1 = !1),
              (this.reportAmbiguities = !0),
              (this.numDecisions = this.atn.decisionToState.length),
              (this.decisions = []);
            for (let e = 0; e < this.numDecisions; e++)
              this.decisions.push(new c.DecisionInfo(e));
          }
          adaptivePredict(e, t, r, i) {
            if (void 0 !== i) return super.adaptivePredict(e, t, r, i);
            try {
              (this._input = e),
                (this._startIndex = e.index),
                (this._sllStopIndex = this._startIndex - 1),
                (this._llStopIndex = -1),
                (this.currentDecision = t),
                (this.currentState = void 0),
                (this.conflictingAltResolvedBySLL = A.ATN.INVALID_ALT_NUMBER);
              let i = process.hrtime(),
                n = super.adaptivePredict(e, t, r),
                o = process.hrtime(),
                a = 1e9 * (o[0] - i[0]);
              0 === a ? (a = o[1] - i[1]) : (a += 1e9 - i[1] + o[1]),
                (this.decisions[t].timeInPrediction += a),
                this.decisions[t].invocations++;
              let s = this._sllStopIndex - this._startIndex + 1;
              if (
                ((this.decisions[t].SLL_TotalLook += s),
                (this.decisions[t].SLL_MinLook =
                  0 === this.decisions[t].SLL_MinLook
                    ? s
                    : Math.min(this.decisions[t].SLL_MinLook, s)),
                s > this.decisions[t].SLL_MaxLook &&
                  ((this.decisions[t].SLL_MaxLook = s),
                  (this.decisions[t].SLL_MaxLookEvent =
                    new u.LookaheadEventInfo(
                      t,
                      void 0,
                      n,
                      e,
                      this._startIndex,
                      this._sllStopIndex,
                      !1
                    ))),
                this._llStopIndex >= 0)
              ) {
                let r = this._llStopIndex - this._startIndex + 1;
                (this.decisions[t].LL_TotalLook += r),
                  (this.decisions[t].LL_MinLook =
                    0 === this.decisions[t].LL_MinLook
                      ? r
                      : Math.min(this.decisions[t].LL_MinLook, r)),
                  r > this.decisions[t].LL_MaxLook &&
                    ((this.decisions[t].LL_MaxLook = r),
                    (this.decisions[t].LL_MaxLookEvent =
                      new u.LookaheadEventInfo(
                        t,
                        void 0,
                        n,
                        e,
                        this._startIndex,
                        this._llStopIndex,
                        !0
                      )));
              }
              return n;
            } finally {
              (this._input = void 0), (this.currentDecision = -1);
            }
          }
          getStartState(e, t, r, i) {
            let n = super.getStartState(e, t, r, i);
            return (this.currentState = n), n;
          }
          computeStartState(e, t, r) {
            let i = super.computeStartState(e, t, r);
            return (this.currentState = i), i;
          }
          computeReachSet(e, t, r, i) {
            if (void 0 === this._input) throw new Error("Invalid state");
            let n = super.computeReachSet(e, t, r, i);
            return (
              null == n &&
                this.decisions[this.currentDecision].errors.push(
                  new g.ErrorInfo(
                    this.currentDecision,
                    t,
                    this._input,
                    this._startIndex,
                    this._input.index
                  )
                ),
              (this.currentState = n),
              n
            );
          }
          getExistingTargetState(e, t) {
            if (void 0 === this.currentState || void 0 === this._input)
              throw new Error("Invalid state");
            this.currentState.useContext
              ? (this._llStopIndex = this._input.index)
              : (this._sllStopIndex = this._input.index);
            let r = super.getExistingTargetState(e, t);
            if (
              null != r &&
              ((this.currentState = new d.SimulatorState(
                this.currentState.outerContext,
                r,
                this.currentState.useContext,
                this.currentState.remainingOuterContext
              )),
              this.currentState.useContext
                ? this.decisions[this.currentDecision].LL_DFATransitions++
                : this.decisions[this.currentDecision].SLL_DFATransitions++,
              r === a.ATNSimulator.ERROR)
            ) {
              let t = new d.SimulatorState(
                this.currentState.outerContext,
                e,
                this.currentState.useContext,
                this.currentState.remainingOuterContext
              );
              this.decisions[this.currentDecision].errors.push(
                new g.ErrorInfo(
                  this.currentDecision,
                  t,
                  this._input,
                  this._startIndex,
                  this._input.index
                )
              );
            }
            return r;
          }
          computeTargetState(e, t, r, i, n, o) {
            let A = super.computeTargetState(e, t, r, i, n, o);
            return (
              n
                ? this.decisions[this.currentDecision].LL_ATNTransitions++
                : this.decisions[this.currentDecision].SLL_ATNTransitions++,
              A
            );
          }
          evalSemanticContextImpl(e, t, r) {
            if (void 0 === this.currentState || void 0 === this._input)
              throw new Error("Invalid state");
            let i = super.evalSemanticContextImpl(e, t, r);
            if (!(e instanceof p.SemanticContext.PrecedencePredicate)) {
              let t =
                this._llStopIndex >= 0 ? this._llStopIndex : this._sllStopIndex;
              this.decisions[this.currentDecision].predicateEvals.push(
                new I.PredicateEvalInfo(
                  this.currentState,
                  this.currentDecision,
                  this._input,
                  this._startIndex,
                  t,
                  e,
                  i,
                  r
                )
              );
            }
            return i;
          }
          reportContextSensitivity(e, t, r, i, n) {
            if (void 0 === this._input) throw new Error("Invalid state");
            t !== this.conflictingAltResolvedBySLL &&
              this.decisions[this.currentDecision].contextSensitivities.push(
                new s.ContextSensitivityInfo(
                  this.currentDecision,
                  r,
                  this._input,
                  i,
                  n
                )
              ),
              super.reportContextSensitivity(e, t, r, i, n);
          }
          reportAttemptingFullContext(e, t, r, i, n) {
            (this.conflictingAltResolvedBySLL =
              null != t
                ? t.nextSetBit(0)
                : r.s0.configs.getRepresentedAlternatives().nextSetBit(0)),
              this.decisions[this.currentDecision].LL_Fallback++,
              super.reportAttemptingFullContext(e, t, r, i, n);
          }
          reportAmbiguity(e, t, r, i, n, a, c) {
            if (void 0 === this.currentState || void 0 === this._input)
              throw new Error("Invalid state");
            let g;
            (g =
              null != a
                ? a.nextSetBit(0)
                : c.getRepresentedAlternatives().nextSetBit(0)),
              this.conflictingAltResolvedBySLL !== A.ATN.INVALID_ALT_NUMBER &&
                g !== this.conflictingAltResolvedBySLL &&
                this.decisions[this.currentDecision].contextSensitivities.push(
                  new s.ContextSensitivityInfo(
                    this.currentDecision,
                    this.currentState,
                    this._input,
                    r,
                    i
                  )
                ),
              this.decisions[this.currentDecision].ambiguities.push(
                new o.AmbiguityInfo(
                  this.currentDecision,
                  this.currentState,
                  a,
                  this._input,
                  r,
                  i
                )
              ),
              super.reportAmbiguity(e, t, r, i, n, a, c);
          }
          getDecisionInfo() {
            return this.decisions;
          }
          getCurrentState() {
            return this.currentState;
          }
        }
        i([l.Override, n(0, l.NotNull)], f.prototype, "adaptivePredict", null),
          i([l.Override], f.prototype, "getStartState", null),
          i([l.Override], f.prototype, "computeStartState", null),
          i([l.Override], f.prototype, "computeReachSet", null),
          i([l.Override], f.prototype, "getExistingTargetState", null),
          i([l.Override], f.prototype, "computeTargetState", null),
          i([l.Override], f.prototype, "evalSemanticContextImpl", null),
          i([l.Override], f.prototype, "reportContextSensitivity", null),
          i([l.Override], f.prototype, "reportAttemptingFullContext", null),
          i(
            [l.Override, n(0, l.NotNull), n(5, l.NotNull), n(6, l.NotNull)],
            f.prototype,
            "reportAmbiguity",
            null
          ),
          (t.ProfilingATNSimulator = f);
      },
      61369: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RangeTransition = void 0);
        const o = r(45462),
          A = r(681),
          a = r(45922);
        let s = class extends a.Transition {
          constructor(e, t, r) {
            super(e), (this.from = t), (this.to = r);
          }
          get serializationType() {
            return 2;
          }
          get label() {
            return o.IntervalSet.of(this.from, this.to);
          }
          matches(e, t, r) {
            return e >= this.from && e <= this.to;
          }
          toString() {
            return (
              "'" +
              String.fromCodePoint(this.from) +
              "'..'" +
              String.fromCodePoint(this.to) +
              "'"
            );
          }
        };
        i([A.Override], s.prototype, "serializationType", null),
          i([A.Override, A.NotNull], s.prototype, "label", null),
          i([A.Override], s.prototype, "matches", null),
          i([A.Override, A.NotNull], s.prototype, "toString", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.RangeTransition = s);
      },
      78128: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleStartState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          constructor() {
            super(...arguments),
              (this.isPrecedenceRule = !1),
              (this.leftFactored = !1);
          }
          get stateType() {
            return o.ATNStateType.RULE_START;
          }
        }
        i([A.Override], a.prototype, "stateType", null), (t.RuleStartState = a);
      },
      23776: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleStopState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          get nonStopStateNumber() {
            return -1;
          }
          get stateType() {
            return o.ATNStateType.RULE_STOP;
          }
        }
        i([A.Override], a.prototype, "nonStopStateNumber", null),
          i([A.Override], a.prototype, "stateType", null),
          (t.RuleStopState = a);
      },
      15239: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleTransition = void 0);
        const o = r(681),
          A = r(45922);
        let a = class extends A.Transition {
          constructor(e, t, r, i) {
            super(e),
              (this.tailCall = !1),
              (this.optimizedTailCall = !1),
              (this.ruleIndex = t),
              (this.precedence = r),
              (this.followState = i);
          }
          get serializationType() {
            return 3;
          }
          get isEpsilon() {
            return !0;
          }
          matches(e, t, r) {
            return !1;
          }
        };
        i([o.NotNull], a.prototype, "followState", void 0),
          i([o.Override], a.prototype, "serializationType", null),
          i([o.Override], a.prototype, "isEpsilon", null),
          i([o.Override], a.prototype, "matches", null),
          (a = i([n(0, o.NotNull), n(3, o.NotNull)], a)),
          (t.RuleTransition = a);
      },
      78300: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SemanticContext = void 0);
        const o = r(15265),
          A = r(44339),
          a = r(97789),
          s = r(681),
          c = r(78578),
          g = r(93070);
        class l {
          static get NONE() {
            return void 0 === l._NONE && (l._NONE = new l.Predicate()), l._NONE;
          }
          evalPrecedence(e, t) {
            return this;
          }
          static and(e, t) {
            if (!e || e === l.NONE) return t;
            if (t === l.NONE) return e;
            let r = new l.AND(e, t);
            return 1 === r.opnds.length ? r.opnds[0] : r;
          }
          static or(e, t) {
            if (!e) return t;
            if (e === l.NONE || t === l.NONE) return l.NONE;
            let r = new l.OR(e, t);
            return 1 === r.opnds.length ? r.opnds[0] : r;
          }
        }
        (t.SemanticContext = l),
          (function (e) {
            function t(t) {
              let r = [];
              for (let i = 0; i < t.length; i++) {
                let n = t[i];
                n instanceof e.PrecedencePredicate &&
                  (r.push(n), t.splice(i, 1), i--);
              }
              return r;
            }
            class r extends e {
              constructor(e = -1, t = -1, r = !1) {
                super(),
                  (this.ruleIndex = e),
                  (this.predIndex = t),
                  (this.isCtxDependent = r);
              }
              eval(e, t) {
                let r = this.isCtxDependent ? t : void 0;
                return e.sempred(r, this.ruleIndex, this.predIndex);
              }
              hashCode() {
                let e = a.MurmurHash.initialize();
                return (
                  (e = a.MurmurHash.update(e, this.ruleIndex)),
                  (e = a.MurmurHash.update(e, this.predIndex)),
                  (e = a.MurmurHash.update(e, this.isCtxDependent ? 1 : 0)),
                  (e = a.MurmurHash.finish(e, 3)),
                  e
                );
              }
              equals(e) {
                return (
                  e instanceof r &&
                  (this === e ||
                    (this.ruleIndex === e.ruleIndex &&
                      this.predIndex === e.predIndex &&
                      this.isCtxDependent === e.isCtxDependent))
                );
              }
              toString() {
                return "{" + this.ruleIndex + ":" + this.predIndex + "}?";
              }
            }
            i([s.Override], r.prototype, "eval", null),
              i([s.Override], r.prototype, "hashCode", null),
              i([s.Override], r.prototype, "equals", null),
              i([s.Override], r.prototype, "toString", null),
              (e.Predicate = r);
            class l extends e {
              constructor(e) {
                super(), (this.precedence = e);
              }
              eval(e, t) {
                return e.precpred(t, this.precedence);
              }
              evalPrecedence(t, r) {
                return t.precpred(r, this.precedence) ? e.NONE : void 0;
              }
              compareTo(e) {
                return this.precedence - e.precedence;
              }
              hashCode() {
                let e = 1;
                return (e = 31 * e + this.precedence), e;
              }
              equals(e) {
                return (
                  e instanceof l &&
                  (this === e || this.precedence === e.precedence)
                );
              }
              toString() {
                return "{" + this.precedence + ">=prec}?";
              }
            }
            i([s.Override], l.prototype, "eval", null),
              i([s.Override], l.prototype, "evalPrecedence", null),
              i([s.Override], l.prototype, "compareTo", null),
              i([s.Override], l.prototype, "hashCode", null),
              i([s.Override], l.prototype, "equals", null),
              i([s.Override], l.prototype, "toString", null),
              (e.PrecedencePredicate = l);
            class u extends e {}
            e.Operator = u;
            let h = class r extends u {
              constructor(e, i) {
                super();
                let n = new o.Array2DHashSet(
                  c.ObjectEqualityComparator.INSTANCE
                );
                e instanceof r ? n.addAll(e.opnds) : n.add(e),
                  i instanceof r ? n.addAll(i.opnds) : n.add(i),
                  (this.opnds = n.toArray());
                let A = (function (e) {
                  let t;
                  for (let r of e)
                    void 0 !== t ? t.compareTo(r) > 0 && (t = r) : (t = r);
                  return t;
                })(t(this.opnds));
                A && this.opnds.push(A);
              }
              get operands() {
                return this.opnds;
              }
              equals(e) {
                return (
                  this === e ||
                  (e instanceof r &&
                    A.ArrayEqualityComparator.INSTANCE.equals(
                      this.opnds,
                      e.opnds
                    ))
                );
              }
              hashCode() {
                return a.MurmurHash.hashCode(this.opnds, 40363613);
              }
              eval(e, t) {
                for (let r of this.opnds) if (!r.eval(e, t)) return !1;
                return !0;
              }
              evalPrecedence(t, r) {
                let i = !1,
                  n = [];
                for (let o of this.opnds) {
                  let A = o.evalPrecedence(t, r);
                  if (((i = i || A !== o), null == A)) return;
                  A !== e.NONE && n.push(A);
                }
                if (!i) return this;
                if (0 === n.length) return e.NONE;
                let o = n[0];
                for (let t = 1; t < n.length; t++) o = e.and(o, n[t]);
                return o;
              }
              toString() {
                return g.join(this.opnds, "&&");
              }
            };
            i([s.Override], h.prototype, "operands", null),
              i([s.Override], h.prototype, "equals", null),
              i([s.Override], h.prototype, "hashCode", null),
              i([s.Override], h.prototype, "eval", null),
              i([s.Override], h.prototype, "evalPrecedence", null),
              i([s.Override], h.prototype, "toString", null),
              (h = i([n(0, s.NotNull), n(1, s.NotNull)], h)),
              (e.AND = h);
            let I = class r extends u {
              constructor(e, i) {
                super();
                let n = new o.Array2DHashSet(
                  c.ObjectEqualityComparator.INSTANCE
                );
                e instanceof r ? n.addAll(e.opnds) : n.add(e),
                  i instanceof r ? n.addAll(i.opnds) : n.add(i),
                  (this.opnds = n.toArray());
                let A = (function (e) {
                  let t;
                  for (let r of e)
                    void 0 !== t ? t.compareTo(r) < 0 && (t = r) : (t = r);
                  return t;
                })(t(this.opnds));
                A && this.opnds.push(A);
              }
              get operands() {
                return this.opnds;
              }
              equals(e) {
                return (
                  this === e ||
                  (e instanceof r &&
                    A.ArrayEqualityComparator.INSTANCE.equals(
                      this.opnds,
                      e.opnds
                    ))
                );
              }
              hashCode() {
                return a.MurmurHash.hashCode(this.opnds, 486279973);
              }
              eval(e, t) {
                for (let r of this.opnds) if (r.eval(e, t)) return !0;
                return !1;
              }
              evalPrecedence(t, r) {
                let i = !1,
                  n = [];
                for (let o of this.opnds) {
                  let A = o.evalPrecedence(t, r);
                  if (((i = i || A !== o), A === e.NONE)) return e.NONE;
                  A && n.push(A);
                }
                if (!i) return this;
                if (0 === n.length) return;
                let o = n[0];
                for (let t = 1; t < n.length; t++) o = e.or(o, n[t]);
                return o;
              }
              toString() {
                return g.join(this.opnds, "||");
              }
            };
            i([s.Override], I.prototype, "operands", null),
              i([s.Override], I.prototype, "equals", null),
              i([s.Override], I.prototype, "hashCode", null),
              i([s.Override], I.prototype, "eval", null),
              i([s.Override], I.prototype, "evalPrecedence", null),
              i([s.Override], I.prototype, "toString", null),
              (I = i([n(0, s.NotNull), n(1, s.NotNull)], I)),
              (e.OR = I);
          })((l = t.SemanticContext || (t.SemanticContext = {})));
      },
      14442: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SetTransition = void 0);
        const o = r(45462),
          A = r(681),
          a = r(48999),
          s = r(45922);
        let c = class extends s.Transition {
          constructor(e, t) {
            super(e),
              null == t && (t = o.IntervalSet.of(a.Token.INVALID_TYPE)),
              (this.set = t);
          }
          get serializationType() {
            return 7;
          }
          get label() {
            return this.set;
          }
          matches(e, t, r) {
            return this.set.contains(e);
          }
          toString() {
            return this.set.toString();
          }
        };
        i([A.NotNull], c.prototype, "set", void 0),
          i([A.Override], c.prototype, "serializationType", null),
          i([A.Override, A.NotNull], c.prototype, "label", null),
          i([A.Override], c.prototype, "matches", null),
          i([A.Override, A.NotNull], c.prototype, "toString", null),
          (c = i([n(0, A.NotNull), n(1, A.Nullable)], c)),
          (t.SetTransition = c);
      },
      56965: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SimulatorState = void 0);
        const o = r(681),
          A = r(39248);
        let a = class {
          constructor(e, t, r, i) {
            (this.outerContext =
              null != e ? e : A.ParserRuleContext.emptyContext()),
              (this.s0 = t),
              (this.useContext = r),
              (this.remainingOuterContext = i);
          }
        };
        (a = i([n(1, o.NotNull)], a)), (t.SimulatorState = a);
      },
      39678: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.StarBlockStartState = void 0);
        const n = r(89602),
          o = r(19954),
          A = r(681);
        class a extends o.BlockStartState {
          get stateType() {
            return n.ATNStateType.STAR_BLOCK_START;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.StarBlockStartState = a);
      },
      84816: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.StarLoopEntryState = void 0);
        const n = r(89602),
          o = r(13300),
          A = r(64993),
          a = r(681);
        class s extends A.DecisionState {
          constructor() {
            super(...arguments),
              (this.precedenceRuleDecision = !1),
              (this.precedenceLoopbackStates = new o.BitSet());
          }
          get stateType() {
            return n.ATNStateType.STAR_LOOP_ENTRY;
          }
        }
        i([a.Override], s.prototype, "stateType", null),
          (t.StarLoopEntryState = s);
      },
      14542: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.StarLoopbackState = void 0);
        const n = r(21971),
          o = r(89602),
          A = r(681);
        class a extends n.ATNState {
          get loopEntryState() {
            return this.transition(0).target;
          }
          get stateType() {
            return o.ATNStateType.STAR_LOOP_BACK;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.StarLoopbackState = a);
      },
      43998: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TokensStartState = void 0);
        const n = r(89602),
          o = r(64993),
          A = r(681);
        class a extends o.DecisionState {
          get stateType() {
            return n.ATNStateType.TOKEN_START;
          }
        }
        i([A.Override], a.prototype, "stateType", null),
          (t.TokensStartState = a);
      },
      45922: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Transition = void 0);
        const o = r(681);
        let A = class {
          constructor(e) {
            if (null == e) throw new Error("target cannot be null.");
            this.target = e;
          }
          get isEpsilon() {
            return !1;
          }
          get label() {}
        };
        (A.serializationNames = [
          "INVALID",
          "EPSILON",
          "RANGE",
          "RULE",
          "PREDICATE",
          "ATOM",
          "ACTION",
          "SET",
          "NOT_SET",
          "WILDCARD",
          "PRECEDENCE",
        ]),
          i([o.NotNull], A.prototype, "target", void 0),
          (A = i([n(0, o.NotNull)], A)),
          (t.Transition = A);
      },
      70401: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.WildcardTransition = void 0);
        const o = r(681),
          A = r(45922);
        let a = class extends A.Transition {
          constructor(e) {
            super(e);
          }
          get serializationType() {
            return 9;
          }
          matches(e, t, r) {
            return e >= t && e <= r;
          }
          toString() {
            return ".";
          }
        };
        i([o.Override], a.prototype, "serializationType", null),
          i([o.Override], a.prototype, "matches", null),
          i([o.Override, o.NotNull], a.prototype, "toString", null),
          (a = i([n(0, o.NotNull)], a)),
          (t.WildcardTransition = a);
      },
      51431: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AcceptStateInfo = void 0),
          (t.AcceptStateInfo = class {
            constructor(e, t) {
              (this._prediction = e), (this._lexerActionExecutor = t);
            }
            get prediction() {
              return this._prediction;
            }
            get lexerActionExecutor() {
              return this._lexerActionExecutor;
            }
          });
      },
      81707: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.DFA = void 0);
        const o = r(15265),
          A = r(80256),
          a = r(84014),
          s = r(94981),
          c = r(90432),
          g = r(681),
          l = r(78578),
          u = r(84816),
          h = r(61434);
        let I = class {
          constructor(e, t = 0) {
            if (
              ((this.states = new o.Array2DHashSet(
                l.ObjectEqualityComparator.INSTANCE
              )),
              (this.nextStateNumber = 0),
              !e.atn)
            )
              throw new Error("The ATNState must be associated with an ATN");
            (this.atnStartState = e), (this.atn = e.atn), (this.decision = t);
            let r = !1;
            e instanceof u.StarLoopEntryState &&
              e.precedenceRuleDecision &&
              ((r = !0),
              (this.s0 = new s.DFAState(new A.ATNConfigSet())),
              (this.s0full = new s.DFAState(new A.ATNConfigSet()))),
              (this.precedenceDfa = r);
          }
          get isPrecedenceDfa() {
            return this.precedenceDfa;
          }
          getPrecedenceStartState(e, t) {
            if (!this.isPrecedenceDfa)
              throw new Error(
                "Only precedence DFAs may contain a precedence start state."
              );
            return t ? this.s0full.getTarget(e) : this.s0.getTarget(e);
          }
          setPrecedenceStartState(e, t, r) {
            if (!this.isPrecedenceDfa)
              throw new Error(
                "Only precedence DFAs may contain a precedence start state."
              );
            e < 0 ||
              (t ? this.s0full.setTarget(e, r) : this.s0.setTarget(e, r));
          }
          get isEmpty() {
            return this.isPrecedenceDfa
              ? 0 === this.s0.getEdgeMap().size &&
                  0 === this.s0full.getEdgeMap().size
              : null == this.s0 && null == this.s0full;
          }
          get isContextSensitive() {
            return this.isPrecedenceDfa
              ? this.s0full.getEdgeMap().size > 0
              : null != this.s0full;
          }
          addState(e) {
            return (
              (e.stateNumber = this.nextStateNumber++), this.states.getOrAdd(e)
            );
          }
          toString(e, t) {
            if ((e || (e = h.VocabularyImpl.EMPTY_VOCABULARY), !this.s0))
              return "";
            let r;
            return (
              (r = t
                ? new a.DFASerializer(this, e, t, this.atnStartState.atn)
                : new a.DFASerializer(this, e)),
              r.toString()
            );
          }
          toLexerString() {
            return this.s0 ? new c.LexerDFASerializer(this).toString() : "";
          }
        };
        i([g.NotNull], I.prototype, "states", void 0),
          i([g.NotNull], I.prototype, "atnStartState", void 0),
          i([g.NotNull], I.prototype, "atn", void 0),
          (I = i([n(0, g.NotNull)], I)),
          (t.DFA = I);
      },
      84014: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DFASerializer = void 0);
        const n = r(73296),
          o = r(681),
          A = r(11229),
          a = r(54780),
          s = r(61434);
        class c {
          constructor(e, t, r, i) {
            t instanceof a.Recognizer
              ? ((r = t.ruleNames), (i = t.atn), (t = t.vocabulary))
              : t || (t = s.VocabularyImpl.EMPTY_VOCABULARY),
              (this.dfa = e),
              (this.vocabulary = t),
              (this.ruleNames = r),
              (this.atn = i);
          }
          toString() {
            if (!this.dfa.s0) return "";
            let e = "";
            if (this.dfa.states) {
              let t = new Array(...this.dfa.states.toArray());
              t.sort((e, t) => e.stateNumber - t.stateNumber);
              for (let r of t) {
                let t = r.getEdgeMap(),
                  i = [...t.keys()].sort((e, t) => e - t),
                  o = r.getContextEdgeMap(),
                  A = [...o.keys()].sort((e, t) => e - t);
                for (let o of i) {
                  let i = t.get(o);
                  if (
                    (null == i || i === n.ATNSimulator.ERROR) &&
                    !r.isContextSymbol(o)
                  )
                    continue;
                  let A = !1;
                  (e +=
                    this.getStateString(r) + "-" + this.getEdgeLabel(o) + "->"),
                    r.isContextSymbol(o) && ((e += "!"), (A = !0));
                  let a = i;
                  a && a.stateNumber !== n.ATNSimulator.ERROR.stateNumber
                    ? (e += this.getStateString(a) + "\n")
                    : A && (e += "ctx\n");
                }
                if (r.isContextSensitive)
                  for (let t of A)
                    e +=
                      this.getStateString(r) +
                      "-" +
                      this.getContextLabel(t) +
                      "->" +
                      this.getStateString(o.get(t)) +
                      "\n";
              }
            }
            let t = e;
            return 0 === t.length ? "" : t;
          }
          getContextLabel(e) {
            if (e === A.PredictionContext.EMPTY_FULL_STATE_KEY)
              return "ctx:EMPTY_FULL";
            if (e === A.PredictionContext.EMPTY_LOCAL_STATE_KEY)
              return "ctx:EMPTY_LOCAL";
            if (this.atn && e > 0 && e <= this.atn.states.length) {
              let t = this.atn.states[e].ruleIndex;
              if (this.ruleNames && t >= 0 && t < this.ruleNames.length)
                return "ctx:" + String(e) + "(" + this.ruleNames[t] + ")";
            }
            return "ctx:" + String(e);
          }
          getEdgeLabel(e) {
            return this.vocabulary.getDisplayName(e);
          }
          getStateString(e) {
            if (e === n.ATNSimulator.ERROR) return "ERROR";
            let t = e.stateNumber,
              r = "s" + t;
            if (
              (e.isAcceptState &&
                (r = e.predicates
                  ? ":s" + t + "=>" + e.predicates
                  : ":s" + t + "=>" + e.prediction),
              e.isContextSensitive)
            ) {
              r += "*";
              for (let t of e.configs)
                if (t.reachesIntoOuterContext) {
                  r += "*";
                  break;
                }
            }
            return r;
          }
        }
        i([o.NotNull], c.prototype, "dfa", void 0),
          i([o.NotNull], c.prototype, "vocabulary", void 0),
          i([o.Override], c.prototype, "toString", null),
          (t.DFASerializer = c);
      },
      94981: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DFAState = void 0);
        const o = r(68148),
          A = r(13300),
          a = r(97789),
          s = r(681),
          c = r(11229),
          g = r(71696);
        class l {
          constructor(e) {
            (this.stateNumber = -1),
              (this.configs = e),
              (this.edges = new Map()),
              (this.contextEdges = new Map());
          }
          get isContextSensitive() {
            return !!this.contextSymbols;
          }
          isContextSymbol(e) {
            return !!this.isContextSensitive && this.contextSymbols.get(e);
          }
          setContextSymbol(e) {
            g(this.isContextSensitive), this.contextSymbols.set(e);
          }
          setContextSensitive(e) {
            g(!this.configs.isOutermostConfigSet),
              this.isContextSensitive ||
                this.contextSymbols ||
                (this.contextSymbols = new A.BitSet());
          }
          get acceptStateInfo() {
            return this._acceptStateInfo;
          }
          set acceptStateInfo(e) {
            this._acceptStateInfo = e;
          }
          get isAcceptState() {
            return !!this._acceptStateInfo;
          }
          get prediction() {
            return this._acceptStateInfo
              ? this._acceptStateInfo.prediction
              : o.ATN.INVALID_ALT_NUMBER;
          }
          get lexerActionExecutor() {
            if (this._acceptStateInfo)
              return this._acceptStateInfo.lexerActionExecutor;
          }
          getTarget(e) {
            return this.edges.get(e);
          }
          setTarget(e, t) {
            this.edges.set(e, t);
          }
          getEdgeMap() {
            return this.edges;
          }
          getContextTarget(e) {
            return (
              e === c.PredictionContext.EMPTY_FULL_STATE_KEY && (e = -1),
              this.contextEdges.get(e)
            );
          }
          setContextTarget(e, t) {
            if (!this.isContextSensitive)
              throw new Error("The state is not context sensitive.");
            e === c.PredictionContext.EMPTY_FULL_STATE_KEY && (e = -1),
              this.contextEdges.set(e, t);
          }
          getContextEdgeMap() {
            let e = new Map(this.contextEdges),
              t = e.get(-1);
            if (void 0 !== t) {
              if (1 === e.size) {
                let e = new Map();
                return e.set(c.PredictionContext.EMPTY_FULL_STATE_KEY, t), e;
              }
              e.delete(-1), e.set(c.PredictionContext.EMPTY_FULL_STATE_KEY, t);
            }
            return e;
          }
          hashCode() {
            let e = a.MurmurHash.initialize(7);
            return (
              (e = a.MurmurHash.update(e, this.configs.hashCode())),
              (e = a.MurmurHash.finish(e, 1)),
              e
            );
          }
          equals(e) {
            if (this === e) return !0;
            if (!(e instanceof l)) return !1;
            let t = e;
            return this.configs.equals(t.configs);
          }
          toString() {
            let e = "";
            return (
              (e += this.stateNumber + ":" + this.configs),
              this.isAcceptState &&
                ((e += "=>"),
                this.predicates
                  ? (e += this.predicates)
                  : (e += this.prediction)),
              e.toString()
            );
          }
        }
        i([s.NotNull], l.prototype, "configs", void 0),
          i([s.NotNull], l.prototype, "edges", void 0),
          i([s.NotNull], l.prototype, "contextEdges", void 0),
          i([s.Override], l.prototype, "hashCode", null),
          i([s.Override], l.prototype, "equals", null),
          i([s.Override], l.prototype, "toString", null),
          (t.DFAState = l),
          (function (e) {
            let t = class {
              constructor(e, t) {
                (this.alt = t), (this.pred = e);
              }
              toString() {
                return "(" + this.pred + ", " + this.alt + ")";
              }
            };
            i([s.NotNull], t.prototype, "pred", void 0),
              i([s.Override], t.prototype, "toString", null),
              (t = i([n(0, s.NotNull)], t)),
              (e.PredPrediction = t);
          })((l = t.DFAState || (t.DFAState = {})));
      },
      90432: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LexerDFASerializer = void 0);
        const o = r(84014),
          A = r(681),
          a = r(61434);
        let s = class extends o.DFASerializer {
          constructor(e) {
            super(e, a.VocabularyImpl.EMPTY_VOCABULARY);
          }
          getEdgeLabel(e) {
            return "'" + String.fromCodePoint(e) + "'";
          }
        };
        i([A.Override, A.NotNull], s.prototype, "getEdgeLabel", null),
          (s = i([n(0, A.NotNull)], s)),
          (t.LexerDFASerializer = s);
      },
      45029: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, r, i) {
                  void 0 === i && (i = r),
                    Object.defineProperty(e, i, {
                      enumerable: !0,
                      get: function () {
                        return t[r];
                      },
                    });
                }
              : function (e, t, r, i) {
                  void 0 === i && (i = r), (e[i] = t[r]);
                }),
          n =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var r in e)
                "default" === r ||
                  Object.prototype.hasOwnProperty.call(t, r) ||
                  i(t, e, r);
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          n(r(12288), t),
          n(r(55041), t),
          n(r(98820), t),
          n(r(80856), t),
          n(r(40672), t),
          n(r(66599), t),
          n(r(73259), t),
          n(r(23421), t),
          n(r(11978), t),
          n(r(92058), t),
          n(r(2929), t),
          n(r(92217), t),
          n(r(78778), t),
          n(r(34242), t),
          n(r(58140), t),
          n(r(2155), t),
          n(r(81103), t),
          n(r(27432), t),
          n(r(69725), t),
          n(r(42628), t),
          n(r(8170), t),
          n(r(20573), t),
          n(r(95154), t),
          n(r(84265), t),
          n(r(61202), t),
          n(r(53679), t),
          n(r(99463), t),
          n(r(2676), t),
          n(r(39248), t),
          n(r(67751), t),
          n(r(94075), t),
          n(r(1100), t),
          n(r(54780), t),
          n(r(84224), t),
          n(r(87817), t),
          n(r(96032), t),
          n(r(31248), t),
          n(r(48999), t),
          n(r(69427), t),
          n(r(17725), t),
          n(r(29234), t),
          n(r(62052), t),
          n(r(19269), t),
          n(r(61434), t),
          n(r(74010), t);
      },
      42835: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Array2DHashMap = void 0);
        const i = r(15265);
        class n {
          constructor(e) {
            this.keyComparator = e;
          }
          hashCode(e) {
            return this.keyComparator.hashCode(e.key);
          }
          equals(e, t) {
            return this.keyComparator.equals(e.key, t.key);
          }
        }
        class o {
          constructor(e) {
            this.backingStore =
              e instanceof o
                ? new i.Array2DHashSet(e.backingStore)
                : new i.Array2DHashSet(new n(e));
          }
          clear() {
            this.backingStore.clear();
          }
          containsKey(e) {
            return this.backingStore.contains({ key: e });
          }
          get(e) {
            let t = this.backingStore.get({ key: e });
            if (t) return t.value;
          }
          get isEmpty() {
            return this.backingStore.isEmpty;
          }
          put(e, t) {
            let r,
              i = this.backingStore.get({ key: e, value: t });
            return (
              i
                ? ((r = i.value), (i.value = t))
                : this.backingStore.add({ key: e, value: t }),
              r
            );
          }
          putIfAbsent(e, t) {
            let r,
              i = this.backingStore.get({ key: e, value: t });
            return (
              i ? (r = i.value) : this.backingStore.add({ key: e, value: t }), r
            );
          }
          get size() {
            return this.backingStore.size;
          }
          hashCode() {
            return this.backingStore.hashCode();
          }
          equals(e) {
            return e instanceof o && this.backingStore.equals(e.backingStore);
          }
        }
        t.Array2DHashMap = o;
      },
      15265: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Array2DHashSet = void 0);
        const o = r(71696),
          A = r(52310),
          a = r(681),
          s = r(97789);
        class c {
          constructor(e, t = 16) {
            if (
              ((this.n = 0), (this.threshold = Math.floor(12)), e instanceof c)
            ) {
              (this.comparator = e.comparator),
                (this.buckets = e.buckets.slice(0));
              for (let e = 0; e < this.buckets.length; e++) {
                let t = this.buckets[e];
                t && (this.buckets[e] = t.slice(0));
              }
              (this.n = e.n), (this.threshold = e.threshold);
            } else
              (this.comparator = e || A.DefaultEqualityComparator.INSTANCE),
                (this.buckets = this.createBuckets(t));
          }
          getOrAdd(e) {
            return (
              this.n > this.threshold && this.expand(), this.getOrAddImpl(e)
            );
          }
          getOrAddImpl(e) {
            let t = this.getBucket(e),
              r = this.buckets[t];
            if (!r) return (r = [e]), (this.buckets[t] = r), this.n++, e;
            for (let t of r) if (this.comparator.equals(t, e)) return t;
            return r.push(e), this.n++, e;
          }
          get(e) {
            if (null == e) return e;
            let t = this.getBucket(e),
              r = this.buckets[t];
            if (r) for (let t of r) if (this.comparator.equals(t, e)) return t;
          }
          getBucket(e) {
            return this.comparator.hashCode(e) & (this.buckets.length - 1);
          }
          hashCode() {
            let e = s.MurmurHash.initialize();
            for (let t of this.buckets)
              if (null != t)
                for (let r of t) {
                  if (null == r) break;
                  e = s.MurmurHash.update(e, this.comparator.hashCode(r));
                }
            return (e = s.MurmurHash.finish(e, this.size)), e;
          }
          equals(e) {
            return (
              e === this ||
              (e instanceof c && e.size === this.size && this.containsAll(e))
            );
          }
          expand() {
            let e = this.buckets,
              t = 2 * this.buckets.length,
              r = this.createBuckets(t);
            (this.buckets = r), (this.threshold = Math.floor(0.75 * t));
            let i = this.size;
            for (let t of e)
              if (t)
                for (let e of t) {
                  let t = this.getBucket(e),
                    r = this.buckets[t];
                  r || ((r = []), (this.buckets[t] = r)), r.push(e);
                }
            o(this.n === i);
          }
          add(e) {
            return this.getOrAdd(e) === e;
          }
          get size() {
            return this.n;
          }
          get isEmpty() {
            return 0 === this.n;
          }
          contains(e) {
            return this.containsFast(this.asElementType(e));
          }
          containsFast(e) {
            return null != e && null != this.get(e);
          }
          *[Symbol.iterator]() {
            yield* this.toArray();
          }
          toArray() {
            const e = new Array(this.size);
            let t = 0;
            for (let r of this.buckets)
              if (null != r)
                for (let i of r) {
                  if (null == i) break;
                  e[t++] = i;
                }
            return e;
          }
          containsAll(e) {
            if (e instanceof c) {
              let t = e;
              for (let e of t.buckets)
                if (null != e)
                  for (let t of e) {
                    if (null == t) break;
                    if (!this.containsFast(this.asElementType(t))) return !1;
                  }
            } else
              for (let t of e)
                if (!this.containsFast(this.asElementType(t))) return !1;
            return !0;
          }
          addAll(e) {
            let t = !1;
            for (let r of e) this.getOrAdd(r) !== r && (t = !0);
            return t;
          }
          clear() {
            (this.buckets = this.createBuckets(16)),
              (this.n = 0),
              (this.threshold = Math.floor(12));
          }
          toString() {
            if (0 === this.size) return "{}";
            let e = "{",
              t = !0;
            for (let r of this.buckets)
              if (null != r)
                for (let i of r) {
                  if (null == i) break;
                  t ? (t = !1) : (e += ", "), (e += i.toString());
                }
            return (e += "}"), e;
          }
          toTableString() {
            let e = "";
            for (let t of this.buckets) {
              if (null == t) {
                e += "null\n";
                continue;
              }
              e += "[";
              let r = !0;
              for (let i of t)
                r ? (r = !1) : (e += " "),
                  (e += null == i ? "_" : i.toString());
              e += "]\n";
            }
            return e;
          }
          asElementType(e) {
            return e;
          }
          createBuckets(e) {
            return new Array(e);
          }
        }
        i([a.NotNull], c.prototype, "comparator", void 0),
          i([a.Override], c.prototype, "hashCode", null),
          i([a.Override], c.prototype, "equals", null),
          i([a.Override], c.prototype, "add", null),
          i([a.Override], c.prototype, "size", null),
          i([a.Override], c.prototype, "isEmpty", null),
          i([a.Override], c.prototype, "contains", null),
          i([n(0, a.Nullable)], c.prototype, "containsFast", null),
          i([a.Override], c.prototype, Symbol.iterator, null),
          i([a.Override], c.prototype, "toArray", null),
          i([a.Override], c.prototype, "containsAll", null),
          i([a.Override], c.prototype, "addAll", null),
          i([a.Override], c.prototype, "clear", null),
          i([a.Override], c.prototype, "toString", null),
          i(
            [a.SuppressWarnings("unchecked")],
            c.prototype,
            "asElementType",
            null
          ),
          i(
            [a.SuppressWarnings("unchecked")],
            c.prototype,
            "createBuckets",
            null
          ),
          (t.Array2DHashSet = c);
      },
      44339: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ArrayEqualityComparator = void 0);
        const n = r(681),
          o = r(97789),
          A = r(78578);
        class a {
          hashCode(e) {
            return null == e ? 0 : o.MurmurHash.hashCode(e, 0);
          }
          equals(e, t) {
            if (null == e) return null == t;
            if (null == t) return !1;
            if (e.length !== t.length) return !1;
            for (let r = 0; r < e.length; r++)
              if (!A.ObjectEqualityComparator.INSTANCE.equals(e[r], t[r]))
                return !1;
            return !0;
          }
        }
        (a.INSTANCE = new a()),
          i([n.Override], a.prototype, "hashCode", null),
          i([n.Override], a.prototype, "equals", null),
          (t.ArrayEqualityComparator = a);
      },
      67464: (e, t) => {
        "use strict";
        var r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Arrays = void 0),
          ((r = t.Arrays || (t.Arrays = {})).binarySearch = function (
            e,
            t,
            r,
            i
          ) {
            return (function (e, t, r, i) {
              let n = t,
                o = r - 1;
              for (; n <= o; ) {
                let t = (n + o) >>> 1,
                  r = e[t];
                if (r < i) n = t + 1;
                else {
                  if (!(r > i)) return t;
                  o = t - 1;
                }
              }
              return -(n + 1);
            })(e, void 0 !== r ? r : 0, void 0 !== i ? i : e.length, t);
          }),
          (r.toString = function (e) {
            let t = "[",
              r = !0;
            for (let i of e)
              r ? (r = !1) : (t += ", "),
                (t += null === i ? "null" : void 0 === i ? "undefined" : i);
            return (t += "]"), t;
          });
      },
      13300: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BitSet = void 0);
        const i = r(43335),
          n = r(97789),
          o = new Uint16Array(0);
        function A(e) {
          return e >>> 4;
        }
        function a(e) {
          return 16 * e;
        }
        function s(e) {
          let t = 1;
          for (let r = 0; r < 16; r++) {
            if (0 != (e & t)) return r;
            t = (t << 1) >>> 0;
          }
          throw new RangeError("No specified bit found");
        }
        function c(e) {
          let t = 32768;
          for (let r = 15; r >= 0; r--) {
            if (0 != (e & t)) return r;
            t >>>= 1;
          }
          throw new RangeError("No specified bit found");
        }
        function g(e, t) {
          return (e &= 15) == (t &= 15)
            ? (1 << e) >>> 0
            : (65535 >>> (15 - t)) ^ (65535 >>> (16 - e));
        }
        const l = new Uint8Array(65536);
        for (let e = 0; e < 16; e++) {
          const t = (1 << e) >>> 0;
          let r = 0;
          for (; r < l.length; ) {
            r += t;
            for (let e = 0; e < t; e++) l[r]++, r++;
          }
        }
        class u {
          constructor(e) {
            if (e)
              if ("number" == typeof e) {
                if (e < 0) throw new RangeError("nbits cannot be negative");
                this.data = new Uint16Array(A(e - 1) + 1);
              } else if (e instanceof u) this.data = e.data.slice(0);
              else {
                let t = -1;
                for (let r of e) t < r && (t = r);
                this.data = new Uint16Array(A(t - 1) + 1);
                for (let t of e) this.set(t);
              }
            else this.data = o;
          }
          and(e) {
            const t = this.data,
              r = e.data,
              i = Math.min(t.length, r.length);
            let n = -1;
            for (let e = 0; e < i; e++) 0 != (t[e] &= r[e]) && (n = e);
            -1 === n && (this.data = o),
              n < t.length - 1 && (this.data = t.slice(0, n + 1));
          }
          andNot(e) {
            const t = this.data,
              r = e.data,
              i = Math.min(t.length, r.length);
            let n = -1;
            for (let e = 0; e < i; e++) 0 != (t[e] &= 65535 ^ r[e]) && (n = e);
            -1 === n && (this.data = o),
              n < t.length - 1 && (this.data = t.slice(0, n + 1));
          }
          cardinality() {
            if (this.isEmpty) return 0;
            const e = this.data,
              t = e.length;
            let r = 0;
            for (let i = 0; i < t; i++) r += l[e[i]];
            return r;
          }
          clear(e, t) {
            null == e
              ? this.data.fill(0)
              : null == t
              ? this.set(e, !1)
              : this.set(e, t, !1);
          }
          flip(e, t) {
            if ((null == t && (t = e), e < 0 || t < e)) throw new RangeError();
            let r = A(e);
            const i = A(t);
            if (r === i) this.data[r] ^= g(e, t);
            else {
              for (this.data[r++] ^= g(e, 15); r < i; ) this.data[r++] ^= 65535;
              this.data[r++] ^= g(0, t);
            }
          }
          get(e, t) {
            if (void 0 === t) return !!(this.data[A(e)] & g(e, e));
            {
              let r = new u(t + 1);
              for (let i = e; i <= t; i++) r.set(i, this.get(i));
              return r;
            }
          }
          intersects(e) {
            let t = Math.min(this.length(), e.length());
            if (0 === t) return !1;
            let r = A(t - 1);
            for (let t = 0; t <= r; t++)
              if (0 != (this.data[t] & e.data[t])) return !0;
            return !1;
          }
          get isEmpty() {
            return 0 === this.length();
          }
          length() {
            return this.data.length
              ? this.previousSetBit(a(this.data.length) - 1) + 1
              : 0;
          }
          nextClearBit(e) {
            if (e < 0) throw new RangeError("fromIndex cannot be negative");
            const t = this.data,
              r = t.length;
            let i = A(e);
            if (i > r) return -1;
            let n = 65535 ^ g(e, 15);
            if (65535 == (t[i] | n)) {
              for (i++, n = 0; i < r && 65535 === t[i]; i++);
              if (i === r) return -1;
            }
            return a(i) + s(65535 ^ (t[i] | n));
          }
          nextSetBit(e) {
            if (e < 0) throw new RangeError("fromIndex cannot be negative");
            const t = this.data,
              r = t.length;
            let i = A(e);
            if (i > r) return -1;
            let n = g(e, 15);
            if (0 == (t[i] & n)) {
              for (i++, n = 65535; i < r && 0 === t[i]; i++);
              if (i >= r) return -1;
            }
            return a(i) + s(t[i] & n);
          }
          or(e) {
            const t = this.data,
              r = e.data,
              i = Math.min(t.length, r.length),
              n = Math.max(t.length, r.length),
              A = t.length === n ? t : new Uint16Array(n);
            let a = -1;
            for (let e = 0; e < i; e++) 0 != (A[e] = t[e] | r[e]) && (a = e);
            const s = t.length > r.length ? t : r;
            for (let e = i; e < n; e++) 0 !== (A[e] = s[e]) && (a = e);
            -1 === a
              ? (this.data = o)
              : A.length === a + 1
              ? (this.data = A)
              : (this.data = A.slice(0, a));
          }
          previousClearBit(e) {
            if (e < 0) throw new RangeError("fromIndex cannot be negative");
            const t = this.data,
              r = t.length;
            let i = A(e);
            i >= r && (i = r - 1);
            let n = 65535 ^ g(0, e);
            if (65535 == (t[i] | n)) {
              for (n = 0, i--; i >= 0 && 65535 === t[i]; i--);
              if (i < 0) return -1;
            }
            return a(i) + c(65535 ^ (t[i] | n));
          }
          previousSetBit(e) {
            if (e < 0) throw new RangeError("fromIndex cannot be negative");
            const t = this.data,
              r = t.length;
            let i = A(e);
            i >= r && (i = r - 1);
            let n = g(0, e);
            if (0 == (t[i] & n)) {
              for (i--, n = 65535; i >= 0 && 0 === t[i]; i--);
              if (i < 0) return -1;
            }
            return a(i) + c(t[i] & n);
          }
          set(e, t, r) {
            if (
              (void 0 === t
                ? ((t = e), (r = !0))
                : "boolean" == typeof t && ((r = t), (t = e)),
              void 0 === r && (r = !0),
              e < 0 || e > t)
            )
              throw new RangeError();
            let i = A(e),
              n = A(t);
            if (r && n >= this.data.length) {
              let e = new Uint16Array(n + 1);
              this.data.forEach((t, r) => (e[r] = t)), (this.data = e);
            } else if (!r) {
              if (i >= this.data.length) return;
              n >= this.data.length &&
                ((n = this.data.length - 1), (t = 16 * this.data.length - 1));
            }
            if (i === n) this._setBits(i, r, g(e, t));
            else {
              for (this._setBits(i++, r, g(e, 15)); i < n; )
                this.data[i++] = r ? 65535 : 0;
              this._setBits(i, r, g(0, t));
            }
          }
          _setBits(e, t, r) {
            t ? (this.data[e] |= r) : (this.data[e] &= 65535 ^ r);
          }
          get size() {
            return 8 * this.data.byteLength;
          }
          hashCode() {
            return n.MurmurHash.hashCode(this.data, 22);
          }
          equals(e) {
            if (e === this) return !0;
            if (!(e instanceof u)) return !1;
            const t = this.length();
            if (t !== e.length()) return !1;
            if (0 === t) return !0;
            let r = A(t - 1);
            for (let t = 0; t <= r; t++)
              if (this.data[t] !== e.data[t]) return !1;
            return !0;
          }
          toString() {
            let e = "{",
              t = !0;
            for (let r = this.nextSetBit(0); r >= 0; r = this.nextSetBit(r + 1))
              t ? (t = !1) : (e += ", "), (e += r);
            return (e += "}"), e;
          }
          xor(e) {
            const t = this.data,
              r = e.data,
              i = Math.min(t.length, r.length),
              n = Math.max(t.length, r.length),
              A = t.length === n ? t : new Uint16Array(n);
            let a = -1;
            for (let e = 0; e < i; e++) 0 != (A[e] = t[e] ^ r[e]) && (a = e);
            const s = t.length > r.length ? t : r;
            for (let e = i; e < n; e++) 0 !== (A[e] = s[e]) && (a = e);
            -1 === a
              ? (this.data = o)
              : A.length === a + 1
              ? (this.data = A)
              : (this.data = A.slice(0, a + 1));
          }
          clone() {
            return new u(this);
          }
          [Symbol.iterator]() {
            return new h(this.data);
          }
          [i.inspect.custom]() {
            return "BitSet " + this.toString();
          }
        }
        t.BitSet = u;
        class h {
          constructor(e) {
            (this.data = e), (this.index = 0), (this.mask = 65535);
          }
          next() {
            for (; this.index < this.data.length; ) {
              const e = this.data[this.index] & this.mask;
              if (0 !== e) {
                const t = a(this.index) + s(e);
                return (this.mask = g(t + 1, 15)), { done: !1, value: t };
              }
              this.index++, (this.mask = 65535);
            }
            return { done: !0, value: -1 };
          }
          [Symbol.iterator]() {
            return this;
          }
        }
      },
      44084: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isSupplementaryCodePoint =
            t.isLowSurrogate =
            t.isHighSurrogate =
              void 0),
          (t.isHighSurrogate = function (e) {
            return e >= 55296 && e <= 56319;
          }),
          (t.isLowSurrogate = function (e) {
            return e >= 56320 && e <= 57343;
          }),
          (t.isSupplementaryCodePoint = function (e) {
            return e >= 65536;
          });
      },
      52310: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DefaultEqualityComparator = void 0);
        const n = r(681),
          o = r(97789),
          A = r(78578);
        class a {
          hashCode(e) {
            return null == e
              ? 0
              : "string" == typeof e || "number" == typeof e
              ? o.MurmurHash.hashCode([e])
              : A.ObjectEqualityComparator.INSTANCE.hashCode(e);
          }
          equals(e, t) {
            return null == e
              ? null == t
              : "string" == typeof e || "number" == typeof e
              ? e === t
              : A.ObjectEqualityComparator.INSTANCE.equals(e, t);
          }
        }
        (a.INSTANCE = new a()),
          i([n.Override], a.prototype, "hashCode", null),
          i([n.Override], a.prototype, "equals", null),
          (t.DefaultEqualityComparator = a);
      },
      78163: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.IntegerList = void 0);
        const n = r(67464),
          o = r(681),
          A = new Int32Array(0),
          a = 2147483639;
        class s {
          constructor(e) {
            if (e)
              if (e instanceof s)
                (this._data = e._data.slice(0)), (this._size = e._size);
              else if ("number" == typeof e)
                0 === e
                  ? ((this._data = A), (this._size = 0))
                  : ((this._data = new Int32Array(e)), (this._size = 0));
              else {
                (this._data = A), (this._size = 0);
                for (let t of e) this.add(t);
              }
            else (this._data = A), (this._size = 0);
          }
          add(e) {
            this._data.length === this._size &&
              this.ensureCapacity(this._size + 1),
              (this._data[this._size] = e),
              this._size++;
          }
          addAll(e) {
            if (Array.isArray(e))
              this.ensureCapacity(this._size + e.length),
                this._data.subarray(this._size, this._size + e.length).set(e),
                (this._size += e.length);
            else if (e instanceof s)
              this.ensureCapacity(this._size + e._size),
                this._data
                  .subarray(this._size, this._size + e.size)
                  .set(e._data),
                (this._size += e._size);
            else {
              this.ensureCapacity(this._size + e.size);
              let t = 0;
              for (let r of e) (this._data[this._size + t] = r), t++;
              this._size += e.size;
            }
          }
          get(e) {
            if (e < 0 || e >= this._size) throw RangeError();
            return this._data[e];
          }
          contains(e) {
            for (let t = 0; t < this._size; t++)
              if (this._data[t] === e) return !0;
            return !1;
          }
          set(e, t) {
            if (e < 0 || e >= this._size) throw RangeError();
            let r = this._data[e];
            return (this._data[e] = t), r;
          }
          removeAt(e) {
            let t = this.get(e);
            return (
              this._data.copyWithin(e, e + 1, this._size),
              (this._data[this._size - 1] = 0),
              this._size--,
              t
            );
          }
          removeRange(e, t) {
            if (e < 0 || t < 0 || e > this._size || t > this._size)
              throw RangeError();
            if (e > t) throw RangeError();
            this._data.copyWithin(t, e, this._size),
              this._data.fill(0, this._size - (t - e), this._size),
              (this._size -= t - e);
          }
          get isEmpty() {
            return 0 === this._size;
          }
          get size() {
            return this._size;
          }
          trimToSize() {
            this._data.length !== this._size &&
              (this._data = this._data.slice(0, this._size));
          }
          clear() {
            this._data.fill(0, 0, this._size), (this._size = 0);
          }
          toArray() {
            return 0 === this._size
              ? []
              : Array.from(this._data.subarray(0, this._size));
          }
          sort() {
            this._data.subarray(0, this._size).sort();
          }
          equals(e) {
            if (e === this) return !0;
            if (!(e instanceof s)) return !1;
            if (this._size !== e._size) return !1;
            for (let t = 0; t < this._size; t++)
              if (this._data[t] !== e._data[t]) return !1;
            return !0;
          }
          hashCode() {
            let e = 1;
            for (let t = 0; t < this._size; t++) e = 31 * e + this._data[t];
            return e;
          }
          toString() {
            return this._data.toString();
          }
          binarySearch(e, t, r) {
            if (
              (void 0 === t && (t = 0),
              void 0 === r && (r = this._size),
              t < 0 || r < 0 || t > this._size || r > this._size)
            )
              throw new RangeError();
            if (t > r) throw new RangeError();
            return n.Arrays.binarySearch(this._data, e, t, r);
          }
          ensureCapacity(e) {
            if (e < 0 || e > a) throw new RangeError();
            let t;
            for (t = 0 === this._data.length ? 4 : this._data.length; t < e; )
              (t *= 2), (t < 0 || t > a) && (t = a);
            let r = new Int32Array(t);
            r.set(this._data), (this._data = r);
          }
          toCharArray() {
            let e = new Uint16Array(this._size),
              t = 0,
              r = !1;
            for (let i = 0; i < this._size; i++) {
              let n = this._data[i];
              if (n >= 0 && n < 65536) {
                (e[t] = n), t++;
                continue;
              }
              if (!r) {
                let t = new Uint16Array(this.charArraySize());
                t.set(e, 0), (e = t), (r = !0);
              }
              let o = String.fromCodePoint(n);
              (e[t] = o.charCodeAt(0)), (e[t + 1] = o.charCodeAt(1)), (t += 2);
            }
            return e;
          }
          charArraySize() {
            let e = 0;
            for (let t = 0; t < this._size; t++)
              e += this._data[t] >= 65536 ? 2 : 1;
            return e;
          }
        }
        i([o.NotNull], s.prototype, "_data", void 0),
          i([o.Override], s.prototype, "equals", null),
          i([o.Override], s.prototype, "hashCode", null),
          i([o.Override], s.prototype, "toString", null),
          (t.IntegerList = s);
      },
      55555: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.IntegerStack = void 0);
        const i = r(78163);
        class n extends i.IntegerList {
          constructor(e) {
            super(e);
          }
          push(e) {
            this.add(e);
          }
          pop() {
            return this.removeAt(this.size - 1);
          }
          peek() {
            return this.get(this.size - 1);
          }
        }
        t.IntegerStack = n;
      },
      94378: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Interval = void 0);
        const n = r(681);
        class o {
          constructor(e, t) {
            (this.a = e), (this.b = t);
          }
          static get INVALID() {
            return o._INVALID;
          }
          static of(e, t) {
            return e !== t || e < 0 || e > 1e3
              ? new o(e, t)
              : (null == o.cache[e] && (o.cache[e] = new o(e, e)), o.cache[e]);
          }
          get length() {
            return this.b < this.a ? 0 : this.b - this.a + 1;
          }
          equals(e) {
            return (
              e === this || (e instanceof o && this.a === e.a && this.b === e.b)
            );
          }
          hashCode() {
            let e = 23;
            return (e = 31 * e + this.a), (e = 31 * e + this.b), e;
          }
          startsBeforeDisjoint(e) {
            return this.a < e.a && this.b < e.a;
          }
          startsBeforeNonDisjoint(e) {
            return this.a <= e.a && this.b >= e.a;
          }
          startsAfter(e) {
            return this.a > e.a;
          }
          startsAfterDisjoint(e) {
            return this.a > e.b;
          }
          startsAfterNonDisjoint(e) {
            return this.a > e.a && this.a <= e.b;
          }
          disjoint(e) {
            return this.startsBeforeDisjoint(e) || this.startsAfterDisjoint(e);
          }
          adjacent(e) {
            return this.a === e.b + 1 || this.b === e.a - 1;
          }
          properlyContains(e) {
            return e.a >= this.a && e.b <= this.b;
          }
          union(e) {
            return o.of(Math.min(this.a, e.a), Math.max(this.b, e.b));
          }
          intersection(e) {
            return o.of(Math.max(this.a, e.a), Math.min(this.b, e.b));
          }
          differenceNotProperlyContained(e) {
            let t;
            return (
              e.startsBeforeNonDisjoint(this)
                ? (t = o.of(Math.max(this.a, e.b + 1), this.b))
                : e.startsAfterNonDisjoint(this) && (t = o.of(this.a, e.a - 1)),
              t
            );
          }
          toString() {
            return this.a + ".." + this.b;
          }
        }
        (o._INVALID = new o(-1, -2)),
          (o.cache = new Array(1001)),
          i([n.Override], o.prototype, "equals", null),
          i([n.Override], o.prototype, "hashCode", null),
          i([n.Override], o.prototype, "toString", null),
          (t.Interval = o);
      },
      45462: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.IntervalSet = void 0);
        const o = r(44339),
          A = r(78163),
          a = r(94378),
          s = r(8170),
          c = r(97789),
          g = r(681),
          l = r(48999);
        class u {
          constructor(e) {
            (this.readonly = !1),
              (this._intervals = null != e ? e.slice(0) : []);
          }
          static get COMPLETE_CHAR_SET() {
            return (
              void 0 === u._COMPLETE_CHAR_SET &&
                ((u._COMPLETE_CHAR_SET = u.of(
                  s.Lexer.MIN_CHAR_VALUE,
                  s.Lexer.MAX_CHAR_VALUE
                )),
                u._COMPLETE_CHAR_SET.setReadonly(!0)),
              u._COMPLETE_CHAR_SET
            );
          }
          static get EMPTY_SET() {
            return (
              null == u._EMPTY_SET &&
                ((u._EMPTY_SET = new u()), u._EMPTY_SET.setReadonly(!0)),
              u._EMPTY_SET
            );
          }
          static of(e, t = e) {
            let r = new u();
            return r.add(e, t), r;
          }
          clear() {
            if (this.readonly)
              throw new Error("can't alter readonly IntervalSet");
            this._intervals.length = 0;
          }
          add(e, t = e) {
            this.addRange(a.Interval.of(e, t));
          }
          addRange(e) {
            if (this.readonly)
              throw new Error("can't alter readonly IntervalSet");
            if (!(e.b < e.a)) {
              for (let t = 0; t < this._intervals.length; t++) {
                let r = this._intervals[t];
                if (e.equals(r)) return;
                if (e.adjacent(r) || !e.disjoint(r)) {
                  let i = e.union(r);
                  for (
                    this._intervals[t] = i;
                    t < this._intervals.length - 1;

                  ) {
                    t++;
                    let e = this._intervals[t];
                    if (!i.adjacent(e) && i.disjoint(e)) break;
                    this._intervals.splice(t, 1),
                      t--,
                      (this._intervals[t] = i.union(e));
                  }
                  return;
                }
                if (e.startsBeforeDisjoint(r))
                  return void this._intervals.splice(t, 0, e);
              }
              this._intervals.push(e);
            }
          }
          static or(e) {
            let t = new u();
            for (let r of e) t.addAll(r);
            return t;
          }
          addAll(e) {
            if (null == e) return this;
            if (e instanceof u) {
              let t = e,
                r = t._intervals.length;
              for (let e = 0; e < r; e++) {
                let r = t._intervals[e];
                this.add(r.a, r.b);
              }
            } else for (let t of e.toArray()) this.add(t);
            return this;
          }
          complementRange(e, t) {
            return this.complement(u.of(e, t));
          }
          complement(e) {
            if (e.isNil) return u.EMPTY_SET;
            let t;
            return (
              e instanceof u ? (t = e) : ((t = new u()), t.addAll(e)),
              t.subtract(this)
            );
          }
          subtract(e) {
            if (null == e || e.isNil) return new u(this._intervals);
            if (e instanceof u) return u.subtract(this, e);
            let t = new u();
            return t.addAll(e), u.subtract(this, t);
          }
          static subtract(e, t) {
            if (e.isNil) return new u();
            let r = new u(e._intervals);
            if (t.isNil) return r;
            let i = 0,
              n = 0;
            for (; i < r._intervals.length && n < t._intervals.length; ) {
              let e,
                o,
                A = r._intervals[i],
                s = t._intervals[n];
              if (s.b < A.a) n++;
              else if (s.a > A.b) i++;
              else if (
                (s.a > A.a && (e = new a.Interval(A.a, s.a - 1)),
                s.b < A.b && (o = new a.Interval(s.b + 1, A.b)),
                e)
              ) {
                if (o) {
                  (r._intervals[i] = e),
                    r._intervals.splice(i + 1, 0, o),
                    i++,
                    n++;
                  continue;
                }
                (r._intervals[i] = e), i++;
              } else
                o ? ((r._intervals[i] = o), n++) : r._intervals.splice(i, 1);
            }
            return r;
          }
          or(e) {
            let t = new u();
            return t.addAll(this), t.addAll(e), t;
          }
          and(e) {
            if (e.isNil) return new u();
            let t,
              r = this._intervals,
              i = e._intervals,
              n = r.length,
              o = i.length,
              A = 0,
              a = 0;
            for (; A < n && a < o; ) {
              let e = r[A],
                n = i[a];
              e.startsBeforeDisjoint(n)
                ? A++
                : n.startsBeforeDisjoint(e)
                ? a++
                : e.properlyContains(n)
                ? (t || (t = new u()), t.addRange(e.intersection(n)), a++)
                : n.properlyContains(e)
                ? (t || (t = new u()), t.addRange(e.intersection(n)), A++)
                : e.disjoint(n) ||
                  (t || (t = new u()),
                  t.addRange(e.intersection(n)),
                  e.startsAfterNonDisjoint(n)
                    ? a++
                    : n.startsAfterNonDisjoint(e) && A++);
            }
            return t || new u();
          }
          contains(e) {
            let t = 0,
              r = this._intervals.length - 1;
            for (; t <= r; ) {
              let i = (t + r) >> 1,
                n = this._intervals[i],
                o = n.a;
              if (n.b < e) t = i + 1;
              else {
                if (!(o > e)) return !0;
                r = i - 1;
              }
            }
            return !1;
          }
          get isNil() {
            return null == this._intervals || 0 === this._intervals.length;
          }
          get maxElement() {
            if (this.isNil) throw new RangeError("set is empty");
            return this._intervals[this._intervals.length - 1].b;
          }
          get minElement() {
            if (this.isNil) throw new RangeError("set is empty");
            return this._intervals[0].a;
          }
          get intervals() {
            return this._intervals;
          }
          hashCode() {
            let e = c.MurmurHash.initialize();
            for (let t of this._intervals)
              (e = c.MurmurHash.update(e, t.a)),
                (e = c.MurmurHash.update(e, t.b));
            return (e = c.MurmurHash.finish(e, 2 * this._intervals.length)), e;
          }
          equals(e) {
            return (
              null != e &&
              e instanceof u &&
              o.ArrayEqualityComparator.INSTANCE.equals(
                this._intervals,
                e._intervals
              )
            );
          }
          toString(e = !1) {
            let t = "";
            if (null == this._intervals || 0 === this._intervals.length)
              return "{}";
            this.size > 1 && (t += "{");
            let r = !0;
            for (let i of this._intervals) {
              r ? (r = !1) : (t += ", ");
              let n = i.a,
                o = i.b;
              n === o
                ? n === l.Token.EOF
                  ? (t += "<EOF>")
                  : (t += e ? "'" + String.fromCodePoint(n) + "'" : n)
                : (t += e
                    ? "'" +
                      String.fromCodePoint(n) +
                      "'..'" +
                      String.fromCodePoint(o) +
                      "'"
                    : n + ".." + o);
            }
            return this.size > 1 && (t += "}"), t;
          }
          toStringVocabulary(e) {
            if (null == this._intervals || 0 === this._intervals.length)
              return "{}";
            let t = "";
            this.size > 1 && (t += "{");
            let r = !0;
            for (let i of this._intervals) {
              r ? (r = !1) : (t += ", ");
              let n = i.a,
                o = i.b;
              if (n === o) t += this.elementName(e, n);
              else
                for (let r = n; r <= o; r++)
                  r > n && (t += ", "), (t += this.elementName(e, r));
            }
            return this.size > 1 && (t += "}"), t;
          }
          elementName(e, t) {
            return t === l.Token.EOF
              ? "<EOF>"
              : t === l.Token.EPSILON
              ? "<EPSILON>"
              : e.getDisplayName(t);
          }
          get size() {
            let e = 0,
              t = this._intervals.length;
            if (1 === t) {
              let e = this._intervals[0];
              return e.b - e.a + 1;
            }
            for (let r = 0; r < t; r++) {
              let t = this._intervals[r];
              e += t.b - t.a + 1;
            }
            return e;
          }
          toIntegerList() {
            let e = new A.IntegerList(this.size),
              t = this._intervals.length;
            for (let r = 0; r < t; r++) {
              let t = this._intervals[r],
                i = t.a,
                n = t.b;
              for (let t = i; t <= n; t++) e.add(t);
            }
            return e;
          }
          toSet() {
            let e = new Set();
            for (let t of this._intervals) {
              let r = t.a,
                i = t.b;
              for (let t = r; t <= i; t++) e.add(t);
            }
            return e;
          }
          toArray() {
            let e = new Array(),
              t = this._intervals.length;
            for (let r = 0; r < t; r++) {
              let t = this._intervals[r],
                i = t.a,
                n = t.b;
              for (let t = i; t <= n; t++) e.push(t);
            }
            return e;
          }
          remove(e) {
            if (this.readonly)
              throw new Error("can't alter readonly IntervalSet");
            let t = this._intervals.length;
            for (let r = 0; r < t; r++) {
              let t = this._intervals[r],
                i = t.a,
                n = t.b;
              if (e < i) break;
              if (e === i && e === n) {
                this._intervals.splice(r, 1);
                break;
              }
              if (e === i) {
                this._intervals[r] = a.Interval.of(t.a + 1, t.b);
                break;
              }
              if (e === n) {
                this._intervals[r] = a.Interval.of(t.a, t.b - 1);
                break;
              }
              if (e > i && e < n) {
                let i = t.b;
                (this._intervals[r] = a.Interval.of(t.a, e - 1)),
                  this.add(e + 1, i);
              }
            }
          }
          get isReadonly() {
            return this.readonly;
          }
          setReadonly(e) {
            if (this.readonly && !e)
              throw new Error("can't alter readonly IntervalSet");
            this.readonly = e;
          }
        }
        i([g.Override], u.prototype, "addAll", null),
          i([g.Override], u.prototype, "complement", null),
          i([g.Override], u.prototype, "subtract", null),
          i([g.Override], u.prototype, "or", null),
          i([g.Override], u.prototype, "and", null),
          i([g.Override], u.prototype, "contains", null),
          i([g.Override], u.prototype, "isNil", null),
          i([g.Override], u.prototype, "hashCode", null),
          i([g.Override], u.prototype, "equals", null),
          i([n(0, g.NotNull)], u.prototype, "toStringVocabulary", null),
          i([g.NotNull, n(0, g.NotNull)], u.prototype, "elementName", null),
          i([g.Override], u.prototype, "size", null),
          i([g.Override], u.prototype, "remove", null),
          i([g.NotNull], u, "of", null),
          i([g.NotNull], u, "subtract", null),
          (t.IntervalSet = u);
      },
      81412: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.MultiMap = void 0);
        class r extends Map {
          constructor() {
            super();
          }
          map(e, t) {
            let r = super.get(e);
            r || ((r = []), super.set(e, r)), r.push(t);
          }
          getPairs() {
            let e = [];
            return (
              this.forEach((t, r) => {
                t.forEach((t) => {
                  e.push([r, t]);
                });
              }),
              e
            );
          }
        }
        t.MultiMap = r;
      },
      97789: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.MurmurHash = void 0),
          (function (e) {
            function t(e = 0) {
              return e;
            }
            function r(e, t) {
              null == t
                ? (t = 0)
                : "string" == typeof t
                ? (t = (function (e) {
                    let t = e.length;
                    if (0 === t) return 0;
                    let r = 0;
                    for (let i = 0; i < t; i++)
                      (r = ((r << 5) >>> 0) - r + e.charCodeAt(i)), (r |= 0);
                    return r;
                  })(t))
                : "object" == typeof t && (t = t.hashCode());
              let r = t;
              return (
                (r = Math.imul(r, 3432918353)),
                (r = (r << 15) | (r >>> 17)),
                (r = Math.imul(r, 461845907)),
                (e = ((e ^= r) << 13) | (e >>> 19)),
                4294967295 & (Math.imul(e, 5) + 3864292196)
              );
            }
            function i(e, t) {
              return (
                (e ^= 4 * t),
                (e ^= e >>> 16),
                (e = Math.imul(e, 2246822507)),
                (e ^= e >>> 13),
                (e = Math.imul(e, 3266489909)) ^ (e >>> 16)
              );
            }
            (e.initialize = t),
              (e.update = r),
              (e.finish = i),
              (e.hashCode = function (e, n = 0) {
                let o = t(n),
                  A = 0;
                for (let t of e) (o = r(o, t)), A++;
                return (o = i(o, A)), o;
              });
          })(t.MurmurHash || (t.MurmurHash = {}));
      },
      78578: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ObjectEqualityComparator = void 0);
        const n = r(681);
        class o {
          hashCode(e) {
            return null == e ? 0 : e.hashCode();
          }
          equals(e, t) {
            return null == e ? null == t : e.equals(t);
          }
        }
        (o.INSTANCE = new o()),
          i([n.Override], o.prototype, "hashCode", null),
          i([n.Override], o.prototype, "equals", null),
          (t.ObjectEqualityComparator = o);
      },
      37455: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParseCancellationException = void 0);
        class r extends Error {
          constructor(e) {
            super(e.message), (this.cause = e), (this.stack = e.stack);
          }
          getCause() {
            return this.cause;
          }
        }
        t.ParseCancellationException = r;
      },
      48992: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UUID = void 0);
        const i = r(97789);
        class n {
          constructor(e, t, r, i) {
            (this.data = new Uint32Array(4)),
              (this.data[0] = e),
              (this.data[1] = t),
              (this.data[2] = r),
              (this.data[3] = i);
          }
          static fromString(e) {
            if (
              !/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/.test(
                e
              )
            )
              throw new Error("Incorrectly formatted UUID");
            let t = e.split("-"),
              r = parseInt(t[0], 16),
              i = ((parseInt(t[1], 16) << 16) >>> 0) + parseInt(t[2], 16),
              o =
                ((parseInt(t[3], 16) << 16) >>> 0) +
                parseInt(t[4].substr(0, 4), 16),
              A = parseInt(t[4].substr(-8), 16);
            return new n(r, i, o, A);
          }
          hashCode() {
            return i.MurmurHash.hashCode([
              this.data[0],
              this.data[1],
              this.data[2],
              this.data[3],
            ]);
          }
          equals(e) {
            return (
              e === this ||
              (e instanceof n &&
                this.data[0] === e.data[0] &&
                this.data[1] === e.data[1] &&
                this.data[2] === e.data[2] &&
                this.data[3] === e.data[3])
            );
          }
          toString() {
            return (
              ("00000000" + this.data[0].toString(16)).substr(-8) +
              "-" +
              ("0000" + (this.data[1] >>> 16).toString(16)).substr(-4) +
              "-" +
              ("0000" + this.data[1].toString(16)).substr(-4) +
              "-" +
              ("0000" + (this.data[2] >>> 16).toString(16)).substr(-4) +
              "-" +
              ("0000" + this.data[2].toString(16)).substr(-4) +
              ("00000000" + this.data[3].toString(16)).substr(-8)
            );
          }
        }
        t.UUID = n;
      },
      93070: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.toCharArray =
            t.toMap =
            t.equals =
            t.join =
            t.escapeWhitespace =
              void 0),
          (t.escapeWhitespace = function (e, t) {
            return t
              ? e.replace(/ /, "·")
              : e
                  .replace(/\t/, "\\t")
                  .replace(/\n/, "\\n")
                  .replace(/\r/, "\\r");
          }),
          (t.join = function (e, t) {
            let r = "",
              i = !0;
            for (let n of e) i ? (i = !1) : (r += t), (r += n);
            return r;
          }),
          (t.equals = function (e, t) {
            return e === t || (void 0 !== e && void 0 !== t && e.equals(t));
          }),
          (t.toMap = function (e) {
            let t = new Map();
            for (let r = 0; r < e.length; r++) t.set(e[r], r);
            return t;
          }),
          (t.toCharArray = function (e) {
            if ("string" == typeof e) {
              let t = new Uint16Array(e.length);
              for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
              return t;
            }
            return e.toCharArray();
          });
      },
      14941: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AbstractParseTreeVisitor = void 0);
        const o = r(681);
        class A {
          visit(e) {
            return e.accept(this);
          }
          visitChildren(e) {
            let t = this.defaultResult(),
              r = e.childCount;
            for (let i = 0; i < r && this.shouldVisitNextChild(e, t); i++) {
              let r = e.getChild(i).accept(this);
              t = this.aggregateResult(t, r);
            }
            return t;
          }
          visitTerminal(e) {
            return this.defaultResult();
          }
          visitErrorNode(e) {
            return this.defaultResult();
          }
          aggregateResult(e, t) {
            return t;
          }
          shouldVisitNextChild(e, t) {
            return !0;
          }
        }
        i([o.Override, n(0, o.NotNull)], A.prototype, "visit", null),
          i([o.Override, n(0, o.NotNull)], A.prototype, "visitChildren", null),
          i([o.Override, n(0, o.NotNull)], A.prototype, "visitTerminal", null),
          i([o.Override, n(0, o.NotNull)], A.prototype, "visitErrorNode", null),
          i([n(0, o.NotNull)], A.prototype, "shouldVisitNextChild", null),
          (t.AbstractParseTreeVisitor = A);
      },
      50135: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ErrorNode = void 0);
        const n = r(681),
          o = r(49466);
        class A extends o.TerminalNode {
          constructor(e) {
            super(e);
          }
          accept(e) {
            return e.visitErrorNode(this);
          }
        }
        i([n.Override], A.prototype, "accept", null), (t.ErrorNode = A);
      },
      9297: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleNode = void 0),
          (t.RuleNode = class {});
      },
      49466: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TerminalNode = void 0);
        const n = r(94378),
          o = r(681),
          A = r(48999);
        class a {
          constructor(e) {
            this._symbol = e;
          }
          getChild(e) {
            throw new RangeError("Terminal Node has no children.");
          }
          get symbol() {
            return this._symbol;
          }
          get parent() {
            return this._parent;
          }
          setParent(e) {
            this._parent = e;
          }
          get payload() {
            return this._symbol;
          }
          get sourceInterval() {
            let e = this._symbol.tokenIndex;
            return new n.Interval(e, e);
          }
          get childCount() {
            return 0;
          }
          accept(e) {
            return e.visitTerminal(this);
          }
          get text() {
            return this._symbol.text || "";
          }
          toStringTree(e) {
            return this.toString();
          }
          toString() {
            return this._symbol.type === A.Token.EOF
              ? "<EOF>"
              : this._symbol.text || "";
          }
        }
        i([o.Override], a.prototype, "getChild", null),
          i([o.Override], a.prototype, "parent", null),
          i([o.Override], a.prototype, "setParent", null),
          i([o.Override], a.prototype, "payload", null),
          i([o.Override], a.prototype, "sourceInterval", null),
          i([o.Override], a.prototype, "childCount", null),
          i([o.Override], a.prototype, "accept", null),
          i([o.Override], a.prototype, "text", null),
          i([o.Override], a.prototype, "toStringTree", null),
          i([o.Override], a.prototype, "toString", null),
          (t.TerminalNode = a);
      },
      91180: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Trees = void 0);
        const o = r(68148),
          A = r(92058),
          a = r(50135),
          s = r(681),
          c = r(53679),
          g = r(39248),
          l = r(9297),
          u = r(49466),
          h = r(48999),
          I = r(93070);
        class p {
          static toStringTree(e, t) {
            let r;
            r = t instanceof c.Parser ? t.ruleNames : t;
            let i = I.escapeWhitespace(this.getNodeText(e, r), !1);
            if (0 === e.childCount) return i;
            let n = "";
            (n += "("),
              (i = I.escapeWhitespace(this.getNodeText(e, r), !1)),
              (n += i),
              (n += " ");
            for (let t = 0; t < e.childCount; t++)
              t > 0 && (n += " "), (n += this.toStringTree(e.getChild(t), r));
            return (n += ")"), n;
          }
          static getNodeText(e, t) {
            let r;
            if (t instanceof c.Parser) r = t.ruleNames;
            else {
              if (!t) {
                let t = e.payload;
                return "string" == typeof t.text
                  ? t.text
                  : e.payload.toString();
              }
              r = t;
            }
            if (e instanceof l.RuleNode) {
              let t = e.ruleContext,
                i = r[t.ruleIndex],
                n = t.altNumber;
              return n !== o.ATN.INVALID_ALT_NUMBER ? i + ":" + n : i;
            }
            if (e instanceof a.ErrorNode) return e.toString();
            if (e instanceof u.TerminalNode) return e.symbol.text || "";
            throw new TypeError("Unexpected node type");
          }
          static getChildren(e) {
            let t = [];
            for (let r = 0; r < e.childCount; r++) t.push(e.getChild(r));
            return t;
          }
          static getAncestors(e) {
            let t = [],
              r = e.parent;
            for (; r; ) t.unshift(r), (r = r.parent);
            return t;
          }
          static isAncestorOf(e, t) {
            if (!e || !t || !e.parent) return !1;
            let r = t.parent;
            for (; r; ) {
              if (e === r) return !0;
              r = r.parent;
            }
            return !1;
          }
          static findAllTokenNodes(e, t) {
            return p.findAllNodes(e, t, !0);
          }
          static findAllRuleNodes(e, t) {
            return p.findAllNodes(e, t, !1);
          }
          static findAllNodes(e, t, r) {
            let i = [];
            return p._findAllNodes(e, t, r, i), i;
          }
          static _findAllNodes(e, t, r, i) {
            r && e instanceof u.TerminalNode
              ? e.symbol.type === t && i.push(e)
              : !r &&
                e instanceof g.ParserRuleContext &&
                e.ruleIndex === t &&
                i.push(e);
            for (let n = 0; n < e.childCount; n++)
              p._findAllNodes(e.getChild(n), t, r, i);
          }
          static getDescendants(e) {
            let t = [];
            return (
              (function e(r) {
                t.push(r);
                const i = r.childCount;
                for (let t = 0; t < i; t++) e(r.getChild(t));
              })(e),
              t
            );
          }
          static getRootOfSubtreeEnclosingRegion(e, t, r) {
            let i = e.childCount;
            for (let n = 0; n < i; n++) {
              let i = e.getChild(n),
                o = p.getRootOfSubtreeEnclosingRegion(i, t, r);
              if (o) return o;
            }
            if (e instanceof g.ParserRuleContext) {
              let i = e.stop;
              if (t >= e.start.tokenIndex && (null == i || r <= i.tokenIndex))
                return e;
            }
          }
          static stripChildrenOutOfRange(e, t, r, i) {
            if (!e) return;
            let n = e.childCount;
            for (let o = 0; o < n; o++) {
              let n = e.getChild(o),
                a = n.sourceInterval;
              if (
                n instanceof g.ParserRuleContext &&
                (a.b < r || a.a > i) &&
                p.isAncestorOf(n, t)
              ) {
                let t = new A.CommonToken(h.Token.INVALID_TYPE, "...");
                e.children[o] = new u.TerminalNode(t);
              }
            }
          }
          static findNodeSuchThat(e, t) {
            if (t(e)) return e;
            let r = e.childCount;
            for (let i = 0; i < r; i++) {
              let r = p.findNodeSuchThat(e.getChild(i), t);
              if (void 0 !== r) return r;
            }
          }
        }
        i([n(0, s.NotNull)], p, "toStringTree", null),
          i([s.NotNull, n(0, s.NotNull)], p, "getAncestors", null),
          i([n(0, s.NotNull)], p, "getRootOfSubtreeEnclosingRegion", null),
          (t.Trees = p);
      },
      33588: (e, t) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Chunk = void 0),
          (t.Chunk = class {});
      },
      39728: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParseTreeMatch = void 0);
        const o = r(681);
        let A = class {
          constructor(e, t, r, i) {
            if (!e) throw new Error("tree cannot be null");
            if (!t) throw new Error("pattern cannot be null");
            if (!r) throw new Error("labels cannot be null");
            (this._tree = e),
              (this._pattern = t),
              (this._labels = r),
              (this._mismatchedNode = i);
          }
          get(e) {
            let t = this._labels.get(e);
            if (t && 0 !== t.length) return t[t.length - 1];
          }
          getAll(e) {
            return this._labels.get(e) || [];
          }
          get labels() {
            return this._labels;
          }
          get mismatchedNode() {
            return this._mismatchedNode;
          }
          get succeeded() {
            return !this._mismatchedNode;
          }
          get pattern() {
            return this._pattern;
          }
          get tree() {
            return this._tree;
          }
          toString() {
            return `Match ${this.succeeded ? "succeeded" : "failed"}; found ${
              this.labels.size
            } labels`;
          }
        };
        i([o.NotNull, n(0, o.NotNull)], A.prototype, "getAll", null),
          i([o.NotNull], A.prototype, "labels", null),
          i([o.NotNull], A.prototype, "pattern", null),
          i([o.NotNull], A.prototype, "tree", null),
          i([o.Override], A.prototype, "toString", null),
          (A = i([n(0, o.NotNull), n(1, o.NotNull), n(2, o.NotNull)], A)),
          (t.ParseTreeMatch = A);
      },
      11024: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParseTreePattern = void 0);
        const o = r(681),
          A = r(96512);
        let a = class {
          constructor(e, t, r, i) {
            (this._matcher = e),
              (this._patternRuleIndex = r),
              (this._pattern = t),
              (this._patternTree = i);
          }
          match(e) {
            return this._matcher.match(e, this);
          }
          matches(e) {
            return this._matcher.match(e, this).succeeded;
          }
          findAll(e, t) {
            let r = A.XPath.findAll(e, t, this._matcher.parser),
              i = [];
            for (let e of r) {
              let t = this.match(e);
              t.succeeded && i.push(t);
            }
            return i;
          }
          get matcher() {
            return this._matcher;
          }
          get pattern() {
            return this._pattern;
          }
          get patternRuleIndex() {
            return this._patternRuleIndex;
          }
          get patternTree() {
            return this._patternTree;
          }
        };
        i([o.NotNull], a.prototype, "_pattern", void 0),
          i([o.NotNull], a.prototype, "_patternTree", void 0),
          i([o.NotNull], a.prototype, "_matcher", void 0),
          i([o.NotNull, n(0, o.NotNull)], a.prototype, "match", null),
          i([n(0, o.NotNull)], a.prototype, "matches", null),
          i(
            [o.NotNull, n(0, o.NotNull), n(1, o.NotNull)],
            a.prototype,
            "findAll",
            null
          ),
          i([o.NotNull], a.prototype, "matcher", null),
          i([o.NotNull], a.prototype, "pattern", null),
          i([o.NotNull], a.prototype, "patternTree", null),
          (a = i([n(0, o.NotNull), n(1, o.NotNull), n(3, o.NotNull)], a)),
          (t.ParseTreePattern = a);
      },
      97657: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ParseTreePatternMatcher = void 0);
        const o = r(80856),
          A = r(73259),
          a = r(92217),
          s = r(84265),
          c = r(81412),
          g = r(681),
          l = r(37455),
          u = r(2676),
          h = r(39248),
          I = r(39728),
          p = r(11024),
          d = r(1100),
          f = r(9297),
          C = r(70452),
          B = r(36885),
          E = r(49466),
          y = r(16351),
          m = r(48999),
          Q = r(36723);
        class v {
          constructor(e, t) {
            (this.start = "<"),
              (this.stop = ">"),
              (this.escape = "\\"),
              (this.escapeRE = /\\/g),
              (this._lexer = e),
              (this._parser = t);
          }
          setDelimiters(e, t, r) {
            if (!e) throw new Error("start cannot be null or empty");
            if (!t) throw new Error("stop cannot be null or empty");
            (this.start = e),
              (this.stop = t),
              (this.escape = r),
              (this.escapeRE = new RegExp(
                r.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"),
                "g"
              ));
          }
          matches(e, t, r = 0) {
            if ("string" == typeof t) {
              let i = this.compile(t, r);
              return this.matches(e, i);
            }
            {
              let r = new c.MultiMap();
              return !this.matchImpl(e, t.patternTree, r);
            }
          }
          match(e, t, r = 0) {
            if ("string" == typeof t) {
              let i = this.compile(t, r);
              return this.match(e, i);
            }
            {
              let r = new c.MultiMap(),
                i = this.matchImpl(e, t.patternTree, r);
              return new I.ParseTreeMatch(e, t, r, i);
            }
          }
          compile(e, t) {
            let r = this.tokenize(e),
              i = new s.ListTokenSource(r),
              n = new a.CommonTokenStream(i);
            const A = this._parser;
            let c,
              g = new u.ParserInterpreter(
                A.grammarFileName,
                A.vocabulary,
                A.ruleNames,
                A.getATNWithBypassAlts(),
                n
              );
            try {
              (g.errorHandler = new o.BailErrorStrategy()), (c = g.parse(t));
            } catch (e) {
              throw e instanceof l.ParseCancellationException
                ? e.getCause()
                : e instanceof d.RecognitionException
                ? e
                : e instanceof Error
                ? new v.CannotInvokeStartRule(e)
                : e;
            }
            if (n.LA(1) !== m.Token.EOF)
              throw new v.StartRuleDoesNotConsumeFullPattern();
            return new p.ParseTreePattern(this, e, t, c);
          }
          get lexer() {
            return this._lexer;
          }
          get parser() {
            return this._parser;
          }
          matchImpl(e, t, r) {
            if (!e) throw new TypeError("tree cannot be null");
            if (!t) throw new TypeError("patternTree cannot be null");
            if (e instanceof E.TerminalNode && t instanceof E.TerminalNode) {
              let i;
              if (e.symbol.type === t.symbol.type)
                if (t.symbol instanceof Q.TokenTagToken) {
                  let i = t.symbol;
                  r.map(i.tokenName, e);
                  const n = i.label;
                  n && r.map(n, e);
                } else e.text === t.text || i || (i = e);
              else i || (i = e);
              return i;
            }
            if (
              e instanceof h.ParserRuleContext &&
              t instanceof h.ParserRuleContext
            ) {
              let i,
                n = this.getRuleTagToken(t);
              if (n) {
                if (e.ruleContext.ruleIndex === t.ruleContext.ruleIndex) {
                  r.map(n.ruleName, e);
                  const t = n.label;
                  t && r.map(t, e);
                } else i || (i = e);
                return i;
              }
              if (e.childCount !== t.childCount) return i || (i = e), i;
              let o = e.childCount;
              for (let i = 0; i < o; i++) {
                let n = this.matchImpl(e.getChild(i), t.getChild(i), r);
                if (n) return n;
              }
              return i;
            }
            return e;
          }
          getRuleTagToken(e) {
            if (
              e instanceof f.RuleNode &&
              1 === e.childCount &&
              e.getChild(0) instanceof E.TerminalNode
            ) {
              let t = e.getChild(0);
              if (t.symbol instanceof C.RuleTagToken) return t.symbol;
            }
          }
          tokenize(e) {
            let t = this.split(e),
              r = [];
            for (let i of t)
              if (i instanceof B.TagChunk) {
                let t = i;
                const n = t.tag.substr(0, 1);
                if (n === n.toUpperCase()) {
                  let i = this._parser.getTokenType(t.tag);
                  if (i === m.Token.INVALID_TYPE)
                    throw new Error(
                      "Unknown token " + t.tag + " in pattern: " + e
                    );
                  let n = new Q.TokenTagToken(t.tag, i, t.label);
                  r.push(n);
                } else {
                  if (n !== n.toLowerCase())
                    throw new Error(
                      "invalid tag: " + t.tag + " in pattern: " + e
                    );
                  {
                    let i = this._parser.getRuleIndex(t.tag);
                    if (-1 === i)
                      throw new Error(
                        "Unknown rule " + t.tag + " in pattern: " + e
                      );
                    let n =
                      this._parser.getATNWithBypassAlts().ruleToTokenType[i];
                    r.push(new C.RuleTagToken(t.tag, n, t.label));
                  }
                }
              } else {
                let e = i;
                this._lexer.inputStream = A.CharStreams.fromString(e.text);
                let t = this._lexer.nextToken();
                for (; t.type !== m.Token.EOF; )
                  r.push(t), (t = this._lexer.nextToken());
              }
            return r;
          }
          split(e) {
            let t = 0,
              r = e.length,
              i = [],
              n = [],
              o = [];
            for (; t < r; )
              t === e.indexOf(this.escape + this.start, t)
                ? (t += this.escape.length + this.start.length)
                : t === e.indexOf(this.escape + this.stop, t)
                ? (t += this.escape.length + this.stop.length)
                : t === e.indexOf(this.start, t)
                ? (n.push(t), (t += this.start.length))
                : t === e.indexOf(this.stop, t)
                ? (o.push(t), (t += this.stop.length))
                : t++;
            if (n.length > o.length)
              throw new Error("unterminated tag in pattern: " + e);
            if (n.length < o.length)
              throw new Error("missing start tag in pattern: " + e);
            let A = n.length;
            for (let t = 0; t < A; t++)
              if (n[t] >= o[t])
                throw new Error("tag delimiters out of order in pattern: " + e);
            if (0 === A) {
              let t = e.substring(0, r);
              i.push(new y.TextChunk(t));
            }
            if (A > 0 && n[0] > 0) {
              let t = e.substring(0, n[0]);
              i.push(new y.TextChunk(t));
            }
            for (let t = 0; t < A; t++) {
              let r,
                a = e.substring(n[t] + this.start.length, o[t]),
                s = a,
                c = a.indexOf(":");
              if (
                (c >= 0 &&
                  ((r = a.substring(0, c)), (s = a.substring(c + 1, a.length))),
                i.push(new B.TagChunk(s, r)),
                t + 1 < A)
              ) {
                let r = e.substring(o[t] + this.stop.length, n[t + 1]);
                i.push(new y.TextChunk(r));
              }
            }
            if (A > 0) {
              let t = o[A - 1] + this.stop.length;
              if (t < r) {
                let n = e.substring(t, r);
                i.push(new y.TextChunk(n));
              }
            }
            for (let e = 0; e < i.length; e++) {
              let t = i[e];
              if (t instanceof y.TextChunk) {
                let r = t.text.replace(this.escapeRE, "");
                r.length < t.text.length && (i[e] = new y.TextChunk(r));
              }
            }
            return i;
          }
        }
        i([g.NotNull, n(1, g.NotNull)], v.prototype, "match", null),
          i([g.NotNull], v.prototype, "lexer", null),
          i([g.NotNull], v.prototype, "parser", null),
          i(
            [n(0, g.NotNull), n(1, g.NotNull), n(2, g.NotNull)],
            v.prototype,
            "matchImpl",
            null
          ),
          (t.ParseTreePatternMatcher = v),
          (function (e) {
            class t extends Error {
              constructor(e) {
                super(`CannotInvokeStartRule: ${e}`), (this.error = e);
              }
            }
            e.CannotInvokeStartRule = t;
            class r extends Error {
              constructor() {
                super("StartRuleDoesNotConsumeFullPattern");
              }
            }
            e.StartRuleDoesNotConsumeFullPattern = r;
          })(
            (v = t.ParseTreePatternMatcher || (t.ParseTreePatternMatcher = {}))
          );
      },
      70452: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RuleTagToken = void 0);
        const o = r(681),
          A = r(48999);
        let a = class {
          constructor(e, t, r) {
            if (null == e || 0 === e.length)
              throw new Error("ruleName cannot be null or empty.");
            (this._ruleName = e), (this.bypassTokenType = t), (this._label = r);
          }
          get ruleName() {
            return this._ruleName;
          }
          get label() {
            return this._label;
          }
          get channel() {
            return A.Token.DEFAULT_CHANNEL;
          }
          get text() {
            return null != this._label
              ? "<" + this._label + ":" + this._ruleName + ">"
              : "<" + this._ruleName + ">";
          }
          get type() {
            return this.bypassTokenType;
          }
          get line() {
            return 0;
          }
          get charPositionInLine() {
            return -1;
          }
          get tokenIndex() {
            return -1;
          }
          get startIndex() {
            return -1;
          }
          get stopIndex() {
            return -1;
          }
          get tokenSource() {}
          get inputStream() {}
          toString() {
            return this._ruleName + ":" + this.bypassTokenType;
          }
        };
        i([o.NotNull], a.prototype, "ruleName", null),
          i([o.Override], a.prototype, "channel", null),
          i([o.Override], a.prototype, "text", null),
          i([o.Override], a.prototype, "type", null),
          i([o.Override], a.prototype, "line", null),
          i([o.Override], a.prototype, "charPositionInLine", null),
          i([o.Override], a.prototype, "tokenIndex", null),
          i([o.Override], a.prototype, "startIndex", null),
          i([o.Override], a.prototype, "stopIndex", null),
          i([o.Override], a.prototype, "tokenSource", null),
          i([o.Override], a.prototype, "inputStream", null),
          i([o.Override], a.prototype, "toString", null),
          (a = i([n(0, o.NotNull)], a)),
          (t.RuleTagToken = a);
      },
      36885: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TagChunk = void 0);
        const n = r(33588),
          o = r(681);
        class A extends n.Chunk {
          constructor(e, t) {
            if ((super(), null == e || 0 === e.length))
              throw new Error("tag cannot be null or empty");
            (this._tag = e), (this._label = t);
          }
          get tag() {
            return this._tag;
          }
          get label() {
            return this._label;
          }
          toString() {
            return null != this._label
              ? this._label + ":" + this._tag
              : this._tag;
          }
        }
        i([o.NotNull], A.prototype, "tag", null),
          i([o.Override], A.prototype, "toString", null),
          (t.TagChunk = A);
      },
      16351: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TextChunk = void 0);
        const o = r(33588),
          A = r(681);
        let a = class extends o.Chunk {
          constructor(e) {
            if ((super(), null == e)) throw new Error("text cannot be null");
            this._text = e;
          }
          get text() {
            return this._text;
          }
          toString() {
            return "'" + this._text + "'";
          }
        };
        i([A.NotNull], a.prototype, "_text", void 0),
          i([A.NotNull], a.prototype, "text", null),
          i([A.Override], a.prototype, "toString", null),
          (a = i([n(0, A.NotNull)], a)),
          (t.TextChunk = a);
      },
      36723: function (e, t, r) {
        "use strict";
        var i =
            (this && this.__decorate) ||
            function (e, t, r, i) {
              var n,
                o = arguments.length,
                A =
                  o < 3
                    ? t
                    : null === i
                    ? (i = Object.getOwnPropertyDescriptor(t, r))
                    : i;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                A = Reflect.decorate(e, t, r, i);
              else
                for (var a = e.length - 1; a >= 0; a--)
                  (n = e[a]) &&
                    (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
              return o > 3 && A && Object.defineProperty(t, r, A), A;
            },
          n =
            (this && this.__param) ||
            function (e, t) {
              return function (r, i) {
                t(r, i, e);
              };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TokenTagToken = void 0);
        const o = r(92058),
          A = r(681);
        let a = class extends o.CommonToken {
          constructor(e, t, r) {
            super(t), (this._tokenName = e), (this._label = r);
          }
          get tokenName() {
            return this._tokenName;
          }
          get label() {
            return this._label;
          }
          get text() {
            return null != this._label
              ? "<" + this._label + ":" + this._tokenName + ">"
              : "<" + this._tokenName + ">";
          }
          toString() {
            return this._tokenName + ":" + this.type;
          }
        };
        i([A.NotNull], a.prototype, "_tokenName", void 0),
          i([A.NotNull], a.prototype, "tokenName", null),
          i([A.Override], a.prototype, "text", null),
          i([A.Override], a.prototype, "toString", null),
          (a = i([n(0, A.NotNull)], a)),
          (t.TokenTagToken = a);
      },
      96512: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPath = void 0);
        const i = r(73259),
          n = r(92217),
          o = r(95154),
          A = r(39248),
          a = r(48999),
          s = r(39203),
          c = r(19142),
          g = r(5573),
          l = r(95405),
          u = r(99216),
          h = r(60285),
          I = r(20630),
          p = r(78879);
        class d {
          constructor(e, t) {
            (this.parser = e), (this.path = t), (this.elements = this.split(t));
          }
          split(e) {
            let t = new s.XPathLexer(i.CharStreams.fromString(e));
            (t.recover = (e) => {
              throw e;
            }),
              t.removeErrorListeners(),
              t.addErrorListener(new c.XPathLexerErrorListener());
            let r = new n.CommonTokenStream(t);
            try {
              r.fill();
            } catch (r) {
              if (r instanceof o.LexerNoViableAltException) {
                let i =
                  "Invalid tokens or characters at index " +
                  t.charPositionInLine +
                  " in path '" +
                  e +
                  "' -- " +
                  r.message;
                throw new RangeError(i);
              }
              throw r;
            }
            let A = r.getTokens(),
              g = [],
              l = A.length,
              u = 0;
            e: for (; u < l; ) {
              let e,
                t = A[u];
              switch (t.type) {
                case s.XPathLexer.ROOT:
                case s.XPathLexer.ANYWHERE:
                  let r = t.type === s.XPathLexer.ANYWHERE;
                  u++, (e = A[u]);
                  let i = e.type === s.XPathLexer.BANG;
                  i && (u++, (e = A[u]));
                  let n = this.getXPathElement(e, r);
                  (n.invert = i), g.push(n), u++;
                  break;
                case s.XPathLexer.TOKEN_REF:
                case s.XPathLexer.RULE_REF:
                case s.XPathLexer.WILDCARD:
                  g.push(this.getXPathElement(t, !1)), u++;
                  break;
                case a.Token.EOF:
                  break e;
                default:
                  throw new Error("Unknowth path element " + t);
              }
            }
            return g;
          }
          getXPathElement(e, t) {
            if (e.type === a.Token.EOF)
              throw new Error("Missing path element at end of path");
            let r = e.text;
            if (null == r)
              throw new Error("Expected wordToken to have text content.");
            let i = this.parser.getTokenType(r),
              n = this.parser.getRuleIndex(r);
            switch (e.type) {
              case s.XPathLexer.WILDCARD:
                return t
                  ? new I.XPathWildcardAnywhereElement()
                  : new p.XPathWildcardElement();
              case s.XPathLexer.TOKEN_REF:
              case s.XPathLexer.STRING:
                if (i === a.Token.INVALID_TYPE)
                  throw new Error(
                    r +
                      " at index " +
                      e.startIndex +
                      " isn't a valid token name"
                  );
                return t
                  ? new u.XPathTokenAnywhereElement(r, i)
                  : new h.XPathTokenElement(r, i);
              default:
                if (-1 === n)
                  throw new Error(
                    r + " at index " + e.startIndex + " isn't a valid rule name"
                  );
                return t
                  ? new g.XPathRuleAnywhereElement(r, n)
                  : new l.XPathRuleElement(r, n);
            }
          }
          static findAll(e, t, r) {
            return new d(r, t).evaluate(e);
          }
          evaluate(e) {
            let t = new A.ParserRuleContext();
            t.addChild(e);
            let r = new Set([t]),
              i = 0;
            for (; i < this.elements.length; ) {
              let e = new Set();
              for (let t of r)
                t.childCount > 0 &&
                  this.elements[i].evaluate(t).forEach(e.add, e);
              i++, (r = e);
            }
            return r;
          }
        }
        (t.XPath = d), (d.WILDCARD = "*"), (d.NOT = "!");
      },
      67643: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathElement = void 0);
        const n = r(681);
        class o {
          constructor(e) {
            (this.nodeName = e), (this.invert = !1);
          }
          toString() {
            let e = this.invert ? "!" : "";
            return Object.constructor.name + "[" + e + this.nodeName + "]";
          }
        }
        i([n.Override], o.prototype, "toString", null), (t.XPathElement = o);
      },
      39203: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathLexer = void 0);
        const i = r(56349),
          n = r(8170),
          o = r(49796),
          A = r(61434),
          a = r(93070);
        class s extends n.Lexer {
          constructor(e) {
            super(e), (this._interp = new o.LexerATNSimulator(s._ATN, this));
          }
          get vocabulary() {
            return s.VOCABULARY;
          }
          get grammarFileName() {
            return "XPathLexer.g4";
          }
          get ruleNames() {
            return s.ruleNames;
          }
          get serializedATN() {
            return s._serializedATN;
          }
          get channelNames() {
            return s.channelNames;
          }
          get modeNames() {
            return s.modeNames;
          }
          action(e, t, r) {
            4 === t && this.ID_action(e, r);
          }
          ID_action(e, t) {
            if (0 === t) {
              let e = this.text;
              e.charAt(0) === e.charAt(0).toUpperCase()
                ? (this.type = s.TOKEN_REF)
                : (this.type = s.RULE_REF);
            }
          }
          static get _ATN() {
            return (
              s.__ATN ||
                (s.__ATN = new i.ATNDeserializer().deserialize(
                  a.toCharArray(s._serializedATN)
                )),
              s.__ATN
            );
          }
        }
        (t.XPathLexer = s),
          (s.TOKEN_REF = 1),
          (s.RULE_REF = 2),
          (s.ANYWHERE = 3),
          (s.ROOT = 4),
          (s.WILDCARD = 5),
          (s.BANG = 6),
          (s.ID = 7),
          (s.STRING = 8),
          (s.channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]),
          (s.modeNames = ["DEFAULT_MODE"]),
          (s.ruleNames = [
            "ANYWHERE",
            "ROOT",
            "WILDCARD",
            "BANG",
            "ID",
            "NameChar",
            "NameStartChar",
            "STRING",
          ]),
          (s._LITERAL_NAMES = [
            void 0,
            void 0,
            void 0,
            "'//'",
            "'/'",
            "'*'",
            "'!'",
          ]),
          (s._SYMBOLIC_NAMES = [
            void 0,
            "TOKEN_REF",
            "RULE_REF",
            "ANYWHERE",
            "ROOT",
            "WILDCARD",
            "BANG",
            "ID",
            "STRING",
          ]),
          (s.VOCABULARY = new A.VocabularyImpl(
            s._LITERAL_NAMES,
            s._SYMBOLIC_NAMES,
            []
          )),
          (s._serializedATNSegments = 2),
          (s._serializedATNSegment0 =
            '줝쪺֍꾺体؇쉁\n2\b\t\t\t\t\t\t\b\t\b\t\t\t\n\f"\v\b\b\t\t\t,\n\t\f\t\t/\v\t\t\t-\n\t\b\v\t\r\nʶ\n2;C\\aac|¡¬¬¯¯··¼¼ÂØÚøú˃ˈ˓ˢ˦ˮˮ˰˰̂Ͷ͸͹ͼͿ΁΁ΈΈΊΌΎΎΐΣΥϷϹ҃҅҉ҌԱԳ՘՛՛գ։֓ֿׁׁ׃ׄ׆ׇ׉׉ג׬ײ״؂؇ؒ؜؞؞آ٫ٰەۗ۟ۡ۪۬۾܁܁ܑ݌ݏ޳߂߷߼߼ࠂ࠯ࡂ࡝ࢢࢶࢸࢿࣖ॥२ॱॳঅই঎঑঒কপবল঴঴স঻া৆৉৊্৐৙৙৞য়ৡ৥২৳ਃਅਇ਌਑਒ਕਪਬਲ਴ਵ਷ਸ਺਻ਾਾੀ੄੉੊੍੏੓੓ਜ਼ਫ਼੠੠੨੷ઃઅઇએઑઓકપબલ઴વષ઻ાેૉો્૏૒૒ૢ૥૨૱ૻૻଃଅଇ଎଑଒କପବଲ଴ଵଷ଻ା୆୉୊୍୏୘୙୞ୟୡ୥୨ୱ୳୳஄அஇ஌ஐஒஔ஗஛ஜஞஞ஠஡஥஦ப஬ர஻ீ௄ைொௌ௏௒௒௙௙௨௱ంఅఇఎఐఒఔపబ఻ిెైొౌ౏౗ౘౚ౜ౢ౥౨౱ಂಅಇಎಐಒಔಪಬವಷ಻ಾೆೈೊೌ೏೗೘ೠೠೢ೥೨ೱೳ೴ഃഅഇഎഐഒഔ഼ിെൈൊൌ൐ൖ൙ൡ൥൨൱ർඁ඄අඇ඘ගඳඵල඿඿ෂ෈෌෌ෑූෘෘේ෡෨෱෴෵ฃ฼โ๐๒๛຃ຄຆຆຉຊຌຌຏຏຖນປມຣລວວຩຩຬອຯົຽ຿ໂໆ່່໊໏໒໛ໞ໡༂༂༚༛༢༫༷༷༹༹༻༻ཀཉཋ཮ཱི྆ྈྙྛ྾࿈࿈ဂ။ၒ႟ႢჇ჉჉჏჏გჼჾቊቌ቏ቒቘቚቚቜ቟ቢኊኌ኏ኒኲኴ኷ኺዀዂዂዄ዇ዊዘዚጒጔ጗ጚ፜፟፡ᎂ᎑Ꭲ᏷ᏺ᏿ᐃ᙮ᙱᚁᚃ᚜ᚢ᛬ᛰ᛺ᜂᜎᜐ᜖ᜢ᜶ᝂ᝕ᝢᝮᝰᝲ᝴᝵គ៕៙៙៞៟២៫᠍᠐᠒᠛ᠢ᡹ᢂ᢬ᢲ᣷ᤂᤠᤢ᤭ᤲ᤽᥈᥯ᥲ᥶ᦂ᦭ᦲ᧋᧒᧛ᨂ᨝ᨢ᩠ᩢ᩾᪁᪋᪒᪛᪩᪩᪲ᪿᬂ᭍᭒᭛᭭᭵ᮂ᯵ᰂ᰹᱂᱋ᱏ᱿ᲂᲊ᳒᳔᳖᳸ᳺ᳻ᴂ᷷᷽἗Ἒ἟ἢ὇Ὂ὏ὒὙὛὛὝὝὟὟὡ὿ᾂᾶᾸι῀῀ῄῆῈ῎ῒ῕Ῐ῝ῢ΅ῴῶῸ῾‍‑‬‰⁁⁂⁖⁖⁢⁦⁨ⁱ⁳⁳₁₁ₒ₞⃒⃞⃣⃣⃧⃲℄℄℉℉ℌℕ℗℗ℛ℟ΩΩℨℨKKℬℯℱ℻ℾ⅁ⅇ⅋⅐⅐Ⅲ↊ⰂⰰⰲⱠⱢ⳦Ⳮ⳵ⴂⴧ⴩⴩⴯⴯ⴲ⵩⵱⵱ⶁ⶘ⶢⶨⶪⶰⶲⶸⶺⷀⷂⷈⷊⷐⷒⷘⷚⷠⷢ⸁⸱⸱〇〉〣〱〳〷〺〾ぃ゘゛゜ゟァィーヾ㄁ㄇㄯㄳ㆐ㆢㆼㇲ㈁㐂䶷丂鿗ꀂ꒎ꓒ꓿ꔂ꘎ꘒ꘭Ꙃ꙱ꙶꙿꚁ꛳ꜙ꜡Ꜥ꞊ꞍꞰꞲꞹꟹ꠩ꡂ꡵ꢂ꣇꣒꣛꣢꣹ꣽꣽꣿꣿ꤂꤯ꤲ꥕ꥢ꥾ꦂ꧂꧑꧛ꧢꨀꨂ꨸ꩂ꩏꩒꩛ꩢ꩸ꩼ꫄ꫝ꫟ꫢ꫱ꫴ꫸ꬃ꬈ꬋ꬐ꬓ꬘ꬢꬨꬪꬰꬲꭜꭞꭧꭲ꯬꯮꯯꯲꯻갂힥ힲ퟈ퟍ퟽車﩯全﫛ﬂ﬈ﬕ﬙ײַשׁשּׁטּךּמּנּנּ﭂ףּ﭅צּרּ﮳ﯕ﴿ﵒ﶑ﶔ﷉ﷲ﷽︂︑︢︱︵︶﹏﹑ﹲﹶﹸ﻾！！２；Ｃ＼ａａｃ｜ｨ￀ￄ￉ￌ￑ￔ￙ￜ￞￻�\r(*<>?AOR_üłŶǿǿʂʞʢ˒ˢˢ̂̡̲͌͒ͼ΂Ο΢υϊϑϓϗЂҟҢҫҲӕӚӽԂԩԲե؂ܸ݂ݗݢݩࠂࠇࠊࠊࠌ࠷࠹࠺࠾࠾ࡁࡗࡢࡸࢂࢠ࣢ࣴࣶࣷंगढऻংহীুਂਅਇਈ਎ਕਗਙਛਵ਺਼ੁੁ੢੾ંઞૂૉો૨ଂଷୂୗୢ୴ஂஓంొಂ಴ೂ೴ဂ၈ၨၱႁႼႿႿგცჲ჻ᄂᄶᄸᅁᅒᅵᅸᅸᆂᇆᇌᇎᇒᇜᇞᇞሂሓሕሹቀቀኂኈኊኊኌ኏ኑኟኡኪኲዬዲዻጂጅጇጎ጑ጒጕጪጬጲጴጵጷጻጾፆፉፊፍፏፒፒፙፙ፟፥፨፮፲፶ᐂᑌᑒᑛᒂᓇᓉᓉᓒᓛᖂᖷᖺᗂᗚᗟᘂᙂᙆᙆᙒᙛᚂᚹᛂᛋᜂ᜛ᜟᜭᜲ᜻ᢢᣫᤁᤁ᫂᫺ᰂᰊᰌ᰸᰺᱂᱒ᱛᱴᲑᲔᲩᲫᲸ ⎛␂⑰⒂╅。㐰䐂䙈栂樺橂橠橢橫櫒櫯櫲櫶欂欸歂歅歒歛步歹歿殑漂潆潒澀澑澡濢濢瀂蟮蠂諴뀂뀃밂뱬뱲뱾벂벊벒벛벟베벢벥텧텫텯톄톇톍톬톯퉄퉆퐂푖푘풞풠풡풤풤풧풨풫풮풰풻풽풽풿퓅퓇픇픉플픏픖픘픞픠픻픽핀핂핆핈핈핌핒핔횧횪훂후훜훞훼훾휖휘휶휸흐흒흰흲힊힌힪힬ퟄퟆퟍퟐ\ud801\uda02\uda38\uda3d\uda6e\uda77\uda77\uda86\uda86\uda9d\udaa1\udaa3\udab1ꛘ꜂뜶띂렟렢캣﨟"ĂǱɀC\\c|¬¬··¼¼ÂØÚøú˃ˈ˓ˢ˦ˮˮ˰˰ͲͶ͸͹ͼͿ΁΁ΈΈΊΌΎΎΐΣΥϷϹ҃ҌԱԳ՘՛՛գ։ג׬ײ״آٌٰٱٳەۗۗۧۨ۰۱ۼ۾܁܁ܒܒܔܱݏާ޳޳ߌ߬߶߷߼߼ࠂࠗࠜࠜࠦࠦࠪࠪࡂ࡚ࢢࢶࢸࢿआऻिि॒॒ग़ॣॳংই঎঑঒কপবল঴঴স঻িি৐৐৞য়ৡৣ৲৳ਇ਌਑਒ਕਪਬਲ਴ਵ਷ਸ਺਻ਜ਼ਫ਼੠੠ੴ੶ઇએઑઓકપબલ઴વષ઻િિ૒૒ૢૣૻૻଇ଎଑଒କପବଲ଴ଵଷ଻ିି୞ୟୡୣ୳୳அஅஇ஌ஐஒஔ஗஛ஜஞஞ஠஡஥஦ப஬ர஻௒௒ఇఎఐఒఔపబ఻ిిౚ౜ౢౣಂಂಇಎಐಒಔಪಬವಷ಻ಿಿೠೠೢೣೳ೴ഇഎഐഒഔ഼ിി൐൐ൖ൘ൡൣർඁඇ඘ගඳඵල඿඿ෂ෈ฃาิีโ่຃ຄຆຆຉຊຌຌຏຏຖນປມຣລວວຩຩຬອຯາິີ຿຿ໂໆ່່ໞ໡༂༂གཉཋ཮ྊྎဂာ၁၁ၒၗၜၟၣၣၧၨၰၲၷႃ႐႐ႢჇ჉჉჏჏გჼჾቊቌ቏ቒቘቚቚቜ቟ቢኊኌ኏ኒኲኴ኷ኺዀዂዂዄ዇ዊዘዚጒጔ጗ጚ፜ᎂ᎑Ꭲ᏷ᏺ᏿ᐃ᙮ᙱᚁᚃ᚜ᚢ᛬ᛰ᛺ᜂᜎᜐᜓᜢᜳᝂᝓᝢᝮᝰᝲគ឵៙៙៞៞ᠢ᡹ᢂᢆᢉᢪ᢬᢬ᢲ᣷ᤂᤠᥒ᥯ᥲ᥶ᦂ᦭ᦲ᧋ᨂᨘᨢᩖ᪩᪩ᬇᬵᭇ᭍ᮅᮢ᮰᮱ᮼᯧᰂᰥᱏ᱑ᱜ᱿ᲂᲊᳫᳮᳰᳳ᳷᳸ᴂ᷁Ḃ἗Ἒ἟ἢ὇Ὂ὏ὒὙὛὛὝὝὟὟὡ὿ᾂᾶᾸι῀῀ῄῆῈ῎ῒ῕Ῐ῝ῢ΅ῴῶῸ῾⁳⁳₁₁ₒ₞℄℄℉℉ℌℕ℗℗ℛ℟ΩΩℨℨKKℬℯℱ℻ℾ⅁ⅇ⅋⅐⅐Ⅲ↊ⰂⰰⰲⱠⱢ⳦Ⳮ⳰⳴⳵ⴂⴧ⴩⴩⴯⴯ⴲ⵩⵱⵱ⶂ⶘ⶢⶨⶪⶰⶲⶸⶺⷀⷂⷈⷊⷐⷒⷘⷚⷠ⸱⸱〇〉〣〫〳〷〺〾ぃ゘ゟァィーヾ㄁ㄇㄯㄳ㆐ㆢㆼㇲ㈁㐂䶷丂鿗ꀂ꒎ꓒ꓿ꔂ꘎ꘒ꘡꘬꘭Ꙃ꙰ꚁꚟꚢ꛱ꜙ꜡Ꜥ꞊ꞍꞰꞲꞹꟹꠃꠅꠇꠉꠌꠎꠤꡂ꡵ꢄꢵꣴ꣹ꣽꣽꣿꣿꤌꤧꤲꥈꥢ꥾ꦆꦴ꧑꧑ꧢꧦꧨ꧱ꧼꨀꨂꨪꩂꩄꩆꩍꩢ꩸ꩼꩼꪀꪱꪳꪳꪷꪸꪻ꪿ꫂꫂ꫄꫄ꫝ꫟ꫢꫬꫴ꫶ꬃ꬈ꬋ꬐ꬓ꬘ꬢꬨꬪꬰꬲꭜꭞꭧꭲꯤ갂힥ힲ퟈ퟍ퟽車﩯全﫛ﬂ﬈ﬕ﬙ײַײַﬡשׁשּׁטּךּמּנּנּ﭂ףּ﭅צּרּ﮳ﯕ﴿ﵒ﶑ﶔ﷉ﷲ﷽ﹲﹶﹸ﻾Ｃ＼ｃ｜ｨ￀ￄ￉ￌ￑ￔ￙ￜ￞\r(*<>?AOR_üłŶʂʞʢ˒̂̡̲͌͒ͷ΂Ο΢υϊϑϓϗЂҟҲӕӚӽԂԩԲե؂ܸ݂ݗݢݩࠂࠇࠊࠊࠌ࠷࠹࠺࠾࠾ࡁࡗࡢࡸࢂࢠ࣢ࣴࣶࣷंगढऻংহীুਂਂ਒ਕਗਙਛਵ੢੾ંઞૂૉો૦ଂଷୂୗୢ୴ஂஓంొಂ಴ೂ೴စ္ႅႱგცᄅᄨᅒᅴᅸᅸᆅᆴᇃᇆᇜᇜᇞᇞሂሓሕርኂኈኊኊኌ኏ኑኟኡኪኲዠጇጎ጑ጒጕጪጬጲጴጵጷጻጿጿፒፒ፟፣ᐂᐶᑉᑌᒂᒱᓆᓇᓉᓉᖂᖰᗚᗝᘂᘱᙆᙆᚂᚬᜂ᜛ᢢᣡᤁᤁ᫂᫺ᰂᰊᰌᰰ᱂᱂ᱴᲑ ⎛␂⑰⒂╅。㐰䐂䙈栂樺橂橠櫒櫯欂欱歂歅步歹歿殑漂潆潒潒澕澡濢濢瀂蟮蠂諴뀂뀃밂뱬뱲뱾벂벊벒벛퐂푖푘풞풠풡풤풤풧풨풫풮풰풻풽풽풿퓅퓇픇픉플픏픖픘픞픠픻픽핀핂핆핈핈'),
          (s._serializedATNSegment1 =
            "핌핒핔횧횪훂후훜훞훼훾휖휘휶휸흐흒흰흲힊힌힪힬ퟄퟆퟍꛘ꜂뜶띂렟렢캣﨟1\t\v\t\v\r%')111,\b#\n \b\r\"  !!#\" #$\b$\f%&\t&'(\t()-)*,\v+*,/-.-+.0/-01)1 -"),
          (s._serializedATN = a.join(
            [s._serializedATNSegment0, s._serializedATNSegment1],
            ""
          ));
      },
      19142: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathLexerErrorListener = void 0);
        const n = r(681);
        class o {
          syntaxError(e, t, r, i, n, o) {}
        }
        i([n.Override], o.prototype, "syntaxError", null),
          (t.XPathLexerErrorListener = o);
      },
      5573: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathRuleAnywhereElement = void 0);
        const n = r(681),
          o = r(91180),
          A = r(67643);
        class a extends A.XPathElement {
          constructor(e, t) {
            super(e), (this.ruleIndex = t);
          }
          evaluate(e) {
            return o.Trees.findAllRuleNodes(e, this.ruleIndex);
          }
        }
        i([n.Override], a.prototype, "evaluate", null),
          (t.XPathRuleAnywhereElement = a);
      },
      95405: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathRuleElement = void 0);
        const n = r(39248),
          o = r(681),
          A = r(91180),
          a = r(67643);
        class s extends a.XPathElement {
          constructor(e, t) {
            super(e), (this.ruleIndex = t);
          }
          evaluate(e) {
            let t = [];
            for (let r of A.Trees.getChildren(e))
              r instanceof n.ParserRuleContext &&
                ((r.ruleIndex === this.ruleIndex && !this.invert) ||
                  (r.ruleIndex !== this.ruleIndex && this.invert)) &&
                t.push(r);
            return t;
          }
        }
        i([o.Override], s.prototype, "evaluate", null),
          (t.XPathRuleElement = s);
      },
      99216: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathTokenAnywhereElement = void 0);
        const n = r(681),
          o = r(91180),
          A = r(67643);
        class a extends A.XPathElement {
          constructor(e, t) {
            super(e), (this.tokenType = t);
          }
          evaluate(e) {
            return o.Trees.findAllTokenNodes(e, this.tokenType);
          }
        }
        i([n.Override], a.prototype, "evaluate", null),
          (t.XPathTokenAnywhereElement = a);
      },
      60285: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathTokenElement = void 0);
        const n = r(681),
          o = r(49466),
          A = r(91180),
          a = r(67643);
        class s extends a.XPathElement {
          constructor(e, t) {
            super(e), (this.tokenType = t);
          }
          evaluate(e) {
            let t = [];
            for (let r of A.Trees.getChildren(e))
              r instanceof o.TerminalNode &&
                ((r.symbol.type === this.tokenType && !this.invert) ||
                  (r.symbol.type !== this.tokenType && this.invert)) &&
                t.push(r);
            return t;
          }
        }
        i([n.Override], s.prototype, "evaluate", null),
          (t.XPathTokenElement = s);
      },
      20630: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathWildcardAnywhereElement = void 0);
        const n = r(681),
          o = r(91180),
          A = r(96512),
          a = r(67643);
        class s extends a.XPathElement {
          constructor() {
            super(A.XPath.WILDCARD);
          }
          evaluate(e) {
            return this.invert ? [] : o.Trees.getDescendants(e);
          }
        }
        i([n.Override], s.prototype, "evaluate", null),
          (t.XPathWildcardAnywhereElement = s);
      },
      78879: function (e, t, r) {
        "use strict";
        var i =
          (this && this.__decorate) ||
          function (e, t, r, i) {
            var n,
              o = arguments.length,
              A =
                o < 3
                  ? t
                  : null === i
                  ? (i = Object.getOwnPropertyDescriptor(t, r))
                  : i;
            if (
              "object" == typeof Reflect &&
              "function" == typeof Reflect.decorate
            )
              A = Reflect.decorate(e, t, r, i);
            else
              for (var a = e.length - 1; a >= 0; a--)
                (n = e[a]) &&
                  (A = (o < 3 ? n(A) : o > 3 ? n(t, r, A) : n(t, r)) || A);
            return o > 3 && A && Object.defineProperty(t, r, A), A;
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.XPathWildcardElement = void 0);
        const n = r(681),
          o = r(91180),
          A = r(96512),
          a = r(67643);
        class s extends a.XPathElement {
          constructor() {
            super(A.XPath.WILDCARD);
          }
          evaluate(e) {
            let t = [];
            if (this.invert) return t;
            for (let r of o.Trees.getChildren(e)) t.push(r);
            return t;
          }
        }
        i([n.Override], s.prototype, "evaluate", null),
          (t.XPathWildcardElement = s);
      },
      71696: (e, t, r) => {
        "use strict";
        function i(e) {
          return (
            (i =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            i(e)
          );
        }
        var n,
          o,
          A = r(47515).codes,
          a = A.ERR_AMBIGUOUS_ARGUMENT,
          s = A.ERR_INVALID_ARG_TYPE,
          c = A.ERR_INVALID_ARG_VALUE,
          g = A.ERR_INVALID_RETURN_VALUE,
          l = A.ERR_MISSING_ARGS,
          u = r(64082),
          h = r(43335).inspect,
          I = r(43335).types,
          p = I.isPromise,
          d = I.isRegExp,
          f = Object.assign ? Object.assign : r(44956).assign,
          C = Object.is ? Object.is : r(34679);
        function B() {
          var e = r(26796);
          (n = e.isDeepEqual), (o = e.isDeepStrictEqual);
        }
        new Map();
        var E = !1,
          y = (e.exports = S),
          m = {};
        function Q(e) {
          if (e.message instanceof Error) throw e.message;
          throw new u(e);
        }
        function v(e, t, r, i) {
          if (!r) {
            var n = !1;
            if (0 === t)
              (n = !0), (i = "No value argument passed to `assert.ok()`");
            else if (i instanceof Error) throw i;
            var o = new u({
              actual: r,
              expected: !0,
              message: i,
              operator: "==",
              stackStartFn: e,
            });
            throw ((o.generatedMessage = n), o);
          }
        }
        function S() {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          v.apply(void 0, [S, t.length].concat(t));
        }
        (y.fail = function e(t, r, i, n, o) {
          var A,
            a = arguments.length;
          if (0 === a) A = "Failed";
          else if (1 === a) (i = t), (t = void 0);
          else {
            if (!1 === E) {
              E = !0;
              var s = process.emitWarning
                ? process.emitWarning
                : console.warn.bind(console);
              s(
                "assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.",
                "DeprecationWarning",
                "DEP0094"
              );
            }
            2 === a && (n = "!=");
          }
          if (i instanceof Error) throw i;
          var c = {
            actual: t,
            expected: r,
            operator: void 0 === n ? "fail" : n,
            stackStartFn: o || e,
          };
          void 0 !== i && (c.message = i);
          var g = new u(c);
          throw (A && ((g.message = A), (g.generatedMessage = !0)), g);
        }),
          (y.AssertionError = u),
          (y.ok = S),
          (y.equal = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            t != r &&
              Q({
                actual: t,
                expected: r,
                message: i,
                operator: "==",
                stackStartFn: e,
              });
          }),
          (y.notEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            t == r &&
              Q({
                actual: t,
                expected: r,
                message: i,
                operator: "!=",
                stackStartFn: e,
              });
          }),
          (y.deepEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            void 0 === n && B(),
              n(t, r) ||
                Q({
                  actual: t,
                  expected: r,
                  message: i,
                  operator: "deepEqual",
                  stackStartFn: e,
                });
          }),
          (y.notDeepEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            void 0 === n && B(),
              n(t, r) &&
                Q({
                  actual: t,
                  expected: r,
                  message: i,
                  operator: "notDeepEqual",
                  stackStartFn: e,
                });
          }),
          (y.deepStrictEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            void 0 === n && B(),
              o(t, r) ||
                Q({
                  actual: t,
                  expected: r,
                  message: i,
                  operator: "deepStrictEqual",
                  stackStartFn: e,
                });
          }),
          (y.notDeepStrictEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            void 0 === n && B(),
              o(t, r) &&
                Q({
                  actual: t,
                  expected: r,
                  message: i,
                  operator: "notDeepStrictEqual",
                  stackStartFn: e,
                });
          }),
          (y.strictEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            C(t, r) ||
              Q({
                actual: t,
                expected: r,
                message: i,
                operator: "strictEqual",
                stackStartFn: e,
              });
          }),
          (y.notStrictEqual = function e(t, r, i) {
            if (arguments.length < 2) throw new l("actual", "expected");
            C(t, r) &&
              Q({
                actual: t,
                expected: r,
                message: i,
                operator: "notStrictEqual",
                stackStartFn: e,
              });
          });
        var w = function e(t, r, i) {
          var n = this;
          !(function (e, t) {
            if (!(e instanceof t))
              throw new TypeError("Cannot call a class as a function");
          })(this, e),
            r.forEach(function (e) {
              e in t &&
                (void 0 !== i &&
                "string" == typeof i[e] &&
                d(t[e]) &&
                t[e].test(i[e])
                  ? (n[e] = i[e])
                  : (n[e] = t[e]));
            });
        };
        function b(e, t, r, i, n, A) {
          if (!(r in e) || !o(e[r], t[r])) {
            if (!i) {
              var a = new w(e, n),
                s = new w(t, n, e),
                c = new u({
                  actual: a,
                  expected: s,
                  operator: "deepStrictEqual",
                  stackStartFn: A,
                });
              throw (
                ((c.actual = e), (c.expected = t), (c.operator = A.name), c)
              );
            }
            Q({
              actual: e,
              expected: t,
              message: i,
              operator: A.name,
              stackStartFn: A,
            });
          }
        }
        function k(e, t, r, o) {
          if ("function" != typeof t) {
            if (d(t)) return t.test(e);
            if (2 === arguments.length)
              throw new s("expected", ["Function", "RegExp"], t);
            if ("object" !== i(e) || null === e) {
              var A = new u({
                actual: e,
                expected: t,
                message: r,
                operator: "deepStrictEqual",
                stackStartFn: o,
              });
              throw ((A.operator = o.name), A);
            }
            var a = Object.keys(t);
            if (t instanceof Error) a.push("name", "message");
            else if (0 === a.length)
              throw new c("error", t, "may not be an empty object");
            return (
              void 0 === n && B(),
              a.forEach(function (i) {
                ("string" == typeof e[i] && d(t[i]) && t[i].test(e[i])) ||
                  b(e, t, i, r, a, o);
              }),
              !0
            );
          }
          return (
            (void 0 !== t.prototype && e instanceof t) ||
            (!Error.isPrototypeOf(t) && !0 === t.call({}, e))
          );
        }
        function N(e) {
          if ("function" != typeof e) throw new s("fn", "Function", e);
          try {
            e();
          } catch (e) {
            return e;
          }
          return m;
        }
        function _(e) {
          return (
            p(e) ||
            (null !== e &&
              "object" === i(e) &&
              "function" == typeof e.then &&
              "function" == typeof e.catch)
          );
        }
        function D(e) {
          return Promise.resolve().then(function () {
            var t;
            if ("function" == typeof e) {
              if (!_((t = e())))
                throw new g("instance of Promise", "promiseFn", t);
            } else {
              if (!_(e)) throw new s("promiseFn", ["Function", "Promise"], e);
              t = e;
            }
            return Promise.resolve()
              .then(function () {
                return t;
              })
              .then(function () {
                return m;
              })
              .catch(function (e) {
                return e;
              });
          });
        }
        function O(e, t, r, n) {
          if ("string" == typeof r) {
            if (4 === arguments.length)
              throw new s(
                "error",
                ["Object", "Error", "Function", "RegExp"],
                r
              );
            if ("object" === i(t) && null !== t) {
              if (t.message === r)
                throw new a(
                  "error/message",
                  'The error message "'.concat(
                    t.message,
                    '" is identical to the message.'
                  )
                );
            } else if (t === r)
              throw new a(
                "error/message",
                'The error "'.concat(t, '" is identical to the message.')
              );
            (n = r), (r = void 0);
          } else if (null != r && "object" !== i(r) && "function" != typeof r)
            throw new s("error", ["Object", "Error", "Function", "RegExp"], r);
          if (t === m) {
            var o = "";
            r && r.name && (o += " (".concat(r.name, ")")),
              (o += n ? ": ".concat(n) : ".");
            var A = "rejects" === e.name ? "rejection" : "exception";
            Q({
              actual: void 0,
              expected: r,
              operator: e.name,
              message: "Missing expected ".concat(A).concat(o),
              stackStartFn: e,
            });
          }
          if (r && !k(t, r, n, e)) throw t;
        }
        function T(e, t, r, i) {
          if (t !== m) {
            if (
              ("string" == typeof r && ((i = r), (r = void 0)), !r || k(t, r))
            ) {
              var n = i ? ": ".concat(i) : ".",
                o = "doesNotReject" === e.name ? "rejection" : "exception";
              Q({
                actual: t,
                expected: r,
                operator: e.name,
                message:
                  "Got unwanted ".concat(o).concat(n, "\n") +
                  'Actual message: "'.concat(t && t.message, '"'),
                stackStartFn: e,
              });
            }
            throw t;
          }
        }
        function P() {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          v.apply(void 0, [P, t.length].concat(t));
        }
        (y.throws = function e(t) {
          for (
            var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1;
            n < r;
            n++
          )
            i[n - 1] = arguments[n];
          O.apply(void 0, [e, N(t)].concat(i));
        }),
          (y.rejects = function e(t) {
            for (
              var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1;
              n < r;
              n++
            )
              i[n - 1] = arguments[n];
            return D(t).then(function (t) {
              return O.apply(void 0, [e, t].concat(i));
            });
          }),
          (y.doesNotThrow = function e(t) {
            for (
              var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1;
              n < r;
              n++
            )
              i[n - 1] = arguments[n];
            T.apply(void 0, [e, N(t)].concat(i));
          }),
          (y.doesNotReject = function e(t) {
            for (
              var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1;
              n < r;
              n++
            )
              i[n - 1] = arguments[n];
            return D(t).then(function (t) {
              return T.apply(void 0, [e, t].concat(i));
            });
          }),
          (y.ifError = function e(t) {
            if (null != t) {
              var r = "ifError got unwanted exception: ";
              "object" === i(t) && "string" == typeof t.message
                ? 0 === t.message.length && t.constructor
                  ? (r += t.constructor.name)
                  : (r += t.message)
                : (r += h(t));
              var n = new u({
                  actual: t,
                  expected: null,
                  operator: "ifError",
                  message: r,
                  stackStartFn: e,
                }),
                o = t.stack;
              if ("string" == typeof o) {
                var A = o.split("\n");
                A.shift();
                for (var a = n.stack.split("\n"), s = 0; s < A.length; s++) {
                  var c = a.indexOf(A[s]);
                  if (-1 !== c) {
                    a = a.slice(0, c);
                    break;
                  }
                }
                n.stack = "".concat(a.join("\n"), "\n").concat(A.join("\n"));
              }
              throw n;
            }
          }),
          (y.strict = f(P, y, {
            equal: y.strictEqual,
            deepEqual: y.deepStrictEqual,
            notEqual: y.notStrictEqual,
            notDeepEqual: y.notDeepStrictEqual,
          })),
          (y.strict.strict = y.strict);
      },
      64082: (e, t, r) => {
        "use strict";
        function i(e, t, r) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = r),
            e
          );
        }
        function n(e, t) {
          for (var r = 0; r < t.length; r++) {
            var i = t[r];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              "value" in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        function o(e, t) {
          return !t || ("object" !== u(t) && "function" != typeof t) ? A(e) : t;
        }
        function A(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function a(e) {
          var t = "function" == typeof Map ? new Map() : void 0;
          return (
            (a = function (e) {
              if (
                null === e ||
                ((r = e),
                -1 === Function.toString.call(r).indexOf("[native code]"))
              )
                return e;
              var r;
              if ("function" != typeof e)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              if (void 0 !== t) {
                if (t.has(e)) return t.get(e);
                t.set(e, i);
              }
              function i() {
                return c(e, arguments, l(this).constructor);
              }
              return (
                (i.prototype = Object.create(e.prototype, {
                  constructor: {
                    value: i,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                })),
                g(i, e)
              );
            }),
            a(e)
          );
        }
        function s() {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        }
        function c(e, t, r) {
          return (
            (c = s()
              ? Reflect.construct
              : function (e, t, r) {
                  var i = [null];
                  i.push.apply(i, t);
                  var n = new (Function.bind.apply(e, i))();
                  return r && g(n, r.prototype), n;
                }),
            c.apply(null, arguments)
          );
        }
        function g(e, t) {
          return (
            (g =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            g(e, t)
          );
        }
        function l(e) {
          return (
            (l = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            l(e)
          );
        }
        function u(e) {
          return (
            (u =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            u(e)
          );
        }
        var h = r(43335).inspect,
          I = r(47515).codes.ERR_INVALID_ARG_TYPE;
        function p(e, t, r) {
          return (
            (void 0 === r || r > e.length) && (r = e.length),
            e.substring(r - t.length, r) === t
          );
        }
        var d = "",
          f = "",
          C = "",
          B = "",
          E = {
            deepStrictEqual: "Expected values to be strictly deep-equal:",
            strictEqual: "Expected values to be strictly equal:",
            strictEqualObject:
              'Expected "actual" to be reference-equal to "expected":',
            deepEqual: "Expected values to be loosely deep-equal:",
            equal: "Expected values to be loosely equal:",
            notDeepStrictEqual:
              'Expected "actual" not to be strictly deep-equal to:',
            notStrictEqual: 'Expected "actual" to be strictly unequal to:',
            notStrictEqualObject:
              'Expected "actual" not to be reference-equal to "expected":',
            notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
            notEqual: 'Expected "actual" to be loosely unequal to:',
            notIdentical: "Values identical but not reference-equal:",
          };
        function y(e) {
          var t = Object.keys(e),
            r = Object.create(Object.getPrototypeOf(e));
          return (
            t.forEach(function (t) {
              r[t] = e[t];
            }),
            Object.defineProperty(r, "message", { value: e.message }),
            r
          );
        }
        function m(e) {
          return h(e, {
            compact: !1,
            customInspect: !1,
            depth: 1e3,
            maxArrayLength: 1 / 0,
            showHidden: !1,
            breakLength: 1 / 0,
            showProxy: !1,
            sorted: !0,
            getters: !0,
          });
        }
        var Q = (function (e) {
          function t(e) {
            var r;
            if (
              ((function (e, t) {
                if (!(e instanceof t))
                  throw new TypeError("Cannot call a class as a function");
              })(this, t),
              "object" !== u(e) || null === e)
            )
              throw new I("options", "Object", e);
            var i = e.message,
              n = e.operator,
              a = e.stackStartFn,
              s = e.actual,
              c = e.expected,
              g = Error.stackTraceLimit;
            if (((Error.stackTraceLimit = 0), null != i))
              r = o(this, l(t).call(this, String(i)));
            else if (
              (process.stderr &&
                process.stderr.isTTY &&
                (process.stderr &&
                process.stderr.getColorDepth &&
                1 !== process.stderr.getColorDepth()
                  ? ((d = "[34m"), (f = "[32m"), (B = "[39m"), (C = "[31m"))
                  : ((d = ""), (f = ""), (B = ""), (C = ""))),
              "object" === u(s) &&
                null !== s &&
                "object" === u(c) &&
                null !== c &&
                "stack" in s &&
                s instanceof Error &&
                "stack" in c &&
                c instanceof Error &&
                ((s = y(s)), (c = y(c))),
              "deepStrictEqual" === n || "strictEqual" === n)
            )
              r = o(
                this,
                l(t).call(
                  this,
                  (function (e, t, r) {
                    var i = "",
                      n = "",
                      o = 0,
                      A = "",
                      a = !1,
                      s = m(e),
                      c = s.split("\n"),
                      g = m(t).split("\n"),
                      l = 0,
                      h = "";
                    if (
                      ("strictEqual" === r &&
                        "object" === u(e) &&
                        "object" === u(t) &&
                        null !== e &&
                        null !== t &&
                        (r = "strictEqualObject"),
                      1 === c.length && 1 === g.length && c[0] !== g[0])
                    ) {
                      var I = c[0].length + g[0].length;
                      if (I <= 10) {
                        if (
                          !(
                            ("object" === u(e) && null !== e) ||
                            ("object" === u(t) && null !== t) ||
                            (0 === e && 0 === t)
                          )
                        )
                          return (
                            "".concat(E[r], "\n\n") +
                            "".concat(c[0], " !== ").concat(g[0], "\n")
                          );
                      } else if (
                        "strictEqualObject" !== r &&
                        I <
                          (process.stderr && process.stderr.isTTY
                            ? process.stderr.columns
                            : 80)
                      ) {
                        for (; c[0][l] === g[0][l]; ) l++;
                        l > 2 &&
                          ((h = "\n  ".concat(
                            (function (e, t) {
                              if (
                                ((t = Math.floor(t)), 0 == e.length || 0 == t)
                              )
                                return "";
                              var r = e.length * t;
                              for (
                                t = Math.floor(Math.log(t) / Math.log(2));
                                t;

                              )
                                (e += e), t--;
                              return e + e.substring(0, r - e.length);
                            })(" ", l),
                            "^"
                          )),
                          (l = 0));
                      }
                    }
                    for (
                      var y = c[c.length - 1], Q = g[g.length - 1];
                      y === Q &&
                      (l++ < 2 ? (A = "\n  ".concat(y).concat(A)) : (i = y),
                      c.pop(),
                      g.pop(),
                      0 !== c.length && 0 !== g.length);

                    )
                      (y = c[c.length - 1]), (Q = g[g.length - 1]);
                    var v = Math.max(c.length, g.length);
                    if (0 === v) {
                      var S = s.split("\n");
                      if (S.length > 30)
                        for (
                          S[26] = "".concat(d, "...").concat(B);
                          S.length > 27;

                        )
                          S.pop();
                      return ""
                        .concat(E.notIdentical, "\n\n")
                        .concat(S.join("\n"), "\n");
                    }
                    l > 3 &&
                      ((A = "\n".concat(d, "...").concat(B).concat(A)),
                      (a = !0)),
                      "" !== i && ((A = "\n  ".concat(i).concat(A)), (i = ""));
                    var w = 0,
                      b =
                        E[r] +
                        "\n"
                          .concat(f, "+ actual")
                          .concat(B, " ")
                          .concat(C, "- expected")
                          .concat(B),
                      k = " ".concat(d, "...").concat(B, " Lines skipped");
                    for (l = 0; l < v; l++) {
                      var N = l - o;
                      if (c.length < l + 1)
                        N > 1 &&
                          l > 2 &&
                          (N > 4
                            ? ((n += "\n".concat(d, "...").concat(B)), (a = !0))
                            : N > 3 && ((n += "\n  ".concat(g[l - 2])), w++),
                          (n += "\n  ".concat(g[l - 1])),
                          w++),
                          (o = l),
                          (i += "\n"
                            .concat(C, "-")
                            .concat(B, " ")
                            .concat(g[l])),
                          w++;
                      else if (g.length < l + 1)
                        N > 1 &&
                          l > 2 &&
                          (N > 4
                            ? ((n += "\n".concat(d, "...").concat(B)), (a = !0))
                            : N > 3 && ((n += "\n  ".concat(c[l - 2])), w++),
                          (n += "\n  ".concat(c[l - 1])),
                          w++),
                          (o = l),
                          (n += "\n"
                            .concat(f, "+")
                            .concat(B, " ")
                            .concat(c[l])),
                          w++;
                      else {
                        var _ = g[l],
                          D = c[l],
                          O = D !== _ && (!p(D, ",") || D.slice(0, -1) !== _);
                        O &&
                          p(_, ",") &&
                          _.slice(0, -1) === D &&
                          ((O = !1), (D += ",")),
                          O
                            ? (N > 1 &&
                                l > 2 &&
                                (N > 4
                                  ? ((n += "\n".concat(d, "...").concat(B)),
                                    (a = !0))
                                  : N > 3 &&
                                    ((n += "\n  ".concat(c[l - 2])), w++),
                                (n += "\n  ".concat(c[l - 1])),
                                w++),
                              (o = l),
                              (n += "\n"
                                .concat(f, "+")
                                .concat(B, " ")
                                .concat(D)),
                              (i += "\n"
                                .concat(C, "-")
                                .concat(B, " ")
                                .concat(_)),
                              (w += 2))
                            : ((n += i),
                              (i = ""),
                              (1 !== N && 0 !== l) ||
                                ((n += "\n  ".concat(D)), w++));
                      }
                      if (w > 20 && l < v - 2)
                        return (
                          ""
                            .concat(b)
                            .concat(k, "\n")
                            .concat(n, "\n")
                            .concat(d, "...")
                            .concat(B)
                            .concat(i, "\n") + "".concat(d, "...").concat(B)
                        );
                    }
                    return ""
                      .concat(b)
                      .concat(a ? k : "", "\n")
                      .concat(n)
                      .concat(i)
                      .concat(A)
                      .concat(h);
                  })(s, c, n)
                )
              );
            else if ("notDeepStrictEqual" === n || "notStrictEqual" === n) {
              var h = E[n],
                Q = m(s).split("\n");
              if (
                ("notStrictEqual" === n &&
                  "object" === u(s) &&
                  null !== s &&
                  (h = E.notStrictEqualObject),
                Q.length > 30)
              )
                for (Q[26] = "".concat(d, "...").concat(B); Q.length > 27; )
                  Q.pop();
              r =
                1 === Q.length
                  ? o(this, l(t).call(this, "".concat(h, " ").concat(Q[0])))
                  : o(
                      this,
                      l(t).call(
                        this,
                        "".concat(h, "\n\n").concat(Q.join("\n"), "\n")
                      )
                    );
            } else {
              var v = m(s),
                S = "",
                w = E[n];
              "notDeepEqual" === n || "notEqual" === n
                ? (v = "".concat(E[n], "\n\n").concat(v)).length > 1024 &&
                  (v = "".concat(v.slice(0, 1021), "..."))
                : ((S = "".concat(m(c))),
                  v.length > 512 && (v = "".concat(v.slice(0, 509), "...")),
                  S.length > 512 && (S = "".concat(S.slice(0, 509), "...")),
                  "deepEqual" === n || "equal" === n
                    ? (v = ""
                        .concat(w, "\n\n")
                        .concat(v, "\n\nshould equal\n\n"))
                    : (S = " ".concat(n, " ").concat(S))),
                (r = o(this, l(t).call(this, "".concat(v).concat(S))));
            }
            return (
              (Error.stackTraceLimit = g),
              (r.generatedMessage = !i),
              Object.defineProperty(A(r), "name", {
                value: "AssertionError [ERR_ASSERTION]",
                enumerable: !1,
                writable: !0,
                configurable: !0,
              }),
              (r.code = "ERR_ASSERTION"),
              (r.actual = s),
              (r.expected = c),
              (r.operator = n),
              Error.captureStackTrace && Error.captureStackTrace(A(r), a),
              r.stack,
              (r.name = "AssertionError"),
              o(r)
            );
          }
          var r, a;
          return (
            (function (e, t) {
              if ("function" != typeof t && null !== t)
                throw new TypeError(
                  "Super expression must either be null or a function"
                );
              (e.prototype = Object.create(t && t.prototype, {
                constructor: { value: e, writable: !0, configurable: !0 },
              })),
                t && g(e, t);
            })(t, e),
            (r = t),
            (a = [
              {
                key: "toString",
                value: function () {
                  return ""
                    .concat(this.name, " [")
                    .concat(this.code, "]: ")
                    .concat(this.message);
                },
              },
              {
                key: h.custom,
                value: function (e, t) {
                  return h(
                    this,
                    (function (e) {
                      for (var t = 1; t < arguments.length; t++) {
                        var r = null != arguments[t] ? arguments[t] : {},
                          n = Object.keys(r);
                        "function" == typeof Object.getOwnPropertySymbols &&
                          (n = n.concat(
                            Object.getOwnPropertySymbols(r).filter(function (
                              e
                            ) {
                              return Object.getOwnPropertyDescriptor(r, e)
                                .enumerable;
                            })
                          )),
                          n.forEach(function (t) {
                            i(e, t, r[t]);
                          });
                      }
                      return e;
                    })({}, t, { customInspect: !1, depth: 0 })
                  );
                },
              },
            ]),
            a && n(r.prototype, a),
            t
          );
        })(a(Error));
        e.exports = Q;
      },
      47515: (e, t, r) => {
        "use strict";
        function i(e) {
          return (
            (i =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            i(e)
          );
        }
        function n(e) {
          return (
            (n = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            n(e)
          );
        }
        function o(e, t) {
          return (
            (o =
              Object.setPrototypeOf ||
              function (e, t) {
                return (e.__proto__ = t), e;
              }),
            o(e, t)
          );
        }
        var A,
          a,
          s = {};
        function c(e, t, r) {
          r || (r = Error);
          var A = (function (r) {
            function A(r, o, a) {
              var s;
              return (
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function");
                })(this, A),
                (s = (function (e, t) {
                  return !t || ("object" !== i(t) && "function" != typeof t)
                    ? (function (e) {
                        if (void 0 === e)
                          throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                          );
                        return e;
                      })(e)
                    : t;
                })(
                  this,
                  n(A).call(
                    this,
                    (function (e, r, i) {
                      return "string" == typeof t ? t : t(e, r, i);
                    })(r, o, a)
                  )
                )),
                (s.code = e),
                s
              );
            }
            return (
              (function (e, t) {
                if ("function" != typeof t && null !== t)
                  throw new TypeError(
                    "Super expression must either be null or a function"
                  );
                (e.prototype = Object.create(t && t.prototype, {
                  constructor: { value: e, writable: !0, configurable: !0 },
                })),
                  t && o(e, t);
              })(A, r),
              A
            );
          })(r);
          s[e] = A;
        }
        function g(e, t) {
          if (Array.isArray(e)) {
            var r = e.length;
            return (
              (e = e.map(function (e) {
                return String(e);
              })),
              r > 2
                ? "one of "
                    .concat(t, " ")
                    .concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1]
                : 2 === r
                ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1])
                : "of ".concat(t, " ").concat(e[0])
            );
          }
          return "of ".concat(t, " ").concat(String(e));
        }
        c(
          "ERR_AMBIGUOUS_ARGUMENT",
          'The "%s" argument is ambiguous. %s',
          TypeError
        ),
          c(
            "ERR_INVALID_ARG_TYPE",
            function (e, t, n) {
              var o, a, s, c, l;
              if (
                (void 0 === A && (A = r(71696)),
                A("string" == typeof e, "'name' must be a string"),
                "string" == typeof t &&
                ((a = "not "), t.substr(0, a.length) === a)
                  ? ((o = "must not be"), (t = t.replace(/^not /, "")))
                  : (o = "must be"),
                (function (e, t, r) {
                  return (
                    (void 0 === r || r > e.length) && (r = e.length),
                    e.substring(r - t.length, r) === t
                  );
                })(e, " argument"))
              )
                s = "The ".concat(e, " ").concat(o, " ").concat(g(t, "type"));
              else {
                var u =
                  ("number" != typeof l && (l = 0),
                  l + ".".length > (c = e).length || -1 === c.indexOf(".", l)
                    ? "argument"
                    : "property");
                s = 'The "'
                  .concat(e, '" ')
                  .concat(u, " ")
                  .concat(o, " ")
                  .concat(g(t, "type"));
              }
              return s + ". Received type ".concat(i(n));
            },
            TypeError
          ),
          c(
            "ERR_INVALID_ARG_VALUE",
            function (e, t) {
              var i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : "is invalid";
              void 0 === a && (a = r(43335));
              var n = a.inspect(t);
              return (
                n.length > 128 && (n = "".concat(n.slice(0, 128), "...")),
                "The argument '"
                  .concat(e, "' ")
                  .concat(i, ". Received ")
                  .concat(n)
              );
            },
            TypeError,
            RangeError
          ),
          c(
            "ERR_INVALID_RETURN_VALUE",
            function (e, t, r) {
              var n;
              return (
                (n =
                  r && r.constructor && r.constructor.name
                    ? "instance of ".concat(r.constructor.name)
                    : "type ".concat(i(r))),
                "Expected "
                  .concat(e, ' to be returned from the "')
                  .concat(t, '"') + " function but got ".concat(n, ".")
              );
            },
            TypeError
          ),
          c(
            "ERR_MISSING_ARGS",
            function () {
              for (
                var e = arguments.length, t = new Array(e), i = 0;
                i < e;
                i++
              )
                t[i] = arguments[i];
              void 0 === A && (A = r(71696)),
                A(t.length > 0, "At least one arg needs to be specified");
              var n = "The ",
                o = t.length;
              switch (
                ((t = t.map(function (e) {
                  return '"'.concat(e, '"');
                })),
                o)
              ) {
                case 1:
                  n += "".concat(t[0], " argument");
                  break;
                case 2:
                  n += "".concat(t[0], " and ").concat(t[1], " arguments");
                  break;
                default:
                  (n += t.slice(0, o - 1).join(", ")),
                    (n += ", and ".concat(t[o - 1], " arguments"));
              }
              return "".concat(n, " must be specified");
            },
            TypeError
          ),
          (e.exports.codes = s);
      },
      26796: (e, t, r) => {
        "use strict";
        function i(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var r = [],
                i = !0,
                n = !1,
                o = void 0;
              try {
                for (
                  var A, a = e[Symbol.iterator]();
                  !(i = (A = a.next()).done) &&
                  (r.push(A.value), !t || r.length !== t);
                  i = !0
                );
              } catch (e) {
                (n = !0), (o = e);
              } finally {
                try {
                  i || null == a.return || a.return();
                } finally {
                  if (n) throw o;
                }
              }
              return r;
            })(e, t) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to destructure non-iterable instance"
              );
            })()
          );
        }
        function n(e) {
          return (
            (n =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            n(e)
          );
        }
        var o = void 0 !== /a/g.flags,
          A = function (e) {
            var t = [];
            return (
              e.forEach(function (e) {
                return t.push(e);
              }),
              t
            );
          },
          a = function (e) {
            var t = [];
            return (
              e.forEach(function (e, r) {
                return t.push([r, e]);
              }),
              t
            );
          },
          s = Object.is ? Object.is : r(34679),
          c = Object.getOwnPropertySymbols
            ? Object.getOwnPropertySymbols
            : function () {
                return [];
              },
          g = Number.isNaN ? Number.isNaN : r(74782);
        function l(e) {
          return e.call.bind(e);
        }
        var u = l(Object.prototype.hasOwnProperty),
          h = l(Object.prototype.propertyIsEnumerable),
          I = l(Object.prototype.toString),
          p = r(43335).types,
          d = p.isAnyArrayBuffer,
          f = p.isArrayBufferView,
          C = p.isDate,
          B = p.isMap,
          E = p.isRegExp,
          y = p.isSet,
          m = p.isNativeError,
          Q = p.isBoxedPrimitive,
          v = p.isNumberObject,
          S = p.isStringObject,
          w = p.isBooleanObject,
          b = p.isBigIntObject,
          k = p.isSymbolObject,
          N = p.isFloat32Array,
          _ = p.isFloat64Array;
        function D(e) {
          if (0 === e.length || e.length > 10) return !0;
          for (var t = 0; t < e.length; t++) {
            var r = e.charCodeAt(t);
            if (r < 48 || r > 57) return !0;
          }
          return 10 === e.length && e >= Math.pow(2, 32);
        }
        function O(e) {
          return Object.keys(e)
            .filter(D)
            .concat(c(e).filter(Object.prototype.propertyIsEnumerable.bind(e)));
        }
        function T(e, t) {
          if (e === t) return 0;
          for (
            var r = e.length, i = t.length, n = 0, o = Math.min(r, i);
            n < o;
            ++n
          )
            if (e[n] !== t[n]) {
              (r = e[n]), (i = t[n]);
              break;
            }
          return r < i ? -1 : i < r ? 1 : 0;
        }
        function P(e, t, r, i) {
          if (e === t) return 0 !== e || !r || s(e, t);
          if (r) {
            if ("object" !== n(e)) return "number" == typeof e && g(e) && g(t);
            if ("object" !== n(t) || null === e || null === t) return !1;
            if (Object.getPrototypeOf(e) !== Object.getPrototypeOf(t))
              return !1;
          } else {
            if (null === e || "object" !== n(e))
              return (null === t || "object" !== n(t)) && e == t;
            if (null === t || "object" !== n(t)) return !1;
          }
          var A,
            a,
            c,
            l,
            u = I(e);
          if (u !== I(t)) return !1;
          if (Array.isArray(e)) {
            if (e.length !== t.length) return !1;
            var h = O(e),
              p = O(t);
            return h.length === p.length && R(e, t, r, i, 1, h);
          }
          if ("[object Object]" === u && ((!B(e) && B(t)) || (!y(e) && y(t))))
            return !1;
          if (C(e)) {
            if (
              !C(t) ||
              Date.prototype.getTime.call(e) !== Date.prototype.getTime.call(t)
            )
              return !1;
          } else if (E(e)) {
            if (
              !E(t) ||
              ((c = e),
              (l = t),
              !(o
                ? c.source === l.source && c.flags === l.flags
                : RegExp.prototype.toString.call(c) ===
                  RegExp.prototype.toString.call(l)))
            )
              return !1;
          } else if (m(e) || e instanceof Error) {
            if (e.message !== t.message || e.name !== t.name) return !1;
          } else {
            if (f(e)) {
              if (r || (!N(e) && !_(e))) {
                if (
                  !(function (e, t) {
                    return (
                      e.byteLength === t.byteLength &&
                      0 ===
                        T(
                          new Uint8Array(e.buffer, e.byteOffset, e.byteLength),
                          new Uint8Array(t.buffer, t.byteOffset, t.byteLength)
                        )
                    );
                  })(e, t)
                )
                  return !1;
              } else if (
                !(function (e, t) {
                  if (e.byteLength !== t.byteLength) return !1;
                  for (var r = 0; r < e.byteLength; r++)
                    if (e[r] !== t[r]) return !1;
                  return !0;
                })(e, t)
              )
                return !1;
              var D = O(e),
                P = O(t);
              return D.length === P.length && R(e, t, r, i, 0, D);
            }
            if (y(e)) return !(!y(t) || e.size !== t.size) && R(e, t, r, i, 2);
            if (B(e)) return !(!B(t) || e.size !== t.size) && R(e, t, r, i, 3);
            if (d(e)) {
              if (
                ((a = t),
                (A = e).byteLength !== a.byteLength ||
                  0 !== T(new Uint8Array(A), new Uint8Array(a)))
              )
                return !1;
            } else if (
              Q(e) &&
              !(function (e, t) {
                return v(e)
                  ? v(t) &&
                      s(
                        Number.prototype.valueOf.call(e),
                        Number.prototype.valueOf.call(t)
                      )
                  : S(e)
                  ? S(t) &&
                    String.prototype.valueOf.call(e) ===
                      String.prototype.valueOf.call(t)
                  : w(e)
                  ? w(t) &&
                    Boolean.prototype.valueOf.call(e) ===
                      Boolean.prototype.valueOf.call(t)
                  : b(e)
                  ? b(t) &&
                    BigInt.prototype.valueOf.call(e) ===
                      BigInt.prototype.valueOf.call(t)
                  : k(t) &&
                    Symbol.prototype.valueOf.call(e) ===
                      Symbol.prototype.valueOf.call(t);
              })(e, t)
            )
              return !1;
          }
          return R(e, t, r, i, 0);
        }
        function x(e, t) {
          return t.filter(function (t) {
            return h(e, t);
          });
        }
        function R(e, t, r, i, n, o) {
          if (5 === arguments.length) {
            o = Object.keys(e);
            var A = Object.keys(t);
            if (o.length !== A.length) return !1;
          }
          for (var a = 0; a < o.length; a++) if (!u(t, o[a])) return !1;
          if (r && 5 === arguments.length) {
            var s = c(e);
            if (0 !== s.length) {
              var g = 0;
              for (a = 0; a < s.length; a++) {
                var l = s[a];
                if (h(e, l)) {
                  if (!h(t, l)) return !1;
                  o.push(l), g++;
                } else if (h(t, l)) return !1;
              }
              var I = c(t);
              if (s.length !== I.length && x(t, I).length !== g) return !1;
            } else {
              var p = c(t);
              if (0 !== p.length && 0 !== x(t, p).length) return !1;
            }
          }
          if (
            0 === o.length &&
            (0 === n || (1 === n && 0 === e.length) || 0 === e.size)
          )
            return !0;
          if (void 0 === i)
            i = { val1: new Map(), val2: new Map(), position: 0 };
          else {
            var d = i.val1.get(e);
            if (void 0 !== d) {
              var f = i.val2.get(t);
              if (void 0 !== f) return d === f;
            }
            i.position++;
          }
          i.val1.set(e, i.position), i.val2.set(t, i.position);
          var C = L(e, t, r, o, i, n);
          return i.val1.delete(e), i.val2.delete(t), C;
        }
        function U(e, t, r, i) {
          for (var n = A(e), o = 0; o < n.length; o++) {
            var a = n[o];
            if (P(t, a, r, i)) return e.delete(a), !0;
          }
          return !1;
        }
        function F(e) {
          switch (n(e)) {
            case "undefined":
              return null;
            case "object":
              return;
            case "symbol":
              return !1;
            case "string":
              e = +e;
            case "number":
              if (g(e)) return !1;
          }
          return !0;
        }
        function H(e, t, r) {
          var i = F(r);
          return null != i ? i : t.has(i) && !e.has(i);
        }
        function M(e, t, r, i, n) {
          var o = F(r);
          if (null != o) return o;
          var A = t.get(o);
          return (
            !((void 0 === A && !t.has(o)) || !P(i, A, !1, n)) &&
            !e.has(o) &&
            P(i, A, !1, n)
          );
        }
        function G(e, t, r, i, n, o) {
          for (var a = A(e), s = 0; s < a.length; s++) {
            var c = a[s];
            if (P(r, c, n, o) && P(i, t.get(c), n, o)) return e.delete(c), !0;
          }
          return !1;
        }
        function L(e, t, r, o, s, c) {
          var g = 0;
          if (2 === c) {
            if (
              !(function (e, t, r, i) {
                for (var o = null, a = A(e), s = 0; s < a.length; s++) {
                  var c = a[s];
                  if ("object" === n(c) && null !== c)
                    null === o && (o = new Set()), o.add(c);
                  else if (!t.has(c)) {
                    if (r) return !1;
                    if (!H(e, t, c)) return !1;
                    null === o && (o = new Set()), o.add(c);
                  }
                }
                if (null !== o) {
                  for (var g = A(t), l = 0; l < g.length; l++) {
                    var u = g[l];
                    if ("object" === n(u) && null !== u) {
                      if (!U(o, u, r, i)) return !1;
                    } else if (!r && !e.has(u) && !U(o, u, r, i)) return !1;
                  }
                  return 0 === o.size;
                }
                return !0;
              })(e, t, r, s)
            )
              return !1;
          } else if (3 === c) {
            if (
              !(function (e, t, r, o) {
                for (var A = null, s = a(e), c = 0; c < s.length; c++) {
                  var g = i(s[c], 2),
                    l = g[0],
                    u = g[1];
                  if ("object" === n(l) && null !== l)
                    null === A && (A = new Set()), A.add(l);
                  else {
                    var h = t.get(l);
                    if ((void 0 === h && !t.has(l)) || !P(u, h, r, o)) {
                      if (r) return !1;
                      if (!M(e, t, l, u, o)) return !1;
                      null === A && (A = new Set()), A.add(l);
                    }
                  }
                }
                if (null !== A) {
                  for (var I = a(t), p = 0; p < I.length; p++) {
                    var d = i(I[p], 2),
                      f = ((l = d[0]), d[1]);
                    if ("object" === n(l) && null !== l) {
                      if (!G(A, e, l, f, r, o)) return !1;
                    } else if (
                      !(
                        r ||
                        (e.has(l) && P(e.get(l), f, !1, o)) ||
                        G(A, e, l, f, !1, o)
                      )
                    )
                      return !1;
                  }
                  return 0 === A.size;
                }
                return !0;
              })(e, t, r, s)
            )
              return !1;
          } else if (1 === c)
            for (; g < e.length; g++) {
              if (!u(e, g)) {
                if (u(t, g)) return !1;
                for (var l = Object.keys(e); g < l.length; g++) {
                  var h = l[g];
                  if (!u(t, h) || !P(e[h], t[h], r, s)) return !1;
                }
                return l.length === Object.keys(t).length;
              }
              if (!u(t, g) || !P(e[g], t[g], r, s)) return !1;
            }
          for (g = 0; g < o.length; g++) {
            var I = o[g];
            if (!P(e[I], t[I], r, s)) return !1;
          }
          return !0;
        }
        e.exports = {
          isDeepEqual: function (e, t) {
            return P(e, t, !1);
          },
          isDeepStrictEqual: function (e, t) {
            return P(e, t, !0);
          },
        };
      },
      89644: (e, t, r) => {
        e.exports = r(25644);
      },
      70353: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(86955),
          o = r(92233),
          A = r(68030),
          a = r(97948),
          s = r(51875),
          c = r(60842),
          g = r(88618);
        e.exports = function (e) {
          return new Promise(function (t, r) {
            var l = e.data,
              u = e.headers,
              h = e.responseType;
            i.isFormData(l) && delete u["Content-Type"];
            var I = new XMLHttpRequest();
            if (e.auth) {
              var p = e.auth.username || "",
                d = e.auth.password
                  ? unescape(encodeURIComponent(e.auth.password))
                  : "";
              u.Authorization = "Basic " + btoa(p + ":" + d);
            }
            var f = a(e.baseURL, e.url);
            function C() {
              if (I) {
                var i =
                    "getAllResponseHeaders" in I
                      ? s(I.getAllResponseHeaders())
                      : null,
                  o = {
                    data:
                      h && "text" !== h && "json" !== h
                        ? I.response
                        : I.responseText,
                    status: I.status,
                    statusText: I.statusText,
                    headers: i,
                    config: e,
                    request: I,
                  };
                n(t, r, o), (I = null);
              }
            }
            if (
              (I.open(
                e.method.toUpperCase(),
                A(f, e.params, e.paramsSerializer),
                !0
              ),
              (I.timeout = e.timeout),
              "onloadend" in I
                ? (I.onloadend = C)
                : (I.onreadystatechange = function () {
                    I &&
                      4 === I.readyState &&
                      (0 !== I.status ||
                        (I.responseURL &&
                          0 === I.responseURL.indexOf("file:"))) &&
                      setTimeout(C);
                  }),
              (I.onabort = function () {
                I &&
                  (r(g("Request aborted", e, "ECONNABORTED", I)), (I = null));
              }),
              (I.onerror = function () {
                r(g("Network Error", e, null, I)), (I = null);
              }),
              (I.ontimeout = function () {
                var t = "timeout of " + e.timeout + "ms exceeded";
                e.timeoutErrorMessage && (t = e.timeoutErrorMessage),
                  r(
                    g(
                      t,
                      e,
                      e.transitional && e.transitional.clarifyTimeoutError
                        ? "ETIMEDOUT"
                        : "ECONNABORTED",
                      I
                    )
                  ),
                  (I = null);
              }),
              i.isStandardBrowserEnv())
            ) {
              var B =
                (e.withCredentials || c(f)) && e.xsrfCookieName
                  ? o.read(e.xsrfCookieName)
                  : void 0;
              B && (u[e.xsrfHeaderName] = B);
            }
            "setRequestHeader" in I &&
              i.forEach(u, function (e, t) {
                void 0 === l && "content-type" === t.toLowerCase()
                  ? delete u[t]
                  : I.setRequestHeader(t, e);
              }),
              i.isUndefined(e.withCredentials) ||
                (I.withCredentials = !!e.withCredentials),
              h && "json" !== h && (I.responseType = e.responseType),
              "function" == typeof e.onDownloadProgress &&
                I.addEventListener("progress", e.onDownloadProgress),
              "function" == typeof e.onUploadProgress &&
                I.upload &&
                I.upload.addEventListener("progress", e.onUploadProgress),
              e.cancelToken &&
                e.cancelToken.promise.then(function (e) {
                  I && (I.abort(), r(e), (I = null));
                }),
              l || (l = null),
              I.send(l);
          });
        };
      },
      25644: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(73644),
          o = r(62215),
          A = r(92937);
        function a(e) {
          var t = new o(e),
            r = n(o.prototype.request, t);
          return i.extend(r, o.prototype, t), i.extend(r, t), r;
        }
        var s = a(r(1439));
        (s.Axios = o),
          (s.create = function (e) {
            return a(A(s.defaults, e));
          }),
          (s.Cancel = r(26714)),
          (s.CancelToken = r(34089)),
          (s.isCancel = r(98041)),
          (s.all = function (e) {
            return Promise.all(e);
          }),
          (s.spread = r(70783)),
          (s.isAxiosError = r(65587)),
          (e.exports = s),
          (e.exports.default = s);
      },
      26714: (e) => {
        "use strict";
        function t(e) {
          this.message = e;
        }
        (t.prototype.toString = function () {
          return "Cancel" + (this.message ? ": " + this.message : "");
        }),
          (t.prototype.__CANCEL__ = !0),
          (e.exports = t);
      },
      34089: (e, t, r) => {
        "use strict";
        var i = r(26714);
        function n(e) {
          if ("function" != typeof e)
            throw new TypeError("executor must be a function.");
          var t;
          this.promise = new Promise(function (e) {
            t = e;
          });
          var r = this;
          e(function (e) {
            r.reason || ((r.reason = new i(e)), t(r.reason));
          });
        }
        (n.prototype.throwIfRequested = function () {
          if (this.reason) throw this.reason;
        }),
          (n.source = function () {
            var e;
            return {
              token: new n(function (t) {
                e = t;
              }),
              cancel: e,
            };
          }),
          (e.exports = n);
      },
      98041: (e) => {
        "use strict";
        e.exports = function (e) {
          return !(!e || !e.__CANCEL__);
        };
      },
      62215: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(68030),
          o = r(946),
          A = r(6895),
          a = r(92937),
          s = r(17525),
          c = s.validators;
        function g(e) {
          (this.defaults = e),
            (this.interceptors = { request: new o(), response: new o() });
        }
        (g.prototype.request = function (e) {
          "string" == typeof e
            ? ((e = arguments[1] || {}).url = arguments[0])
            : (e = e || {}),
            (e = a(this.defaults, e)).method
              ? (e.method = e.method.toLowerCase())
              : this.defaults.method
              ? (e.method = this.defaults.method.toLowerCase())
              : (e.method = "get");
          var t = e.transitional;
          void 0 !== t &&
            s.assertOptions(
              t,
              {
                silentJSONParsing: c.transitional(c.boolean, "1.0.0"),
                forcedJSONParsing: c.transitional(c.boolean, "1.0.0"),
                clarifyTimeoutError: c.transitional(c.boolean, "1.0.0"),
              },
              !1
            );
          var r = [],
            i = !0;
          this.interceptors.request.forEach(function (t) {
            ("function" == typeof t.runWhen && !1 === t.runWhen(e)) ||
              ((i = i && t.synchronous), r.unshift(t.fulfilled, t.rejected));
          });
          var n,
            o = [];
          if (
            (this.interceptors.response.forEach(function (e) {
              o.push(e.fulfilled, e.rejected);
            }),
            !i)
          ) {
            var g = [A, void 0];
            for (
              Array.prototype.unshift.apply(g, r),
                g = g.concat(o),
                n = Promise.resolve(e);
              g.length;

            )
              n = n.then(g.shift(), g.shift());
            return n;
          }
          for (var l = e; r.length; ) {
            var u = r.shift(),
              h = r.shift();
            try {
              l = u(l);
            } catch (e) {
              h(e);
              break;
            }
          }
          try {
            n = A(l);
          } catch (e) {
            return Promise.reject(e);
          }
          for (; o.length; ) n = n.then(o.shift(), o.shift());
          return n;
        }),
          (g.prototype.getUri = function (e) {
            return (
              (e = a(this.defaults, e)),
              n(e.url, e.params, e.paramsSerializer).replace(/^\?/, "")
            );
          }),
          i.forEach(["delete", "get", "head", "options"], function (e) {
            g.prototype[e] = function (t, r) {
              return this.request(
                a(r || {}, { method: e, url: t, data: (r || {}).data })
              );
            };
          }),
          i.forEach(["post", "put", "patch"], function (e) {
            g.prototype[e] = function (t, r, i) {
              return this.request(a(i || {}, { method: e, url: t, data: r }));
            };
          }),
          (e.exports = g);
      },
      946: (e, t, r) => {
        "use strict";
        var i = r(93044);
        function n() {
          this.handlers = [];
        }
        (n.prototype.use = function (e, t, r) {
          return (
            this.handlers.push({
              fulfilled: e,
              rejected: t,
              synchronous: !!r && r.synchronous,
              runWhen: r ? r.runWhen : null,
            }),
            this.handlers.length - 1
          );
        }),
          (n.prototype.eject = function (e) {
            this.handlers[e] && (this.handlers[e] = null);
          }),
          (n.prototype.forEach = function (e) {
            i.forEach(this.handlers, function (t) {
              null !== t && e(t);
            });
          }),
          (e.exports = n);
      },
      97948: (e, t, r) => {
        "use strict";
        var i = r(99192),
          n = r(48762);
        e.exports = function (e, t) {
          return e && !i(t) ? n(e, t) : t;
        };
      },
      88618: (e, t, r) => {
        "use strict";
        var i = r(11935);
        e.exports = function (e, t, r, n, o) {
          var A = new Error(e);
          return i(A, t, r, n, o);
        };
      },
      6895: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(38556),
          o = r(98041),
          A = r(1439);
        function a(e) {
          e.cancelToken && e.cancelToken.throwIfRequested();
        }
        e.exports = function (e) {
          return (
            a(e),
            (e.headers = e.headers || {}),
            (e.data = n.call(e, e.data, e.headers, e.transformRequest)),
            (e.headers = i.merge(
              e.headers.common || {},
              e.headers[e.method] || {},
              e.headers
            )),
            i.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              function (t) {
                delete e.headers[t];
              }
            ),
            (e.adapter || A.adapter)(e).then(
              function (t) {
                return (
                  a(e),
                  (t.data = n.call(e, t.data, t.headers, e.transformResponse)),
                  t
                );
              },
              function (t) {
                return (
                  o(t) ||
                    (a(e),
                    t &&
                      t.response &&
                      (t.response.data = n.call(
                        e,
                        t.response.data,
                        t.response.headers,
                        e.transformResponse
                      ))),
                  Promise.reject(t)
                );
              }
            )
          );
        };
      },
      11935: (e) => {
        "use strict";
        e.exports = function (e, t, r, i, n) {
          return (
            (e.config = t),
            r && (e.code = r),
            (e.request = i),
            (e.response = n),
            (e.isAxiosError = !0),
            (e.toJSON = function () {
              return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: this.config,
                code: this.code,
              };
            }),
            e
          );
        };
      },
      92937: (e, t, r) => {
        "use strict";
        var i = r(93044);
        e.exports = function (e, t) {
          t = t || {};
          var r = {},
            n = ["url", "method", "data"],
            o = ["headers", "auth", "proxy", "params"],
            A = [
              "baseURL",
              "transformRequest",
              "transformResponse",
              "paramsSerializer",
              "timeout",
              "timeoutMessage",
              "withCredentials",
              "adapter",
              "responseType",
              "xsrfCookieName",
              "xsrfHeaderName",
              "onUploadProgress",
              "onDownloadProgress",
              "decompress",
              "maxContentLength",
              "maxBodyLength",
              "maxRedirects",
              "transport",
              "httpAgent",
              "httpsAgent",
              "cancelToken",
              "socketPath",
              "responseEncoding",
            ],
            a = ["validateStatus"];
          function s(e, t) {
            return i.isPlainObject(e) && i.isPlainObject(t)
              ? i.merge(e, t)
              : i.isPlainObject(t)
              ? i.merge({}, t)
              : i.isArray(t)
              ? t.slice()
              : t;
          }
          function c(n) {
            i.isUndefined(t[n])
              ? i.isUndefined(e[n]) || (r[n] = s(void 0, e[n]))
              : (r[n] = s(e[n], t[n]));
          }
          i.forEach(n, function (e) {
            i.isUndefined(t[e]) || (r[e] = s(void 0, t[e]));
          }),
            i.forEach(o, c),
            i.forEach(A, function (n) {
              i.isUndefined(t[n])
                ? i.isUndefined(e[n]) || (r[n] = s(void 0, e[n]))
                : (r[n] = s(void 0, t[n]));
            }),
            i.forEach(a, function (i) {
              i in t
                ? (r[i] = s(e[i], t[i]))
                : i in e && (r[i] = s(void 0, e[i]));
            });
          var g = n.concat(o).concat(A).concat(a),
            l = Object.keys(e)
              .concat(Object.keys(t))
              .filter(function (e) {
                return -1 === g.indexOf(e);
              });
          return i.forEach(l, c), r;
        };
      },
      86955: (e, t, r) => {
        "use strict";
        var i = r(88618);
        e.exports = function (e, t, r) {
          var n = r.config.validateStatus;
          r.status && n && !n(r.status)
            ? t(
                i(
                  "Request failed with status code " + r.status,
                  r.config,
                  null,
                  r.request,
                  r
                )
              )
            : e(r);
        };
      },
      38556: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(1439);
        e.exports = function (e, t, r) {
          var o = this || n;
          return (
            i.forEach(r, function (r) {
              e = r.call(o, e, t);
            }),
            e
          );
        };
      },
      1439: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = r(98868),
          o = r(11935),
          A = { "Content-Type": "application/x-www-form-urlencoded" };
        function a(e, t) {
          !i.isUndefined(e) &&
            i.isUndefined(e["Content-Type"]) &&
            (e["Content-Type"] = t);
        }
        var s,
          c = {
            transitional: {
              silentJSONParsing: !0,
              forcedJSONParsing: !0,
              clarifyTimeoutError: !1,
            },
            adapter:
              (("undefined" != typeof XMLHttpRequest ||
                ("undefined" != typeof process &&
                  "[object process]" ===
                    Object.prototype.toString.call(process))) &&
                (s = r(70353)),
              s),
            transformRequest: [
              function (e, t) {
                return (
                  n(t, "Accept"),
                  n(t, "Content-Type"),
                  i.isFormData(e) ||
                  i.isArrayBuffer(e) ||
                  i.isBuffer(e) ||
                  i.isStream(e) ||
                  i.isFile(e) ||
                  i.isBlob(e)
                    ? e
                    : i.isArrayBufferView(e)
                    ? e.buffer
                    : i.isURLSearchParams(e)
                    ? (a(t, "application/x-www-form-urlencoded;charset=utf-8"),
                      e.toString())
                    : i.isObject(e) ||
                      (t && "application/json" === t["Content-Type"])
                    ? (a(t, "application/json"),
                      (function (e, t, r) {
                        if (i.isString(e))
                          try {
                            return (0, JSON.parse)(e), i.trim(e);
                          } catch (e) {
                            if ("SyntaxError" !== e.name) throw e;
                          }
                        return (0, JSON.stringify)(e);
                      })(e))
                    : e
                );
              },
            ],
            transformResponse: [
              function (e) {
                var t = this.transitional,
                  r = t && t.silentJSONParsing,
                  n = t && t.forcedJSONParsing,
                  A = !r && "json" === this.responseType;
                if (A || (n && i.isString(e) && e.length))
                  try {
                    return JSON.parse(e);
                  } catch (e) {
                    if (A) {
                      if ("SyntaxError" === e.name)
                        throw o(e, this, "E_JSON_PARSE");
                      throw e;
                    }
                  }
                return e;
              },
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function (e) {
              return e >= 200 && e < 300;
            },
            headers: {
              common: { Accept: "application/json, text/plain, */*" },
            },
          };
        i.forEach(["delete", "get", "head"], function (e) {
          c.headers[e] = {};
        }),
          i.forEach(["post", "put", "patch"], function (e) {
            c.headers[e] = i.merge(A);
          }),
          (e.exports = c);
      },
      73644: (e) => {
        "use strict";
        e.exports = function (e, t) {
          return function () {
            for (var r = new Array(arguments.length), i = 0; i < r.length; i++)
              r[i] = arguments[i];
            return e.apply(t, r);
          };
        };
      },
      68030: (e, t, r) => {
        "use strict";
        var i = r(93044);
        function n(e) {
          return encodeURIComponent(e)
            .replace(/%3A/gi, ":")
            .replace(/%24/g, "$")
            .replace(/%2C/gi, ",")
            .replace(/%20/g, "+")
            .replace(/%5B/gi, "[")
            .replace(/%5D/gi, "]");
        }
        e.exports = function (e, t, r) {
          if (!t) return e;
          var o;
          if (r) o = r(t);
          else if (i.isURLSearchParams(t)) o = t.toString();
          else {
            var A = [];
            i.forEach(t, function (e, t) {
              null != e &&
                (i.isArray(e) ? (t += "[]") : (e = [e]),
                i.forEach(e, function (e) {
                  i.isDate(e)
                    ? (e = e.toISOString())
                    : i.isObject(e) && (e = JSON.stringify(e)),
                    A.push(n(t) + "=" + n(e));
                }));
            }),
              (o = A.join("&"));
          }
          if (o) {
            var a = e.indexOf("#");
            -1 !== a && (e = e.slice(0, a)),
              (e += (-1 === e.indexOf("?") ? "?" : "&") + o);
          }
          return e;
        };
      },
      48762: (e) => {
        "use strict";
        e.exports = function (e, t) {
          return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e;
        };
      },
      92233: (e, t, r) => {
        "use strict";
        var i = r(93044);
        e.exports = i.isStandardBrowserEnv()
          ? {
              write: function (e, t, r, n, o, A) {
                var a = [];
                a.push(e + "=" + encodeURIComponent(t)),
                  i.isNumber(r) &&
                    a.push("expires=" + new Date(r).toGMTString()),
                  i.isString(n) && a.push("path=" + n),
                  i.isString(o) && a.push("domain=" + o),
                  !0 === A && a.push("secure"),
                  (document.cookie = a.join("; "));
              },
              read: function (e) {
                var t = document.cookie.match(
                  new RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                );
                return t ? decodeURIComponent(t[3]) : null;
              },
              remove: function (e) {
                this.write(e, "", Date.now() - 864e5);
              },
            }
          : {
              write: function () {},
              read: function () {
                return null;
              },
              remove: function () {},
            };
      },
      99192: (e) => {
        "use strict";
        e.exports = function (e) {
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e);
        };
      },
      65587: (e) => {
        "use strict";
        e.exports = function (e) {
          return "object" == typeof e && !0 === e.isAxiosError;
        };
      },
      60842: (e, t, r) => {
        "use strict";
        var i = r(93044);
        e.exports = i.isStandardBrowserEnv()
          ? (function () {
              var e,
                t = /(msie|trident)/i.test(navigator.userAgent),
                r = document.createElement("a");
              function n(e) {
                var i = e;
                return (
                  t && (r.setAttribute("href", i), (i = r.href)),
                  r.setAttribute("href", i),
                  {
                    href: r.href,
                    protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                    host: r.host,
                    search: r.search ? r.search.replace(/^\?/, "") : "",
                    hash: r.hash ? r.hash.replace(/^#/, "") : "",
                    hostname: r.hostname,
                    port: r.port,
                    pathname:
                      "/" === r.pathname.charAt(0)
                        ? r.pathname
                        : "/" + r.pathname,
                  }
                );
              }
              return (
                (e = n(window.location.href)),
                function (t) {
                  var r = i.isString(t) ? n(t) : t;
                  return r.protocol === e.protocol && r.host === e.host;
                }
              );
            })()
          : function () {
              return !0;
            };
      },
      98868: (e, t, r) => {
        "use strict";
        var i = r(93044);
        e.exports = function (e, t) {
          i.forEach(e, function (r, i) {
            i !== t &&
              i.toUpperCase() === t.toUpperCase() &&
              ((e[t] = r), delete e[i]);
          });
        };
      },
      51875: (e, t, r) => {
        "use strict";
        var i = r(93044),
          n = [
            "age",
            "authorization",
            "content-length",
            "content-type",
            "etag",
            "expires",
            "from",
            "host",
            "if-modified-since",
            "if-unmodified-since",
            "last-modified",
            "location",
            "max-forwards",
            "proxy-authorization",
            "referer",
            "retry-after",
            "user-agent",
          ];
        e.exports = function (e) {
          var t,
            r,
            o,
            A = {};
          return e
            ? (i.forEach(e.split("\n"), function (e) {
                if (
                  ((o = e.indexOf(":")),
                  (t = i.trim(e.substr(0, o)).toLowerCase()),
                  (r = i.trim(e.substr(o + 1))),
                  t)
                ) {
                  if (A[t] && n.indexOf(t) >= 0) return;
                  A[t] =
                    "set-cookie" === t
                      ? (A[t] ? A[t] : []).concat([r])
                      : A[t]
                      ? A[t] + ", " + r
                      : r;
                }
              }),
              A)
            : A;
        };
      },
      70783: (e) => {
        "use strict";
        e.exports = function (e) {
          return function (t) {
            return e.apply(null, t);
          };
        };
      },
      17525: (e, t, r) => {
        "use strict";
        var i = r(19521),
          n = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach(
          function (e, t) {
            n[e] = function (r) {
              return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
            };
          }
        );
        var o = {},
          A = i.version.split(".");
        function a(e, t) {
          for (
            var r = t ? t.split(".") : A, i = e.split("."), n = 0;
            n < 3;
            n++
          ) {
            if (r[n] > i[n]) return !0;
            if (r[n] < i[n]) return !1;
          }
          return !1;
        }
        (n.transitional = function (e, t, r) {
          var n = t && a(t);
          function A(e, t) {
            return (
              "[Axios v" +
              i.version +
              "] Transitional option '" +
              e +
              "'" +
              t +
              (r ? ". " + r : "")
            );
          }
          return function (r, i, a) {
            if (!1 === e) throw new Error(A(i, " has been removed in " + t));
            return (
              n &&
                !o[i] &&
                ((o[i] = !0),
                console.warn(
                  A(
                    i,
                    " has been deprecated since v" +
                      t +
                      " and will be removed in the near future"
                  )
                )),
              !e || e(r, i, a)
            );
          };
        }),
          (e.exports = {
            isOlderVersion: a,
            assertOptions: function (e, t, r) {
              if ("object" != typeof e)
                throw new TypeError("options must be an object");
              for (var i = Object.keys(e), n = i.length; n-- > 0; ) {
                var o = i[n],
                  A = t[o];
                if (A) {
                  var a = e[o],
                    s = void 0 === a || A(a, o, e);
                  if (!0 !== s)
                    throw new TypeError("option " + o + " must be " + s);
                } else if (!0 !== r) throw Error("Unknown option " + o);
              }
            },
            validators: n,
          });
      },
      93044: (e, t, r) => {
        "use strict";
        var i = r(73644),
          n = Object.prototype.toString;
        function o(e) {
          return "[object Array]" === n.call(e);
        }
        function A(e) {
          return void 0 === e;
        }
        function a(e) {
          return null !== e && "object" == typeof e;
        }
        function s(e) {
          if ("[object Object]" !== n.call(e)) return !1;
          var t = Object.getPrototypeOf(e);
          return null === t || t === Object.prototype;
        }
        function c(e) {
          return "[object Function]" === n.call(e);
        }
        function g(e, t) {
          if (null != e)
            if (("object" != typeof e && (e = [e]), o(e)))
              for (var r = 0, i = e.length; r < i; r++)
                t.call(null, e[r], r, e);
            else
              for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) &&
                  t.call(null, e[n], n, e);
        }
        e.exports = {
          isArray: o,
          isArrayBuffer: function (e) {
            return "[object ArrayBuffer]" === n.call(e);
          },
          isBuffer: function (e) {
            return (
              null !== e &&
              !A(e) &&
              null !== e.constructor &&
              !A(e.constructor) &&
              "function" == typeof e.constructor.isBuffer &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: function (e) {
            return "undefined" != typeof FormData && e instanceof FormData;
          },
          isArrayBufferView: function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : e && e.buffer && e.buffer instanceof ArrayBuffer;
          },
          isString: function (e) {
            return "string" == typeof e;
          },
          isNumber: function (e) {
            return "number" == typeof e;
          },
          isObject: a,
          isPlainObject: s,
          isUndefined: A,
          isDate: function (e) {
            return "[object Date]" === n.call(e);
          },
          isFile: function (e) {
            return "[object File]" === n.call(e);
          },
          isBlob: function (e) {
            return "[object Blob]" === n.call(e);
          },
          isFunction: c,
          isStream: function (e) {
            return a(e) && c(e.pipe);
          },
          isURLSearchParams: function (e) {
            return (
              "undefined" != typeof URLSearchParams &&
              e instanceof URLSearchParams
            );
          },
          isStandardBrowserEnv: function () {
            return (
              ("undefined" == typeof navigator ||
                ("ReactNative" !== navigator.product &&
                  "NativeScript" !== navigator.product &&
                  "NS" !== navigator.product)) &&
              "undefined" != typeof window &&
              "undefined" != typeof document
            );
          },
          forEach: g,
          merge: function e() {
            var t = {};
            function r(r, i) {
              s(t[i]) && s(r)
                ? (t[i] = e(t[i], r))
                : s(r)
                ? (t[i] = e({}, r))
                : o(r)
                ? (t[i] = r.slice())
                : (t[i] = r);
            }
            for (var i = 0, n = arguments.length; i < n; i++)
              g(arguments[i], r);
            return t;
          },
          extend: function (e, t, r) {
            return (
              g(t, function (t, n) {
                e[n] = r && "function" == typeof t ? i(t, r) : t;
              }),
              e
            );
          },
          trim: function (e) {
            return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
          },
          stripBOM: function (e) {
            return 65279 === e.charCodeAt(0) && (e = e.slice(1)), e;
          },
        };
      },
      18166: (e, t, r) => {
        "use strict";
        var i = r(77834).Buffer;
        e.exports = function (e) {
          if (e.length >= 255) throw new TypeError("Alphabet too long");
          for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
            t[r] = 255;
          for (var n = 0; n < e.length; n++) {
            var o = e.charAt(n),
              A = o.charCodeAt(0);
            if (255 !== t[A]) throw new TypeError(o + " is ambiguous");
            t[A] = n;
          }
          var a = e.length,
            s = e.charAt(0),
            c = Math.log(a) / Math.log(256),
            g = Math.log(256) / Math.log(a);
          function l(e) {
            if ("string" != typeof e) throw new TypeError("Expected String");
            if (0 === e.length) return i.alloc(0);
            var r = 0;
            if (" " !== e[r]) {
              for (var n = 0, o = 0; e[r] === s; ) n++, r++;
              for (
                var A = ((e.length - r) * c + 1) >>> 0, g = new Uint8Array(A);
                e[r];

              ) {
                var l = t[e.charCodeAt(r)];
                if (255 === l) return;
                for (
                  var u = 0, h = A - 1;
                  (0 !== l || u < o) && -1 !== h;
                  h--, u++
                )
                  (l += (a * g[h]) >>> 0),
                    (g[h] = l % 256 >>> 0),
                    (l = (l / 256) >>> 0);
                if (0 !== l) throw new Error("Non-zero carry");
                (o = u), r++;
              }
              if (" " !== e[r]) {
                for (var I = A - o; I !== A && 0 === g[I]; ) I++;
                var p = i.allocUnsafe(n + (A - I));
                p.fill(0, 0, n);
                for (var d = n; I !== A; ) p[d++] = g[I++];
                return p;
              }
            }
          }
          return {
            encode: function (t) {
              if (
                ((Array.isArray(t) || t instanceof Uint8Array) &&
                  (t = i.from(t)),
                !i.isBuffer(t))
              )
                throw new TypeError("Expected Buffer");
              if (0 === t.length) return "";
              for (
                var r = 0, n = 0, o = 0, A = t.length;
                o !== A && 0 === t[o];

              )
                o++, r++;
              for (
                var c = ((A - o) * g + 1) >>> 0, l = new Uint8Array(c);
                o !== A;

              ) {
                for (
                  var u = t[o], h = 0, I = c - 1;
                  (0 !== u || h < n) && -1 !== I;
                  I--, h++
                )
                  (u += (256 * l[I]) >>> 0),
                    (l[I] = u % a >>> 0),
                    (u = (u / a) >>> 0);
                if (0 !== u) throw new Error("Non-zero carry");
                (n = h), o++;
              }
              for (var p = c - n; p !== c && 0 === l[p]; ) p++;
              for (var d = s.repeat(r); p < c; ++p) d += e.charAt(l[p]);
              return d;
            },
            decodeUnsafe: l,
            decode: function (e) {
              var t = l(e);
              if (t) return t;
              throw new Error("Non-base" + a + " character");
            },
          };
        };
      },
      95766: (e, t) => {
        "use strict";
        (t.byteLength = function (e) {
          var t = s(e),
            r = t[0],
            i = t[1];
          return (3 * (r + i)) / 4 - i;
        }),
          (t.toByteArray = function (e) {
            var t,
              r,
              o = s(e),
              A = o[0],
              a = o[1],
              c = new n(
                (function (e, t, r) {
                  return (3 * (t + r)) / 4 - r;
                })(0, A, a)
              ),
              g = 0,
              l = a > 0 ? A - 4 : A;
            for (r = 0; r < l; r += 4)
              (t =
                (i[e.charCodeAt(r)] << 18) |
                (i[e.charCodeAt(r + 1)] << 12) |
                (i[e.charCodeAt(r + 2)] << 6) |
                i[e.charCodeAt(r + 3)]),
                (c[g++] = (t >> 16) & 255),
                (c[g++] = (t >> 8) & 255),
                (c[g++] = 255 & t);
            return (
              2 === a &&
                ((t =
                  (i[e.charCodeAt(r)] << 2) | (i[e.charCodeAt(r + 1)] >> 4)),
                (c[g++] = 255 & t)),
              1 === a &&
                ((t =
                  (i[e.charCodeAt(r)] << 10) |
                  (i[e.charCodeAt(r + 1)] << 4) |
                  (i[e.charCodeAt(r + 2)] >> 2)),
                (c[g++] = (t >> 8) & 255),
                (c[g++] = 255 & t)),
              c
            );
          }),
          (t.fromByteArray = function (e) {
            for (
              var t,
                i = e.length,
                n = i % 3,
                o = [],
                A = 16383,
                a = 0,
                s = i - n;
              a < s;
              a += A
            )
              o.push(c(e, a, a + A > s ? s : a + A));
            return (
              1 === n
                ? ((t = e[i - 1]), o.push(r[t >> 2] + r[(t << 4) & 63] + "=="))
                : 2 === n &&
                  ((t = (e[i - 2] << 8) + e[i - 1]),
                  o.push(
                    r[t >> 10] + r[(t >> 4) & 63] + r[(t << 2) & 63] + "="
                  )),
              o.join("")
            );
          });
        for (
          var r = [],
            i = [],
            n = "undefined" != typeof Uint8Array ? Uint8Array : Array,
            o =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            A = 0,
            a = o.length;
          A < a;
          ++A
        )
          (r[A] = o[A]), (i[o.charCodeAt(A)] = A);
        function s(e) {
          var t = e.length;
          if (t % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var r = e.indexOf("=");
          return -1 === r && (r = t), [r, r === t ? 0 : 4 - (r % 4)];
        }
        function c(e, t, i) {
          for (var n, o, A = [], a = t; a < i; a += 3)
            (n =
              ((e[a] << 16) & 16711680) +
              ((e[a + 1] << 8) & 65280) +
              (255 & e[a + 2])),
              A.push(
                r[((o = n) >> 18) & 63] +
                  r[(o >> 12) & 63] +
                  r[(o >> 6) & 63] +
                  r[63 & o]
              );
          return A.join("");
        }
        (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
      },
      68700: (e, t, r) => {
        var i = r(48834).Buffer,
          n = r(44075),
          o = r(13115),
          A = {
            Legacy: "legacy",
            Bitpay: "bitpay",
            Cashaddr: "cashaddr",
            Slpaddr: "slpaddr",
          },
          a = { Mainnet: "mainnet", Testnet: "testnet" },
          s = {};
        function c(e) {
          return h(e).format;
        }
        function g(e) {
          return h(e).network;
        }
        function l(e) {
          return h(e).type;
        }
        (s.P2PKH = "p2pkh"), (s.P2SH = "p2sh");
        var u = {};
        function h(e) {
          try {
            return (function (e) {
              try {
                var t = n.decode(e);
                if (21 !== t.length) throw new v();
                var r = t[0],
                  i = Array.prototype.slice.call(t, 1);
                switch (r) {
                  case u[A.Legacy][a.Mainnet][s.P2PKH]:
                    return {
                      hash: i,
                      format: A.Legacy,
                      network: a.Mainnet,
                      type: s.P2PKH,
                    };
                  case u[A.Legacy][a.Mainnet][s.P2SH]:
                    return {
                      hash: i,
                      format: A.Legacy,
                      network: a.Mainnet,
                      type: s.P2SH,
                    };
                  case u[A.Legacy][a.Testnet][s.P2PKH]:
                    return {
                      hash: i,
                      format: A.Legacy,
                      network: a.Testnet,
                      type: s.P2PKH,
                    };
                  case u[A.Legacy][a.Testnet][s.P2SH]:
                    return {
                      hash: i,
                      format: A.Legacy,
                      network: a.Testnet,
                      type: s.P2SH,
                    };
                  case u[A.Bitpay][a.Mainnet][s.P2PKH]:
                    return {
                      hash: i,
                      format: A.Bitpay,
                      network: a.Mainnet,
                      type: s.P2PKH,
                    };
                  case u[A.Bitpay][a.Mainnet][s.P2SH]:
                    return {
                      hash: i,
                      format: A.Bitpay,
                      network: a.Mainnet,
                      type: s.P2SH,
                    };
                }
              } catch (e) {}
              throw new v();
            })(e);
          } catch (e) {}
          try {
            return (function (e) {
              if (-1 !== e.indexOf(":"))
                try {
                  return I(e);
                } catch (e) {}
              else
                for (
                  var t = ["bitcoincash", "bchtest", "regtest", "bchreg"],
                    r = 0;
                  r < t.length;
                  ++r
                )
                  try {
                    return I(t[r] + ":" + e);
                  } catch (e) {}
              throw new v();
            })(e);
          } catch (e) {}
          try {
            return (function (e) {
              if (-1 !== e.indexOf(":"))
                try {
                  return p(e);
                } catch (e) {}
              else
                for (
                  var t = ["simpleledger", "slptest", "slpreg"], r = 0;
                  r < t.length;
                  ++r
                )
                  try {
                    return p(t[r] + ":" + e);
                  } catch (e) {}
              throw new v();
            })(e);
          } catch (e) {}
          throw new v();
        }
        function I(e) {
          try {
            var t = o.decode(e),
              r = Array.prototype.slice.call(t.hash, 0),
              i = "P2PKH" === t.type ? s.P2PKH : s.P2SH;
            switch (t.prefix) {
              case "bitcoincash":
                return {
                  hash: r,
                  format: A.Cashaddr,
                  network: a.Mainnet,
                  type: i,
                };
              case "bchtest":
              case "regtest":
              case "bchreg":
                return {
                  hash: r,
                  format: A.Cashaddr,
                  network: a.Testnet,
                  type: i,
                };
            }
          } catch (e) {}
          throw new v();
        }
        function p(e) {
          try {
            var t = o.decode(e),
              r = Array.prototype.slice.call(t.hash, 0),
              i = "P2PKH" === t.type ? s.P2PKH : s.P2SH;
            switch (t.prefix) {
              case "simpleledger":
                return {
                  hash: r,
                  format: A.Slpaddr,
                  network: a.Mainnet,
                  type: i,
                };
              case "slptest":
              case "slpreg":
                return {
                  hash: r,
                  format: A.Slpaddr,
                  network: a.Testnet,
                  type: i,
                };
            }
          } catch (e) {}
          throw new v();
        }
        function d(e) {
          var t = u[A.Legacy][e.network][e.type],
            r = i.alloc(1 + e.hash.length);
          return (r[0] = t), r.set(e.hash, 1), n.encode(r);
        }
        function f(e) {
          var t = u[A.Bitpay][e.network][e.type],
            r = i.alloc(1 + e.hash.length);
          return (r[0] = t), r.set(e.hash, 1), n.encode(r);
        }
        function C(e) {
          var t = e.network === a.Mainnet ? "bitcoincash" : "bchtest",
            r = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            i = Uint8Array.from(e.hash);
          return o.encode(t, r, i);
        }
        function B(e) {
          var t = e.network === a.Mainnet ? "simpleledger" : "slptest",
            r = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            i = Uint8Array.from(e.hash);
          return o.encode(t, r, i);
        }
        function E(e) {
          var t = "bitcoincash",
            r = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            i = Uint8Array.from(e.hash);
          return (
            e.format === A.Slpaddr && (t = "simpleledger"), o.encode(t, r, i)
          );
        }
        function y(e) {
          var t = "bchtest",
            r = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            i = Uint8Array.from(e.hash);
          return e.format === A.Slpaddr && (t = "slptest"), o.encode(t, r, i);
        }
        function m(e) {
          var t = "bchreg",
            r = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            i = Uint8Array.from(e.hash);
          return e.format === A.Slpaddr && (t = "slpreg"), o.encode(t, r, i);
        }
        function Q(e) {
          var t = e.type === s.P2PKH ? "P2PKH" : "P2SH",
            r = Uint8Array.from(e.hash);
          return o.encode("slpreg", t, r);
        }
        function v() {
          var e = new Error();
          (this.name = e.name = "InvalidAddressError"),
            (this.message = e.message =
              "Received an invalid Bitcoin Cash address as input."),
            (this.stack = e.stack);
        }
        (u[A.Legacy] = {}),
          (u[A.Legacy][a.Mainnet] = {}),
          (u[A.Legacy][a.Mainnet][s.P2PKH] = 0),
          (u[A.Legacy][a.Mainnet][s.P2SH] = 5),
          (u[A.Legacy][a.Testnet] = {}),
          (u[A.Legacy][a.Testnet][s.P2PKH] = 111),
          (u[A.Legacy][a.Testnet][s.P2SH] = 196),
          (u[A.Bitpay] = {}),
          (u[A.Bitpay][a.Mainnet] = {}),
          (u[A.Bitpay][a.Mainnet][s.P2PKH] = 28),
          (u[A.Bitpay][a.Mainnet][s.P2SH] = 40),
          (u[A.Bitpay][a.Testnet] = {}),
          (u[A.Bitpay][a.Testnet][s.P2PKH] = 111),
          (u[A.Bitpay][a.Testnet][s.P2SH] = 196),
          (v.prototype = Object.create(Error.prototype)),
          (e.exports = {
            Format: A,
            Network: a,
            Type: s,
            isValidAddress: function (e) {
              try {
                return h(e), !0;
              } catch (e) {
                return !1;
              }
            },
            detectAddressFormat: c,
            detectAddressNetwork: g,
            detectAddressType: l,
            decodeAddress: h,
            toLegacyAddress: function (e) {
              var t = h(e);
              return t.format === A.Legacy ? e : d(t);
            },
            toBitpayAddress: function (e) {
              var t = h(e);
              return t.format === A.Bitpay ? e : f(t);
            },
            encodeAsCashaddr: C,
            toCashAddress: function (e) {
              return C(h(e));
            },
            encodeAsSlpaddr: B,
            toSlpAddress: function (e) {
              return B(h(e));
            },
            toMainnetAddress: function (e) {
              return E(h(e));
            },
            toTestnetAddress: function (e) {
              return y(h(e));
            },
            encodeAsMainnetaddr: E,
            encodeAsTestnetaddr: y,
            encodeAsRegtestaddr: m,
            toRegtestAddress: function (e) {
              return m(h(e));
            },
            encodeAsSlpRegtestaddr: Q,
            toSlpRegtestAddress: function (e) {
              return Q(h(e));
            },
            encodeAsLegacy: d,
            isLegacyAddress: function (e) {
              return c(e) === A.Legacy;
            },
            encodeAsBitpay: f,
            isBitpayAddress: function (e) {
              return c(e) === A.Bitpay;
            },
            isCashAddress: function (e) {
              return c(e) === A.Cashaddr;
            },
            isSlpAddress: function (e) {
              return c(e) === A.Slpaddr;
            },
            isMainnetAddress: function (e) {
              return g(e) === a.Mainnet;
            },
            isTestnetAddress: function (e) {
              return g(e) === a.Testnet;
            },
            isP2PKHAddress: function (e) {
              return l(e) === s.P2PKH;
            },
            isP2SHAddress: function (e) {
              return l(e) === s.P2SH;
            },
            InvalidAddressError: v,
          });
      },
      48166: (e, t, r) => {
        var i;
        e = r.nmd(e);
        var n = (function (e) {
          "use strict";
          var t = 1e7,
            r = 9007199254740992,
            i = u(r),
            o = "0123456789abcdefghijklmnopqrstuvwxyz",
            A = "function" == typeof BigInt;
          function a(e, t, r, i) {
            return void 0 === e
              ? a[0]
              : void 0 === t || (10 == +t && !r)
              ? V(e)
              : Y(e, t, r, i);
          }
          function s(e, t) {
            (this.value = e), (this.sign = t), (this.isSmall = !1);
          }
          function c(e) {
            (this.value = e), (this.sign = e < 0), (this.isSmall = !0);
          }
          function g(e) {
            this.value = e;
          }
          function l(e) {
            return -r < e && e < r;
          }
          function u(e) {
            return e < 1e7
              ? [e]
              : e < 1e14
              ? [e % 1e7, Math.floor(e / 1e7)]
              : [e % 1e7, Math.floor(e / 1e7) % 1e7, Math.floor(e / 1e14)];
          }
          function h(e) {
            I(e);
            var r = e.length;
            if (r < 4 && _(e, i) < 0)
              switch (r) {
                case 0:
                  return 0;
                case 1:
                  return e[0];
                case 2:
                  return e[0] + e[1] * t;
                default:
                  return e[0] + (e[1] + e[2] * t) * t;
              }
            return e;
          }
          function I(e) {
            for (var t = e.length; 0 === e[--t]; );
            e.length = t + 1;
          }
          function p(e) {
            for (var t = new Array(e), r = -1; ++r < e; ) t[r] = 0;
            return t;
          }
          function d(e) {
            return e > 0 ? Math.floor(e) : Math.ceil(e);
          }
          function f(e, r) {
            var i,
              n,
              o = e.length,
              A = r.length,
              a = new Array(o),
              s = 0,
              c = t;
            for (n = 0; n < A; n++)
              (s = (i = e[n] + r[n] + s) >= c ? 1 : 0), (a[n] = i - s * c);
            for (; n < o; )
              (s = (i = e[n] + s) === c ? 1 : 0), (a[n++] = i - s * c);
            return s > 0 && a.push(s), a;
          }
          function C(e, t) {
            return e.length >= t.length ? f(e, t) : f(t, e);
          }
          function B(e, r) {
            var i,
              n,
              o = e.length,
              A = new Array(o),
              a = t;
            for (n = 0; n < o; n++)
              (i = e[n] - a + r),
                (r = Math.floor(i / a)),
                (A[n] = i - r * a),
                (r += 1);
            for (; r > 0; ) (A[n++] = r % a), (r = Math.floor(r / a));
            return A;
          }
          function E(e, r) {
            var i,
              n,
              o = e.length,
              A = r.length,
              a = new Array(o),
              s = 0,
              c = t;
            for (i = 0; i < A; i++)
              (n = e[i] - s - r[i]) < 0 ? ((n += c), (s = 1)) : (s = 0),
                (a[i] = n);
            for (i = A; i < o; i++) {
              if (!((n = e[i] - s) < 0)) {
                a[i++] = n;
                break;
              }
              (n += c), (a[i] = n);
            }
            for (; i < o; i++) a[i] = e[i];
            return I(a), a;
          }
          function y(e, r, i) {
            var n,
              o,
              A = e.length,
              a = new Array(A),
              g = -r,
              l = t;
            for (n = 0; n < A; n++)
              (o = e[n] + g),
                (g = Math.floor(o / l)),
                (o %= l),
                (a[n] = o < 0 ? o + l : o);
            return "number" == typeof (a = h(a))
              ? (i && (a = -a), new c(a))
              : new s(a, i);
          }
          function m(e, r) {
            var i,
              n,
              o,
              A,
              a = e.length,
              s = r.length,
              c = p(a + s),
              g = t;
            for (o = 0; o < a; ++o) {
              A = e[o];
              for (var l = 0; l < s; ++l)
                (i = A * r[l] + c[o + l]),
                  (n = Math.floor(i / g)),
                  (c[o + l] = i - n * g),
                  (c[o + l + 1] += n);
            }
            return I(c), c;
          }
          function Q(e, r) {
            var i,
              n,
              o = e.length,
              A = new Array(o),
              a = t,
              s = 0;
            for (n = 0; n < o; n++)
              (i = e[n] * r + s), (s = Math.floor(i / a)), (A[n] = i - s * a);
            for (; s > 0; ) (A[n++] = s % a), (s = Math.floor(s / a));
            return A;
          }
          function v(e, t) {
            for (var r = []; t-- > 0; ) r.push(0);
            return r.concat(e);
          }
          function S(e, t) {
            var r = Math.max(e.length, t.length);
            if (r <= 30) return m(e, t);
            r = Math.ceil(r / 2);
            var i = e.slice(r),
              n = e.slice(0, r),
              o = t.slice(r),
              A = t.slice(0, r),
              a = S(n, A),
              s = S(i, o),
              c = S(C(n, i), C(A, o)),
              g = C(C(a, v(E(E(c, a), s), r)), v(s, 2 * r));
            return I(g), g;
          }
          function w(e, r, i) {
            return new s(e < t ? Q(r, e) : m(r, u(e)), i);
          }
          function b(e) {
            var r,
              i,
              n,
              o,
              A = e.length,
              a = p(A + A),
              s = t;
            for (n = 0; n < A; n++) {
              i = 0 - (o = e[n]) * o;
              for (var c = n; c < A; c++)
                (r = o * e[c] * 2 + a[n + c] + i),
                  (i = Math.floor(r / s)),
                  (a[n + c] = r - i * s);
              a[n + A] = i;
            }
            return I(a), a;
          }
          function k(e, t) {
            var r,
              i,
              n,
              o,
              A = e.length,
              a = p(A);
            for (n = 0, r = A - 1; r >= 0; --r)
              (n = (o = 1e7 * n + e[r]) - (i = d(o / t)) * t), (a[r] = 0 | i);
            return [a, 0 | n];
          }
          function N(e, r) {
            var i,
              n = V(r);
            if (A) return [new g(e.value / n.value), new g(e.value % n.value)];
            var o,
              l = e.value,
              f = n.value;
            if (0 === f) throw new Error("Cannot divide by zero");
            if (e.isSmall)
              return n.isSmall ? [new c(d(l / f)), new c(l % f)] : [a[0], e];
            if (n.isSmall) {
              if (1 === f) return [e, a[0]];
              if (-1 == f) return [e.negate(), a[0]];
              var C = Math.abs(f);
              if (C < t) {
                o = h((i = k(l, C))[0]);
                var B = i[1];
                return (
                  e.sign && (B = -B),
                  "number" == typeof o
                    ? (e.sign !== n.sign && (o = -o), [new c(o), new c(B)])
                    : [new s(o, e.sign !== n.sign), new c(B)]
                );
              }
              f = u(C);
            }
            var y = _(l, f);
            if (-1 === y) return [a[0], e];
            if (0 === y) return [a[e.sign === n.sign ? 1 : -1], a[0]];
            (i =
              l.length + f.length <= 200
                ? (function (e, r) {
                    var i,
                      n,
                      o,
                      A,
                      a,
                      s,
                      c,
                      g = e.length,
                      l = r.length,
                      u = t,
                      I = p(r.length),
                      d = r[l - 1],
                      f = Math.ceil(u / (2 * d)),
                      C = Q(e, f),
                      B = Q(r, f);
                    for (
                      C.length <= g && C.push(0),
                        B.push(0),
                        d = B[l - 1],
                        n = g - l;
                      n >= 0;
                      n--
                    ) {
                      for (
                        i = u - 1,
                          C[n + l] !== d &&
                            (i = Math.floor((C[n + l] * u + C[n + l - 1]) / d)),
                          o = 0,
                          A = 0,
                          s = B.length,
                          a = 0;
                        a < s;
                        a++
                      )
                        (o += i * B[a]),
                          (c = Math.floor(o / u)),
                          (A += C[n + a] - (o - c * u)),
                          (o = c),
                          A < 0
                            ? ((C[n + a] = A + u), (A = -1))
                            : ((C[n + a] = A), (A = 0));
                      for (; 0 !== A; ) {
                        for (i -= 1, o = 0, a = 0; a < s; a++)
                          (o += C[n + a] - u + B[a]) < 0
                            ? ((C[n + a] = o + u), (o = 0))
                            : ((C[n + a] = o), (o = 1));
                        A += o;
                      }
                      I[n] = i;
                    }
                    return (C = k(C, f)[0]), [h(I), h(C)];
                  })(l, f)
                : (function (e, r) {
                    for (
                      var i,
                        n,
                        o,
                        A,
                        a,
                        s = e.length,
                        c = r.length,
                        g = [],
                        l = [],
                        u = t;
                      s;

                    )
                      if ((l.unshift(e[--s]), I(l), _(l, r) < 0)) g.push(0);
                      else {
                        (o = l[(n = l.length) - 1] * u + l[n - 2]),
                          (A = r[c - 1] * u + r[c - 2]),
                          n > c && (o = (o + 1) * u),
                          (i = Math.ceil(o / A));
                        do {
                          if (_((a = Q(r, i)), l) <= 0) break;
                          i--;
                        } while (i);
                        g.push(i), (l = E(l, a));
                      }
                    return g.reverse(), [h(g), h(l)];
                  })(l, f)),
              (o = i[0]);
            var m = e.sign !== n.sign,
              v = i[1],
              S = e.sign;
            return (
              "number" == typeof o
                ? (m && (o = -o), (o = new c(o)))
                : (o = new s(o, m)),
              "number" == typeof v
                ? (S && (v = -v), (v = new c(v)))
                : (v = new s(v, S)),
              [o, v]
            );
          }
          function _(e, t) {
            if (e.length !== t.length) return e.length > t.length ? 1 : -1;
            for (var r = e.length - 1; r >= 0; r--)
              if (e[r] !== t[r]) return e[r] > t[r] ? 1 : -1;
            return 0;
          }
          function D(e) {
            var t = e.abs();
            return (
              !t.isUnit() &&
              (!!(t.equals(2) || t.equals(3) || t.equals(5)) ||
                (!(t.isEven() || t.isDivisibleBy(3) || t.isDivisibleBy(5)) &&
                  (!!t.lesser(49) || void 0)))
            );
          }
          function O(e, t) {
            for (var r, i, o, A = e.prev(), a = A, s = 0; a.isEven(); )
              (a = a.divide(2)), s++;
            e: for (i = 0; i < t.length; i++)
              if (
                !e.lesser(t[i]) &&
                !(o = n(t[i]).modPow(a, e)).isUnit() &&
                !o.equals(A)
              ) {
                for (r = s - 1; 0 != r; r--) {
                  if ((o = o.square().mod(e)).isUnit()) return !1;
                  if (o.equals(A)) continue e;
                }
                return !1;
              }
            return !0;
          }
          (s.prototype = Object.create(a.prototype)),
            (c.prototype = Object.create(a.prototype)),
            (g.prototype = Object.create(a.prototype)),
            (s.prototype.add = function (e) {
              var t = V(e);
              if (this.sign !== t.sign) return this.subtract(t.negate());
              var r = this.value,
                i = t.value;
              return t.isSmall
                ? new s(B(r, Math.abs(i)), this.sign)
                : new s(C(r, i), this.sign);
            }),
            (s.prototype.plus = s.prototype.add),
            (c.prototype.add = function (e) {
              var t = V(e),
                r = this.value;
              if (r < 0 !== t.sign) return this.subtract(t.negate());
              var i = t.value;
              if (t.isSmall) {
                if (l(r + i)) return new c(r + i);
                i = u(Math.abs(i));
              }
              return new s(B(i, Math.abs(r)), r < 0);
            }),
            (c.prototype.plus = c.prototype.add),
            (g.prototype.add = function (e) {
              return new g(this.value + V(e).value);
            }),
            (g.prototype.plus = g.prototype.add),
            (s.prototype.subtract = function (e) {
              var t = V(e);
              if (this.sign !== t.sign) return this.add(t.negate());
              var r = this.value,
                i = t.value;
              return t.isSmall
                ? y(r, Math.abs(i), this.sign)
                : (function (e, t, r) {
                    var i;
                    return (
                      _(e, t) >= 0 ? (i = E(e, t)) : ((i = E(t, e)), (r = !r)),
                      "number" == typeof (i = h(i))
                        ? (r && (i = -i), new c(i))
                        : new s(i, r)
                    );
                  })(r, i, this.sign);
            }),
            (s.prototype.minus = s.prototype.subtract),
            (c.prototype.subtract = function (e) {
              var t = V(e),
                r = this.value;
              if (r < 0 !== t.sign) return this.add(t.negate());
              var i = t.value;
              return t.isSmall ? new c(r - i) : y(i, Math.abs(r), r >= 0);
            }),
            (c.prototype.minus = c.prototype.subtract),
            (g.prototype.subtract = function (e) {
              return new g(this.value - V(e).value);
            }),
            (g.prototype.minus = g.prototype.subtract),
            (s.prototype.negate = function () {
              return new s(this.value, !this.sign);
            }),
            (c.prototype.negate = function () {
              var e = this.sign,
                t = new c(-this.value);
              return (t.sign = !e), t;
            }),
            (g.prototype.negate = function () {
              return new g(-this.value);
            }),
            (s.prototype.abs = function () {
              return new s(this.value, !1);
            }),
            (c.prototype.abs = function () {
              return new c(Math.abs(this.value));
            }),
            (g.prototype.abs = function () {
              return new g(this.value >= 0 ? this.value : -this.value);
            }),
            (s.prototype.multiply = function (e) {
              var r,
                i,
                n,
                o = V(e),
                A = this.value,
                c = o.value,
                g = this.sign !== o.sign;
              if (o.isSmall) {
                if (0 === c) return a[0];
                if (1 === c) return this;
                if (-1 === c) return this.negate();
                if ((r = Math.abs(c)) < t) return new s(Q(A, r), g);
                c = u(r);
              }
              return new s(
                -0.012 * (i = A.length) -
                  0.012 * (n = c.length) +
                  15e-6 * i * n >
                0
                  ? S(A, c)
                  : m(A, c),
                g
              );
            }),
            (s.prototype.times = s.prototype.multiply),
            (c.prototype._multiplyBySmall = function (e) {
              return l(e.value * this.value)
                ? new c(e.value * this.value)
                : w(
                    Math.abs(e.value),
                    u(Math.abs(this.value)),
                    this.sign !== e.sign
                  );
            }),
            (s.prototype._multiplyBySmall = function (e) {
              return 0 === e.value
                ? a[0]
                : 1 === e.value
                ? this
                : -1 === e.value
                ? this.negate()
                : w(Math.abs(e.value), this.value, this.sign !== e.sign);
            }),
            (c.prototype.multiply = function (e) {
              return V(e)._multiplyBySmall(this);
            }),
            (c.prototype.times = c.prototype.multiply),
            (g.prototype.multiply = function (e) {
              return new g(this.value * V(e).value);
            }),
            (g.prototype.times = g.prototype.multiply),
            (s.prototype.square = function () {
              return new s(b(this.value), !1);
            }),
            (c.prototype.square = function () {
              var e = this.value * this.value;
              return l(e) ? new c(e) : new s(b(u(Math.abs(this.value))), !1);
            }),
            (g.prototype.square = function (e) {
              return new g(this.value * this.value);
            }),
            (s.prototype.divmod = function (e) {
              var t = N(this, e);
              return { quotient: t[0], remainder: t[1] };
            }),
            (g.prototype.divmod = c.prototype.divmod = s.prototype.divmod),
            (s.prototype.divide = function (e) {
              return N(this, e)[0];
            }),
            (g.prototype.over = g.prototype.divide =
              function (e) {
                return new g(this.value / V(e).value);
              }),
            (c.prototype.over =
              c.prototype.divide =
              s.prototype.over =
                s.prototype.divide),
            (s.prototype.mod = function (e) {
              return N(this, e)[1];
            }),
            (g.prototype.mod = g.prototype.remainder =
              function (e) {
                return new g(this.value % V(e).value);
              }),
            (c.prototype.remainder =
              c.prototype.mod =
              s.prototype.remainder =
                s.prototype.mod),
            (s.prototype.pow = function (e) {
              var t,
                r,
                i,
                n = V(e),
                o = this.value,
                A = n.value;
              if (0 === A) return a[1];
              if (0 === o) return a[0];
              if (1 === o) return a[1];
              if (-1 === o) return n.isEven() ? a[1] : a[-1];
              if (n.sign) return a[0];
              if (!n.isSmall)
                throw new Error(
                  "The exponent " + n.toString() + " is too large."
                );
              if (this.isSmall && l((t = Math.pow(o, A)))) return new c(d(t));
              for (
                r = this, i = a[1];
                !0 & A && ((i = i.times(r)), --A), 0 !== A;

              )
                (A /= 2), (r = r.square());
              return i;
            }),
            (c.prototype.pow = s.prototype.pow),
            (g.prototype.pow = function (e) {
              var t = V(e),
                r = this.value,
                i = t.value,
                n = BigInt(0),
                o = BigInt(1),
                A = BigInt(2);
              if (i === n) return a[1];
              if (r === n) return a[0];
              if (r === o) return a[1];
              if (r === BigInt(-1)) return t.isEven() ? a[1] : a[-1];
              if (t.isNegative()) return new g(n);
              for (
                var s = this, c = a[1];
                (i & o) === o && ((c = c.times(s)), --i), i !== n;

              )
                (i /= A), (s = s.square());
              return c;
            }),
            (s.prototype.modPow = function (e, t) {
              if (((e = V(e)), (t = V(t)).isZero()))
                throw new Error("Cannot take modPow with modulus 0");
              var r = a[1],
                i = this.mod(t);
              for (
                e.isNegative() && ((e = e.multiply(a[-1])), (i = i.modInv(t)));
                e.isPositive();

              ) {
                if (i.isZero()) return a[0];
                e.isOdd() && (r = r.multiply(i).mod(t)),
                  (e = e.divide(2)),
                  (i = i.square().mod(t));
              }
              return r;
            }),
            (g.prototype.modPow = c.prototype.modPow = s.prototype.modPow),
            (s.prototype.compareAbs = function (e) {
              var t = V(e),
                r = this.value,
                i = t.value;
              return t.isSmall ? 1 : _(r, i);
            }),
            (c.prototype.compareAbs = function (e) {
              var t = V(e),
                r = Math.abs(this.value),
                i = t.value;
              return t.isSmall
                ? r === (i = Math.abs(i))
                  ? 0
                  : r > i
                  ? 1
                  : -1
                : -1;
            }),
            (g.prototype.compareAbs = function (e) {
              var t = this.value,
                r = V(e).value;
              return (t = t >= 0 ? t : -t) === (r = r >= 0 ? r : -r)
                ? 0
                : t > r
                ? 1
                : -1;
            }),
            (s.prototype.compare = function (e) {
              if (e === 1 / 0) return -1;
              if (e === -1 / 0) return 1;
              var t = V(e),
                r = this.value,
                i = t.value;
              return this.sign !== t.sign
                ? t.sign
                  ? 1
                  : -1
                : t.isSmall
                ? this.sign
                  ? -1
                  : 1
                : _(r, i) * (this.sign ? -1 : 1);
            }),
            (s.prototype.compareTo = s.prototype.compare),
            (c.prototype.compare = function (e) {
              if (e === 1 / 0) return -1;
              if (e === -1 / 0) return 1;
              var t = V(e),
                r = this.value,
                i = t.value;
              return t.isSmall
                ? r == i
                  ? 0
                  : r > i
                  ? 1
                  : -1
                : r < 0 !== t.sign
                ? r < 0
                  ? -1
                  : 1
                : r < 0
                ? 1
                : -1;
            }),
            (c.prototype.compareTo = c.prototype.compare),
            (g.prototype.compare = function (e) {
              if (e === 1 / 0) return -1;
              if (e === -1 / 0) return 1;
              var t = this.value,
                r = V(e).value;
              return t === r ? 0 : t > r ? 1 : -1;
            }),
            (g.prototype.compareTo = g.prototype.compare),
            (s.prototype.equals = function (e) {
              return 0 === this.compare(e);
            }),
            (g.prototype.eq =
              g.prototype.equals =
              c.prototype.eq =
              c.prototype.equals =
              s.prototype.eq =
                s.prototype.equals),
            (s.prototype.notEquals = function (e) {
              return 0 !== this.compare(e);
            }),
            (g.prototype.neq =
              g.prototype.notEquals =
              c.prototype.neq =
              c.prototype.notEquals =
              s.prototype.neq =
                s.prototype.notEquals),
            (s.prototype.greater = function (e) {
              return this.compare(e) > 0;
            }),
            (g.prototype.gt =
              g.prototype.greater =
              c.prototype.gt =
              c.prototype.greater =
              s.prototype.gt =
                s.prototype.greater),
            (s.prototype.lesser = function (e) {
              return this.compare(e) < 0;
            }),
            (g.prototype.lt =
              g.prototype.lesser =
              c.prototype.lt =
              c.prototype.lesser =
              s.prototype.lt =
                s.prototype.lesser),
            (s.prototype.greaterOrEquals = function (e) {
              return this.compare(e) >= 0;
            }),
            (g.prototype.geq =
              g.prototype.greaterOrEquals =
              c.prototype.geq =
              c.prototype.greaterOrEquals =
              s.prototype.geq =
                s.prototype.greaterOrEquals),
            (s.prototype.lesserOrEquals = function (e) {
              return this.compare(e) <= 0;
            }),
            (g.prototype.leq =
              g.prototype.lesserOrEquals =
              c.prototype.leq =
              c.prototype.lesserOrEquals =
              s.prototype.leq =
                s.prototype.lesserOrEquals),
            (s.prototype.isEven = function () {
              return 0 == (1 & this.value[0]);
            }),
            (c.prototype.isEven = function () {
              return 0 == (1 & this.value);
            }),
            (g.prototype.isEven = function () {
              return (this.value & BigInt(1)) === BigInt(0);
            }),
            (s.prototype.isOdd = function () {
              return 1 == (1 & this.value[0]);
            }),
            (c.prototype.isOdd = function () {
              return 1 == (1 & this.value);
            }),
            (g.prototype.isOdd = function () {
              return (this.value & BigInt(1)) === BigInt(1);
            }),
            (s.prototype.isPositive = function () {
              return !this.sign;
            }),
            (c.prototype.isPositive = function () {
              return this.value > 0;
            }),
            (g.prototype.isPositive = c.prototype.isPositive),
            (s.prototype.isNegative = function () {
              return this.sign;
            }),
            (c.prototype.isNegative = function () {
              return this.value < 0;
            }),
            (g.prototype.isNegative = c.prototype.isNegative),
            (s.prototype.isUnit = function () {
              return !1;
            }),
            (c.prototype.isUnit = function () {
              return 1 === Math.abs(this.value);
            }),
            (g.prototype.isUnit = function () {
              return this.abs().value === BigInt(1);
            }),
            (s.prototype.isZero = function () {
              return !1;
            }),
            (c.prototype.isZero = function () {
              return 0 === this.value;
            }),
            (g.prototype.isZero = function () {
              return this.value === BigInt(0);
            }),
            (s.prototype.isDivisibleBy = function (e) {
              var t = V(e);
              return (
                !t.isZero() &&
                (!!t.isUnit() ||
                  (0 === t.compareAbs(2)
                    ? this.isEven()
                    : this.mod(t).isZero()))
              );
            }),
            (g.prototype.isDivisibleBy = c.prototype.isDivisibleBy =
              s.prototype.isDivisibleBy),
            (s.prototype.isPrime = function (t) {
              var r = D(this);
              if (r !== e) return r;
              var i = this.abs(),
                o = i.bitLength();
              if (o <= 64)
                return O(i, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
              for (
                var A = Math.log(2) * o.toJSNumber(),
                  a = Math.ceil(!0 === t ? 2 * Math.pow(A, 2) : A),
                  s = [],
                  c = 0;
                c < a;
                c++
              )
                s.push(n(c + 2));
              return O(i, s);
            }),
            (g.prototype.isPrime = c.prototype.isPrime = s.prototype.isPrime),
            (s.prototype.isProbablePrime = function (t, r) {
              var i = D(this);
              if (i !== e) return i;
              for (
                var o = this.abs(), A = t === e ? 5 : t, a = [], s = 0;
                s < A;
                s++
              )
                a.push(n.randBetween(2, o.minus(2), r));
              return O(o, a);
            }),
            (g.prototype.isProbablePrime = c.prototype.isProbablePrime =
              s.prototype.isProbablePrime),
            (s.prototype.modInv = function (e) {
              for (
                var t, r, i, o = n.zero, A = n.one, a = V(e), s = this.abs();
                !s.isZero();

              )
                (t = a.divide(s)),
                  (r = o),
                  (i = a),
                  (o = A),
                  (a = s),
                  (A = r.subtract(t.multiply(A))),
                  (s = i.subtract(t.multiply(s)));
              if (!a.isUnit())
                throw new Error(
                  this.toString() + " and " + e.toString() + " are not co-prime"
                );
              return (
                -1 === o.compare(0) && (o = o.add(e)),
                this.isNegative() ? o.negate() : o
              );
            }),
            (g.prototype.modInv = c.prototype.modInv = s.prototype.modInv),
            (s.prototype.next = function () {
              var e = this.value;
              return this.sign ? y(e, 1, this.sign) : new s(B(e, 1), this.sign);
            }),
            (c.prototype.next = function () {
              var e = this.value;
              return e + 1 < r ? new c(e + 1) : new s(i, !1);
            }),
            (g.prototype.next = function () {
              return new g(this.value + BigInt(1));
            }),
            (s.prototype.prev = function () {
              var e = this.value;
              return this.sign ? new s(B(e, 1), !0) : y(e, 1, this.sign);
            }),
            (c.prototype.prev = function () {
              var e = this.value;
              return e - 1 > -r ? new c(e - 1) : new s(i, !0);
            }),
            (g.prototype.prev = function () {
              return new g(this.value - BigInt(1));
            });
          for (var T = [1]; 2 * T[T.length - 1] <= t; )
            T.push(2 * T[T.length - 1]);
          var P = T.length,
            x = T[P - 1];
          function R(e) {
            return Math.abs(e) <= t;
          }
          function U(e, t, r) {
            t = V(t);
            for (
              var i = e.isNegative(),
                o = t.isNegative(),
                A = i ? e.not() : e,
                a = o ? t.not() : t,
                s = 0,
                c = 0,
                g = null,
                l = null,
                u = [];
              !A.isZero() || !a.isZero();

            )
              (s = (g = N(A, x))[1].toJSNumber()),
                i && (s = x - 1 - s),
                (c = (l = N(a, x))[1].toJSNumber()),
                o && (c = x - 1 - c),
                (A = g[0]),
                (a = l[0]),
                u.push(r(s, c));
            for (
              var h = 0 !== r(i ? 1 : 0, o ? 1 : 0) ? n(-1) : n(0),
                I = u.length - 1;
              I >= 0;
              I -= 1
            )
              h = h.multiply(x).add(n(u[I]));
            return h;
          }
          (s.prototype.shiftLeft = function (e) {
            var t = V(e).toJSNumber();
            if (!R(t))
              throw new Error(String(t) + " is too large for shifting.");
            if (t < 0) return this.shiftRight(-t);
            var r = this;
            if (r.isZero()) return r;
            for (; t >= P; ) (r = r.multiply(x)), (t -= P - 1);
            return r.multiply(T[t]);
          }),
            (g.prototype.shiftLeft = c.prototype.shiftLeft =
              s.prototype.shiftLeft),
            (s.prototype.shiftRight = function (e) {
              var t,
                r = V(e).toJSNumber();
              if (!R(r))
                throw new Error(String(r) + " is too large for shifting.");
              if (r < 0) return this.shiftLeft(-r);
              for (var i = this; r >= P; ) {
                if (i.isZero() || (i.isNegative() && i.isUnit())) return i;
                (i = (t = N(i, x))[1].isNegative() ? t[0].prev() : t[0]),
                  (r -= P - 1);
              }
              return (t = N(i, T[r]))[1].isNegative() ? t[0].prev() : t[0];
            }),
            (g.prototype.shiftRight = c.prototype.shiftRight =
              s.prototype.shiftRight),
            (s.prototype.not = function () {
              return this.negate().prev();
            }),
            (g.prototype.not = c.prototype.not = s.prototype.not),
            (s.prototype.and = function (e) {
              return U(this, e, function (e, t) {
                return e & t;
              });
            }),
            (g.prototype.and = c.prototype.and = s.prototype.and),
            (s.prototype.or = function (e) {
              return U(this, e, function (e, t) {
                return e | t;
              });
            }),
            (g.prototype.or = c.prototype.or = s.prototype.or),
            (s.prototype.xor = function (e) {
              return U(this, e, function (e, t) {
                return e ^ t;
              });
            }),
            (g.prototype.xor = c.prototype.xor = s.prototype.xor);
          var F = 1 << 30;
          function H(e) {
            var r = e.value,
              i =
                "number" == typeof r
                  ? r | F
                  : "bigint" == typeof r
                  ? r | BigInt(F)
                  : (r[0] + r[1] * t) | 1073758208;
            return i & -i;
          }
          function M(e, t) {
            if (t.compareTo(e) <= 0) {
              var r = M(e, t.square(t)),
                i = r.p,
                o = r.e,
                A = i.multiply(t);
              return A.compareTo(e) <= 0
                ? { p: A, e: 2 * o + 1 }
                : { p: i, e: 2 * o };
            }
            return { p: n(1), e: 0 };
          }
          function G(e, t) {
            return (e = V(e)), (t = V(t)), e.greater(t) ? e : t;
          }
          function L(e, t) {
            return (e = V(e)), (t = V(t)), e.lesser(t) ? e : t;
          }
          function K(e, t) {
            if (((e = V(e).abs()), (t = V(t).abs()), e.equals(t))) return e;
            if (e.isZero()) return t;
            if (t.isZero()) return e;
            for (var r, i, n = a[1]; e.isEven() && t.isEven(); )
              (r = L(H(e), H(t))),
                (e = e.divide(r)),
                (t = t.divide(r)),
                (n = n.multiply(r));
            for (; e.isEven(); ) e = e.divide(H(e));
            do {
              for (; t.isEven(); ) t = t.divide(H(t));
              e.greater(t) && ((i = t), (t = e), (e = i)), (t = t.subtract(e));
            } while (!t.isZero());
            return n.isUnit() ? e : e.multiply(n);
          }
          (s.prototype.bitLength = function () {
            var e = this;
            return (
              e.compareTo(n(0)) < 0 && (e = e.negate().subtract(n(1))),
              0 === e.compareTo(n(0)) ? n(0) : n(M(e, n(2)).e).add(n(1))
            );
          }),
            (g.prototype.bitLength = c.prototype.bitLength =
              s.prototype.bitLength);
          var Y = function (e, t, r, i) {
            (r = r || o),
              (e = String(e)),
              i || ((e = e.toLowerCase()), (r = r.toLowerCase()));
            var n,
              A = e.length,
              a = Math.abs(t),
              s = {};
            for (n = 0; n < r.length; n++) s[r[n]] = n;
            for (n = 0; n < A; n++)
              if ("-" !== (l = e[n]) && l in s && s[l] >= a) {
                if ("1" === l && 1 === a) continue;
                throw new Error(l + " is not a valid digit in base " + t + ".");
              }
            t = V(t);
            var c = [],
              g = "-" === e[0];
            for (n = g ? 1 : 0; n < e.length; n++) {
              var l;
              if ((l = e[n]) in s) c.push(V(s[l]));
              else {
                if ("<" !== l) throw new Error(l + " is not a valid character");
                var u = n;
                do {
                  n++;
                } while (">" !== e[n] && n < e.length);
                c.push(V(e.slice(u + 1, n)));
              }
            }
            return q(c, t, g);
          };
          function q(e, t, r) {
            var i,
              n = a[0],
              o = a[1];
            for (i = e.length - 1; i >= 0; i--)
              (n = n.add(e[i].times(o))), (o = o.times(t));
            return r ? n.negate() : n;
          }
          function J(e, t) {
            if ((t = n(t)).isZero()) {
              if (e.isZero()) return { value: [0], isNegative: !1 };
              throw new Error("Cannot convert nonzero numbers to base 0.");
            }
            if (t.equals(-1)) {
              if (e.isZero()) return { value: [0], isNegative: !1 };
              if (e.isNegative())
                return {
                  value: [].concat.apply(
                    [],
                    Array.apply(null, Array(-e.toJSNumber())).map(
                      Array.prototype.valueOf,
                      [1, 0]
                    )
                  ),
                  isNegative: !1,
                };
              var r = Array.apply(null, Array(e.toJSNumber() - 1)).map(
                Array.prototype.valueOf,
                [0, 1]
              );
              return (
                r.unshift([1]),
                { value: [].concat.apply([], r), isNegative: !1 }
              );
            }
            var i = !1;
            if (
              (e.isNegative() && t.isPositive() && ((i = !0), (e = e.abs())),
              t.isUnit())
            )
              return e.isZero()
                ? { value: [0], isNegative: !1 }
                : {
                    value: Array.apply(null, Array(e.toJSNumber())).map(
                      Number.prototype.valueOf,
                      1
                    ),
                    isNegative: i,
                  };
            for (
              var o, A = [], a = e;
              a.isNegative() || a.compareAbs(t) >= 0;

            ) {
              (o = a.divmod(t)), (a = o.quotient);
              var s = o.remainder;
              s.isNegative() && ((s = t.minus(s).abs()), (a = a.next())),
                A.push(s.toJSNumber());
            }
            return (
              A.push(a.toJSNumber()), { value: A.reverse(), isNegative: i }
            );
          }
          function j(e, t, r) {
            var i = J(e, t);
            return (
              (i.isNegative ? "-" : "") +
              i.value
                .map(function (e) {
                  return (function (e, t) {
                    return e < (t = t || o).length ? t[e] : "<" + e + ">";
                  })(e, r);
                })
                .join("")
            );
          }
          function z(e) {
            if (l(+e)) {
              var t = +e;
              if (t === d(t)) return A ? new g(BigInt(t)) : new c(t);
              throw new Error("Invalid integer: " + e);
            }
            var r = "-" === e[0];
            r && (e = e.slice(1));
            var i = e.split(/e/i);
            if (i.length > 2)
              throw new Error("Invalid integer: " + i.join("e"));
            if (2 === i.length) {
              var n = i[1];
              if (
                ("+" === n[0] && (n = n.slice(1)), (n = +n) !== d(n) || !l(n))
              )
                throw new Error(
                  "Invalid integer: " + n + " is not a valid exponent."
                );
              var o = i[0],
                a = o.indexOf(".");
              if (
                (a >= 0 &&
                  ((n -= o.length - a - 1),
                  (o = o.slice(0, a) + o.slice(a + 1))),
                n < 0)
              )
                throw new Error(
                  "Cannot include negative exponent part for integers"
                );
              e = o += new Array(n + 1).join("0");
            }
            if (!/^([0-9][0-9]*)$/.test(e))
              throw new Error("Invalid integer: " + e);
            if (A) return new g(BigInt(r ? "-" + e : e));
            for (var u = [], h = e.length, p = h - 7; h > 0; )
              u.push(+e.slice(p, h)), (p -= 7) < 0 && (p = 0), (h -= 7);
            return I(u), new s(u, r);
          }
          function V(e) {
            return "number" == typeof e
              ? (function (e) {
                  if (A) return new g(BigInt(e));
                  if (l(e)) {
                    if (e !== d(e)) throw new Error(e + " is not an integer.");
                    return new c(e);
                  }
                  return z(e.toString());
                })(e)
              : "string" == typeof e
              ? z(e)
              : "bigint" == typeof e
              ? new g(e)
              : e;
          }
          (s.prototype.toArray = function (e) {
            return J(this, e);
          }),
            (c.prototype.toArray = function (e) {
              return J(this, e);
            }),
            (g.prototype.toArray = function (e) {
              return J(this, e);
            }),
            (s.prototype.toString = function (t, r) {
              if ((t === e && (t = 10), 10 !== t)) return j(this, t, r);
              for (
                var i, n = this.value, o = n.length, A = String(n[--o]);
                --o >= 0;

              )
                (i = String(n[o])), (A += "0000000".slice(i.length) + i);
              return (this.sign ? "-" : "") + A;
            }),
            (c.prototype.toString = function (t, r) {
              return (
                t === e && (t = 10),
                10 != t ? j(this, t, r) : String(this.value)
              );
            }),
            (g.prototype.toString = c.prototype.toString),
            (g.prototype.toJSON =
              s.prototype.toJSON =
              c.prototype.toJSON =
                function () {
                  return this.toString();
                }),
            (s.prototype.valueOf = function () {
              return parseInt(this.toString(), 10);
            }),
            (s.prototype.toJSNumber = s.prototype.valueOf),
            (c.prototype.valueOf = function () {
              return this.value;
            }),
            (c.prototype.toJSNumber = c.prototype.valueOf),
            (g.prototype.valueOf = g.prototype.toJSNumber =
              function () {
                return parseInt(this.toString(), 10);
              });
          for (var W = 0; W < 1e3; W++) (a[W] = V(W)), W > 0 && (a[-W] = V(-W));
          return (
            (a.one = a[1]),
            (a.zero = a[0]),
            (a.minusOne = a[-1]),
            (a.max = G),
            (a.min = L),
            (a.gcd = K),
            (a.lcm = function (e, t) {
              return (
                (e = V(e).abs()),
                (t = V(t).abs()),
                e.divide(K(e, t)).multiply(t)
              );
            }),
            (a.isInstance = function (e) {
              return e instanceof s || e instanceof c || e instanceof g;
            }),
            (a.randBetween = function (e, r, i) {
              (e = V(e)), (r = V(r));
              var n = i || Math.random,
                o = L(e, r),
                A = G(e, r).subtract(o).add(1);
              if (A.isSmall) return o.add(Math.floor(n() * A));
              for (
                var s = J(A, t).value, c = [], g = !0, l = 0;
                l < s.length;
                l++
              ) {
                var u = g ? s[l] : t,
                  h = d(n() * u);
                c.push(h), h < u && (g = !1);
              }
              return o.add(a.fromArray(c, t, !1));
            }),
            (a.fromArray = function (e, t, r) {
              return q(e.map(V), V(t || 10), r);
            }),
            a
          );
        })();
        e.hasOwnProperty("exports") && (e.exports = n),
          void 0 ===
            (i = function () {
              return n;
            }.call(t, r, t, e)) || (e.exports = i);
      },
      6391: function (e, t, r) {
        var i;
        !(function (n) {
          "use strict";
          var o,
            A = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
            a = Math.ceil,
            s = Math.floor,
            c = "[BigNumber Error] ",
            g = c + "Number primitive has more than 15 significant digits: ",
            l = 1e14,
            u = 14,
            h = 9007199254740991,
            I = [
              1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12,
              1e13,
            ],
            p = 1e7,
            d = 1e9;
          function f(e) {
            var t = 0 | e;
            return e > 0 || e === t ? t : t - 1;
          }
          function C(e) {
            for (var t, r, i = 1, n = e.length, o = e[0] + ""; i < n; ) {
              for (t = e[i++] + "", r = u - t.length; r--; t = "0" + t);
              o += t;
            }
            for (n = o.length; 48 === o.charCodeAt(--n); );
            return o.slice(0, n + 1 || 1);
          }
          function B(e, t) {
            var r,
              i,
              n = e.c,
              o = t.c,
              A = e.s,
              a = t.s,
              s = e.e,
              c = t.e;
            if (!A || !a) return null;
            if (((r = n && !n[0]), (i = o && !o[0]), r || i))
              return r ? (i ? 0 : -a) : A;
            if (A != a) return A;
            if (((r = A < 0), (i = s == c), !n || !o))
              return i ? 0 : !n ^ r ? 1 : -1;
            if (!i) return (s > c) ^ r ? 1 : -1;
            for (a = (s = n.length) < (c = o.length) ? s : c, A = 0; A < a; A++)
              if (n[A] != o[A]) return (n[A] > o[A]) ^ r ? 1 : -1;
            return s == c ? 0 : (s > c) ^ r ? 1 : -1;
          }
          function E(e, t, r, i) {
            if (e < t || e > r || e !== s(e))
              throw Error(
                c +
                  (i || "Argument") +
                  ("number" == typeof e
                    ? e < t || e > r
                      ? " out of range: "
                      : " not an integer: "
                    : " not a primitive number: ") +
                  String(e)
              );
          }
          function y(e) {
            var t = e.c.length - 1;
            return f(e.e / u) == t && e.c[t] % 2 != 0;
          }
          function m(e, t) {
            return (
              (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) +
              (t < 0 ? "e" : "e+") +
              t
            );
          }
          function Q(e, t, r) {
            var i, n;
            if (t < 0) {
              for (n = r + "."; ++t; n += r);
              e = n + e;
            } else if (++t > (i = e.length)) {
              for (n = r, t -= i; --t; n += r);
              e += n;
            } else t < i && (e = e.slice(0, t) + "." + e.slice(t));
            return e;
          }
          (o = (function e(t) {
            var r,
              i,
              n,
              o,
              v,
              S,
              w,
              b,
              k,
              N,
              _ = (K.prototype = {
                constructor: K,
                toString: null,
                valueOf: null,
              }),
              D = new K(1),
              O = 20,
              T = 4,
              P = -7,
              x = 21,
              R = -1e7,
              U = 1e7,
              F = !1,
              H = 1,
              M = 0,
              G = {
                prefix: "",
                groupSize: 3,
                secondaryGroupSize: 0,
                groupSeparator: ",",
                decimalSeparator: ".",
                fractionGroupSize: 0,
                fractionGroupSeparator: " ",
                suffix: "",
              },
              L = "0123456789abcdefghijklmnopqrstuvwxyz";
            function K(e, t) {
              var r,
                o,
                a,
                c,
                l,
                I,
                p,
                d,
                f = this;
              if (!(f instanceof K)) return new K(e, t);
              if (null == t) {
                if (e && !0 === e._isBigNumber)
                  return (
                    (f.s = e.s),
                    void (!e.c || e.e > U
                      ? (f.c = f.e = null)
                      : e.e < R
                      ? (f.c = [(f.e = 0)])
                      : ((f.e = e.e), (f.c = e.c.slice())))
                  );
                if ((I = "number" == typeof e) && 0 * e == 0) {
                  if (((f.s = 1 / e < 0 ? ((e = -e), -1) : 1), e === ~~e)) {
                    for (c = 0, l = e; l >= 10; l /= 10, c++);
                    return void (c > U
                      ? (f.c = f.e = null)
                      : ((f.e = c), (f.c = [e])));
                  }
                  d = String(e);
                } else {
                  if (!A.test((d = String(e)))) return n(f, d, I);
                  f.s = 45 == d.charCodeAt(0) ? ((d = d.slice(1)), -1) : 1;
                }
                (c = d.indexOf(".")) > -1 && (d = d.replace(".", "")),
                  (l = d.search(/e/i)) > 0
                    ? (c < 0 && (c = l),
                      (c += +d.slice(l + 1)),
                      (d = d.substring(0, l)))
                    : c < 0 && (c = d.length);
              } else {
                if ((E(t, 2, L.length, "Base"), 10 == t))
                  return j((f = new K(e)), O + f.e + 1, T);
                if (((d = String(e)), (I = "number" == typeof e))) {
                  if (0 * e != 0) return n(f, d, I, t);
                  if (
                    ((f.s = 1 / e < 0 ? ((d = d.slice(1)), -1) : 1),
                    K.DEBUG && d.replace(/^0\.0*|\./, "").length > 15)
                  )
                    throw Error(g + e);
                } else
                  f.s = 45 === d.charCodeAt(0) ? ((d = d.slice(1)), -1) : 1;
                for (r = L.slice(0, t), c = l = 0, p = d.length; l < p; l++)
                  if (r.indexOf((o = d.charAt(l))) < 0) {
                    if ("." == o) {
                      if (l > c) {
                        c = p;
                        continue;
                      }
                    } else if (
                      !a &&
                      ((d == d.toUpperCase() && (d = d.toLowerCase())) ||
                        (d == d.toLowerCase() && (d = d.toUpperCase())))
                    ) {
                      (a = !0), (l = -1), (c = 0);
                      continue;
                    }
                    return n(f, String(e), I, t);
                  }
                (I = !1),
                  (c = (d = i(d, t, 10, f.s)).indexOf(".")) > -1
                    ? (d = d.replace(".", ""))
                    : (c = d.length);
              }
              for (l = 0; 48 === d.charCodeAt(l); l++);
              for (p = d.length; 48 === d.charCodeAt(--p); );
              if ((d = d.slice(l, ++p))) {
                if (((p -= l), I && K.DEBUG && p > 15 && (e > h || e !== s(e))))
                  throw Error(g + f.s * e);
                if ((c = c - l - 1) > U) f.c = f.e = null;
                else if (c < R) f.c = [(f.e = 0)];
                else {
                  if (
                    ((f.e = c),
                    (f.c = []),
                    (l = (c + 1) % u),
                    c < 0 && (l += u),
                    l < p)
                  ) {
                    for (l && f.c.push(+d.slice(0, l)), p -= u; l < p; )
                      f.c.push(+d.slice(l, (l += u)));
                    l = u - (d = d.slice(l)).length;
                  } else l -= p;
                  for (; l--; d += "0");
                  f.c.push(+d);
                }
              } else f.c = [(f.e = 0)];
            }
            function Y(e, t, r, i) {
              var n, o, A, a, s;
              if ((null == r ? (r = T) : E(r, 0, 8), !e.c)) return e.toString();
              if (((n = e.c[0]), (A = e.e), null == t))
                (s = C(e.c)),
                  (s =
                    1 == i || (2 == i && (A <= P || A >= x))
                      ? m(s, A)
                      : Q(s, A, "0"));
              else if (
                ((o = (e = j(new K(e), t, r)).e),
                (a = (s = C(e.c)).length),
                1 == i || (2 == i && (t <= o || o <= P)))
              ) {
                for (; a < t; s += "0", a++);
                s = m(s, o);
              } else if (((t -= A), (s = Q(s, o, "0")), o + 1 > a)) {
                if (--t > 0) for (s += "."; t--; s += "0");
              } else if ((t += o - a) > 0)
                for (o + 1 == a && (s += "."); t--; s += "0");
              return e.s < 0 && n ? "-" + s : s;
            }
            function q(e, t) {
              for (var r, i = 1, n = new K(e[0]); i < e.length; i++) {
                if (!(r = new K(e[i])).s) {
                  n = r;
                  break;
                }
                t.call(n, r) && (n = r);
              }
              return n;
            }
            function J(e, t, r) {
              for (var i = 1, n = t.length; !t[--n]; t.pop());
              for (n = t[0]; n >= 10; n /= 10, i++);
              return (
                (r = i + r * u - 1) > U
                  ? (e.c = e.e = null)
                  : r < R
                  ? (e.c = [(e.e = 0)])
                  : ((e.e = r), (e.c = t)),
                e
              );
            }
            function j(e, t, r, i) {
              var n,
                o,
                A,
                c,
                g,
                h,
                p,
                d = e.c,
                f = I;
              if (d) {
                e: {
                  for (n = 1, c = d[0]; c >= 10; c /= 10, n++);
                  if ((o = t - n) < 0)
                    (o += u),
                      (A = t),
                      (p = ((g = d[(h = 0)]) / f[n - A - 1]) % 10 | 0);
                  else if ((h = a((o + 1) / u)) >= d.length) {
                    if (!i) break e;
                    for (; d.length <= h; d.push(0));
                    (g = p = 0), (n = 1), (A = (o %= u) - u + 1);
                  } else {
                    for (g = c = d[h], n = 1; c >= 10; c /= 10, n++);
                    p =
                      (A = (o %= u) - u + n) < 0
                        ? 0
                        : (g / f[n - A - 1]) % 10 | 0;
                  }
                  if (
                    ((i =
                      i ||
                      t < 0 ||
                      null != d[h + 1] ||
                      (A < 0 ? g : g % f[n - A - 1])),
                    (i =
                      r < 4
                        ? (p || i) && (0 == r || r == (e.s < 0 ? 3 : 2))
                        : p > 5 ||
                          (5 == p &&
                            (4 == r ||
                              i ||
                              (6 == r &&
                                (o > 0
                                  ? A > 0
                                    ? g / f[n - A]
                                    : 0
                                  : d[h - 1]) %
                                  10 &
                                  1) ||
                              r == (e.s < 0 ? 8 : 7)))),
                    t < 1 || !d[0])
                  )
                    return (
                      (d.length = 0),
                      i
                        ? ((t -= e.e + 1),
                          (d[0] = f[(u - (t % u)) % u]),
                          (e.e = -t || 0))
                        : (d[0] = e.e = 0),
                      e
                    );
                  if (
                    (0 == o
                      ? ((d.length = h), (c = 1), h--)
                      : ((d.length = h + 1),
                        (c = f[u - o]),
                        (d[h] = A > 0 ? s((g / f[n - A]) % f[A]) * c : 0)),
                    i)
                  )
                    for (;;) {
                      if (0 == h) {
                        for (o = 1, A = d[0]; A >= 10; A /= 10, o++);
                        for (A = d[0] += c, c = 1; A >= 10; A /= 10, c++);
                        o != c && (e.e++, d[0] == l && (d[0] = 1));
                        break;
                      }
                      if (((d[h] += c), d[h] != l)) break;
                      (d[h--] = 0), (c = 1);
                    }
                  for (o = d.length; 0 === d[--o]; d.pop());
                }
                e.e > U ? (e.c = e.e = null) : e.e < R && (e.c = [(e.e = 0)]);
              }
              return e;
            }
            function z(e) {
              var t,
                r = e.e;
              return null === r
                ? e.toString()
                : ((t = C(e.c)),
                  (t = r <= P || r >= x ? m(t, r) : Q(t, r, "0")),
                  e.s < 0 ? "-" + t : t);
            }
            return (
              (K.clone = e),
              (K.ROUND_UP = 0),
              (K.ROUND_DOWN = 1),
              (K.ROUND_CEIL = 2),
              (K.ROUND_FLOOR = 3),
              (K.ROUND_HALF_UP = 4),
              (K.ROUND_HALF_DOWN = 5),
              (K.ROUND_HALF_EVEN = 6),
              (K.ROUND_HALF_CEIL = 7),
              (K.ROUND_HALF_FLOOR = 8),
              (K.EUCLID = 9),
              (K.config = K.set =
                function (e) {
                  var t, r;
                  if (null != e) {
                    if ("object" != typeof e)
                      throw Error(c + "Object expected: " + e);
                    if (
                      (e.hasOwnProperty((t = "DECIMAL_PLACES")) &&
                        (E((r = e[t]), 0, d, t), (O = r)),
                      e.hasOwnProperty((t = "ROUNDING_MODE")) &&
                        (E((r = e[t]), 0, 8, t), (T = r)),
                      e.hasOwnProperty((t = "EXPONENTIAL_AT")) &&
                        ((r = e[t]) && r.pop
                          ? (E(r[0], -d, 0, t),
                            E(r[1], 0, d, t),
                            (P = r[0]),
                            (x = r[1]))
                          : (E(r, -d, d, t), (P = -(x = r < 0 ? -r : r)))),
                      e.hasOwnProperty((t = "RANGE")))
                    )
                      if ((r = e[t]) && r.pop)
                        E(r[0], -d, -1, t),
                          E(r[1], 1, d, t),
                          (R = r[0]),
                          (U = r[1]);
                      else {
                        if ((E(r, -d, d, t), !r))
                          throw Error(c + t + " cannot be zero: " + r);
                        R = -(U = r < 0 ? -r : r);
                      }
                    if (e.hasOwnProperty((t = "CRYPTO"))) {
                      if ((r = e[t]) !== !!r)
                        throw Error(c + t + " not true or false: " + r);
                      if (r) {
                        if (
                          "undefined" == typeof crypto ||
                          !crypto ||
                          (!crypto.getRandomValues && !crypto.randomBytes)
                        )
                          throw ((F = !r), Error(c + "crypto unavailable"));
                        F = r;
                      } else F = r;
                    }
                    if (
                      (e.hasOwnProperty((t = "MODULO_MODE")) &&
                        (E((r = e[t]), 0, 9, t), (H = r)),
                      e.hasOwnProperty((t = "POW_PRECISION")) &&
                        (E((r = e[t]), 0, d, t), (M = r)),
                      e.hasOwnProperty((t = "FORMAT")))
                    ) {
                      if ("object" != typeof (r = e[t]))
                        throw Error(c + t + " not an object: " + r);
                      G = r;
                    }
                    if (e.hasOwnProperty((t = "ALPHABET"))) {
                      if (
                        "string" != typeof (r = e[t]) ||
                        /^.?$|[+\-.\s]|(.).*\1/.test(r)
                      )
                        throw Error(c + t + " invalid: " + r);
                      L = r;
                    }
                  }
                  return {
                    DECIMAL_PLACES: O,
                    ROUNDING_MODE: T,
                    EXPONENTIAL_AT: [P, x],
                    RANGE: [R, U],
                    CRYPTO: F,
                    MODULO_MODE: H,
                    POW_PRECISION: M,
                    FORMAT: G,
                    ALPHABET: L,
                  };
                }),
              (K.isBigNumber = function (e) {
                if (!e || !0 !== e._isBigNumber) return !1;
                if (!K.DEBUG) return !0;
                var t,
                  r,
                  i = e.c,
                  n = e.e,
                  o = e.s;
                e: if ("[object Array]" == {}.toString.call(i)) {
                  if (
                    (1 === o || -1 === o) &&
                    n >= -d &&
                    n <= d &&
                    n === s(n)
                  ) {
                    if (0 === i[0]) {
                      if (0 === n && 1 === i.length) return !0;
                      break e;
                    }
                    if (
                      ((t = (n + 1) % u) < 1 && (t += u),
                      String(i[0]).length == t)
                    ) {
                      for (t = 0; t < i.length; t++)
                        if ((r = i[t]) < 0 || r >= l || r !== s(r)) break e;
                      if (0 !== r) return !0;
                    }
                  }
                } else if (
                  null === i &&
                  null === n &&
                  (null === o || 1 === o || -1 === o)
                )
                  return !0;
                throw Error(c + "Invalid BigNumber: " + e);
              }),
              (K.maximum = K.max =
                function () {
                  return q(arguments, _.lt);
                }),
              (K.minimum = K.min =
                function () {
                  return q(arguments, _.gt);
                }),
              (K.random =
                ((o = 9007199254740992),
                (v =
                  (Math.random() * o) & 2097151
                    ? function () {
                        return s(Math.random() * o);
                      }
                    : function () {
                        return (
                          8388608 * ((1073741824 * Math.random()) | 0) +
                          ((8388608 * Math.random()) | 0)
                        );
                      }),
                function (e) {
                  var t,
                    r,
                    i,
                    n,
                    o,
                    A = 0,
                    g = [],
                    l = new K(D);
                  if ((null == e ? (e = O) : E(e, 0, d), (n = a(e / u)), F))
                    if (crypto.getRandomValues) {
                      for (
                        t = crypto.getRandomValues(new Uint32Array((n *= 2)));
                        A < n;

                      )
                        (o = 131072 * t[A] + (t[A + 1] >>> 11)) >= 9e15
                          ? ((r = crypto.getRandomValues(new Uint32Array(2))),
                            (t[A] = r[0]),
                            (t[A + 1] = r[1]))
                          : (g.push(o % 1e14), (A += 2));
                      A = n / 2;
                    } else {
                      if (!crypto.randomBytes)
                        throw ((F = !1), Error(c + "crypto unavailable"));
                      for (t = crypto.randomBytes((n *= 7)); A < n; )
                        (o =
                          281474976710656 * (31 & t[A]) +
                          1099511627776 * t[A + 1] +
                          4294967296 * t[A + 2] +
                          16777216 * t[A + 3] +
                          (t[A + 4] << 16) +
                          (t[A + 5] << 8) +
                          t[A + 6]) >= 9e15
                          ? crypto.randomBytes(7).copy(t, A)
                          : (g.push(o % 1e14), (A += 7));
                      A = n / 7;
                    }
                  if (!F)
                    for (; A < n; ) (o = v()) < 9e15 && (g[A++] = o % 1e14);
                  for (
                    n = g[--A],
                      e %= u,
                      n && e && ((o = I[u - e]), (g[A] = s(n / o) * o));
                    0 === g[A];
                    g.pop(), A--
                  );
                  if (A < 0) g = [(i = 0)];
                  else {
                    for (i = -1; 0 === g[0]; g.splice(0, 1), i -= u);
                    for (A = 1, o = g[0]; o >= 10; o /= 10, A++);
                    A < u && (i -= u - A);
                  }
                  return (l.e = i), (l.c = g), l;
                })),
              (K.sum = function () {
                for (var e = 1, t = arguments, r = new K(t[0]); e < t.length; )
                  r = r.plus(t[e++]);
                return r;
              }),
              (i = (function () {
                var e = "0123456789";
                function t(e, t, r, i) {
                  for (var n, o, A = [0], a = 0, s = e.length; a < s; ) {
                    for (o = A.length; o--; A[o] *= t);
                    for (
                      A[0] += i.indexOf(e.charAt(a++)), n = 0;
                      n < A.length;
                      n++
                    )
                      A[n] > r - 1 &&
                        (null == A[n + 1] && (A[n + 1] = 0),
                        (A[n + 1] += (A[n] / r) | 0),
                        (A[n] %= r));
                  }
                  return A.reverse();
                }
                return function (i, n, o, A, a) {
                  var s,
                    c,
                    g,
                    l,
                    u,
                    h,
                    I,
                    p,
                    d = i.indexOf("."),
                    f = O,
                    B = T;
                  for (
                    d >= 0 &&
                      ((l = M),
                      (M = 0),
                      (i = i.replace(".", "")),
                      (h = (p = new K(n)).pow(i.length - d)),
                      (M = l),
                      (p.c = t(Q(C(h.c), h.e, "0"), 10, o, e)),
                      (p.e = p.c.length)),
                      g = l =
                        (I = t(i, n, o, a ? ((s = L), e) : ((s = e), L)))
                          .length;
                    0 == I[--l];
                    I.pop()
                  );
                  if (!I[0]) return s.charAt(0);
                  if (
                    (d < 0
                      ? --g
                      : ((h.c = I),
                        (h.e = g),
                        (h.s = A),
                        (I = (h = r(h, p, f, B, o)).c),
                        (u = h.r),
                        (g = h.e)),
                    (d = I[(c = g + f + 1)]),
                    (l = o / 2),
                    (u = u || c < 0 || null != I[c + 1]),
                    (u =
                      B < 4
                        ? (null != d || u) && (0 == B || B == (h.s < 0 ? 3 : 2))
                        : d > l ||
                          (d == l &&
                            (4 == B ||
                              u ||
                              (6 == B && 1 & I[c - 1]) ||
                              B == (h.s < 0 ? 8 : 7)))),
                    c < 1 || !I[0])
                  )
                    i = u ? Q(s.charAt(1), -f, s.charAt(0)) : s.charAt(0);
                  else {
                    if (((I.length = c), u))
                      for (--o; ++I[--c] > o; )
                        (I[c] = 0), c || (++g, (I = [1].concat(I)));
                    for (l = I.length; !I[--l]; );
                    for (d = 0, i = ""; d <= l; i += s.charAt(I[d++]));
                    i = Q(i, g, s.charAt(0));
                  }
                  return i;
                };
              })()),
              (r = (function () {
                function e(e, t, r) {
                  var i,
                    n,
                    o,
                    A,
                    a = 0,
                    s = e.length,
                    c = t % p,
                    g = (t / p) | 0;
                  for (e = e.slice(); s--; )
                    (a =
                      (((n =
                        c * (o = e[s] % p) +
                        ((i = g * o + (A = (e[s] / p) | 0) * c) % p) * p +
                        a) /
                        r) |
                        0) +
                      ((i / p) | 0) +
                      g * A),
                      (e[s] = n % r);
                  return a && (e = [a].concat(e)), e;
                }
                function t(e, t, r, i) {
                  var n, o;
                  if (r != i) o = r > i ? 1 : -1;
                  else
                    for (n = o = 0; n < r; n++)
                      if (e[n] != t[n]) {
                        o = e[n] > t[n] ? 1 : -1;
                        break;
                      }
                  return o;
                }
                function r(e, t, r, i) {
                  for (var n = 0; r--; )
                    (e[r] -= n),
                      (n = e[r] < t[r] ? 1 : 0),
                      (e[r] = n * i + e[r] - t[r]);
                  for (; !e[0] && e.length > 1; e.splice(0, 1));
                }
                return function (i, n, o, A, a) {
                  var c,
                    g,
                    h,
                    I,
                    p,
                    d,
                    C,
                    B,
                    E,
                    y,
                    m,
                    Q,
                    v,
                    S,
                    w,
                    b,
                    k,
                    N = i.s == n.s ? 1 : -1,
                    _ = i.c,
                    D = n.c;
                  if (!(_ && _[0] && D && D[0]))
                    return new K(
                      i.s && n.s && (_ ? !D || _[0] != D[0] : D)
                        ? (_ && 0 == _[0]) || !D
                          ? 0 * N
                          : N / 0
                        : NaN
                    );
                  for (
                    E = (B = new K(N)).c = [],
                      N = o + (g = i.e - n.e) + 1,
                      a ||
                        ((a = l),
                        (g = f(i.e / u) - f(n.e / u)),
                        (N = (N / u) | 0)),
                      h = 0;
                    D[h] == (_[h] || 0);
                    h++
                  );
                  if ((D[h] > (_[h] || 0) && g--, N < 0)) E.push(1), (I = !0);
                  else {
                    for (
                      S = _.length,
                        b = D.length,
                        h = 0,
                        N += 2,
                        (p = s(a / (D[0] + 1))) > 1 &&
                          ((D = e(D, p, a)),
                          (_ = e(_, p, a)),
                          (b = D.length),
                          (S = _.length)),
                        v = b,
                        m = (y = _.slice(0, b)).length;
                      m < b;
                      y[m++] = 0
                    );
                    (k = D.slice()),
                      (k = [0].concat(k)),
                      (w = D[0]),
                      D[1] >= a / 2 && w++;
                    do {
                      if (((p = 0), (c = t(D, y, b, m)) < 0)) {
                        if (
                          ((Q = y[0]),
                          b != m && (Q = Q * a + (y[1] || 0)),
                          (p = s(Q / w)) > 1)
                        )
                          for (
                            p >= a && (p = a - 1),
                              C = (d = e(D, p, a)).length,
                              m = y.length;
                            1 == t(d, y, C, m);

                          )
                            p--,
                              r(d, b < C ? k : D, C, a),
                              (C = d.length),
                              (c = 1);
                        else
                          0 == p && (c = p = 1), (C = (d = D.slice()).length);
                        if (
                          (C < m && (d = [0].concat(d)),
                          r(y, d, m, a),
                          (m = y.length),
                          -1 == c)
                        )
                          for (; t(D, y, b, m) < 1; )
                            p++, r(y, b < m ? k : D, m, a), (m = y.length);
                      } else 0 === c && (p++, (y = [0]));
                      (E[h++] = p),
                        y[0] ? (y[m++] = _[v] || 0) : ((y = [_[v]]), (m = 1));
                    } while ((v++ < S || null != y[0]) && N--);
                    (I = null != y[0]), E[0] || E.splice(0, 1);
                  }
                  if (a == l) {
                    for (h = 1, N = E[0]; N >= 10; N /= 10, h++);
                    j(B, o + (B.e = h + g * u - 1) + 1, A, I);
                  } else (B.e = g), (B.r = +I);
                  return B;
                };
              })()),
              (S = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
              (w = /^([^.]+)\.$/),
              (b = /^\.([^.]+)$/),
              (k = /^-?(Infinity|NaN)$/),
              (N = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
              (n = function (e, t, r, i) {
                var n,
                  o = r ? t : t.replace(N, "");
                if (k.test(o)) e.s = isNaN(o) ? null : o < 0 ? -1 : 1;
                else {
                  if (
                    !r &&
                    ((o = o.replace(S, function (e, t, r) {
                      return (
                        (n =
                          "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8),
                        i && i != n ? e : t
                      );
                    })),
                    i && ((n = i), (o = o.replace(w, "$1").replace(b, "0.$1"))),
                    t != o)
                  )
                    return new K(o, n);
                  if (K.DEBUG)
                    throw Error(
                      c + "Not a" + (i ? " base " + i : "") + " number: " + t
                    );
                  e.s = null;
                }
                e.c = e.e = null;
              }),
              (_.absoluteValue = _.abs =
                function () {
                  var e = new K(this);
                  return e.s < 0 && (e.s = 1), e;
                }),
              (_.comparedTo = function (e, t) {
                return B(this, new K(e, t));
              }),
              (_.decimalPlaces = _.dp =
                function (e, t) {
                  var r,
                    i,
                    n,
                    o = this;
                  if (null != e)
                    return (
                      E(e, 0, d),
                      null == t ? (t = T) : E(t, 0, 8),
                      j(new K(o), e + o.e + 1, t)
                    );
                  if (!(r = o.c)) return null;
                  if (
                    ((i = ((n = r.length - 1) - f(this.e / u)) * u), (n = r[n]))
                  )
                    for (; n % 10 == 0; n /= 10, i--);
                  return i < 0 && (i = 0), i;
                }),
              (_.dividedBy = _.div =
                function (e, t) {
                  return r(this, new K(e, t), O, T);
                }),
              (_.dividedToIntegerBy = _.idiv =
                function (e, t) {
                  return r(this, new K(e, t), 0, 1);
                }),
              (_.exponentiatedBy = _.pow =
                function (e, t) {
                  var r,
                    i,
                    n,
                    o,
                    A,
                    g,
                    l,
                    h,
                    I = this;
                  if ((e = new K(e)).c && !e.isInteger())
                    throw Error(c + "Exponent not an integer: " + z(e));
                  if (
                    (null != t && (t = new K(t)),
                    (A = e.e > 14),
                    !I.c ||
                      !I.c[0] ||
                      (1 == I.c[0] && !I.e && 1 == I.c.length) ||
                      !e.c ||
                      !e.c[0])
                  )
                    return (
                      (h = new K(Math.pow(+z(I), A ? 2 - y(e) : +z(e)))),
                      t ? h.mod(t) : h
                    );
                  if (((g = e.s < 0), t)) {
                    if (t.c ? !t.c[0] : !t.s) return new K(NaN);
                    (i = !g && I.isInteger() && t.isInteger()) &&
                      (I = I.mod(t));
                  } else {
                    if (
                      e.e > 9 &&
                      (I.e > 0 ||
                        I.e < -1 ||
                        (0 == I.e
                          ? I.c[0] > 1 || (A && I.c[1] >= 24e7)
                          : I.c[0] < 8e13 || (A && I.c[0] <= 9999975e7)))
                    )
                      return (
                        (o = I.s < 0 && y(e) ? -0 : 0),
                        I.e > -1 && (o = 1 / o),
                        new K(g ? 1 / o : o)
                      );
                    M && (o = a(M / u + 2));
                  }
                  for (
                    A
                      ? ((r = new K(0.5)), g && (e.s = 1), (l = y(e)))
                      : (l = (n = Math.abs(+z(e))) % 2),
                      h = new K(D);
                    ;

                  ) {
                    if (l) {
                      if (!(h = h.times(I)).c) break;
                      o
                        ? h.c.length > o && (h.c.length = o)
                        : i && (h = h.mod(t));
                    }
                    if (n) {
                      if (0 === (n = s(n / 2))) break;
                      l = n % 2;
                    } else if ((j((e = e.times(r)), e.e + 1, 1), e.e > 14))
                      l = y(e);
                    else {
                      if (0 == (n = +z(e))) break;
                      l = n % 2;
                    }
                    (I = I.times(I)),
                      o
                        ? I.c && I.c.length > o && (I.c.length = o)
                        : i && (I = I.mod(t));
                  }
                  return i
                    ? h
                    : (g && (h = D.div(h)),
                      t ? h.mod(t) : o ? j(h, M, T, void 0) : h);
                }),
              (_.integerValue = function (e) {
                var t = new K(this);
                return null == e ? (e = T) : E(e, 0, 8), j(t, t.e + 1, e);
              }),
              (_.isEqualTo = _.eq =
                function (e, t) {
                  return 0 === B(this, new K(e, t));
                }),
              (_.isFinite = function () {
                return !!this.c;
              }),
              (_.isGreaterThan = _.gt =
                function (e, t) {
                  return B(this, new K(e, t)) > 0;
                }),
              (_.isGreaterThanOrEqualTo = _.gte =
                function (e, t) {
                  return 1 === (t = B(this, new K(e, t))) || 0 === t;
                }),
              (_.isInteger = function () {
                return !!this.c && f(this.e / u) > this.c.length - 2;
              }),
              (_.isLessThan = _.lt =
                function (e, t) {
                  return B(this, new K(e, t)) < 0;
                }),
              (_.isLessThanOrEqualTo = _.lte =
                function (e, t) {
                  return -1 === (t = B(this, new K(e, t))) || 0 === t;
                }),
              (_.isNaN = function () {
                return !this.s;
              }),
              (_.isNegative = function () {
                return this.s < 0;
              }),
              (_.isPositive = function () {
                return this.s > 0;
              }),
              (_.isZero = function () {
                return !!this.c && 0 == this.c[0];
              }),
              (_.minus = function (e, t) {
                var r,
                  i,
                  n,
                  o,
                  A = this,
                  a = A.s;
                if (((t = (e = new K(e, t)).s), !a || !t)) return new K(NaN);
                if (a != t) return (e.s = -t), A.plus(e);
                var s = A.e / u,
                  c = e.e / u,
                  g = A.c,
                  h = e.c;
                if (!s || !c) {
                  if (!g || !h) return g ? ((e.s = -t), e) : new K(h ? A : NaN);
                  if (!g[0] || !h[0])
                    return h[0]
                      ? ((e.s = -t), e)
                      : new K(g[0] ? A : 3 == T ? -0 : 0);
                }
                if (((s = f(s)), (c = f(c)), (g = g.slice()), (a = s - c))) {
                  for (
                    (o = a < 0) ? ((a = -a), (n = g)) : ((c = s), (n = h)),
                      n.reverse(),
                      t = a;
                    t--;
                    n.push(0)
                  );
                  n.reverse();
                } else
                  for (
                    i = (o = (a = g.length) < (t = h.length)) ? a : t,
                      a = t = 0;
                    t < i;
                    t++
                  )
                    if (g[t] != h[t]) {
                      o = g[t] < h[t];
                      break;
                    }
                if (
                  (o && ((n = g), (g = h), (h = n), (e.s = -e.s)),
                  (t = (i = h.length) - (r = g.length)) > 0)
                )
                  for (; t--; g[r++] = 0);
                for (t = l - 1; i > a; ) {
                  if (g[--i] < h[i]) {
                    for (r = i; r && !g[--r]; g[r] = t);
                    --g[r], (g[i] += l);
                  }
                  g[i] -= h[i];
                }
                for (; 0 == g[0]; g.splice(0, 1), --c);
                return g[0]
                  ? J(e, g, c)
                  : ((e.s = 3 == T ? -1 : 1), (e.c = [(e.e = 0)]), e);
              }),
              (_.modulo = _.mod =
                function (e, t) {
                  var i,
                    n,
                    o = this;
                  return (
                    (e = new K(e, t)),
                    !o.c || !e.s || (e.c && !e.c[0])
                      ? new K(NaN)
                      : !e.c || (o.c && !o.c[0])
                      ? new K(o)
                      : (9 == H
                          ? ((n = e.s),
                            (e.s = 1),
                            (i = r(o, e, 0, 3)),
                            (e.s = n),
                            (i.s *= n))
                          : (i = r(o, e, 0, H)),
                        (e = o.minus(i.times(e))).c[0] || 1 != H || (e.s = o.s),
                        e)
                  );
                }),
              (_.multipliedBy = _.times =
                function (e, t) {
                  var r,
                    i,
                    n,
                    o,
                    A,
                    a,
                    s,
                    c,
                    g,
                    h,
                    I,
                    d,
                    C,
                    B,
                    E,
                    y = this,
                    m = y.c,
                    Q = (e = new K(e, t)).c;
                  if (!(m && Q && m[0] && Q[0]))
                    return (
                      !y.s || !e.s || (m && !m[0] && !Q) || (Q && !Q[0] && !m)
                        ? (e.c = e.e = e.s = null)
                        : ((e.s *= y.s),
                          m && Q
                            ? ((e.c = [0]), (e.e = 0))
                            : (e.c = e.e = null)),
                      e
                    );
                  for (
                    i = f(y.e / u) + f(e.e / u),
                      e.s *= y.s,
                      (s = m.length) < (h = Q.length) &&
                        ((C = m), (m = Q), (Q = C), (n = s), (s = h), (h = n)),
                      n = s + h,
                      C = [];
                    n--;
                    C.push(0)
                  );
                  for (B = l, E = p, n = h; --n >= 0; ) {
                    for (
                      r = 0, I = Q[n] % E, d = (Q[n] / E) | 0, o = n + (A = s);
                      o > n;

                    )
                      (r =
                        (((c =
                          I * (c = m[--A] % E) +
                          ((a = d * c + (g = (m[A] / E) | 0) * I) % E) * E +
                          C[o] +
                          r) /
                          B) |
                          0) +
                        ((a / E) | 0) +
                        d * g),
                        (C[o--] = c % B);
                    C[o] = r;
                  }
                  return r ? ++i : C.splice(0, 1), J(e, C, i);
                }),
              (_.negated = function () {
                var e = new K(this);
                return (e.s = -e.s || null), e;
              }),
              (_.plus = function (e, t) {
                var r,
                  i = this,
                  n = i.s;
                if (((t = (e = new K(e, t)).s), !n || !t)) return new K(NaN);
                if (n != t) return (e.s = -t), i.minus(e);
                var o = i.e / u,
                  A = e.e / u,
                  a = i.c,
                  s = e.c;
                if (!o || !A) {
                  if (!a || !s) return new K(n / 0);
                  if (!a[0] || !s[0]) return s[0] ? e : new K(a[0] ? i : 0 * n);
                }
                if (((o = f(o)), (A = f(A)), (a = a.slice()), (n = o - A))) {
                  for (
                    n > 0 ? ((A = o), (r = s)) : ((n = -n), (r = a)),
                      r.reverse();
                    n--;
                    r.push(0)
                  );
                  r.reverse();
                }
                for (
                  (n = a.length) - (t = s.length) < 0 &&
                    ((r = s), (s = a), (a = r), (t = n)),
                    n = 0;
                  t;

                )
                  (n = ((a[--t] = a[t] + s[t] + n) / l) | 0),
                    (a[t] = l === a[t] ? 0 : a[t] % l);
                return n && ((a = [n].concat(a)), ++A), J(e, a, A);
              }),
              (_.precision = _.sd =
                function (e, t) {
                  var r,
                    i,
                    n,
                    o = this;
                  if (null != e && e !== !!e)
                    return (
                      E(e, 1, d),
                      null == t ? (t = T) : E(t, 0, 8),
                      j(new K(o), e, t)
                    );
                  if (!(r = o.c)) return null;
                  if (((i = (n = r.length - 1) * u + 1), (n = r[n]))) {
                    for (; n % 10 == 0; n /= 10, i--);
                    for (n = r[0]; n >= 10; n /= 10, i++);
                  }
                  return e && o.e + 1 > i && (i = o.e + 1), i;
                }),
              (_.shiftedBy = function (e) {
                return E(e, -9007199254740991, h), this.times("1e" + e);
              }),
              (_.squareRoot = _.sqrt =
                function () {
                  var e,
                    t,
                    i,
                    n,
                    o,
                    A = this,
                    a = A.c,
                    s = A.s,
                    c = A.e,
                    g = O + 4,
                    l = new K("0.5");
                  if (1 !== s || !a || !a[0])
                    return new K(
                      !s || (s < 0 && (!a || a[0])) ? NaN : a ? A : 1 / 0
                    );
                  if (
                    (0 == (s = Math.sqrt(+z(A))) || s == 1 / 0
                      ? (((t = C(a)).length + c) % 2 == 0 && (t += "0"),
                        (s = Math.sqrt(+t)),
                        (c = f((c + 1) / 2) - (c < 0 || c % 2)),
                        (i = new K(
                          (t =
                            s == 1 / 0
                              ? "5e" + c
                              : (t = s.toExponential()).slice(
                                  0,
                                  t.indexOf("e") + 1
                                ) + c)
                        )))
                      : (i = new K(s + "")),
                    i.c[0])
                  )
                    for ((s = (c = i.e) + g) < 3 && (s = 0); ; )
                      if (
                        ((o = i),
                        (i = l.times(o.plus(r(A, o, g, 1)))),
                        C(o.c).slice(0, s) === (t = C(i.c)).slice(0, s))
                      ) {
                        if (
                          (i.e < c && --s,
                          "9999" != (t = t.slice(s - 3, s + 1)) &&
                            (n || "4999" != t))
                        ) {
                          (+t && (+t.slice(1) || "5" != t.charAt(0))) ||
                            (j(i, i.e + O + 2, 1), (e = !i.times(i).eq(A)));
                          break;
                        }
                        if (!n && (j(o, o.e + O + 2, 0), o.times(o).eq(A))) {
                          i = o;
                          break;
                        }
                        (g += 4), (s += 4), (n = 1);
                      }
                  return j(i, i.e + O + 1, T, e);
                }),
              (_.toExponential = function (e, t) {
                return null != e && (E(e, 0, d), e++), Y(this, e, t, 1);
              }),
              (_.toFixed = function (e, t) {
                return (
                  null != e && (E(e, 0, d), (e = e + this.e + 1)), Y(this, e, t)
                );
              }),
              (_.toFormat = function (e, t, r) {
                var i,
                  n = this;
                if (null == r)
                  null != e && t && "object" == typeof t
                    ? ((r = t), (t = null))
                    : e && "object" == typeof e
                    ? ((r = e), (e = t = null))
                    : (r = G);
                else if ("object" != typeof r)
                  throw Error(c + "Argument not an object: " + r);
                if (((i = n.toFixed(e, t)), n.c)) {
                  var o,
                    A = i.split("."),
                    a = +r.groupSize,
                    s = +r.secondaryGroupSize,
                    g = r.groupSeparator || "",
                    l = A[0],
                    u = A[1],
                    h = n.s < 0,
                    I = h ? l.slice(1) : l,
                    p = I.length;
                  if (
                    (s && ((o = a), (a = s), (s = o), (p -= o)), a > 0 && p > 0)
                  ) {
                    for (o = p % a || a, l = I.substr(0, o); o < p; o += a)
                      l += g + I.substr(o, a);
                    s > 0 && (l += g + I.slice(o)), h && (l = "-" + l);
                  }
                  i = u
                    ? l +
                      (r.decimalSeparator || "") +
                      ((s = +r.fractionGroupSize)
                        ? u.replace(
                            new RegExp("\\d{" + s + "}\\B", "g"),
                            "$&" + (r.fractionGroupSeparator || "")
                          )
                        : u)
                    : l;
                }
                return (r.prefix || "") + i + (r.suffix || "");
              }),
              (_.toFraction = function (e) {
                var t,
                  i,
                  n,
                  o,
                  A,
                  a,
                  s,
                  g,
                  l,
                  h,
                  p,
                  d,
                  f = this,
                  B = f.c;
                if (
                  null != e &&
                  ((!(s = new K(e)).isInteger() && (s.c || 1 !== s.s)) ||
                    s.lt(D))
                )
                  throw Error(
                    c +
                      "Argument " +
                      (s.isInteger() ? "out of range: " : "not an integer: ") +
                      z(s)
                  );
                if (!B) return new K(f);
                for (
                  t = new K(D),
                    l = i = new K(D),
                    n = g = new K(D),
                    d = C(B),
                    A = t.e = d.length - f.e - 1,
                    t.c[0] = I[(a = A % u) < 0 ? u + a : a],
                    e = !e || s.comparedTo(t) > 0 ? (A > 0 ? t : l) : s,
                    a = U,
                    U = 1 / 0,
                    s = new K(d),
                    g.c[0] = 0;
                  (h = r(s, t, 0, 1)),
                    1 != (o = i.plus(h.times(n))).comparedTo(e);

                )
                  (i = n),
                    (n = o),
                    (l = g.plus(h.times((o = l)))),
                    (g = o),
                    (t = s.minus(h.times((o = t)))),
                    (s = o);
                return (
                  (o = r(e.minus(i), n, 0, 1)),
                  (g = g.plus(o.times(l))),
                  (i = i.plus(o.times(n))),
                  (g.s = l.s = f.s),
                  (p =
                    r(l, n, (A *= 2), T)
                      .minus(f)
                      .abs()
                      .comparedTo(r(g, i, A, T).minus(f).abs()) < 1
                      ? [l, n]
                      : [g, i]),
                  (U = a),
                  p
                );
              }),
              (_.toNumber = function () {
                return +z(this);
              }),
              (_.toPrecision = function (e, t) {
                return null != e && E(e, 1, d), Y(this, e, t, 2);
              }),
              (_.toString = function (e) {
                var t,
                  r = this,
                  n = r.s,
                  o = r.e;
                return (
                  null === o
                    ? n
                      ? ((t = "Infinity"), n < 0 && (t = "-" + t))
                      : (t = "NaN")
                    : (null == e
                        ? (t =
                            o <= P || o >= x ? m(C(r.c), o) : Q(C(r.c), o, "0"))
                        : 10 === e
                        ? (t = Q(
                            C((r = j(new K(r), O + o + 1, T)).c),
                            r.e,
                            "0"
                          ))
                        : (E(e, 2, L.length, "Base"),
                          (t = i(Q(C(r.c), o, "0"), 10, e, n, !0))),
                      n < 0 && r.c[0] && (t = "-" + t)),
                  t
                );
              }),
              (_.valueOf = _.toJSON =
                function () {
                  return z(this);
                }),
              (_._isBigNumber = !0),
              null != t && K.set(t),
              K
            );
          })()),
            (o.default = o.BigNumber = o),
            void 0 ===
              (i = function () {
                return o;
              }.call(t, r, t, e)) || (e.exports = i);
        })();
      },
      49419: (e, t, r) => {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        const i = {};
        let n;
        (t.wordlists = i), (t._default = n);
        try {
          (t._default = n = r(31955)), (i.czech = n);
        } catch (e) {}
        try {
          (t._default = n = r(94556)), (i.chinese_simplified = n);
        } catch (e) {}
        try {
          (t._default = n = r(69095)), (i.chinese_traditional = n);
        } catch (e) {}
        try {
          (t._default = n = r(17428)), (i.korean = n);
        } catch (e) {}
        try {
          (t._default = n = r(48004)), (i.french = n);
        } catch (e) {}
        try {
          (t._default = n = r(70061)), (i.italian = n);
        } catch (e) {}
        try {
          (t._default = n = r(95565)), (i.spanish = n);
        } catch (e) {}
        try {
          (t._default = n = r(99148)), (i.japanese = n), (i.JA = n);
        } catch (e) {}
        try {
          (t._default = n = r(58930)), (i.portuguese = n);
        } catch (e) {}
        try {
          (t._default = n = r(32308)), (i.english = n), (i.EN = n);
        } catch (e) {}
      },
      36832: (e, t, r) => {
        "use strict";
        var i = r(48834).Buffer;
        const n = r(16162),
          o = r(30499),
          A = r(95003);
        let a = r(49419)._default;
        const s = "Invalid entropy",
          c =
            "A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";
        function g(e) {
          return (e || "").normalize("NFKD");
        }
        function l(e, t, r) {
          for (; e.length < r; ) e = t + e;
          return e;
        }
        function u(e) {
          return parseInt(e, 2);
        }
        function h(e) {
          return e.map((e) => l(e.toString(2), "0", 8)).join("");
        }
        function I(e) {
          const t = (8 * e.length) / 32,
            r = n("sha256").update(e).digest();
          return h(Array.from(r)).slice(0, t);
        }
        (t.Z1 = function (e, t) {
          const r = i.from(g(e), "utf8"),
            n = i.from(
              (function (e) {
                return "mnemonic" + (e || "");
              })(g(t)),
              "utf8"
            );
          return o.pbkdf2Sync(r, n, 2048, 64, "sha512");
        }),
          (t.OF = function (e, t, r) {
            if ((e = e || 128) % 32 != 0) throw new TypeError(s);
            return (function (e, t) {
              if ((i.isBuffer(e) || (e = i.from(e, "hex")), !(t = t || a)))
                throw new Error(c);
              if (e.length < 16) throw new TypeError(s);
              if (e.length > 32) throw new TypeError(s);
              if (e.length % 4 != 0) throw new TypeError(s);
              const r = (h(Array.from(e)) + I(e))
                .match(/(.{1,11})/g)
                .map((e) => {
                  const r = u(e);
                  return t[r];
                });
              return "あいこくしん" === t[0] ? r.join("　") : r.join(" ");
            })((t = t || A)(e / 8), r);
          }),
          r(49419).wordlists;
      },
      17022: (e, t, r) => {
        var i = r(18166);
        e.exports = i(
          "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
        );
      },
      88616: (e, t, r) => {
        "use strict";
        var i = r(17022),
          n = r(77834).Buffer;
        e.exports = function (e) {
          function t(t) {
            var r = t.slice(0, -4),
              i = t.slice(-4),
              n = e(r);
            if (
              !((i[0] ^ n[0]) | (i[1] ^ n[1]) | (i[2] ^ n[2]) | (i[3] ^ n[3]))
            )
              return r;
          }
          return {
            encode: function (t) {
              var r = e(t);
              return i.encode(n.concat([t, r], t.length + 4));
            },
            decode: function (e) {
              var r = t(i.decode(e));
              if (!r) throw new Error("Invalid checksum");
              return r;
            },
            decodeUnsafe: function (e) {
              var r = i.decodeUnsafe(e);
              if (r) return t(r);
            },
          };
        };
      },
      44075: (e, t, r) => {
        "use strict";
        var i = r(16162),
          n = r(88616);
        e.exports = n(function (e) {
          var t = i("sha256").update(e).digest();
          return i("sha256").update(t).digest();
        });
      },
      48834: (e, t, r) => {
        "use strict";
        const i = r(95766),
          n = r(62333),
          o =
            "function" == typeof Symbol && "function" == typeof Symbol.for
              ? Symbol.for("nodejs.util.inspect.custom")
              : null;
        (t.Buffer = s),
          (t.SlowBuffer = function (e) {
            return +e != e && (e = 0), s.alloc(+e);
          }),
          (t.INSPECT_MAX_BYTES = 50);
        const A = 2147483647;
        function a(e) {
          if (e > A)
            throw new RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
          const t = new Uint8Array(e);
          return Object.setPrototypeOf(t, s.prototype), t;
        }
        function s(e, t, r) {
          if ("number" == typeof e) {
            if ("string" == typeof t)
              throw new TypeError(
                'The "string" argument must be of type string. Received type number'
              );
            return l(e);
          }
          return c(e, t, r);
        }
        function c(e, t, r) {
          if ("string" == typeof e)
            return (function (e, t) {
              if (
                (("string" == typeof t && "" !== t) || (t = "utf8"),
                !s.isEncoding(t))
              )
                throw new TypeError("Unknown encoding: " + t);
              const r = 0 | p(e, t);
              let i = a(r);
              const n = i.write(e, t);
              return n !== r && (i = i.slice(0, n)), i;
            })(e, t);
          if (ArrayBuffer.isView(e))
            return (function (e) {
              if (V(e, Uint8Array)) {
                const t = new Uint8Array(e);
                return h(t.buffer, t.byteOffset, t.byteLength);
              }
              return u(e);
            })(e);
          if (null == e)
            throw new TypeError(
              "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                typeof e
            );
          if (V(e, ArrayBuffer) || (e && V(e.buffer, ArrayBuffer)))
            return h(e, t, r);
          if (
            "undefined" != typeof SharedArrayBuffer &&
            (V(e, SharedArrayBuffer) || (e && V(e.buffer, SharedArrayBuffer)))
          )
            return h(e, t, r);
          if ("number" == typeof e)
            throw new TypeError(
              'The "value" argument must not be of type number. Received type number'
            );
          const i = e.valueOf && e.valueOf();
          if (null != i && i !== e) return s.from(i, t, r);
          const n = (function (e) {
            if (s.isBuffer(e)) {
              const t = 0 | I(e.length),
                r = a(t);
              return 0 === r.length || e.copy(r, 0, 0, t), r;
            }
            return void 0 !== e.length
              ? "number" != typeof e.length || W(e.length)
                ? a(0)
                : u(e)
              : "Buffer" === e.type && Array.isArray(e.data)
              ? u(e.data)
              : void 0;
          })(e);
          if (n) return n;
          if (
            "undefined" != typeof Symbol &&
            null != Symbol.toPrimitive &&
            "function" == typeof e[Symbol.toPrimitive]
          )
            return s.from(e[Symbol.toPrimitive]("string"), t, r);
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof e
          );
        }
        function g(e) {
          if ("number" != typeof e)
            throw new TypeError('"size" argument must be of type number');
          if (e < 0)
            throw new RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
        }
        function l(e) {
          return g(e), a(e < 0 ? 0 : 0 | I(e));
        }
        function u(e) {
          const t = e.length < 0 ? 0 : 0 | I(e.length),
            r = a(t);
          for (let i = 0; i < t; i += 1) r[i] = 255 & e[i];
          return r;
        }
        function h(e, t, r) {
          if (t < 0 || e.byteLength < t)
            throw new RangeError('"offset" is outside of buffer bounds');
          if (e.byteLength < t + (r || 0))
            throw new RangeError('"length" is outside of buffer bounds');
          let i;
          return (
            (i =
              void 0 === t && void 0 === r
                ? new Uint8Array(e)
                : void 0 === r
                ? new Uint8Array(e, t)
                : new Uint8Array(e, t, r)),
            Object.setPrototypeOf(i, s.prototype),
            i
          );
        }
        function I(e) {
          if (e >= A)
            throw new RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x" +
                A.toString(16) +
                " bytes"
            );
          return 0 | e;
        }
        function p(e, t) {
          if (s.isBuffer(e)) return e.length;
          if (ArrayBuffer.isView(e) || V(e, ArrayBuffer)) return e.byteLength;
          if ("string" != typeof e)
            throw new TypeError(
              'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                typeof e
            );
          const r = e.length,
            i = arguments.length > 2 && !0 === arguments[2];
          if (!i && 0 === r) return 0;
          let n = !1;
          for (;;)
            switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return r;
              case "utf8":
              case "utf-8":
                return J(e).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r;
              case "hex":
                return r >>> 1;
              case "base64":
                return j(e).length;
              default:
                if (n) return i ? -1 : J(e).length;
                (t = ("" + t).toLowerCase()), (n = !0);
            }
        }
        function d(e, t, r) {
          let i = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return "";
          if (((void 0 === r || r > this.length) && (r = this.length), r <= 0))
            return "";
          if ((r >>>= 0) <= (t >>>= 0)) return "";
          for (e || (e = "utf8"); ; )
            switch (e) {
              case "hex":
                return _(this, t, r);
              case "utf8":
              case "utf-8":
                return w(this, t, r);
              case "ascii":
                return k(this, t, r);
              case "latin1":
              case "binary":
                return N(this, t, r);
              case "base64":
                return S(this, t, r);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return D(this, t, r);
              default:
                if (i) throw new TypeError("Unknown encoding: " + e);
                (e = (e + "").toLowerCase()), (i = !0);
            }
        }
        function f(e, t, r) {
          const i = e[t];
          (e[t] = e[r]), (e[r] = i);
        }
        function C(e, t, r, i, n) {
          if (0 === e.length) return -1;
          if (
            ("string" == typeof r
              ? ((i = r), (r = 0))
              : r > 2147483647
              ? (r = 2147483647)
              : r < -2147483648 && (r = -2147483648),
            W((r = +r)) && (r = n ? 0 : e.length - 1),
            r < 0 && (r = e.length + r),
            r >= e.length)
          ) {
            if (n) return -1;
            r = e.length - 1;
          } else if (r < 0) {
            if (!n) return -1;
            r = 0;
          }
          if (("string" == typeof t && (t = s.from(t, i)), s.isBuffer(t)))
            return 0 === t.length ? -1 : B(e, t, r, i, n);
          if ("number" == typeof t)
            return (
              (t &= 255),
              "function" == typeof Uint8Array.prototype.indexOf
                ? n
                  ? Uint8Array.prototype.indexOf.call(e, t, r)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, r)
                : B(e, [t], r, i, n)
            );
          throw new TypeError("val must be string, number or Buffer");
        }
        function B(e, t, r, i, n) {
          let o,
            A = 1,
            a = e.length,
            s = t.length;
          if (
            void 0 !== i &&
            ("ucs2" === (i = String(i).toLowerCase()) ||
              "ucs-2" === i ||
              "utf16le" === i ||
              "utf-16le" === i)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (A = 2), (a /= 2), (s /= 2), (r /= 2);
          }
          function c(e, t) {
            return 1 === A ? e[t] : e.readUInt16BE(t * A);
          }
          if (n) {
            let i = -1;
            for (o = r; o < a; o++)
              if (c(e, o) === c(t, -1 === i ? 0 : o - i)) {
                if ((-1 === i && (i = o), o - i + 1 === s)) return i * A;
              } else -1 !== i && (o -= o - i), (i = -1);
          } else
            for (r + s > a && (r = a - s), o = r; o >= 0; o--) {
              let r = !0;
              for (let i = 0; i < s; i++)
                if (c(e, o + i) !== c(t, i)) {
                  r = !1;
                  break;
                }
              if (r) return o;
            }
          return -1;
        }
        function E(e, t, r, i) {
          r = Number(r) || 0;
          const n = e.length - r;
          i ? (i = Number(i)) > n && (i = n) : (i = n);
          const o = t.length;
          let A;
          for (i > o / 2 && (i = o / 2), A = 0; A < i; ++A) {
            const i = parseInt(t.substr(2 * A, 2), 16);
            if (W(i)) return A;
            e[r + A] = i;
          }
          return A;
        }
        function y(e, t, r, i) {
          return z(J(t, e.length - r), e, r, i);
        }
        function m(e, t, r, i) {
          return z(
            (function (e) {
              const t = [];
              for (let r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
              return t;
            })(t),
            e,
            r,
            i
          );
        }
        function Q(e, t, r, i) {
          return z(j(t), e, r, i);
        }
        function v(e, t, r, i) {
          return z(
            (function (e, t) {
              let r, i, n;
              const o = [];
              for (let A = 0; A < e.length && !((t -= 2) < 0); ++A)
                (r = e.charCodeAt(A)),
                  (i = r >> 8),
                  (n = r % 256),
                  o.push(n),
                  o.push(i);
              return o;
            })(t, e.length - r),
            e,
            r,
            i
          );
        }
        function S(e, t, r) {
          return 0 === t && r === e.length
            ? i.fromByteArray(e)
            : i.fromByteArray(e.slice(t, r));
        }
        function w(e, t, r) {
          r = Math.min(e.length, r);
          const i = [];
          let n = t;
          for (; n < r; ) {
            const t = e[n];
            let o = null,
              A = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
            if (n + A <= r) {
              let r, i, a, s;
              switch (A) {
                case 1:
                  t < 128 && (o = t);
                  break;
                case 2:
                  (r = e[n + 1]),
                    128 == (192 & r) &&
                      ((s = ((31 & t) << 6) | (63 & r)), s > 127 && (o = s));
                  break;
                case 3:
                  (r = e[n + 1]),
                    (i = e[n + 2]),
                    128 == (192 & r) &&
                      128 == (192 & i) &&
                      ((s = ((15 & t) << 12) | ((63 & r) << 6) | (63 & i)),
                      s > 2047 && (s < 55296 || s > 57343) && (o = s));
                  break;
                case 4:
                  (r = e[n + 1]),
                    (i = e[n + 2]),
                    (a = e[n + 3]),
                    128 == (192 & r) &&
                      128 == (192 & i) &&
                      128 == (192 & a) &&
                      ((s =
                        ((15 & t) << 18) |
                        ((63 & r) << 12) |
                        ((63 & i) << 6) |
                        (63 & a)),
                      s > 65535 && s < 1114112 && (o = s));
              }
            }
            null === o
              ? ((o = 65533), (A = 1))
              : o > 65535 &&
                ((o -= 65536),
                i.push(((o >>> 10) & 1023) | 55296),
                (o = 56320 | (1023 & o))),
              i.push(o),
              (n += A);
          }
          return (function (e) {
            const t = e.length;
            if (t <= b) return String.fromCharCode.apply(String, e);
            let r = "",
              i = 0;
            for (; i < t; )
              r += String.fromCharCode.apply(String, e.slice(i, (i += b)));
            return r;
          })(i);
        }
        (t.kMaxLength = A),
          (s.TYPED_ARRAY_SUPPORT = (function () {
            try {
              const e = new Uint8Array(1),
                t = {
                  foo: function () {
                    return 42;
                  },
                };
              return (
                Object.setPrototypeOf(t, Uint8Array.prototype),
                Object.setPrototypeOf(e, t),
                42 === e.foo()
              );
            } catch (e) {
              return !1;
            }
          })()),
          s.TYPED_ARRAY_SUPPORT ||
            "undefined" == typeof console ||
            "function" != typeof console.error ||
            console.error(
              "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
            ),
          Object.defineProperty(s.prototype, "parent", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.buffer;
            },
          }),
          Object.defineProperty(s.prototype, "offset", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.byteOffset;
            },
          }),
          (s.poolSize = 8192),
          (s.from = function (e, t, r) {
            return c(e, t, r);
          }),
          Object.setPrototypeOf(s.prototype, Uint8Array.prototype),
          Object.setPrototypeOf(s, Uint8Array),
          (s.alloc = function (e, t, r) {
            return (function (e, t, r) {
              return (
                g(e),
                e <= 0
                  ? a(e)
                  : void 0 !== t
                  ? "string" == typeof r
                    ? a(e).fill(t, r)
                    : a(e).fill(t)
                  : a(e)
              );
            })(e, t, r);
          }),
          (s.allocUnsafe = function (e) {
            return l(e);
          }),
          (s.allocUnsafeSlow = function (e) {
            return l(e);
          }),
          (s.isBuffer = function (e) {
            return null != e && !0 === e._isBuffer && e !== s.prototype;
          }),
          (s.compare = function (e, t) {
            if (
              (V(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
              V(t, Uint8Array) && (t = s.from(t, t.offset, t.byteLength)),
              !s.isBuffer(e) || !s.isBuffer(t))
            )
              throw new TypeError(
                'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
              );
            if (e === t) return 0;
            let r = e.length,
              i = t.length;
            for (let n = 0, o = Math.min(r, i); n < o; ++n)
              if (e[n] !== t[n]) {
                (r = e[n]), (i = t[n]);
                break;
              }
            return r < i ? -1 : i < r ? 1 : 0;
          }),
          (s.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (s.concat = function (e, t) {
            if (!Array.isArray(e))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            if (0 === e.length) return s.alloc(0);
            let r;
            if (void 0 === t)
              for (t = 0, r = 0; r < e.length; ++r) t += e[r].length;
            const i = s.allocUnsafe(t);
            let n = 0;
            for (r = 0; r < e.length; ++r) {
              let t = e[r];
              if (V(t, Uint8Array))
                n + t.length > i.length
                  ? (s.isBuffer(t) || (t = s.from(t)), t.copy(i, n))
                  : Uint8Array.prototype.set.call(i, t, n);
              else {
                if (!s.isBuffer(t))
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  );
                t.copy(i, n);
              }
              n += t.length;
            }
            return i;
          }),
          (s.byteLength = p),
          (s.prototype._isBuffer = !0),
          (s.prototype.swap16 = function () {
            const e = this.length;
            if (e % 2 != 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (let t = 0; t < e; t += 2) f(this, t, t + 1);
            return this;
          }),
          (s.prototype.swap32 = function () {
            const e = this.length;
            if (e % 4 != 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (let t = 0; t < e; t += 4)
              f(this, t, t + 3), f(this, t + 1, t + 2);
            return this;
          }),
          (s.prototype.swap64 = function () {
            const e = this.length;
            if (e % 8 != 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (let t = 0; t < e; t += 8)
              f(this, t, t + 7),
                f(this, t + 1, t + 6),
                f(this, t + 2, t + 5),
                f(this, t + 3, t + 4);
            return this;
          }),
          (s.prototype.toString = function () {
            const e = this.length;
            return 0 === e
              ? ""
              : 0 === arguments.length
              ? w(this, 0, e)
              : d.apply(this, arguments);
          }),
          (s.prototype.toLocaleString = s.prototype.toString),
          (s.prototype.equals = function (e) {
            if (!s.isBuffer(e))
              throw new TypeError("Argument must be a Buffer");
            return this === e || 0 === s.compare(this, e);
          }),
          (s.prototype.inspect = function () {
            let e = "";
            const r = t.INSPECT_MAX_BYTES;
            return (
              (e = this.toString("hex", 0, r)
                .replace(/(.{2})/g, "$1 ")
                .trim()),
              this.length > r && (e += " ... "),
              "<Buffer " + e + ">"
            );
          }),
          o && (s.prototype[o] = s.prototype.inspect),
          (s.prototype.compare = function (e, t, r, i, n) {
            if (
              (V(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
              !s.isBuffer(e))
            )
              throw new TypeError(
                'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                  typeof e
              );
            if (
              (void 0 === t && (t = 0),
              void 0 === r && (r = e ? e.length : 0),
              void 0 === i && (i = 0),
              void 0 === n && (n = this.length),
              t < 0 || r > e.length || i < 0 || n > this.length)
            )
              throw new RangeError("out of range index");
            if (i >= n && t >= r) return 0;
            if (i >= n) return -1;
            if (t >= r) return 1;
            if (this === e) return 0;
            let o = (n >>>= 0) - (i >>>= 0),
              A = (r >>>= 0) - (t >>>= 0);
            const a = Math.min(o, A),
              c = this.slice(i, n),
              g = e.slice(t, r);
            for (let e = 0; e < a; ++e)
              if (c[e] !== g[e]) {
                (o = c[e]), (A = g[e]);
                break;
              }
            return o < A ? -1 : A < o ? 1 : 0;
          }),
          (s.prototype.includes = function (e, t, r) {
            return -1 !== this.indexOf(e, t, r);
          }),
          (s.prototype.indexOf = function (e, t, r) {
            return C(this, e, t, r, !0);
          }),
          (s.prototype.lastIndexOf = function (e, t, r) {
            return C(this, e, t, r, !1);
          }),
          (s.prototype.write = function (e, t, r, i) {
            if (void 0 === t) (i = "utf8"), (r = this.length), (t = 0);
            else if (void 0 === r && "string" == typeof t)
              (i = t), (r = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error(
                  "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                );
              (t >>>= 0),
                isFinite(r)
                  ? ((r >>>= 0), void 0 === i && (i = "utf8"))
                  : ((i = r), (r = void 0));
            }
            const n = this.length - t;
            if (
              ((void 0 === r || r > n) && (r = n),
              (e.length > 0 && (r < 0 || t < 0)) || t > this.length)
            )
              throw new RangeError("Attempt to write outside buffer bounds");
            i || (i = "utf8");
            let o = !1;
            for (;;)
              switch (i) {
                case "hex":
                  return E(this, e, t, r);
                case "utf8":
                case "utf-8":
                  return y(this, e, t, r);
                case "ascii":
                case "latin1":
                case "binary":
                  return m(this, e, t, r);
                case "base64":
                  return Q(this, e, t, r);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return v(this, e, t, r);
                default:
                  if (o) throw new TypeError("Unknown encoding: " + i);
                  (i = ("" + i).toLowerCase()), (o = !0);
              }
          }),
          (s.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          });
        const b = 4096;
        function k(e, t, r) {
          let i = "";
          r = Math.min(e.length, r);
          for (let n = t; n < r; ++n) i += String.fromCharCode(127 & e[n]);
          return i;
        }
        function N(e, t, r) {
          let i = "";
          r = Math.min(e.length, r);
          for (let n = t; n < r; ++n) i += String.fromCharCode(e[n]);
          return i;
        }
        function _(e, t, r) {
          const i = e.length;
          (!t || t < 0) && (t = 0), (!r || r < 0 || r > i) && (r = i);
          let n = "";
          for (let i = t; i < r; ++i) n += X[e[i]];
          return n;
        }
        function D(e, t, r) {
          const i = e.slice(t, r);
          let n = "";
          for (let e = 0; e < i.length - 1; e += 2)
            n += String.fromCharCode(i[e] + 256 * i[e + 1]);
          return n;
        }
        function O(e, t, r) {
          if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
          if (e + t > r)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function T(e, t, r, i, n, o) {
          if (!s.isBuffer(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > n || t < o)
            throw new RangeError('"value" argument is out of bounds');
          if (r + i > e.length) throw new RangeError("Index out of range");
        }
        function P(e, t, r, i, n) {
          L(t, i, n, e, r, 7);
          let o = Number(t & BigInt(4294967295));
          (e[r++] = o),
            (o >>= 8),
            (e[r++] = o),
            (o >>= 8),
            (e[r++] = o),
            (o >>= 8),
            (e[r++] = o);
          let A = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[r++] = A),
            (A >>= 8),
            (e[r++] = A),
            (A >>= 8),
            (e[r++] = A),
            (A >>= 8),
            (e[r++] = A),
            r
          );
        }
        function x(e, t, r, i, n) {
          L(t, i, n, e, r, 7);
          let o = Number(t & BigInt(4294967295));
          (e[r + 7] = o),
            (o >>= 8),
            (e[r + 6] = o),
            (o >>= 8),
            (e[r + 5] = o),
            (o >>= 8),
            (e[r + 4] = o);
          let A = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[r + 3] = A),
            (A >>= 8),
            (e[r + 2] = A),
            (A >>= 8),
            (e[r + 1] = A),
            (A >>= 8),
            (e[r] = A),
            r + 8
          );
        }
        function R(e, t, r, i, n, o) {
          if (r + i > e.length) throw new RangeError("Index out of range");
          if (r < 0) throw new RangeError("Index out of range");
        }
        function U(e, t, r, i, o) {
          return (
            (t = +t),
            (r >>>= 0),
            o || R(e, 0, r, 4),
            n.write(e, t, r, i, 23, 4),
            r + 4
          );
        }
        function F(e, t, r, i, o) {
          return (
            (t = +t),
            (r >>>= 0),
            o || R(e, 0, r, 8),
            n.write(e, t, r, i, 52, 8),
            r + 8
          );
        }
        (s.prototype.slice = function (e, t) {
          const r = this.length;
          (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
            (t = void 0 === t ? r : ~~t) < 0
              ? (t += r) < 0 && (t = 0)
              : t > r && (t = r),
            t < e && (t = e);
          const i = this.subarray(e, t);
          return Object.setPrototypeOf(i, s.prototype), i;
        }),
          (s.prototype.readUintLE = s.prototype.readUIntLE =
            function (e, t, r) {
              (e >>>= 0), (t >>>= 0), r || O(e, t, this.length);
              let i = this[e],
                n = 1,
                o = 0;
              for (; ++o < t && (n *= 256); ) i += this[e + o] * n;
              return i;
            }),
          (s.prototype.readUintBE = s.prototype.readUIntBE =
            function (e, t, r) {
              (e >>>= 0), (t >>>= 0), r || O(e, t, this.length);
              let i = this[e + --t],
                n = 1;
              for (; t > 0 && (n *= 256); ) i += this[e + --t] * n;
              return i;
            }),
          (s.prototype.readUint8 = s.prototype.readUInt8 =
            function (e, t) {
              return (e >>>= 0), t || O(e, 1, this.length), this[e];
            }),
          (s.prototype.readUint16LE = s.prototype.readUInt16LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || O(e, 2, this.length),
                this[e] | (this[e + 1] << 8)
              );
            }),
          (s.prototype.readUint16BE = s.prototype.readUInt16BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || O(e, 2, this.length),
                (this[e] << 8) | this[e + 1]
              );
            }),
          (s.prototype.readUint32LE = s.prototype.readUInt32LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || O(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                  16777216 * this[e + 3]
              );
            }),
          (s.prototype.readUint32BE = s.prototype.readUInt32BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || O(e, 4, this.length),
                16777216 * this[e] +
                  ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
          (s.prototype.readBigUInt64LE = Z(function (e) {
            K((e >>>= 0), "offset");
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || Y(e, this.length - 8);
            const i =
                t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24,
              n = this[++e] + 256 * this[++e] + 65536 * this[++e] + r * 2 ** 24;
            return BigInt(i) + (BigInt(n) << BigInt(32));
          })),
          (s.prototype.readBigUInt64BE = Z(function (e) {
            K((e >>>= 0), "offset");
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || Y(e, this.length - 8);
            const i =
                t * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + this[++e],
              n = this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r;
            return (BigInt(i) << BigInt(32)) + BigInt(n);
          })),
          (s.prototype.readIntLE = function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || O(e, t, this.length);
            let i = this[e],
              n = 1,
              o = 0;
            for (; ++o < t && (n *= 256); ) i += this[e + o] * n;
            return (n *= 128), i >= n && (i -= Math.pow(2, 8 * t)), i;
          }),
          (s.prototype.readIntBE = function (e, t, r) {
            (e >>>= 0), (t >>>= 0), r || O(e, t, this.length);
            let i = t,
              n = 1,
              o = this[e + --i];
            for (; i > 0 && (n *= 256); ) o += this[e + --i] * n;
            return (n *= 128), o >= n && (o -= Math.pow(2, 8 * t)), o;
          }),
          (s.prototype.readInt8 = function (e, t) {
            return (
              (e >>>= 0),
              t || O(e, 1, this.length),
              128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            );
          }),
          (s.prototype.readInt16LE = function (e, t) {
            (e >>>= 0), t || O(e, 2, this.length);
            const r = this[e] | (this[e + 1] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (s.prototype.readInt16BE = function (e, t) {
            (e >>>= 0), t || O(e, 2, this.length);
            const r = this[e + 1] | (this[e] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (s.prototype.readInt32LE = function (e, t) {
            return (
              (e >>>= 0),
              t || O(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (s.prototype.readInt32BE = function (e, t) {
            return (
              (e >>>= 0),
              t || O(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (s.prototype.readBigInt64LE = Z(function (e) {
            K((e >>>= 0), "offset");
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || Y(e, this.length - 8);
            const i =
              this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24);
            return (
              (BigInt(i) << BigInt(32)) +
              BigInt(
                t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24
              )
            );
          })),
          (s.prototype.readBigInt64BE = Z(function (e) {
            K((e >>>= 0), "offset");
            const t = this[e],
              r = this[e + 7];
            (void 0 !== t && void 0 !== r) || Y(e, this.length - 8);
            const i =
              (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e];
            return (
              (BigInt(i) << BigInt(32)) +
              BigInt(
                this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r
              )
            );
          })),
          (s.prototype.readFloatLE = function (e, t) {
            return (
              (e >>>= 0), t || O(e, 4, this.length), n.read(this, e, !0, 23, 4)
            );
          }),
          (s.prototype.readFloatBE = function (e, t) {
            return (
              (e >>>= 0), t || O(e, 4, this.length), n.read(this, e, !1, 23, 4)
            );
          }),
          (s.prototype.readDoubleLE = function (e, t) {
            return (
              (e >>>= 0), t || O(e, 8, this.length), n.read(this, e, !0, 52, 8)
            );
          }),
          (s.prototype.readDoubleBE = function (e, t) {
            return (
              (e >>>= 0), t || O(e, 8, this.length), n.read(this, e, !1, 52, 8)
            );
          }),
          (s.prototype.writeUintLE = s.prototype.writeUIntLE =
            function (e, t, r, i) {
              (e = +e),
                (t >>>= 0),
                (r >>>= 0),
                i || T(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
              let n = 1,
                o = 0;
              for (this[t] = 255 & e; ++o < r && (n *= 256); )
                this[t + o] = (e / n) & 255;
              return t + r;
            }),
          (s.prototype.writeUintBE = s.prototype.writeUIntBE =
            function (e, t, r, i) {
              (e = +e),
                (t >>>= 0),
                (r >>>= 0),
                i || T(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
              let n = r - 1,
                o = 1;
              for (this[t + n] = 255 & e; --n >= 0 && (o *= 256); )
                this[t + n] = (e / o) & 255;
              return t + r;
            }),
          (s.prototype.writeUint8 = s.prototype.writeUInt8 =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || T(this, e, t, 1, 255, 0),
                (this[t] = 255 & e),
                t + 1
              );
            }),
          (s.prototype.writeUint16LE = s.prototype.writeUInt16LE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || T(this, e, t, 2, 65535, 0),
                (this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                t + 2
              );
            }),
          (s.prototype.writeUint16BE = s.prototype.writeUInt16BE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || T(this, e, t, 2, 65535, 0),
                (this[t] = e >>> 8),
                (this[t + 1] = 255 & e),
                t + 2
              );
            }),
          (s.prototype.writeUint32LE = s.prototype.writeUInt32LE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || T(this, e, t, 4, 4294967295, 0),
                (this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e),
                t + 4
              );
            }),
          (s.prototype.writeUint32BE = s.prototype.writeUInt32BE =
            function (e, t, r) {
              return (
                (e = +e),
                (t >>>= 0),
                r || T(this, e, t, 4, 4294967295, 0),
                (this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e),
                t + 4
              );
            }),
          (s.prototype.writeBigUInt64LE = Z(function (e, t = 0) {
            return P(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (s.prototype.writeBigUInt64BE = Z(function (e, t = 0) {
            return x(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (s.prototype.writeIntLE = function (e, t, r, i) {
            if (((e = +e), (t >>>= 0), !i)) {
              const i = Math.pow(2, 8 * r - 1);
              T(this, e, t, r, i - 1, -i);
            }
            let n = 0,
              o = 1,
              A = 0;
            for (this[t] = 255 & e; ++n < r && (o *= 256); )
              e < 0 && 0 === A && 0 !== this[t + n - 1] && (A = 1),
                (this[t + n] = (((e / o) >> 0) - A) & 255);
            return t + r;
          }),
          (s.prototype.writeIntBE = function (e, t, r, i) {
            if (((e = +e), (t >>>= 0), !i)) {
              const i = Math.pow(2, 8 * r - 1);
              T(this, e, t, r, i - 1, -i);
            }
            let n = r - 1,
              o = 1,
              A = 0;
            for (this[t + n] = 255 & e; --n >= 0 && (o *= 256); )
              e < 0 && 0 === A && 0 !== this[t + n + 1] && (A = 1),
                (this[t + n] = (((e / o) >> 0) - A) & 255);
            return t + r;
          }),
          (s.prototype.writeInt8 = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || T(this, e, t, 1, 127, -128),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (s.prototype.writeInt16LE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || T(this, e, t, 2, 32767, -32768),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              t + 2
            );
          }),
          (s.prototype.writeInt16BE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || T(this, e, t, 2, 32767, -32768),
              (this[t] = e >>> 8),
              (this[t + 1] = 255 & e),
              t + 2
            );
          }),
          (s.prototype.writeInt32LE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || T(this, e, t, 4, 2147483647, -2147483648),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              (this[t + 2] = e >>> 16),
              (this[t + 3] = e >>> 24),
              t + 4
            );
          }),
          (s.prototype.writeInt32BE = function (e, t, r) {
            return (
              (e = +e),
              (t >>>= 0),
              r || T(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              (this[t] = e >>> 24),
              (this[t + 1] = e >>> 16),
              (this[t + 2] = e >>> 8),
              (this[t + 3] = 255 & e),
              t + 4
            );
          }),
          (s.prototype.writeBigInt64LE = Z(function (e, t = 0) {
            return P(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (s.prototype.writeBigInt64BE = Z(function (e, t = 0) {
            return x(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (s.prototype.writeFloatLE = function (e, t, r) {
            return U(this, e, t, !0, r);
          }),
          (s.prototype.writeFloatBE = function (e, t, r) {
            return U(this, e, t, !1, r);
          }),
          (s.prototype.writeDoubleLE = function (e, t, r) {
            return F(this, e, t, !0, r);
          }),
          (s.prototype.writeDoubleBE = function (e, t, r) {
            return F(this, e, t, !1, r);
          }),
          (s.prototype.copy = function (e, t, r, i) {
            if (!s.isBuffer(e))
              throw new TypeError("argument should be a Buffer");
            if (
              (r || (r = 0),
              i || 0 === i || (i = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              i > 0 && i < r && (i = r),
              i === r)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError("targetStart out of bounds");
            if (r < 0 || r >= this.length)
              throw new RangeError("Index out of range");
            if (i < 0) throw new RangeError("sourceEnd out of bounds");
            i > this.length && (i = this.length),
              e.length - t < i - r && (i = e.length - t + r);
            const n = i - r;
            return (
              this === e && "function" == typeof Uint8Array.prototype.copyWithin
                ? this.copyWithin(t, r, i)
                : Uint8Array.prototype.set.call(e, this.subarray(r, i), t),
              n
            );
          }),
          (s.prototype.fill = function (e, t, r, i) {
            if ("string" == typeof e) {
              if (
                ("string" == typeof t
                  ? ((i = t), (t = 0), (r = this.length))
                  : "string" == typeof r && ((i = r), (r = this.length)),
                void 0 !== i && "string" != typeof i)
              )
                throw new TypeError("encoding must be a string");
              if ("string" == typeof i && !s.isEncoding(i))
                throw new TypeError("Unknown encoding: " + i);
              if (1 === e.length) {
                const t = e.charCodeAt(0);
                (("utf8" === i && t < 128) || "latin1" === i) && (e = t);
              }
            } else
              "number" == typeof e
                ? (e &= 255)
                : "boolean" == typeof e && (e = Number(e));
            if (t < 0 || this.length < t || this.length < r)
              throw new RangeError("Out of range index");
            if (r <= t) return this;
            let n;
            if (
              ((t >>>= 0),
              (r = void 0 === r ? this.length : r >>> 0),
              e || (e = 0),
              "number" == typeof e)
            )
              for (n = t; n < r; ++n) this[n] = e;
            else {
              const o = s.isBuffer(e) ? e : s.from(e, i),
                A = o.length;
              if (0 === A)
                throw new TypeError(
                  'The value "' + e + '" is invalid for argument "value"'
                );
              for (n = 0; n < r - t; ++n) this[n + t] = o[n % A];
            }
            return this;
          });
        const H = {};
        function M(e, t, r) {
          H[e] = class extends r {
            constructor() {
              super(),
                Object.defineProperty(this, "message", {
                  value: t.apply(this, arguments),
                  writable: !0,
                  configurable: !0,
                }),
                (this.name = `${this.name} [${e}]`),
                this.stack,
                delete this.name;
            }
            get code() {
              return e;
            }
            set code(e) {
              Object.defineProperty(this, "code", {
                configurable: !0,
                enumerable: !0,
                value: e,
                writable: !0,
              });
            }
            toString() {
              return `${this.name} [${e}]: ${this.message}`;
            }
          };
        }
        function G(e) {
          let t = "",
            r = e.length;
          const i = "-" === e[0] ? 1 : 0;
          for (; r >= i + 4; r -= 3) t = `_${e.slice(r - 3, r)}${t}`;
          return `${e.slice(0, r)}${t}`;
        }
        function L(e, t, r, i, n, o) {
          if (e > r || e < t) {
            const i = "bigint" == typeof t ? "n" : "";
            let n;
            throw (
              ((n =
                o > 3
                  ? 0 === t || t === BigInt(0)
                    ? `>= 0${i} and < 2${i} ** ${8 * (o + 1)}${i}`
                    : `>= -(2${i} ** ${8 * (o + 1) - 1}${i}) and < 2 ** ${
                        8 * (o + 1) - 1
                      }${i}`
                  : `>= ${t}${i} and <= ${r}${i}`),
              new H.ERR_OUT_OF_RANGE("value", n, e))
            );
          }
          !(function (e, t, r) {
            K(t, "offset"),
              (void 0 !== e[t] && void 0 !== e[t + r]) ||
                Y(t, e.length - (r + 1));
          })(i, n, o);
        }
        function K(e, t) {
          if ("number" != typeof e)
            throw new H.ERR_INVALID_ARG_TYPE(t, "number", e);
        }
        function Y(e, t, r) {
          if (Math.floor(e) !== e)
            throw (
              (K(e, r), new H.ERR_OUT_OF_RANGE(r || "offset", "an integer", e))
            );
          if (t < 0) throw new H.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new H.ERR_OUT_OF_RANGE(
            r || "offset",
            `>= ${r ? 1 : 0} and <= ${t}`,
            e
          );
        }
        M(
          "ERR_BUFFER_OUT_OF_BOUNDS",
          function (e) {
            return e
              ? `${e} is outside of buffer bounds`
              : "Attempt to access memory outside buffer bounds";
          },
          RangeError
        ),
          M(
            "ERR_INVALID_ARG_TYPE",
            function (e, t) {
              return `The "${e}" argument must be of type number. Received type ${typeof t}`;
            },
            TypeError
          ),
          M(
            "ERR_OUT_OF_RANGE",
            function (e, t, r) {
              let i = `The value of "${e}" is out of range.`,
                n = r;
              return (
                Number.isInteger(r) && Math.abs(r) > 2 ** 32
                  ? (n = G(String(r)))
                  : "bigint" == typeof r &&
                    ((n = String(r)),
                    (r > BigInt(2) ** BigInt(32) ||
                      r < -(BigInt(2) ** BigInt(32))) &&
                      (n = G(n)),
                    (n += "n")),
                (i += ` It must be ${t}. Received ${n}`),
                i
              );
            },
            RangeError
          );
        const q = /[^+/0-9A-Za-z-_]/g;
        function J(e, t) {
          let r;
          t = t || 1 / 0;
          const i = e.length;
          let n = null;
          const o = [];
          for (let A = 0; A < i; ++A) {
            if (((r = e.charCodeAt(A)), r > 55295 && r < 57344)) {
              if (!n) {
                if (r > 56319) {
                  (t -= 3) > -1 && o.push(239, 191, 189);
                  continue;
                }
                if (A + 1 === i) {
                  (t -= 3) > -1 && o.push(239, 191, 189);
                  continue;
                }
                n = r;
                continue;
              }
              if (r < 56320) {
                (t -= 3) > -1 && o.push(239, 191, 189), (n = r);
                continue;
              }
              r = 65536 + (((n - 55296) << 10) | (r - 56320));
            } else n && (t -= 3) > -1 && o.push(239, 191, 189);
            if (((n = null), r < 128)) {
              if ((t -= 1) < 0) break;
              o.push(r);
            } else if (r < 2048) {
              if ((t -= 2) < 0) break;
              o.push((r >> 6) | 192, (63 & r) | 128);
            } else if (r < 65536) {
              if ((t -= 3) < 0) break;
              o.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128);
            } else {
              if (!(r < 1114112)) throw new Error("Invalid code point");
              if ((t -= 4) < 0) break;
              o.push(
                (r >> 18) | 240,
                ((r >> 12) & 63) | 128,
                ((r >> 6) & 63) | 128,
                (63 & r) | 128
              );
            }
          }
          return o;
        }
        function j(e) {
          return i.toByteArray(
            (function (e) {
              if ((e = (e = e.split("=")[0]).trim().replace(q, "")).length < 2)
                return "";
              for (; e.length % 4 != 0; ) e += "=";
              return e;
            })(e)
          );
        }
        function z(e, t, r, i) {
          let n;
          for (n = 0; n < i && !(n + r >= t.length || n >= e.length); ++n)
            t[n + r] = e[n];
          return n;
        }
        function V(e, t) {
          return (
            e instanceof t ||
            (null != e &&
              null != e.constructor &&
              null != e.constructor.name &&
              e.constructor.name === t.name)
          );
        }
        function W(e) {
          return e != e;
        }
        const X = (function () {
          const e = "0123456789abcdef",
            t = new Array(256);
          for (let r = 0; r < 16; ++r) {
            const i = 16 * r;
            for (let n = 0; n < 16; ++n) t[i + n] = e[r] + e[n];
          }
          return t;
        })();
        function Z(e) {
          return "undefined" == typeof BigInt ? $ : e;
        }
        function $() {
          throw new Error("BigInt not supported");
        }
      },
      62680: (e, t, r) => {
        "use strict";
        var i = r(67286),
          n = r(89429),
          o = n(i("String.prototype.indexOf"));
        e.exports = function (e, t) {
          var r = i(e, !!t);
          return "function" == typeof r && o(e, ".prototype.") > -1 ? n(r) : r;
        };
      },
      89429: (e, t, r) => {
        "use strict";
        var i = r(4090),
          n = r(67286),
          o = n("%Function.prototype.apply%"),
          A = n("%Function.prototype.call%"),
          a = n("%Reflect.apply%", !0) || i.call(A, o),
          s = n("%Object.getOwnPropertyDescriptor%", !0),
          c = n("%Object.defineProperty%", !0),
          g = n("%Math.max%");
        if (c)
          try {
            c({}, "a", { value: 1 });
          } catch (e) {
            c = null;
          }
        e.exports = function (e) {
          var t = a(i, A, arguments);
          if (s && c) {
            var r = s(t, "length");
            r.configurable &&
              c(t, "length", {
                value: 1 + g(0, e.length - (arguments.length - 1)),
              });
          }
          return t;
        };
        var l = function () {
          return a(i, o, arguments);
        };
        c ? c(e.exports, "apply", { value: l }) : (e.exports.apply = l);
      },
      45877: (e, t, r) => {
        "use strict";
        var i = r(32770).validate,
          n = {
            q: 0,
            p: 1,
            z: 2,
            r: 3,
            y: 4,
            9: 5,
            x: 6,
            8: 7,
            g: 8,
            f: 9,
            2: 10,
            t: 11,
            v: 12,
            d: 13,
            w: 14,
            0: 15,
            s: 16,
            3: 17,
            j: 18,
            n: 19,
            5: 20,
            4: 21,
            k: 22,
            h: 23,
            c: 24,
            e: 25,
            6: 26,
            m: 27,
            u: 28,
            a: 29,
            7: 30,
            l: 31,
          };
        e.exports = {
          encode: function (e) {
            i(e instanceof Uint8Array, "Invalid data: " + e + ".");
            for (var t = "", r = 0; r < e.length; ++r) {
              var n = e[r];
              i(0 <= n && n < 32, "Invalid value: " + n + "."),
                (t += "qpzry9x8gf2tvdw0s3jn54khce6mua7l"[n]);
            }
            return t;
          },
          decode: function (e) {
            i(
              "string" == typeof e,
              "Invalid base32-encoded string: " + e + "."
            );
            for (var t = new Uint8Array(e.length), r = 0; r < e.length; ++r) {
              var o = e[r];
              i(o in n, "Invalid value: " + o + "."), (t[r] = n[o]);
            }
            return t;
          },
        };
      },
      13115: (e, t, r) => {
        "use strict";
        var i = r(45877),
          n = r(48166),
          o = r(86655),
          A = r(32770),
          a = A.validate,
          s = A.ValidationError,
          c = [
            "bitcoincash",
            "bchtest",
            "bchreg",
            "simpleledger",
            "slptest",
            "slpreg",
          ];
        function g(e) {
          for (var t = new Uint8Array(e.length), r = 0; r < e.length; ++r)
            t[r] = 31 & e[r].charCodeAt(0);
          return t;
        }
        function l(e, t) {
          var r = new Uint8Array(e.length + t.length);
          return r.set(e), r.set(t, e.length), r;
        }
        function u(e) {
          for (
            var t = [
                656907472481, 522768456162, 0xf33e5fb3c4, 748107326120,
                130178868336,
              ],
              r = n(1),
              i = 0;
            i < e.length;
            ++i
          ) {
            var o = e[i],
              A = r.shiftRight(35);
            r = r.and(34359738367).shiftLeft(5).xor(o);
            for (var a = 0; a < t.length; ++a)
              A.shiftRight(a).and(1).equals(1) && (r = r.xor(t[a]));
          }
          return r.xor(1);
        }
        function h(e) {
          return e === e.toLowerCase() || e === e.toUpperCase();
        }
        e.exports = {
          encode: function (e, t, r) {
            a(
              "string" == typeof e &&
                (function (e) {
                  return h(e) && -1 !== c.indexOf(e.toLowerCase());
                })(e),
              "Invalid prefix: " + e + "."
            ),
              a("string" == typeof t, "Invalid type: " + t + "."),
              a(r instanceof Uint8Array, "Invalid hash: " + r + ".");
            var n,
              A = l(g(e), new Uint8Array(1)),
              I =
                (function (e) {
                  switch (e) {
                    case "P2PKH":
                      return 0;
                    case "P2SH":
                      return 8;
                    default:
                      throw new s("Invalid type: " + e + ".");
                  }
                })(t) +
                (function (e) {
                  switch (8 * e.length) {
                    case 160:
                      return 0;
                    case 192:
                      return 1;
                    case 224:
                      return 2;
                    case 256:
                      return 3;
                    case 320:
                      return 4;
                    case 384:
                      return 5;
                    case 448:
                      return 6;
                    case 512:
                      return 7;
                    default:
                      throw new s("Invalid hash size: " + e.length + ".");
                  }
                })(r),
              p = ((n = l(Uint8Array.of(I), r)), o(n, 8, 5)),
              d = l(l(A, p), new Uint8Array(8)),
              f = l(
                p,
                (function (e) {
                  for (var t = new Uint8Array(8), r = 0; r < 8; ++r)
                    (t[7 - r] = e.and(31).toJSNumber()), (e = e.shiftRight(5));
                  return t;
                })(u(d))
              );
            return e + ":" + i.encode(f);
          },
          decode: function (e) {
            a("string" == typeof e && h(e), "Invalid address: " + e + ".");
            var t = e.toLowerCase().split(":");
            a(2 === t.length, "Missing prefix: " + e + ".");
            var r = t[0],
              n = i.decode(t[1]);
            a(
              (function (e, t) {
                var r = l(g(e), new Uint8Array(1));
                return u(l(r, t)).equals(0);
              })(r, n),
              "Invalid checksum: " + e + "."
            );
            var A,
              c = ((A = n.slice(0, -8)), o(A, 5, 8, !0)),
              I = c[0],
              p = c.slice(1);
            a(
              (function (e) {
                switch (7 & e) {
                  case 0:
                    return 160;
                  case 1:
                    return 192;
                  case 2:
                    return 224;
                  case 3:
                    return 256;
                  case 4:
                    return 320;
                  case 5:
                    return 384;
                  case 6:
                    return 448;
                  case 7:
                    return 512;
                }
              })(I) ===
                8 * p.length,
              "Invalid hash size: " + e + "."
            );
            var d = (function (e) {
              switch (120 & e) {
                case 0:
                  return "P2PKH";
                case 8:
                  return "P2SH";
                default:
                  throw new s(
                    "Invalid address type in version byte: " + e + "."
                  );
              }
            })(I);
            return { prefix: r, type: d, hash: p };
          },
          ValidationError: s,
        };
      },
      86655: (e, t, r) => {
        "use strict";
        var i = r(32770).validate;
        e.exports = function (e, t, r, n) {
          for (
            var o = n
                ? Math.floor((e.length * t) / r)
                : Math.ceil((e.length * t) / r),
              A = (1 << r) - 1,
              a = new Uint8Array(o),
              s = 0,
              c = 0,
              g = 0,
              l = 0;
            l < e.length;
            ++l
          ) {
            var u = e[l];
            for (
              i(0 <= u && u >> t == 0, "Invalid value: " + u + "."),
                c = (c << t) | u,
                g += t;
              g >= r;

            )
              (g -= r), (a[s] = (c >> g) & A), ++s;
          }
          return (
            n
              ? i(
                  g < t && 0 == ((c << (r - g)) & A),
                  "Input cannot be converted to " +
                    r +
                    " bits without padding, but strict mode was used."
                )
              : g > 0 && ((a[s] = (c << (r - g)) & A), ++s),
            a
          );
        };
      },
      32770: (e) => {
        "use strict";
        function t(e) {
          var t = new Error();
          (this.name = t.name = "ValidationError"),
            (this.message = t.message = e),
            (this.stack = t.stack);
        }
        (t.prototype = Object.create(Error.prototype)),
          (e.exports = {
            ValidationError: t,
            validate: function (e, r) {
              if (!e) throw new t(r);
            },
          });
      },
      13973: (e, t, r) => {
        var i = r(77834).Buffer,
          n = r(54851).Transform,
          o = r(33974).s;
        function A(e) {
          n.call(this),
            (this.hashMode = "string" == typeof e),
            this.hashMode
              ? (this[e] = this._finalOrDigest)
              : (this.final = this._finalOrDigest),
            this._final && ((this.__final = this._final), (this._final = null)),
            (this._decoder = null),
            (this._encoding = null);
        }
        r(91285)(A, n),
          (A.prototype.update = function (e, t, r) {
            "string" == typeof e && (e = i.from(e, t));
            var n = this._update(e);
            return this.hashMode ? this : (r && (n = this._toString(n, r)), n);
          }),
          (A.prototype.setAutoPadding = function () {}),
          (A.prototype.getAuthTag = function () {
            throw new Error("trying to get auth tag in unsupported state");
          }),
          (A.prototype.setAuthTag = function () {
            throw new Error("trying to set auth tag in unsupported state");
          }),
          (A.prototype.setAAD = function () {
            throw new Error("trying to set aad in unsupported state");
          }),
          (A.prototype._transform = function (e, t, r) {
            var i;
            try {
              this.hashMode ? this._update(e) : this.push(this._update(e));
            } catch (e) {
              i = e;
            } finally {
              r(i);
            }
          }),
          (A.prototype._flush = function (e) {
            var t;
            try {
              this.push(this.__final());
            } catch (e) {
              t = e;
            }
            e(t);
          }),
          (A.prototype._finalOrDigest = function (e) {
            var t = this.__final() || i.alloc(0);
            return e && (t = this._toString(t, e, !0)), t;
          }),
          (A.prototype._toString = function (e, t, r) {
            if (
              (this._decoder ||
                ((this._decoder = new o(t)), (this._encoding = t)),
              this._encoding !== t)
            )
              throw new Error("can't switch encodings");
            var i = this._decoder.write(e);
            return r && (i += this._decoder.end()), i;
          }),
          (e.exports = A);
      },
      16162: (e, t, r) => {
        "use strict";
        var i = r(91285),
          n = r(27993),
          o = r(51445),
          A = r(9065),
          a = r(13973);
        function s(e) {
          a.call(this, "digest"), (this._hash = e);
        }
        i(s, a),
          (s.prototype._update = function (e) {
            this._hash.update(e);
          }),
          (s.prototype._final = function () {
            return this._hash.digest();
          }),
          (e.exports = function (e) {
            return "md5" === (e = e.toLowerCase())
              ? new n()
              : "rmd160" === e || "ripemd160" === e
              ? new o()
              : new s(A(e));
          });
      },
      22511: (e, t, r) => {
        var i = r(27993);
        e.exports = function (e) {
          return new i().update(e).digest();
        };
      },
      65881: (e) => {
        var t = 1e3,
          r = 60 * t,
          i = 60 * r,
          n = 24 * i;
        function o(e, t, r, i) {
          var n = t >= 1.5 * r;
          return Math.round(e / r) + " " + i + (n ? "s" : "");
        }
        e.exports = function (e, A) {
          A = A || {};
          var a,
            s,
            c = typeof e;
          if ("string" === c && e.length > 0)
            return (function (e) {
              if (!((e = String(e)).length > 100)) {
                var o =
                  /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
                    e
                  );
                if (o) {
                  var A = parseFloat(o[1]);
                  switch ((o[2] || "ms").toLowerCase()) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                      return 315576e5 * A;
                    case "weeks":
                    case "week":
                    case "w":
                      return 6048e5 * A;
                    case "days":
                    case "day":
                    case "d":
                      return A * n;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                      return A * i;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                      return A * r;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                      return A * t;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                      return A;
                    default:
                      return;
                  }
                }
              }
            })(e);
          if ("number" === c && isFinite(e))
            return A.long
              ? ((a = e),
                (s = Math.abs(a)) >= n
                  ? o(a, s, n, "day")
                  : s >= i
                  ? o(a, s, i, "hour")
                  : s >= r
                  ? o(a, s, r, "minute")
                  : s >= t
                  ? o(a, s, t, "second")
                  : a + " ms")
              : (function (e) {
                  var o = Math.abs(e);
                  return o >= n
                    ? Math.round(e / n) + "d"
                    : o >= i
                    ? Math.round(e / i) + "h"
                    : o >= r
                    ? Math.round(e / r) + "m"
                    : o >= t
                    ? Math.round(e / t) + "s"
                    : e + "ms";
                })(e);
          throw new Error(
            "val is not a non-empty string or a valid number. val=" +
              JSON.stringify(e)
          );
        };
      },
      25130: (e, t, r) => {
        (t.formatArgs = function (t) {
          if (
            ((t[0] =
              (this.useColors ? "%c" : "") +
              this.namespace +
              (this.useColors ? " %c" : " ") +
              t[0] +
              (this.useColors ? "%c " : " ") +
              "+" +
              e.exports.humanize(this.diff)),
            !this.useColors)
          )
            return;
          const r = "color: " + this.color;
          t.splice(1, 0, r, "color: inherit");
          let i = 0,
            n = 0;
          t[0].replace(/%[a-zA-Z%]/g, (e) => {
            "%%" !== e && (i++, "%c" === e && (n = i));
          }),
            t.splice(n, 0, r);
        }),
          (t.save = function (e) {
            try {
              e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug");
            } catch (e) {}
          }),
          (t.load = function () {
            let e;
            try {
              e = t.storage.getItem("debug");
            } catch (e) {}
            return (
              !e &&
                "undefined" != typeof process &&
                "env" in process &&
                (e = process.env.DEBUG),
              e
            );
          }),
          (t.useColors = function () {
            return (
              !(
                "undefined" == typeof window ||
                !window.process ||
                ("renderer" !== window.process.type && !window.process.__nwjs)
              ) ||
              (("undefined" == typeof navigator ||
                !navigator.userAgent ||
                !navigator.userAgent
                  .toLowerCase()
                  .match(/(edge|trident)\/(\d+)/)) &&
                (("undefined" != typeof document &&
                  document.documentElement &&
                  document.documentElement.style &&
                  document.documentElement.style.WebkitAppearance) ||
                  ("undefined" != typeof window &&
                    window.console &&
                    (window.console.firebug ||
                      (window.console.exception && window.console.table))) ||
                  ("undefined" != typeof navigator &&
                    navigator.userAgent &&
                    navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                    parseInt(RegExp.$1, 10) >= 31) ||
                  ("undefined" != typeof navigator &&
                    navigator.userAgent &&
                    navigator.userAgent
                      .toLowerCase()
                      .match(/applewebkit\/(\d+)/))))
            );
          }),
          (t.storage = (function () {
            try {
              return localStorage;
            } catch (e) {}
          })()),
          (t.destroy = (() => {
            let e = !1;
            return () => {
              e ||
                ((e = !0),
                console.warn(
                  "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
                ));
            };
          })()),
          (t.colors = [
            "#0000CC",
            "#0000FF",
            "#0033CC",
            "#0033FF",
            "#0066CC",
            "#0066FF",
            "#0099CC",
            "#0099FF",
            "#00CC00",
            "#00CC33",
            "#00CC66",
            "#00CC99",
            "#00CCCC",
            "#00CCFF",
            "#3300CC",
            "#3300FF",
            "#3333CC",
            "#3333FF",
            "#3366CC",
            "#3366FF",
            "#3399CC",
            "#3399FF",
            "#33CC00",
            "#33CC33",
            "#33CC66",
            "#33CC99",
            "#33CCCC",
            "#33CCFF",
            "#6600CC",
            "#6600FF",
            "#6633CC",
            "#6633FF",
            "#66CC00",
            "#66CC33",
            "#9900CC",
            "#9900FF",
            "#9933CC",
            "#9933FF",
            "#99CC00",
            "#99CC33",
            "#CC0000",
            "#CC0033",
            "#CC0066",
            "#CC0099",
            "#CC00CC",
            "#CC00FF",
            "#CC3300",
            "#CC3333",
            "#CC3366",
            "#CC3399",
            "#CC33CC",
            "#CC33FF",
            "#CC6600",
            "#CC6633",
            "#CC9900",
            "#CC9933",
            "#CCCC00",
            "#CCCC33",
            "#FF0000",
            "#FF0033",
            "#FF0066",
            "#FF0099",
            "#FF00CC",
            "#FF00FF",
            "#FF3300",
            "#FF3333",
            "#FF3366",
            "#FF3399",
            "#FF33CC",
            "#FF33FF",
            "#FF6600",
            "#FF6633",
            "#FF9900",
            "#FF9933",
            "#FFCC00",
            "#FFCC33",
          ]),
          (t.log = console.debug || console.log || (() => {})),
          (e.exports = r(87123)(t));
        const { formatters: i } = e.exports;
        i.j = function (e) {
          try {
            return JSON.stringify(e);
          } catch (e) {
            return "[UnexpectedJSONParseError]: " + e.message;
          }
        };
      },
      87123: (e, t, r) => {
        e.exports = function (e) {
          function t(e) {
            let r,
              n,
              o,
              A = null;
            function a(...e) {
              if (!a.enabled) return;
              const i = a,
                n = Number(new Date()),
                o = n - (r || n);
              (i.diff = o),
                (i.prev = r),
                (i.curr = n),
                (r = n),
                (e[0] = t.coerce(e[0])),
                "string" != typeof e[0] && e.unshift("%O");
              let A = 0;
              (e[0] = e[0].replace(/%([a-zA-Z%])/g, (r, n) => {
                if ("%%" === r) return "%";
                A++;
                const o = t.formatters[n];
                if ("function" == typeof o) {
                  const t = e[A];
                  (r = o.call(i, t)), e.splice(A, 1), A--;
                }
                return r;
              })),
                t.formatArgs.call(i, e),
                (i.log || t.log).apply(i, e);
            }
            return (
              (a.namespace = e),
              (a.useColors = t.useColors()),
              (a.color = t.selectColor(e)),
              (a.extend = i),
              (a.destroy = t.destroy),
              Object.defineProperty(a, "enabled", {
                enumerable: !0,
                configurable: !1,
                get: () =>
                  null !== A
                    ? A
                    : (n !== t.namespaces &&
                        ((n = t.namespaces), (o = t.enabled(e))),
                      o),
                set: (e) => {
                  A = e;
                },
              }),
              "function" == typeof t.init && t.init(a),
              a
            );
          }
          function i(e, r) {
            const i = t(this.namespace + (void 0 === r ? ":" : r) + e);
            return (i.log = this.log), i;
          }
          function n(e) {
            return e
              .toString()
              .substring(2, e.toString().length - 2)
              .replace(/\.\*\?$/, "*");
          }
          return (
            (t.debug = t),
            (t.default = t),
            (t.coerce = function (e) {
              return e instanceof Error ? e.stack || e.message : e;
            }),
            (t.disable = function () {
              const e = [
                ...t.names.map(n),
                ...t.skips.map(n).map((e) => "-" + e),
              ].join(",");
              return t.enable(""), e;
            }),
            (t.enable = function (e) {
              let r;
              t.save(e), (t.namespaces = e), (t.names = []), (t.skips = []);
              const i = ("string" == typeof e ? e : "").split(/[\s,]+/),
                n = i.length;
              for (r = 0; r < n; r++)
                i[r] &&
                  ("-" === (e = i[r].replace(/\*/g, ".*?"))[0]
                    ? t.skips.push(new RegExp("^" + e.substr(1) + "$"))
                    : t.names.push(new RegExp("^" + e + "$")));
            }),
            (t.enabled = function (e) {
              if ("*" === e[e.length - 1]) return !0;
              let r, i;
              for (r = 0, i = t.skips.length; r < i; r++)
                if (t.skips[r].test(e)) return !1;
              for (r = 0, i = t.names.length; r < i; r++)
                if (t.names[r].test(e)) return !0;
              return !1;
            }),
            (t.humanize = r(65881)),
            (t.destroy = function () {
              console.warn(
                "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
              );
            }),
            Object.keys(e).forEach((r) => {
              t[r] = e[r];
            }),
            (t.names = []),
            (t.skips = []),
            (t.formatters = {}),
            (t.selectColor = function (e) {
              let r = 0;
              for (let t = 0; t < e.length; t++)
                (r = (r << 5) - r + e.charCodeAt(t)), (r |= 0);
              return t.colors[Math.abs(r) % t.colors.length];
            }),
            t.enable(t.load()),
            t
          );
        };
      },
      14926: (e, t, r) => {
        "use strict";
        var i = r(33464),
          n = "function" == typeof Symbol && "symbol" == typeof Symbol("foo"),
          o = Object.prototype.toString,
          A = Array.prototype.concat,
          a = Object.defineProperty,
          s =
            a &&
            (function () {
              var e = {};
              try {
                for (var t in (a(e, "x", { enumerable: !1, value: e }), e))
                  return !1;
                return e.x === e;
              } catch (e) {
                return !1;
              }
            })(),
          c = function (e, t, r, i) {
            var n;
            (!(t in e) ||
              ("function" == typeof (n = i) &&
                "[object Function]" === o.call(n) &&
                i())) &&
              (s
                ? a(e, t, {
                    configurable: !0,
                    enumerable: !1,
                    value: r,
                    writable: !0,
                  })
                : (e[t] = r));
          },
          g = function (e, t) {
            var r = arguments.length > 2 ? arguments[2] : {},
              o = i(t);
            n && (o = A.call(o, Object.getOwnPropertySymbols(t)));
            for (var a = 0; a < o.length; a += 1) c(e, o[a], t[o[a]], r[o[a]]);
          };
        (g.supportsDescriptors = !!s), (e.exports = g);
      },
      59228: (e) => {
        "use strict";
        const t = () => {
            const e = new Error("Delay aborted");
            return (e.name = "AbortError"), e;
          },
          r =
            ({ clearTimeout: e, setTimeout: r, willResolve: i }) =>
            (n, { value: o, signal: A } = {}) => {
              if (A && A.aborted) return Promise.reject(t());
              let a, s, c;
              const g = e || clearTimeout,
                l = () => {
                  g(a), c(t());
                },
                u = new Promise((e, t) => {
                  (s = () => {
                    A && A.removeEventListener("abort", l), i ? e(o) : t(o);
                  }),
                    (c = t),
                    (a = (r || setTimeout)(s, n));
                });
              return (
                A && A.addEventListener("abort", l, { once: !0 }),
                (u.clear = () => {
                  g(a), (a = null), s();
                }),
                u
              );
            },
          i = (e) => {
            const t = r({ ...e, willResolve: !0 });
            return (
              (t.reject = r({ ...e, willResolve: !1 })),
              (t.range = (e, r, i) =>
                t(
                  ((e, t) => Math.floor(Math.random() * (t - e + 1) + e))(e, r),
                  i
                )),
              t
            );
          },
          n = i();
        (n.createWithTimers = i), (e.exports = n), (e.exports.default = n);
      },
      39797: (e, t, r) => {
        "use strict";
        r.d(t, {
          Cq: () => B,
          Ls: () => w,
          OC: () => I,
          QK: () => C,
          bc: () => b,
        });
        var i = r(25130),
          n = r(22699),
          o = r(5714),
          A = r.n(o),
          a = r(84219),
          s = r.n(a),
          c = r(97475),
          g = r.n(c),
          l = r(39872);
        const u = {
          client: (0, i.debug)("electrum-cash:client "),
          cluster: (0, i.debug)("electrum-cash:cluster"),
          errors: (0, i.debug)("electrum-cash:error  "),
          warning: (0, i.debug)("electrum-cash:warning"),
          network: (0, i.debug)("electrum-cash:network"),
          ping: (0, i.debug)("electrum-cash:pulses "),
        };
        (u.client.color = "2"),
          (u.cluster.color = "3"),
          (u.errors.color = "9"),
          (u.warning.color = "13"),
          (u.network.color = "4"),
          (u.ping.color = "8");
        class h {
          static buildRequestObject(e, t, r) {
            return JSON.stringify({ method: e, params: t, id: r });
          }
          static get versionRegexp() {
            return /^\d+(\.\d+)+$/;
          }
          static get statementDelimiter() {
            return "\n";
          }
        }
        var I, p, d, f, C;
        !(function (e) {
          (e[(e.RANDOM = 0)] = "RANDOM"), (e[(e.PRIORITY = 1)] = "PRIORITY");
        })(I || (I = {})),
          (function (e) {
            e[(e.ALL = 0)] = "ALL";
          })(p || (p = {})),
          (function (e) {
            (e[(e.DISABLED = 0)] = "DISABLED"),
              (e[(e.DEGRADED = 1)] = "DEGRADED"),
              (e[(e.READY = 2)] = "READY");
          })(d || (d = {})),
          (function (e) {
            (e[(e.UNAVAILABLE = 0)] = "UNAVAILABLE"),
              (e[(e.AVAILABLE = 1)] = "AVAILABLE");
          })(f || (f = {})),
          (function (e) {
            (e[(e.DISCONNECTED = 0)] = "DISCONNECTED"),
              (e[(e.CONNECTED = 1)] = "CONNECTED"),
              (e[(e.DISCONNECTING = 2)] = "DISCONNECTING"),
              (e[(e.CONNECTING = 3)] = "CONNECTING"),
              (e[(e.RECONNECTING = 4)] = "RECONNECTING");
          })(C || (C = {}));
        const B = {
            TCP: { Port: 50001, Scheme: "tcp" },
            TCP_TLS: { Port: 50002, Scheme: "tcp_tls" },
            WS: { Port: 50003, Scheme: "ws" },
            WSS: { Port: 50004, Scheme: "wss" },
          },
          E = B.TCP_TLS.Port,
          y = B.TCP_TLS.Scheme,
          m = p.ALL,
          Q = I.RANDOM;
        class v extends n.EventEmitter {
          tcpSocket;
          webSocket;
          timers = {};
          onConnectHasRun = !1;
          eventForwarders = {
            disconnect: () => this.emit("disconnect"),
            tcpData: (e) => this.emit("data", e),
            wsData: (e) => this.emit("data", `${e.data}\n`),
            tcpError: (e) => this.emit("error", e),
            wsError: (e) => this.emit("error", e.error),
          };
          connect(e, t, r, i) {
            if (this.tcpSocket || this.webSocket)
              throw new Error(
                "Cannot initiate a new socket connection when an existing connection exists"
              );
            (this.timers.disconnect = setTimeout(
              () => this.disconnectOnTimeout(e, t, i),
              i
            )),
              this.once("connect", this.clearDisconnectTimerOnTimeout);
            const n = {
              [B.TCP.Scheme]: "a TCP Socket",
              [B.TCP_TLS.Scheme]: "an encrypted TCP socket",
              [B.WS.Scheme]: "a WebSocket",
              [B.WSS.Scheme]: "an encrypted WebSocket",
            };
            if (
              (u.network(`Initiating ${n[r]} connection to '${e}:${t}'.`),
              r === B.TCP.Scheme || r === B.TCP_TLS.Scheme)
            ) {
              if (r === B.TCP_TLS.Scheme) {
                const i = { rejectUnauthorized: !1 };
                s().isIP(e) || (i.serverName = e),
                  (this.tcpSocket = A().connect(t, e, i)),
                  this.tcpSocket.once("secureConnect", () => {
                    this.tcpSocket instanceof A().TLSSocket &&
                      "DEPTH_ZERO_SELF_SIGNED_CERT" ===
                        this.tcpSocket.authorizationError &&
                      u.warning(
                        `Connection to ${e}:${t} uses a self-signed certificate`
                      );
                  }),
                  this.tcpSocket.on(
                    "secureConnect",
                    this.onConnect.bind(this, n[r], e, t)
                  );
              } else
                (this.tcpSocket = s().connect({ host: e, port: t })),
                  this.tcpSocket.on(
                    "connect",
                    this.onConnect.bind(this, n[r], e, t)
                  );
              this.tcpSocket.setEncoding("utf8"),
                this.tcpSocket.setKeepAlive(!0, 0),
                this.tcpSocket.setNoDelay(!0),
                this.tcpSocket.on("error", this.eventForwarders.tcpError);
            } else {
              if (r !== B.WS.Scheme && r !== B.WSS.Scheme)
                throw new Error("Incorrect transport specified");
              r === B.WSS.Scheme
                ? (this.webSocket = new (g())(`wss://${e}:${t}`))
                : (this.webSocket = new (g())(`ws://${e}:${t}`)),
                this.webSocket.addEventListener(
                  "open",
                  this.onConnect.bind(this, n[r], e, t)
                ),
                this.webSocket.addEventListener(
                  "error",
                  this.eventForwarders.wsError
                );
            }
          }
          onConnect(e, t, r) {
            this.onConnectHasRun ||
              (u.network(`Established ${e} connection with '${t}:${r}'.`),
              void 0 !== this.tcpSocket
                ? (this.tcpSocket.addListener(
                    "close",
                    this.eventForwarders.disconnect
                  ),
                  this.tcpSocket.addListener(
                    "data",
                    this.eventForwarders.tcpData
                  ))
                : void 0 !== this.webSocket &&
                  (this.webSocket.addEventListener(
                    "close",
                    this.eventForwarders.disconnect
                  ),
                  this.webSocket.addEventListener(
                    "message",
                    this.eventForwarders.wsData
                  )),
              (this.onConnectHasRun = !0),
              this.emit("connect"));
          }
          clearDisconnectTimerOnTimeout() {
            this.timers.disconnect && clearTimeout(this.timers.disconnect);
          }
          disconnect() {
            if ((this.clearDisconnectTimerOnTimeout(), this.tcpSocket))
              this.tcpSocket.removeListener(
                "close",
                this.eventForwarders.disconnect
              ),
                this.tcpSocket.removeListener(
                  "data",
                  this.eventForwarders.tcpData
                ),
                this.tcpSocket.removeListener(
                  "error",
                  this.eventForwarders.tcpError
                ),
                this.tcpSocket.destroy(),
                (this.tcpSocket = void 0);
            else if (this.webSocket)
              try {
                this.webSocket.removeEventListener(
                  "close",
                  this.eventForwarders.disconnect
                ),
                  this.webSocket.removeEventListener(
                    "message",
                    this.eventForwarders.wsData
                  ),
                  this.webSocket.removeEventListener(
                    "error",
                    this.eventForwarders.wsError
                  ),
                  this.webSocket.close();
              } catch (e) {
              } finally {
                this.webSocket = void 0;
              }
            (this.onConnectHasRun = !1), this.emit("disconnect");
          }
          write(e, t) {
            if (this.tcpSocket) return this.tcpSocket.write(e, t);
            if (this.webSocket) return this.webSocket.send(e, t), !0;
            throw new Error(
              "Cannot write to socket when there is no active connection"
            );
          }
          disconnectOnTimeout(e, t, r) {
            this.removeListener("connect", this.clearDisconnectTimerOnTimeout);
            const i = {
              code: "ETIMEDOUT",
              message: `Connection to '${e}:${t}' timed out after ${r} milliseconds`,
            };
            this.emit("error", i), this.disconnect();
          }
        }
        class S extends n.EventEmitter {
          application;
          version;
          host;
          port;
          scheme;
          timeout;
          pingInterval;
          socket;
          lastReceivedTimestamp;
          timers = {};
          verifications = [];
          status = C.DISCONNECTED;
          messageBuffer = "";
          constructor(e, t, r, i = E, n = y, o = 12e4, A = 3e3) {
            if (
              (super(),
              (this.application = e),
              (this.version = t),
              (this.host = r),
              (this.port = i),
              (this.scheme = n),
              (this.timeout = o),
              (this.pingInterval = A),
              !h.versionRegexp.test(t))
            )
              throw new Error(
                `Provided version string (${t}) is not a valid protocol version number.`
              );
            this.createSocket();
          }
          get hostIdentifier() {
            return `${this.host}:${this.port}`;
          }
          createSocket() {
            (this.socket = new v()),
              this.socket.on("connect", this.onSocketConnect.bind(this)),
              this.socket.on("disconnect", this.onSocketDisconnect.bind(this)),
              this.socket.on("data", this.parseMessageChunk.bind(this));
          }
          destroySocket() {
            this.socket.disconnect();
          }
          parseMessageChunk(e) {
            for (
              this.lastReceivedTimestamp = Date.now(),
                this.verifications.forEach((e) => clearTimeout(e)),
                this.verifications.length = 0,
                this.messageBuffer += e;
              this.messageBuffer.includes(h.statementDelimiter);

            ) {
              const e = this.messageBuffer.split(h.statementDelimiter);
              for (; e.length > 1; ) {
                const t = String(e.shift());
                let r = JSON.parse(t);
                for (Array.isArray(r) || (r = [r]); r.length > 0; ) {
                  const e = r.shift();
                  "versionNegotiation" !== e.id
                    ? "keepAlive" !== e.id && this.emit("statement", e)
                    : e.error
                    ? this.emit("version", { error: e.error })
                    : this.emit("version", {
                        software: e.result[0],
                        protocol: e.result[1],
                      });
                }
              }
              this.messageBuffer = e.shift() || "";
            }
          }
          ping() {
            u.ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);
            const e = h.buildRequestObject("server.ping", [], "keepAlive");
            return this.send(e);
          }
          async connect() {
            this.status !== C.CONNECTED &&
              ((this.status = C.CONNECTING),
              await new Promise((e, t) => {
                const r = (e) => {
                  (this.status = C.DISCONNECTED), t(e);
                };
                this.socket.removeAllListeners("error"),
                  this.socket.once("error", r),
                  this.socket.once("connect", () => {
                    u.network(
                      `Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`
                    ),
                      this.socket.removeListener("error", r);
                    const i = h.buildRequestObject(
                      "server.version",
                      [this.application, this.version],
                      "versionNegotiation"
                    );
                    this.once("version", (r) => {
                      if ("error" in r) {
                        this.disconnect(!0);
                        const e = "unsupported protocol version.";
                        u.errors(
                          `Failed to connect with ${this.hostIdentifier} due to ${e}`
                        ),
                          t(e);
                      } else if (r.protocol !== this.version) {
                        this.disconnect(!0);
                        const e = `incompatible protocol version negotiated (${r.protocol} !== ${this.version}).`;
                        u.errors(
                          `Failed to connect with ${this.hostIdentifier} due to ${e}`
                        ),
                          t(e);
                      } else
                        u.network(
                          `Negotiated protocol version ${r.protocol} with '${this.hostIdentifier}', powered by ${r.software}.`
                        ),
                          (this.status = C.CONNECTED),
                          this.emit("connect"),
                          e();
                    }),
                      this.send(i);
                  }),
                  this.socket.on("error", this.onSocketError.bind(this)),
                  this.socket.connect(
                    this.host,
                    this.port,
                    this.scheme,
                    this.timeout
                  );
              }));
          }
          async reconnect() {
            await this.clearReconnectTimer(),
              u.network(`Trying to reconnect to '${this.hostIdentifier}'..`),
              (this.status = C.RECONNECTING),
              this.destroySocket(),
              this.createSocket();
            try {
              await this.connect();
            } catch (e) {}
          }
          clearReconnectTimer() {
            this.timers.reconnect && clearTimeout(this.timers.reconnect),
              (this.timers.reconnect = void 0);
          }
          clearKeepAliveTimer() {
            this.timers.keepAlive && clearTimeout(this.timers.keepAlive),
              (this.timers.keepAlive = void 0);
          }
          setupKeepAliveTimer() {
            this.timers.keepAlive ||
              (this.timers.keepAlive = setTimeout(
                this.ping.bind(this),
                this.pingInterval
              ));
          }
          async disconnect(e = !1) {
            return (
              !(this.status === C.DISCONNECTED && !e) &&
              ((this.status = C.DISCONNECTING),
              await this.clearKeepAliveTimer(),
              await this.clearReconnectTimer(),
              new Promise((e) => {
                this.once("disconnect", () => e(!0)), this.destroySocket();
              }))
            );
          }
          send(e) {
            this.clearKeepAliveTimer();
            const t = Date.now(),
              r = setTimeout(this.verifySend.bind(this, t), this.timeout);
            return (
              this.verifications.push(r),
              this.setupKeepAliveTimer(),
              this.socket.write(e + h.statementDelimiter)
            );
          }
          verifySend(e) {
            if (Number(this.lastReceivedTimestamp) < e) {
              if (
                this.status === C.DISCONNECTED ||
                this.status === C.DISCONNECTING
              )
                return void u.errors(
                  `Tried to verify already disconnected connection to '${this.hostIdentifier}'`
                );
              this.clearKeepAliveTimer(),
                u.network(`Connection to '${this.hostIdentifier}' timed out.`),
                this.socket.disconnect();
            }
          }
          onSocketConnect() {
            this.clearReconnectTimer(),
              (this.lastReceivedTimestamp = Date.now()),
              this.setupKeepAliveTimer(),
              this.socket.removeAllListeners("error"),
              this.socket.on("error", this.onSocketError.bind(this));
          }
          onSocketDisconnect() {
            this.emit("disconnect"),
              this.clearKeepAliveTimer(),
              this.status === C.DISCONNECTING
                ? (this.clearReconnectTimer(),
                  this.removeAllListeners(),
                  (this.status = C.DISCONNECTED),
                  u.network(`Disconnected from '${this.hostIdentifier}'.`))
                : (this.status === C.CONNECTED &&
                    u.errors(
                      `Connection with '${this.hostIdentifier}' was closed, trying to reconnect in 15 seconds.`
                    ),
                  (this.status = C.DISCONNECTED),
                  this.timers.reconnect ||
                    (this.timers.reconnect = setTimeout(
                      this.reconnect.bind(this),
                      15e3
                    )));
          }
          onSocketError(e) {
            void 0 !== e &&
              ("EAI_AGAIN" !== e.code
                ? "ETIMEDOUT" !== e.code
                  ? u.errors(
                      `Unknown network error ('${this.hostIdentifier}'): `,
                      e
                    )
                  : u.errors(e.message)
                : u.errors(
                    `Failed to look up DNS records for '${this.host}'.`
                  ));
          }
        }
        class w extends n.EventEmitter {
          connection;
          subscriptionMethods = {};
          subscriptionCallbacks = new WeakMap();
          requestId = 0;
          requestResolvers = {};
          constructor(e, t, r, i = E, n = y, o = 12e4, A = 3e3) {
            super(), (this.connection = new S(e, t, r, i, n, o, A));
          }
          async connect() {
            this.connection.on("statement", this.response.bind(this)),
              this.connection.on(
                "connect",
                this.resubscribeOnConnect.bind(this)
              ),
              this.connection.on("connect", this.emit.bind(this, "connected")),
              this.connection.on(
                "disconnect",
                this.onConnectionDisconnect.bind(this)
              ),
              this.connection.on("error", this.emit.bind(this, "error")),
              await this.connection.connect();
          }
          async disconnect(e = !1, t = !1) {
            t || (this.removeAllListeners(), (this.subscriptionMethods = {}));
            for (const e in this.requestResolvers)
              (0, this.requestResolvers[e])(new Error("Manual disconnection")),
                delete this.requestResolvers[e];
            return this.connection.disconnect(e);
          }
          async request(e, ...t) {
            if (this.connection.status !== C.CONNECTED)
              throw new Error(
                `Unable to send request to a disconnected server '${this.connection.host}'.`
              );
            this.requestId += 1;
            const r = this.requestId,
              i = h.buildRequestObject(e, t, r);
            return (
              u.network(`Sending request '${e}' to '${this.connection.host}'`),
              new Promise((e) => {
                (this.requestResolvers[r] = (t, r) => {
                  e(t || r);
                }),
                  this.connection.send(i);
              })
            );
          }
          async subscribe(e, t, ...r) {
            return new Promise(async (i) => {
              this.listeners(t).includes(e) || this.addListener(t, e),
                this.subscriptionMethods[t] ||
                  (this.subscriptionMethods[t] = []),
                this.subscriptionMethods[t].push(JSON.stringify(r));
              const n = this.subscriptionCallbacks.get(e) || [];
              n.push({ method: t, payload: JSON.stringify(r) }),
                this.subscriptionCallbacks.set(e, n);
              const o = await this.request(t, ...r);
              e(o), i(!0);
            });
          }
          async unsubscribe(e, t, ...r) {
            if (this.connection.status !== C.CONNECTED)
              throw new Error(
                `Unable to send unsubscribe request to a disconnected server '${this.connection.host}'.`
              );
            return new Promise(async (i) => {
              const n = JSON.stringify(r);
              if (!this.subscriptionMethods[t])
                throw new Error(
                  `Cannot unsubscribe from '${t}' since the method has no subscriptions.`
                );
              if (!this.subscriptionCallbacks.has(e))
                throw new Error(
                  `Cannot unsubscribe with '${e.name}' since the callback has no subscriptions.`
                );
              const o = Object.values(this.subscriptionMethods[t]).filter(
                  (e) => e === n
                ).length,
                A = (this.subscriptionCallbacks.get(e) || []).filter(
                  (e) => e.method === t
                ).length,
                a = this.subscriptionMethods[t].indexOf(n),
                s = (this.subscriptionCallbacks.get(e) || []).findIndex(
                  (e) => e.method === t && e.payload === n
                );
              if (a < 0)
                throw new Error(
                  `Cannot unsubscribe from '${t}' since it has no subscription with the given parameters.`
                );
              if (s < 0)
                throw new Error(
                  `Cannot unsubscribe with '${e.name}' since it has no subscription with the given method and parameters.`
                );
              1 === o &&
                (this.subscriptionMethods[t].splice(a, 1),
                t.endsWith(".subscribe") &&
                  (await this.request(
                    t.replace(".subscribe", ".unsubscribe"),
                    ...r
                  ))),
                1 === A && this.removeListener(t, e);
              const c = this.subscriptionCallbacks.get(e) || [];
              this.subscriptionCallbacks.set(e, c.splice(s, 1)),
                u.client(
                  `Unsubscribed callback '${e.name}' from '${String(
                    t
                  )}' for the '${n}' parameters.`
                ),
                i(!0);
            });
          }
          async resubscribeOnConnect() {
            u.client(`Connected to '${this.connection.hostIdentifier}'.`);
            for (const e of this.eventNames())
              if ("connected" !== e && "disconnected" !== e && "error" !== e) {
                if (!this.subscriptionMethods[String(e)])
                  throw new Error(
                    `Unable to resubscribe to ${String(e)} at ${
                      this.connection.hostIdentifier
                    } due to missing subscription data.`
                  );
                for (const t of this.subscriptionMethods[String(e)]) {
                  const r = JSON.parse(t);
                  await this.request(String(e), ...r);
                }
                u.client(
                  `Restored ${
                    this.subscriptionMethods[String(e)].length
                  } previous '${String(e)}' subscriptions for '${
                    this.connection.hostIdentifier
                  }'`
                );
              }
            return !0;
          }
          response(e) {
            if (
              (function (e) {
                return !("id" in e) && "method" in e;
              })(e)
            )
              return (
                u.client(
                  `Received notification for '${e.method}' from '${this.connection.host}'`
                ),
                void this.emit(e.method, e.params)
              );
            if (null === e.id)
              throw new Error(
                "Internal error: Received an RPC response with ID null."
              );
            const t = this.requestResolvers[e.id];
            if (!t)
              throw new Error(
                "Internal error: Callback for response not available."
              );
            delete this.requestResolvers[e.id],
              (function (e) {
                return "id" in e && "error" in e;
              })(e)
                ? t(new Error(e.error.message))
                : t(void 0, e.result);
          }
          onConnectionDisconnect() {
            this.emit("disconnected");
            for (const e in this.requestResolvers)
              (0, this.requestResolvers[e])(new Error("Connection lost")),
                delete this.requestResolvers[e];
          }
        }
        class b extends n.EventEmitter {
          application;
          version;
          timeout;
          pingInterval;
          strategy;
          clients = {};
          connections = 0;
          notifications = {};
          status = d.DISABLED;
          requestCounter = 0;
          requestPromises = {};
          requestLock = new l.WU();
          responseLock = new l.WU();
          constructor(e, t, r = 1, i = m, n = Q, o = 12e4, A = 3e3) {
            super(),
              (this.application = e),
              (this.version = t),
              (this.timeout = o),
              (this.pingInterval = A),
              (this.strategy = { distribution: i, confidence: r, order: n }),
              u.cluster(`Initialized empty cluster (${r} of ${i || "ALL"})`),
              (i === p.ALL || r / i <= 0.5) &&
                u.warning(
                  `Subscriptions might return multiple valid responses when confidence (${r}) is less than 51% of distribution.`
                );
          }
          async addServer(e, t = E, r = y, i = !0) {
            const n = new w(
              this.application,
              this.version,
              e,
              t,
              r,
              this.timeout,
              this.pingInterval
            );
            this.clients[`${e}:${t}`] = { state: f.UNAVAILABLE, connection: n };
            const o = () => {
              const e = Math.max(
                this.strategy.confidence,
                this.strategy.distribution
              );
              this.connections >= e
                ? this.status !== d.READY &&
                  ((this.status = d.READY),
                  this.emit("ready"),
                  u.cluster(
                    `Cluster status is ready (currently ${this.connections} of ${e} connections available.)`
                  ))
                : this.connections >= this.strategy.confidence
                ? this.status !== d.DEGRADED &&
                  ((this.status = d.DEGRADED),
                  this.emit("degraded"),
                  u.cluster(
                    `Cluster status is degraded (only ${this.connections} of ${e} connections available.)`
                  ))
                : this.status !== d.DISABLED &&
                  ((this.status = d.DISABLED),
                  this.emit("disabled"),
                  u.cluster(
                    `Cluster status is disabled (only ${this.connections} of the ${e} connections are available.)`
                  ));
            };
            n.connection.on(
              "connect",
              (async () => {
                try {
                  n.connection.status === C.CONNECTED &&
                    (this.clients[`${e}:${t}`].state === f.UNAVAILABLE &&
                      (this.connections += 1),
                    (this.clients[`${e}:${t}`].state = f.AVAILABLE),
                    o());
                } catch (e) {}
              }).bind(this)
            ),
              n.connection.on(
                "disconnect",
                (() => {
                  this.clients[`${e}:${t}`].state === f.AVAILABLE &&
                    (this.connections -= 1),
                    (this.clients[`${e}:${t}`].state = f.UNAVAILABLE),
                    o();
                }).bind(this)
              ),
              i && (await n.connect());
          }
          async request(e, ...t) {
            if (this.status === d.DISABLED)
              throw new Error(
                `Cannot request '${e}' when available clients (${this.connections}) is less than required confidence (${this.strategy.confidence}).`
              );
            const r = await this.requestLock.acquire();
            let i = 0;
            try {
              (this.requestCounter += 1), (i = this.requestCounter);
            } finally {
              r();
            }
            this.requestPromises[i] = [];
            const n = Object.keys(this.clients).filter(
              (e) => this.clients[e].state === f.AVAILABLE
            );
            let o = 0,
              A = this.strategy.distribution || n.length;
            for (this.status === d.DEGRADED && (A = n.length); o < A; ) {
              let r = 0;
              this.strategy.order === I.RANDOM &&
                (r = Math.floor(Math.random() * n.length));
              const [A] = n.splice(r, 1),
                a = this.clients[A].connection.request(e, ...t);
              this.requestPromises[i].push(a), (o += 1);
            }
            return new Promise((t, r) => {
              const n = async () => {
                const o = {};
                let A = 0;
                for (const r in this.requestPromises[i]) {
                  const n = [
                      this.requestPromises[i][r],
                      Promise.resolve(void 0),
                    ],
                    a = await Promise.race(n);
                  if (void 0 !== a) {
                    const r = JSON.stringify(a);
                    if (
                      ((A += 1),
                      void 0 === o[r] ? (o[r] = 1) : (o[r] += 1),
                      o[r] === this.strategy.confidence)
                    )
                      return (
                        u.cluster(
                          `Validated response for '${e}' with sufficient integrity (${this.strategy.confidence}).`
                        ),
                        void t(a)
                      );
                  }
                }
                A !== this.requestPromises[i].length
                  ? setTimeout(n, 1e3)
                  : r(
                      new Error(
                        `Unable to complete request for '${e}', response failed to reach sufficient integrity (${this.strategy.confidence}).`
                      )
                    );
              };
              n();
            });
          }
          async subscribe(e, t, ...r) {
            return new Promise(async (i) => {
              const n = async (r) => {
                const i = await this.responseLock.acquire();
                try {
                  const n = JSON.stringify(r);
                  void 0 === this.notifications[n]
                    ? (this.notifications[n] = 1)
                    : (this.notifications[n] += 1),
                    this.notifications[n] === this.strategy.confidence &&
                      (u.cluster(
                        `Validated notification for '${t}' with sufficient integrity (${this.strategy.confidence}).`
                      ),
                      e(r));
                } finally {
                  i();
                }
              };
              for (const i in this.clients) {
                const o = this.clients[i].connection;
                o.listeners(t).includes(n) || o.addListener(t, n),
                  o.subscriptionMethods[t] || (o.subscriptionMethods[t] = []),
                  o.subscriptionMethods[t].push(JSON.stringify(r));
                const A = o.subscriptionCallbacks.get(e) || [];
                A.push({ method: t, payload: JSON.stringify(r) }),
                  o.subscriptionCallbacks.set(e, A);
              }
              const o = await this.request(t, ...r);
              e(o), i(!0);
            });
          }
          async unsubscribe(e, t, ...r) {
            return new Promise(async (i) => {
              for (const i in this.clients) {
                const n = this.clients[i].connection;
                n.connection.status === C.CONNECTED
                  ? n.unsubscribe(e, t, ...r)
                  : u.warning(
                      `Client with server ${n.connection.host} could not be reached to unsubscribe`
                    );
              }
              i(!0);
            });
          }
          async ready() {
            const e = Date.now();
            return new Promise((t) => {
              const r = () => {
                this.status !== d.READY
                  ? Date.now() - e > this.timeout
                    ? t(!1)
                    : setTimeout(r, 50)
                  : t(!0);
              };
              r();
            });
          }
          async startup() {
            u.cluster("Starting up cluster.");
            const e = [];
            for (const t in this.clients) {
              const {
                host: r,
                port: i,
                scheme: n,
              } = this.clients[t].connection.connection;
              this.clients[t].state === f.AVAILABLE
                ? u.warning(
                    `Called startup(), but server ${r}:${i} is already connected`
                  )
                : e.push(this.addServer(r, i, n));
            }
            return Promise.all(e);
          }
          async shutdown(e = !1) {
            u.cluster("Shutting down cluster.");
            const t = [];
            return new Promise((r) => {
              this.once("disabled", () => r(Promise.all(t)));
              for (const r in this.clients)
                t.push(this.clients[r].connection.disconnect(!0, e));
            });
          }
        }
      },
      44956: (e) => {
        "use strict";
        function t(e, t) {
          if (null == e)
            throw new TypeError("Cannot convert first argument to object");
          for (var r = Object(e), i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            if (null != n)
              for (
                var o = Object.keys(Object(n)), A = 0, a = o.length;
                A < a;
                A++
              ) {
                var s = o[A],
                  c = Object.getOwnPropertyDescriptor(n, s);
                void 0 !== c && c.enumerable && (r[s] = n[s]);
              }
          }
          return r;
        }
        e.exports = {
          assign: t,
          polyfill: function () {
            Object.assign ||
              Object.defineProperty(Object, "assign", {
                enumerable: !1,
                configurable: !0,
                writable: !0,
                value: t,
              });
          },
        };
      },
      22699: (e) => {
        "use strict";
        var t,
          r = "object" == typeof Reflect ? Reflect : null,
          i =
            r && "function" == typeof r.apply
              ? r.apply
              : function (e, t, r) {
                  return Function.prototype.apply.call(e, t, r);
                };
        t =
          r && "function" == typeof r.ownKeys
            ? r.ownKeys
            : Object.getOwnPropertySymbols
            ? function (e) {
                return Object.getOwnPropertyNames(e).concat(
                  Object.getOwnPropertySymbols(e)
                );
              }
            : function (e) {
                return Object.getOwnPropertyNames(e);
              };
        var n =
          Number.isNaN ||
          function (e) {
            return e != e;
          };
        function o() {
          o.init.call(this);
        }
        (e.exports = o),
          (e.exports.once = function (e, t) {
            return new Promise(function (r, i) {
              function n(r) {
                e.removeListener(t, o), i(r);
              }
              function o() {
                "function" == typeof e.removeListener &&
                  e.removeListener("error", n),
                  r([].slice.call(arguments));
              }
              p(e, t, o, { once: !0 }),
                "error" !== t &&
                  (function (e, t, r) {
                    "function" == typeof e.on && p(e, "error", t, { once: !0 });
                  })(e, n);
            });
          }),
          (o.EventEmitter = o),
          (o.prototype._events = void 0),
          (o.prototype._eventsCount = 0),
          (o.prototype._maxListeners = void 0);
        var A = 10;
        function a(e) {
          if ("function" != typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e
            );
        }
        function s(e) {
          return void 0 === e._maxListeners
            ? o.defaultMaxListeners
            : e._maxListeners;
        }
        function c(e, t, r, i) {
          var n, o, A, c;
          if (
            (a(r),
            void 0 === (o = e._events)
              ? ((o = e._events = Object.create(null)), (e._eventsCount = 0))
              : (void 0 !== o.newListener &&
                  (e.emit("newListener", t, r.listener ? r.listener : r),
                  (o = e._events)),
                (A = o[t])),
            void 0 === A)
          )
            (A = o[t] = r), ++e._eventsCount;
          else if (
            ("function" == typeof A
              ? (A = o[t] = i ? [r, A] : [A, r])
              : i
              ? A.unshift(r)
              : A.push(r),
            (n = s(e)) > 0 && A.length > n && !A.warned)
          ) {
            A.warned = !0;
            var g = new Error(
              "Possible EventEmitter memory leak detected. " +
                A.length +
                " " +
                String(t) +
                " listeners added. Use emitter.setMaxListeners() to increase limit"
            );
            (g.name = "MaxListenersExceededWarning"),
              (g.emitter = e),
              (g.type = t),
              (g.count = A.length),
              (c = g),
              console && console.warn && console.warn(c);
          }
          return e;
        }
        function g() {
          if (!this.fired)
            return (
              this.target.removeListener(this.type, this.wrapFn),
              (this.fired = !0),
              0 === arguments.length
                ? this.listener.call(this.target)
                : this.listener.apply(this.target, arguments)
            );
        }
        function l(e, t, r) {
          var i = {
              fired: !1,
              wrapFn: void 0,
              target: e,
              type: t,
              listener: r,
            },
            n = g.bind(i);
          return (n.listener = r), (i.wrapFn = n), n;
        }
        function u(e, t, r) {
          var i = e._events;
          if (void 0 === i) return [];
          var n = i[t];
          return void 0 === n
            ? []
            : "function" == typeof n
            ? r
              ? [n.listener || n]
              : [n]
            : r
            ? (function (e) {
                for (var t = new Array(e.length), r = 0; r < t.length; ++r)
                  t[r] = e[r].listener || e[r];
                return t;
              })(n)
            : I(n, n.length);
        }
        function h(e) {
          var t = this._events;
          if (void 0 !== t) {
            var r = t[e];
            if ("function" == typeof r) return 1;
            if (void 0 !== r) return r.length;
          }
          return 0;
        }
        function I(e, t) {
          for (var r = new Array(t), i = 0; i < t; ++i) r[i] = e[i];
          return r;
        }
        function p(e, t, r, i) {
          if ("function" == typeof e.on) i.once ? e.once(t, r) : e.on(t, r);
          else {
            if ("function" != typeof e.addEventListener)
              throw new TypeError(
                'The "emitter" argument must be of type EventEmitter. Received type ' +
                  typeof e
              );
            e.addEventListener(t, function n(o) {
              i.once && e.removeEventListener(t, n), r(o);
            });
          }
        }
        Object.defineProperty(o, "defaultMaxListeners", {
          enumerable: !0,
          get: function () {
            return A;
          },
          set: function (e) {
            if ("number" != typeof e || e < 0 || n(e))
              throw new RangeError(
                'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                  e +
                  "."
              );
            A = e;
          },
        }),
          (o.init = function () {
            (void 0 !== this._events &&
              this._events !== Object.getPrototypeOf(this)._events) ||
              ((this._events = Object.create(null)), (this._eventsCount = 0)),
              (this._maxListeners = this._maxListeners || void 0);
          }),
          (o.prototype.setMaxListeners = function (e) {
            if ("number" != typeof e || e < 0 || n(e))
              throw new RangeError(
                'The value of "n" is out of range. It must be a non-negative number. Received ' +
                  e +
                  "."
              );
            return (this._maxListeners = e), this;
          }),
          (o.prototype.getMaxListeners = function () {
            return s(this);
          }),
          (o.prototype.emit = function (e) {
            for (var t = [], r = 1; r < arguments.length; r++)
              t.push(arguments[r]);
            var n = "error" === e,
              o = this._events;
            if (void 0 !== o) n = n && void 0 === o.error;
            else if (!n) return !1;
            if (n) {
              var A;
              if ((t.length > 0 && (A = t[0]), A instanceof Error)) throw A;
              var a = new Error(
                "Unhandled error." + (A ? " (" + A.message + ")" : "")
              );
              throw ((a.context = A), a);
            }
            var s = o[e];
            if (void 0 === s) return !1;
            if ("function" == typeof s) i(s, this, t);
            else {
              var c = s.length,
                g = I(s, c);
              for (r = 0; r < c; ++r) i(g[r], this, t);
            }
            return !0;
          }),
          (o.prototype.addListener = function (e, t) {
            return c(this, e, t, !1);
          }),
          (o.prototype.on = o.prototype.addListener),
          (o.prototype.prependListener = function (e, t) {
            return c(this, e, t, !0);
          }),
          (o.prototype.once = function (e, t) {
            return a(t), this.on(e, l(this, e, t)), this;
          }),
          (o.prototype.prependOnceListener = function (e, t) {
            return a(t), this.prependListener(e, l(this, e, t)), this;
          }),
          (o.prototype.removeListener = function (e, t) {
            var r, i, n, o, A;
            if ((a(t), void 0 === (i = this._events))) return this;
            if (void 0 === (r = i[e])) return this;
            if (r === t || r.listener === t)
              0 == --this._eventsCount
                ? (this._events = Object.create(null))
                : (delete i[e],
                  i.removeListener &&
                    this.emit("removeListener", e, r.listener || t));
            else if ("function" != typeof r) {
              for (n = -1, o = r.length - 1; o >= 0; o--)
                if (r[o] === t || r[o].listener === t) {
                  (A = r[o].listener), (n = o);
                  break;
                }
              if (n < 0) return this;
              0 === n
                ? r.shift()
                : (function (e, t) {
                    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                    e.pop();
                  })(r, n),
                1 === r.length && (i[e] = r[0]),
                void 0 !== i.removeListener &&
                  this.emit("removeListener", e, A || t);
            }
            return this;
          }),
          (o.prototype.off = o.prototype.removeListener),
          (o.prototype.removeAllListeners = function (e) {
            var t, r, i;
            if (void 0 === (r = this._events)) return this;
            if (void 0 === r.removeListener)
              return (
                0 === arguments.length
                  ? ((this._events = Object.create(null)),
                    (this._eventsCount = 0))
                  : void 0 !== r[e] &&
                    (0 == --this._eventsCount
                      ? (this._events = Object.create(null))
                      : delete r[e]),
                this
              );
            if (0 === arguments.length) {
              var n,
                o = Object.keys(r);
              for (i = 0; i < o.length; ++i)
                "removeListener" !== (n = o[i]) && this.removeAllListeners(n);
              return (
                this.removeAllListeners("removeListener"),
                (this._events = Object.create(null)),
                (this._eventsCount = 0),
                this
              );
            }
            if ("function" == typeof (t = r[e])) this.removeListener(e, t);
            else if (void 0 !== t)
              for (i = t.length - 1; i >= 0; i--) this.removeListener(e, t[i]);
            return this;
          }),
          (o.prototype.listeners = function (e) {
            return u(this, e, !0);
          }),
          (o.prototype.rawListeners = function (e) {
            return u(this, e, !1);
          }),
          (o.listenerCount = function (e, t) {
            return "function" == typeof e.listenerCount
              ? e.listenerCount(t)
              : h.call(e, t);
          }),
          (o.prototype.listenerCount = h),
          (o.prototype.eventNames = function () {
            return this._eventsCount > 0 ? t(this._events) : [];
          });
      },
      46388: (e) => {
        var t = Object.prototype.hasOwnProperty,
          r = Object.prototype.toString;
        e.exports = function (e, i, n) {
          if ("[object Function]" !== r.call(i))
            throw new TypeError("iterator must be a function");
          var o = e.length;
          if (o === +o) for (var A = 0; A < o; A++) i.call(n, e[A], A, e);
          else for (var a in e) t.call(e, a) && i.call(n, e[a], a, e);
        };
      },
      37795: (e) => {
        "use strict";
        var t = "Function.prototype.bind called on incompatible ",
          r = Array.prototype.slice,
          i = Object.prototype.toString,
          n = "[object Function]";
        e.exports = function (e) {
          var o = this;
          if ("function" != typeof o || i.call(o) !== n)
            throw new TypeError(t + o);
          for (
            var A,
              a = r.call(arguments, 1),
              s = function () {
                if (this instanceof A) {
                  var t = o.apply(this, a.concat(r.call(arguments)));
                  return Object(t) === t ? t : this;
                }
                return o.apply(e, a.concat(r.call(arguments)));
              },
              c = Math.max(0, o.length - a.length),
              g = [],
              l = 0;
            l < c;
            l++
          )
            g.push("$" + l);
          if (
            ((A = Function(
              "binder",
              "return function (" +
                g.join(",") +
                "){ return binder.apply(this,arguments); }"
            )(s)),
            o.prototype)
          ) {
            var u = function () {};
            (u.prototype = o.prototype),
              (A.prototype = new u()),
              (u.prototype = null);
          }
          return A;
        };
      },
      4090: (e, t, r) => {
        "use strict";
        var i = r(37795);
        e.exports = Function.prototype.bind || i;
      },
      67286: (e, t, r) => {
        "use strict";
        var i,
          n = SyntaxError,
          o = Function,
          A = TypeError,
          a = function (e) {
            try {
              return o('"use strict"; return (' + e + ").constructor;")();
            } catch (e) {}
          },
          s = Object.getOwnPropertyDescriptor;
        if (s)
          try {
            s({}, "");
          } catch (e) {
            s = null;
          }
        var c = function () {
            throw new A();
          },
          g = s
            ? (function () {
                try {
                  return c;
                } catch (e) {
                  try {
                    return s(arguments, "callee").get;
                  } catch (e) {
                    return c;
                  }
                }
              })()
            : c,
          l = r(32636)(),
          u =
            Object.getPrototypeOf ||
            function (e) {
              return e.__proto__;
            },
          h = {},
          I = "undefined" == typeof Uint8Array ? i : u(Uint8Array),
          p = {
            "%AggregateError%":
              "undefined" == typeof AggregateError ? i : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%":
              "undefined" == typeof ArrayBuffer ? i : ArrayBuffer,
            "%ArrayIteratorPrototype%": l ? u([][Symbol.iterator]()) : i,
            "%AsyncFromSyncIteratorPrototype%": i,
            "%AsyncFunction%": h,
            "%AsyncGenerator%": h,
            "%AsyncGeneratorFunction%": h,
            "%AsyncIteratorPrototype%": h,
            "%Atomics%": "undefined" == typeof Atomics ? i : Atomics,
            "%BigInt%": "undefined" == typeof BigInt ? i : BigInt,
            "%Boolean%": Boolean,
            "%DataView%": "undefined" == typeof DataView ? i : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": Error,
            "%eval%": eval,
            "%EvalError%": EvalError,
            "%Float32Array%":
              "undefined" == typeof Float32Array ? i : Float32Array,
            "%Float64Array%":
              "undefined" == typeof Float64Array ? i : Float64Array,
            "%FinalizationRegistry%":
              "undefined" == typeof FinalizationRegistry
                ? i
                : FinalizationRegistry,
            "%Function%": o,
            "%GeneratorFunction%": h,
            "%Int8Array%": "undefined" == typeof Int8Array ? i : Int8Array,
            "%Int16Array%": "undefined" == typeof Int16Array ? i : Int16Array,
            "%Int32Array%": "undefined" == typeof Int32Array ? i : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": l ? u(u([][Symbol.iterator]())) : i,
            "%JSON%": "object" == typeof JSON ? JSON : i,
            "%Map%": "undefined" == typeof Map ? i : Map,
            "%MapIteratorPrototype%":
              "undefined" != typeof Map && l
                ? u(new Map()[Symbol.iterator]())
                : i,
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": Object,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": "undefined" == typeof Promise ? i : Promise,
            "%Proxy%": "undefined" == typeof Proxy ? i : Proxy,
            "%RangeError%": RangeError,
            "%ReferenceError%": ReferenceError,
            "%Reflect%": "undefined" == typeof Reflect ? i : Reflect,
            "%RegExp%": RegExp,
            "%Set%": "undefined" == typeof Set ? i : Set,
            "%SetIteratorPrototype%":
              "undefined" != typeof Set && l
                ? u(new Set()[Symbol.iterator]())
                : i,
            "%SharedArrayBuffer%":
              "undefined" == typeof SharedArrayBuffer ? i : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": l ? u(""[Symbol.iterator]()) : i,
            "%Symbol%": l ? Symbol : i,
            "%SyntaxError%": n,
            "%ThrowTypeError%": g,
            "%TypedArray%": I,
            "%TypeError%": A,
            "%Uint8Array%": "undefined" == typeof Uint8Array ? i : Uint8Array,
            "%Uint8ClampedArray%":
              "undefined" == typeof Uint8ClampedArray ? i : Uint8ClampedArray,
            "%Uint16Array%":
              "undefined" == typeof Uint16Array ? i : Uint16Array,
            "%Uint32Array%":
              "undefined" == typeof Uint32Array ? i : Uint32Array,
            "%URIError%": URIError,
            "%WeakMap%": "undefined" == typeof WeakMap ? i : WeakMap,
            "%WeakRef%": "undefined" == typeof WeakRef ? i : WeakRef,
            "%WeakSet%": "undefined" == typeof WeakSet ? i : WeakSet,
          },
          d = function e(t) {
            var r;
            if ("%AsyncFunction%" === t) r = a("async function () {}");
            else if ("%GeneratorFunction%" === t) r = a("function* () {}");
            else if ("%AsyncGeneratorFunction%" === t)
              r = a("async function* () {}");
            else if ("%AsyncGenerator%" === t) {
              var i = e("%AsyncGeneratorFunction%");
              i && (r = i.prototype);
            } else if ("%AsyncIteratorPrototype%" === t) {
              var n = e("%AsyncGenerator%");
              n && (r = u(n.prototype));
            }
            return (p[t] = r), r;
          },
          f = {
            "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
            "%ArrayPrototype%": ["Array", "prototype"],
            "%ArrayProto_entries%": ["Array", "prototype", "entries"],
            "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
            "%ArrayProto_keys%": ["Array", "prototype", "keys"],
            "%ArrayProto_values%": ["Array", "prototype", "values"],
            "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
            "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
            "%AsyncGeneratorPrototype%": [
              "AsyncGeneratorFunction",
              "prototype",
              "prototype",
            ],
            "%BooleanPrototype%": ["Boolean", "prototype"],
            "%DataViewPrototype%": ["DataView", "prototype"],
            "%DatePrototype%": ["Date", "prototype"],
            "%ErrorPrototype%": ["Error", "prototype"],
            "%EvalErrorPrototype%": ["EvalError", "prototype"],
            "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
            "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
            "%FunctionPrototype%": ["Function", "prototype"],
            "%Generator%": ["GeneratorFunction", "prototype"],
            "%GeneratorPrototype%": [
              "GeneratorFunction",
              "prototype",
              "prototype",
            ],
            "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
            "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
            "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
            "%JSONParse%": ["JSON", "parse"],
            "%JSONStringify%": ["JSON", "stringify"],
            "%MapPrototype%": ["Map", "prototype"],
            "%NumberPrototype%": ["Number", "prototype"],
            "%ObjectPrototype%": ["Object", "prototype"],
            "%ObjProto_toString%": ["Object", "prototype", "toString"],
            "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
            "%PromisePrototype%": ["Promise", "prototype"],
            "%PromiseProto_then%": ["Promise", "prototype", "then"],
            "%Promise_all%": ["Promise", "all"],
            "%Promise_reject%": ["Promise", "reject"],
            "%Promise_resolve%": ["Promise", "resolve"],
            "%RangeErrorPrototype%": ["RangeError", "prototype"],
            "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
            "%RegExpPrototype%": ["RegExp", "prototype"],
            "%SetPrototype%": ["Set", "prototype"],
            "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
            "%StringPrototype%": ["String", "prototype"],
            "%SymbolPrototype%": ["Symbol", "prototype"],
            "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
            "%TypedArrayPrototype%": ["TypedArray", "prototype"],
            "%TypeErrorPrototype%": ["TypeError", "prototype"],
            "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
            "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
            "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
            "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
            "%URIErrorPrototype%": ["URIError", "prototype"],
            "%WeakMapPrototype%": ["WeakMap", "prototype"],
            "%WeakSetPrototype%": ["WeakSet", "prototype"],
          },
          C = r(4090),
          B = r(23198),
          E = C.call(Function.call, Array.prototype.concat),
          y = C.call(Function.apply, Array.prototype.splice),
          m = C.call(Function.call, String.prototype.replace),
          Q = C.call(Function.call, String.prototype.slice),
          v =
            /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
          S = /\\(\\)?/g,
          w = function (e) {
            var t = Q(e, 0, 1),
              r = Q(e, -1);
            if ("%" === t && "%" !== r)
              throw new n("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r && "%" !== t)
              throw new n("invalid intrinsic syntax, expected opening `%`");
            var i = [];
            return (
              m(e, v, function (e, t, r, n) {
                i[i.length] = r ? m(n, S, "$1") : t || e;
              }),
              i
            );
          },
          b = function (e, t) {
            var r,
              i = e;
            if ((B(f, i) && (i = "%" + (r = f[i])[0] + "%"), B(p, i))) {
              var o = p[i];
              if ((o === h && (o = d(i)), void 0 === o && !t))
                throw new A(
                  "intrinsic " +
                    e +
                    " exists, but is not available. Please file an issue!"
                );
              return { alias: r, name: i, value: o };
            }
            throw new n("intrinsic " + e + " does not exist!");
          };
        e.exports = function (e, t) {
          if ("string" != typeof e || 0 === e.length)
            throw new A("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && "boolean" != typeof t)
            throw new A('"allowMissing" argument must be a boolean');
          var r = w(e),
            i = r.length > 0 ? r[0] : "",
            o = b("%" + i + "%", t),
            a = o.name,
            c = o.value,
            g = !1,
            l = o.alias;
          l && ((i = l[0]), y(r, E([0, 1], l)));
          for (var u = 1, h = !0; u < r.length; u += 1) {
            var I = r[u],
              d = Q(I, 0, 1),
              f = Q(I, -1);
            if (
              ('"' === d ||
                "'" === d ||
                "`" === d ||
                '"' === f ||
                "'" === f ||
                "`" === f) &&
              d !== f
            )
              throw new n(
                "property names with quotes must have matching quotes"
              );
            if (
              (("constructor" !== I && h) || (g = !0),
              B(p, (a = "%" + (i += "." + I) + "%")))
            )
              c = p[a];
            else if (null != c) {
              if (!(I in c)) {
                if (!t)
                  throw new A(
                    "base intrinsic for " +
                      e +
                      " exists, but the property is not available."
                  );
                return;
              }
              if (s && u + 1 >= r.length) {
                var C = s(c, I);
                c =
                  (h = !!C) && "get" in C && !("originalValue" in C.get)
                    ? C.get
                    : c[I];
              } else (h = B(c, I)), (c = c[I]);
              h && !g && (p[a] = c);
            }
          }
          return c;
        };
      },
      32636: (e, t, r) => {
        "use strict";
        var i = "undefined" != typeof Symbol && Symbol,
          n = r(66679);
        e.exports = function () {
          return (
            "function" == typeof i &&
            "function" == typeof Symbol &&
            "symbol" == typeof i("foo") &&
            "symbol" == typeof Symbol("bar") &&
            n()
          );
        };
      },
      66679: (e) => {
        "use strict";
        e.exports = function () {
          if (
            "function" != typeof Symbol ||
            "function" != typeof Object.getOwnPropertySymbols
          )
            return !1;
          if ("symbol" == typeof Symbol.iterator) return !0;
          var e = {},
            t = Symbol("test"),
            r = Object(t);
          if ("string" == typeof t) return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(t))
            return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(r))
            return !1;
          for (t in ((e[t] = 42), e)) return !1;
          if ("function" == typeof Object.keys && 0 !== Object.keys(e).length)
            return !1;
          if (
            "function" == typeof Object.getOwnPropertyNames &&
            0 !== Object.getOwnPropertyNames(e).length
          )
            return !1;
          var i = Object.getOwnPropertySymbols(e);
          if (1 !== i.length || i[0] !== t) return !1;
          if (!Object.prototype.propertyIsEnumerable.call(e, t)) return !1;
          if ("function" == typeof Object.getOwnPropertyDescriptor) {
            var n = Object.getOwnPropertyDescriptor(e, t);
            if (42 !== n.value || !0 !== n.enumerable) return !1;
          }
          return !0;
        };
      },
      67226: (e, t, r) => {
        "use strict";
        var i = r(66679);
        e.exports = function () {
          return i() && !!Symbol.toStringTag;
        };
      },
      23198: (e, t, r) => {
        "use strict";
        var i = r(4090);
        e.exports = i.call(Function.call, Object.prototype.hasOwnProperty);
      },
      84485: (e, t, r) => {
        "use strict";
        var i = r(77834).Buffer,
          n = r(67525).Transform;
        function o(e) {
          n.call(this),
            (this._block = i.allocUnsafe(e)),
            (this._blockSize = e),
            (this._blockOffset = 0),
            (this._length = [0, 0, 0, 0]),
            (this._finalized = !1);
        }
        r(91285)(o, n),
          (o.prototype._transform = function (e, t, r) {
            var i = null;
            try {
              this.update(e, t);
            } catch (e) {
              i = e;
            }
            r(i);
          }),
          (o.prototype._flush = function (e) {
            var t = null;
            try {
              this.push(this.digest());
            } catch (e) {
              t = e;
            }
            e(t);
          }),
          (o.prototype.update = function (e, t) {
            if (
              ((function (e, t) {
                if (!i.isBuffer(e) && "string" != typeof e)
                  throw new TypeError("Data must be a string or a buffer");
              })(e),
              this._finalized)
            )
              throw new Error("Digest already called");
            i.isBuffer(e) || (e = i.from(e, t));
            for (
              var r = this._block, n = 0;
              this._blockOffset + e.length - n >= this._blockSize;

            ) {
              for (var o = this._blockOffset; o < this._blockSize; )
                r[o++] = e[n++];
              this._update(), (this._blockOffset = 0);
            }
            for (; n < e.length; ) r[this._blockOffset++] = e[n++];
            for (var A = 0, a = 8 * e.length; a > 0; ++A)
              (this._length[A] += a),
                (a = (this._length[A] / 4294967296) | 0) > 0 &&
                  (this._length[A] -= 4294967296 * a);
            return this;
          }),
          (o.prototype._update = function () {
            throw new Error("_update is not implemented");
          }),
          (o.prototype.digest = function (e) {
            if (this._finalized) throw new Error("Digest already called");
            this._finalized = !0;
            var t = this._digest();
            void 0 !== e && (t = t.toString(e)),
              this._block.fill(0),
              (this._blockOffset = 0);
            for (var r = 0; r < 4; ++r) this._length[r] = 0;
            return t;
          }),
          (o.prototype._digest = function () {
            throw new Error("_digest is not implemented");
          }),
          (e.exports = o);
      },
      34485: (e, t, r) => {
        var i = t;
        (i.utils = r(50212)),
          (i.common = r(74495)),
          (i.sha = r(45530)),
          (i.ripemd = r(91396)),
          (i.hmac = r(15047)),
          (i.sha1 = i.sha.sha1),
          (i.sha256 = i.sha.sha256),
          (i.sha224 = i.sha.sha224),
          (i.sha384 = i.sha.sha384),
          (i.sha512 = i.sha.sha512),
          (i.ripemd160 = i.ripemd.ripemd160);
      },
      74495: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(79561);
        function o() {
          (this.pending = null),
            (this.pendingTotal = 0),
            (this.blockSize = this.constructor.blockSize),
            (this.outSize = this.constructor.outSize),
            (this.hmacStrength = this.constructor.hmacStrength),
            (this.padLength = this.constructor.padLength / 8),
            (this.endian = "big"),
            (this._delta8 = this.blockSize / 8),
            (this._delta32 = this.blockSize / 32);
        }
        (t.BlockHash = o),
          (o.prototype.update = function (e, t) {
            if (
              ((e = i.toArray(e, t)),
              this.pending
                ? (this.pending = this.pending.concat(e))
                : (this.pending = e),
              (this.pendingTotal += e.length),
              this.pending.length >= this._delta8)
            ) {
              var r = (e = this.pending).length % this._delta8;
              (this.pending = e.slice(e.length - r, e.length)),
                0 === this.pending.length && (this.pending = null),
                (e = i.join32(e, 0, e.length - r, this.endian));
              for (var n = 0; n < e.length; n += this._delta32)
                this._update(e, n, n + this._delta32);
            }
            return this;
          }),
          (o.prototype.digest = function (e) {
            return (
              this.update(this._pad()),
              n(null === this.pending),
              this._digest(e)
            );
          }),
          (o.prototype._pad = function () {
            var e = this.pendingTotal,
              t = this._delta8,
              r = t - ((e + this.padLength) % t),
              i = new Array(r + this.padLength);
            i[0] = 128;
            for (var n = 1; n < r; n++) i[n] = 0;
            if (((e <<= 3), "big" === this.endian)) {
              for (var o = 8; o < this.padLength; o++) i[n++] = 0;
              (i[n++] = 0),
                (i[n++] = 0),
                (i[n++] = 0),
                (i[n++] = 0),
                (i[n++] = (e >>> 24) & 255),
                (i[n++] = (e >>> 16) & 255),
                (i[n++] = (e >>> 8) & 255),
                (i[n++] = 255 & e);
            } else
              for (
                i[n++] = 255 & e,
                  i[n++] = (e >>> 8) & 255,
                  i[n++] = (e >>> 16) & 255,
                  i[n++] = (e >>> 24) & 255,
                  i[n++] = 0,
                  i[n++] = 0,
                  i[n++] = 0,
                  i[n++] = 0,
                  o = 8;
                o < this.padLength;
                o++
              )
                i[n++] = 0;
            return i;
          });
      },
      15047: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(79561);
        function o(e, t, r) {
          if (!(this instanceof o)) return new o(e, t, r);
          (this.Hash = e),
            (this.blockSize = e.blockSize / 8),
            (this.outSize = e.outSize / 8),
            (this.inner = null),
            (this.outer = null),
            this._init(i.toArray(t, r));
        }
        (e.exports = o),
          (o.prototype._init = function (e) {
            e.length > this.blockSize &&
              (e = new this.Hash().update(e).digest()),
              n(e.length <= this.blockSize);
            for (var t = e.length; t < this.blockSize; t++) e.push(0);
            for (t = 0; t < e.length; t++) e[t] ^= 54;
            for (
              this.inner = new this.Hash().update(e), t = 0;
              t < e.length;
              t++
            )
              e[t] ^= 106;
            this.outer = new this.Hash().update(e);
          }),
          (o.prototype.update = function (e, t) {
            return this.inner.update(e, t), this;
          }),
          (o.prototype.digest = function (e) {
            return this.outer.update(this.inner.digest()), this.outer.digest(e);
          });
      },
      91396: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(74495),
          o = i.rotl32,
          A = i.sum32,
          a = i.sum32_3,
          s = i.sum32_4,
          c = n.BlockHash;
        function g() {
          if (!(this instanceof g)) return new g();
          c.call(this),
            (this.h = [
              1732584193, 4023233417, 2562383102, 271733878, 3285377520,
            ]),
            (this.endian = "little");
        }
        function l(e, t, r, i) {
          return e <= 15
            ? t ^ r ^ i
            : e <= 31
            ? (t & r) | (~t & i)
            : e <= 47
            ? (t | ~r) ^ i
            : e <= 63
            ? (t & i) | (r & ~i)
            : t ^ (r | ~i);
        }
        function u(e) {
          return e <= 15
            ? 0
            : e <= 31
            ? 1518500249
            : e <= 47
            ? 1859775393
            : e <= 63
            ? 2400959708
            : 2840853838;
        }
        function h(e) {
          return e <= 15
            ? 1352829926
            : e <= 31
            ? 1548603684
            : e <= 47
            ? 1836072691
            : e <= 63
            ? 2053994217
            : 0;
        }
        i.inherits(g, c),
          (t.ripemd160 = g),
          (g.blockSize = 512),
          (g.outSize = 160),
          (g.hmacStrength = 192),
          (g.padLength = 64),
          (g.prototype._update = function (e, t) {
            for (
              var r = this.h[0],
                i = this.h[1],
                n = this.h[2],
                c = this.h[3],
                g = this.h[4],
                C = r,
                B = i,
                E = n,
                y = c,
                m = g,
                Q = 0;
              Q < 80;
              Q++
            ) {
              var v = A(o(s(r, l(Q, i, n, c), e[I[Q] + t], u(Q)), d[Q]), g);
              (r = g),
                (g = c),
                (c = o(n, 10)),
                (n = i),
                (i = v),
                (v = A(
                  o(s(C, l(79 - Q, B, E, y), e[p[Q] + t], h(Q)), f[Q]),
                  m
                )),
                (C = m),
                (m = y),
                (y = o(E, 10)),
                (E = B),
                (B = v);
            }
            (v = a(this.h[1], n, y)),
              (this.h[1] = a(this.h[2], c, m)),
              (this.h[2] = a(this.h[3], g, C)),
              (this.h[3] = a(this.h[4], r, B)),
              (this.h[4] = a(this.h[0], i, E)),
              (this.h[0] = v);
          }),
          (g.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h, "little")
              : i.split32(this.h, "little");
          });
        var I = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1,
            10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1,
            2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15,
            14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
          ],
          p = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7,
            0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9,
            11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13,
            9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
          ],
          d = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13,
            11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13,
            15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14,
            5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8,
            5, 6,
          ],
          f = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15,
            7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6,
            14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9,
            12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13,
            11, 11,
          ];
      },
      45530: (e, t, r) => {
        "use strict";
        (t.sha1 = r(35079)),
          (t.sha224 = r(63823)),
          (t.sha256 = r(68032)),
          (t.sha384 = r(25328)),
          (t.sha512 = r(20168));
      },
      35079: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(74495),
          o = r(40713),
          A = i.rotl32,
          a = i.sum32,
          s = i.sum32_5,
          c = o.ft_1,
          g = n.BlockHash,
          l = [1518500249, 1859775393, 2400959708, 3395469782];
        function u() {
          if (!(this instanceof u)) return new u();
          g.call(this),
            (this.h = [
              1732584193, 4023233417, 2562383102, 271733878, 3285377520,
            ]),
            (this.W = new Array(80));
        }
        i.inherits(u, g),
          (e.exports = u),
          (u.blockSize = 512),
          (u.outSize = 160),
          (u.hmacStrength = 80),
          (u.padLength = 64),
          (u.prototype._update = function (e, t) {
            for (var r = this.W, i = 0; i < 16; i++) r[i] = e[t + i];
            for (; i < r.length; i++)
              r[i] = A(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);
            var n = this.h[0],
              o = this.h[1],
              g = this.h[2],
              u = this.h[3],
              h = this.h[4];
            for (i = 0; i < r.length; i++) {
              var I = ~~(i / 20),
                p = s(A(n, 5), c(I, o, g, u), h, r[i], l[I]);
              (h = u), (u = g), (g = A(o, 30)), (o = n), (n = p);
            }
            (this.h[0] = a(this.h[0], n)),
              (this.h[1] = a(this.h[1], o)),
              (this.h[2] = a(this.h[2], g)),
              (this.h[3] = a(this.h[3], u)),
              (this.h[4] = a(this.h[4], h));
          }),
          (u.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h, "big")
              : i.split32(this.h, "big");
          });
      },
      63823: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(68032);
        function o() {
          if (!(this instanceof o)) return new o();
          n.call(this),
            (this.h = [
              3238371032, 914150663, 812702999, 4144912697, 4290775857,
              1750603025, 1694076839, 3204075428,
            ]);
        }
        i.inherits(o, n),
          (e.exports = o),
          (o.blockSize = 512),
          (o.outSize = 224),
          (o.hmacStrength = 192),
          (o.padLength = 64),
          (o.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h.slice(0, 7), "big")
              : i.split32(this.h.slice(0, 7), "big");
          });
      },
      68032: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(74495),
          o = r(40713),
          A = r(79561),
          a = i.sum32,
          s = i.sum32_4,
          c = i.sum32_5,
          g = o.ch32,
          l = o.maj32,
          u = o.s0_256,
          h = o.s1_256,
          I = o.g0_256,
          p = o.g1_256,
          d = n.BlockHash,
          f = [
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ];
        function C() {
          if (!(this instanceof C)) return new C();
          d.call(this),
            (this.h = [
              1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
              2600822924, 528734635, 1541459225,
            ]),
            (this.k = f),
            (this.W = new Array(64));
        }
        i.inherits(C, d),
          (e.exports = C),
          (C.blockSize = 512),
          (C.outSize = 256),
          (C.hmacStrength = 192),
          (C.padLength = 64),
          (C.prototype._update = function (e, t) {
            for (var r = this.W, i = 0; i < 16; i++) r[i] = e[t + i];
            for (; i < r.length; i++)
              r[i] = s(p(r[i - 2]), r[i - 7], I(r[i - 15]), r[i - 16]);
            var n = this.h[0],
              o = this.h[1],
              d = this.h[2],
              f = this.h[3],
              C = this.h[4],
              B = this.h[5],
              E = this.h[6],
              y = this.h[7];
            for (A(this.k.length === r.length), i = 0; i < r.length; i++) {
              var m = c(y, h(C), g(C, B, E), this.k[i], r[i]),
                Q = a(u(n), l(n, o, d));
              (y = E),
                (E = B),
                (B = C),
                (C = a(f, m)),
                (f = d),
                (d = o),
                (o = n),
                (n = a(m, Q));
            }
            (this.h[0] = a(this.h[0], n)),
              (this.h[1] = a(this.h[1], o)),
              (this.h[2] = a(this.h[2], d)),
              (this.h[3] = a(this.h[3], f)),
              (this.h[4] = a(this.h[4], C)),
              (this.h[5] = a(this.h[5], B)),
              (this.h[6] = a(this.h[6], E)),
              (this.h[7] = a(this.h[7], y));
          }),
          (C.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h, "big")
              : i.split32(this.h, "big");
          });
      },
      25328: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(20168);
        function o() {
          if (!(this instanceof o)) return new o();
          n.call(this),
            (this.h = [
              3418070365, 3238371032, 1654270250, 914150663, 2438529370,
              812702999, 355462360, 4144912697, 1731405415, 4290775857,
              2394180231, 1750603025, 3675008525, 1694076839, 1203062813,
              3204075428,
            ]);
        }
        i.inherits(o, n),
          (e.exports = o),
          (o.blockSize = 1024),
          (o.outSize = 384),
          (o.hmacStrength = 192),
          (o.padLength = 128),
          (o.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h.slice(0, 12), "big")
              : i.split32(this.h.slice(0, 12), "big");
          });
      },
      20168: (e, t, r) => {
        "use strict";
        var i = r(50212),
          n = r(74495),
          o = r(79561),
          A = i.rotr64_hi,
          a = i.rotr64_lo,
          s = i.shr64_hi,
          c = i.shr64_lo,
          g = i.sum64,
          l = i.sum64_hi,
          u = i.sum64_lo,
          h = i.sum64_4_hi,
          I = i.sum64_4_lo,
          p = i.sum64_5_hi,
          d = i.sum64_5_lo,
          f = n.BlockHash,
          C = [
            1116352408, 3609767458, 1899447441, 602891725, 3049323471,
            3964484399, 3921009573, 2173295548, 961987163, 4081628472,
            1508970993, 3053834265, 2453635748, 2937671579, 2870763221,
            3664609560, 3624381080, 2734883394, 310598401, 1164996542,
            607225278, 1323610764, 1426881987, 3590304994, 1925078388,
            4068182383, 2162078206, 991336113, 2614888103, 633803317,
            3248222580, 3479774868, 3835390401, 2666613458, 4022224774,
            944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983,
            1495990901, 1249150122, 1856431235, 1555081692, 3175218132,
            1996064986, 2198950837, 2554220882, 3999719339, 2821834349,
            766784016, 2952996808, 2566594879, 3210313671, 3203337956,
            3336571891, 1034457026, 3584528711, 2466948901, 113926993,
            3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912,
            1546045734, 1294757372, 1522805485, 1396182291, 2643833823,
            1695183700, 2343527390, 1986661051, 1014477480, 2177026350,
            1206759142, 2456956037, 344077627, 2730485921, 1290863460,
            2820302411, 3158454273, 3259730800, 3505952657, 3345764771,
            106217008, 3516065817, 3606008344, 3600352804, 1432725776,
            4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752,
            506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280,
            958139571, 3318307427, 1322822218, 3812723403, 1537002063,
            2003034995, 1747873779, 3602036899, 1955562222, 1575990012,
            2024104815, 1125592928, 2227730452, 2716904306, 2361852424,
            442776044, 2428436474, 593698344, 2756734187, 3733110249,
            3204031479, 2999351573, 3329325298, 3815920427, 3391569614,
            3928383900, 3515267271, 566280711, 3940187606, 3454069534,
            4118630271, 4000239992, 116418474, 1914138554, 174292421,
            2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733,
            587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580,
            2618297676, 1288033470, 3409855158, 1501505948, 4234509866,
            1607167915, 987167468, 1816402316, 1246189591,
          ];
        function B() {
          if (!(this instanceof B)) return new B();
          f.call(this),
            (this.h = [
              1779033703, 4089235720, 3144134277, 2227873595, 1013904242,
              4271175723, 2773480762, 1595750129, 1359893119, 2917565137,
              2600822924, 725511199, 528734635, 4215389547, 1541459225,
              327033209,
            ]),
            (this.k = C),
            (this.W = new Array(160));
        }
        function E(e, t, r, i, n) {
          var o = (e & r) ^ (~e & n);
          return o < 0 && (o += 4294967296), o;
        }
        function y(e, t, r, i, n, o) {
          var A = (t & i) ^ (~t & o);
          return A < 0 && (A += 4294967296), A;
        }
        function m(e, t, r, i, n) {
          var o = (e & r) ^ (e & n) ^ (r & n);
          return o < 0 && (o += 4294967296), o;
        }
        function Q(e, t, r, i, n, o) {
          var A = (t & i) ^ (t & o) ^ (i & o);
          return A < 0 && (A += 4294967296), A;
        }
        function v(e, t) {
          var r = A(e, t, 28) ^ A(t, e, 2) ^ A(t, e, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function S(e, t) {
          var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function w(e, t) {
          var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
          return r < 0 && (r += 4294967296), r;
        }
        function b(e, t) {
          var r = A(e, t, 1) ^ A(e, t, 8) ^ s(e, t, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function k(e, t) {
          var r = a(e, t, 1) ^ a(e, t, 8) ^ c(e, t, 7);
          return r < 0 && (r += 4294967296), r;
        }
        function N(e, t) {
          var r = a(e, t, 19) ^ a(t, e, 29) ^ c(e, t, 6);
          return r < 0 && (r += 4294967296), r;
        }
        i.inherits(B, f),
          (e.exports = B),
          (B.blockSize = 1024),
          (B.outSize = 512),
          (B.hmacStrength = 192),
          (B.padLength = 128),
          (B.prototype._prepareBlock = function (e, t) {
            for (var r = this.W, i = 0; i < 32; i++) r[i] = e[t + i];
            for (; i < r.length; i += 2) {
              var n =
                  ((d = r[i - 4]),
                  (f = r[i - 3]),
                  (C = void 0),
                  (C = A(d, f, 19) ^ A(f, d, 29) ^ s(d, f, 6)) < 0 &&
                    (C += 4294967296),
                  C),
                o = N(r[i - 4], r[i - 3]),
                a = r[i - 14],
                c = r[i - 13],
                g = b(r[i - 30], r[i - 29]),
                l = k(r[i - 30], r[i - 29]),
                u = r[i - 32],
                p = r[i - 31];
              (r[i] = h(n, o, a, c, g, l, u, p)),
                (r[i + 1] = I(n, o, a, c, g, l, u, p));
            }
            var d, f, C;
          }),
          (B.prototype._update = function (e, t) {
            this._prepareBlock(e, t);
            var r,
              i,
              n,
              a = this.W,
              s = this.h[0],
              c = this.h[1],
              h = this.h[2],
              I = this.h[3],
              f = this.h[4],
              C = this.h[5],
              B = this.h[6],
              b = this.h[7],
              k = this.h[8],
              N = this.h[9],
              _ = this.h[10],
              D = this.h[11],
              O = this.h[12],
              T = this.h[13],
              P = this.h[14],
              x = this.h[15];
            o(this.k.length === a.length);
            for (var R = 0; R < a.length; R += 2) {
              var U = P,
                F = x,
                H =
                  ((n = void 0),
                  (n = A((r = k), (i = N), 14) ^ A(r, i, 18) ^ A(i, r, 9)) <
                    0 && (n += 4294967296),
                  n),
                M = w(k, N),
                G = E(k, 0, _, 0, O),
                L = y(0, N, 0, D, 0, T),
                K = this.k[R],
                Y = this.k[R + 1],
                q = a[R],
                J = a[R + 1],
                j = p(U, F, H, M, G, L, K, Y, q, J),
                z = d(U, F, H, M, G, L, K, Y, q, J);
              (U = v(s, c)),
                (F = S(s, c)),
                (H = m(s, 0, h, 0, f)),
                (M = Q(0, c, 0, I, 0, C));
              var V = l(U, F, H, M),
                W = u(U, F, H, M);
              (P = O),
                (x = T),
                (O = _),
                (T = D),
                (_ = k),
                (D = N),
                (k = l(B, b, j, z)),
                (N = u(b, b, j, z)),
                (B = f),
                (b = C),
                (f = h),
                (C = I),
                (h = s),
                (I = c),
                (s = l(j, z, V, W)),
                (c = u(j, z, V, W));
            }
            g(this.h, 0, s, c),
              g(this.h, 2, h, I),
              g(this.h, 4, f, C),
              g(this.h, 6, B, b),
              g(this.h, 8, k, N),
              g(this.h, 10, _, D),
              g(this.h, 12, O, T),
              g(this.h, 14, P, x);
          }),
          (B.prototype._digest = function (e) {
            return "hex" === e
              ? i.toHex32(this.h, "big")
              : i.split32(this.h, "big");
          });
      },
      40713: (e, t, r) => {
        "use strict";
        var i = r(50212).rotr32;
        function n(e, t, r) {
          return (e & t) ^ (~e & r);
        }
        function o(e, t, r) {
          return (e & t) ^ (e & r) ^ (t & r);
        }
        function A(e, t, r) {
          return e ^ t ^ r;
        }
        (t.ft_1 = function (e, t, r, i) {
          return 0 === e
            ? n(t, r, i)
            : 1 === e || 3 === e
            ? A(t, r, i)
            : 2 === e
            ? o(t, r, i)
            : void 0;
        }),
          (t.ch32 = n),
          (t.maj32 = o),
          (t.p32 = A),
          (t.s0_256 = function (e) {
            return i(e, 2) ^ i(e, 13) ^ i(e, 22);
          }),
          (t.s1_256 = function (e) {
            return i(e, 6) ^ i(e, 11) ^ i(e, 25);
          }),
          (t.g0_256 = function (e) {
            return i(e, 7) ^ i(e, 18) ^ (e >>> 3);
          }),
          (t.g1_256 = function (e) {
            return i(e, 17) ^ i(e, 19) ^ (e >>> 10);
          });
      },
      50212: (e, t, r) => {
        "use strict";
        var i = r(79561),
          n = r(91285);
        function o(e, t) {
          return (
            55296 == (64512 & e.charCodeAt(t)) &&
            !(t < 0 || t + 1 >= e.length) &&
            56320 == (64512 & e.charCodeAt(t + 1))
          );
        }
        function A(e) {
          return (
            ((e >>> 24) |
              ((e >>> 8) & 65280) |
              ((e << 8) & 16711680) |
              ((255 & e) << 24)) >>>
            0
          );
        }
        function a(e) {
          return 1 === e.length ? "0" + e : e;
        }
        function s(e) {
          return 7 === e.length
            ? "0" + e
            : 6 === e.length
            ? "00" + e
            : 5 === e.length
            ? "000" + e
            : 4 === e.length
            ? "0000" + e
            : 3 === e.length
            ? "00000" + e
            : 2 === e.length
            ? "000000" + e
            : 1 === e.length
            ? "0000000" + e
            : e;
        }
        (t.inherits = n),
          (t.toArray = function (e, t) {
            if (Array.isArray(e)) return e.slice();
            if (!e) return [];
            var r = [];
            if ("string" == typeof e)
              if (t) {
                if ("hex" === t)
                  for (
                    (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 &&
                      (e = "0" + e),
                      n = 0;
                    n < e.length;
                    n += 2
                  )
                    r.push(parseInt(e[n] + e[n + 1], 16));
              } else
                for (var i = 0, n = 0; n < e.length; n++) {
                  var A = e.charCodeAt(n);
                  A < 128
                    ? (r[i++] = A)
                    : A < 2048
                    ? ((r[i++] = (A >> 6) | 192), (r[i++] = (63 & A) | 128))
                    : o(e, n)
                    ? ((A =
                        65536 +
                        ((1023 & A) << 10) +
                        (1023 & e.charCodeAt(++n))),
                      (r[i++] = (A >> 18) | 240),
                      (r[i++] = ((A >> 12) & 63) | 128),
                      (r[i++] = ((A >> 6) & 63) | 128),
                      (r[i++] = (63 & A) | 128))
                    : ((r[i++] = (A >> 12) | 224),
                      (r[i++] = ((A >> 6) & 63) | 128),
                      (r[i++] = (63 & A) | 128));
                }
            else for (n = 0; n < e.length; n++) r[n] = 0 | e[n];
            return r;
          }),
          (t.toHex = function (e) {
            for (var t = "", r = 0; r < e.length; r++)
              t += a(e[r].toString(16));
            return t;
          }),
          (t.htonl = A),
          (t.toHex32 = function (e, t) {
            for (var r = "", i = 0; i < e.length; i++) {
              var n = e[i];
              "little" === t && (n = A(n)), (r += s(n.toString(16)));
            }
            return r;
          }),
          (t.zero2 = a),
          (t.zero8 = s),
          (t.join32 = function (e, t, r, n) {
            var o = r - t;
            i(o % 4 == 0);
            for (
              var A = new Array(o / 4), a = 0, s = t;
              a < A.length;
              a++, s += 4
            ) {
              var c;
              (c =
                "big" === n
                  ? (e[s] << 24) | (e[s + 1] << 16) | (e[s + 2] << 8) | e[s + 3]
                  : (e[s + 3] << 24) |
                    (e[s + 2] << 16) |
                    (e[s + 1] << 8) |
                    e[s]),
                (A[a] = c >>> 0);
            }
            return A;
          }),
          (t.split32 = function (e, t) {
            for (
              var r = new Array(4 * e.length), i = 0, n = 0;
              i < e.length;
              i++, n += 4
            ) {
              var o = e[i];
              "big" === t
                ? ((r[n] = o >>> 24),
                  (r[n + 1] = (o >>> 16) & 255),
                  (r[n + 2] = (o >>> 8) & 255),
                  (r[n + 3] = 255 & o))
                : ((r[n + 3] = o >>> 24),
                  (r[n + 2] = (o >>> 16) & 255),
                  (r[n + 1] = (o >>> 8) & 255),
                  (r[n] = 255 & o));
            }
            return r;
          }),
          (t.rotr32 = function (e, t) {
            return (e >>> t) | (e << (32 - t));
          }),
          (t.rotl32 = function (e, t) {
            return (e << t) | (e >>> (32 - t));
          }),
          (t.sum32 = function (e, t) {
            return (e + t) >>> 0;
          }),
          (t.sum32_3 = function (e, t, r) {
            return (e + t + r) >>> 0;
          }),
          (t.sum32_4 = function (e, t, r, i) {
            return (e + t + r + i) >>> 0;
          }),
          (t.sum32_5 = function (e, t, r, i, n) {
            return (e + t + r + i + n) >>> 0;
          }),
          (t.sum64 = function (e, t, r, i) {
            var n = e[t],
              o = (i + e[t + 1]) >>> 0,
              A = (o < i ? 1 : 0) + r + n;
            (e[t] = A >>> 0), (e[t + 1] = o);
          }),
          (t.sum64_hi = function (e, t, r, i) {
            return (((t + i) >>> 0 < t ? 1 : 0) + e + r) >>> 0;
          }),
          (t.sum64_lo = function (e, t, r, i) {
            return (t + i) >>> 0;
          }),
          (t.sum64_4_hi = function (e, t, r, i, n, o, A, a) {
            var s = 0,
              c = t;
            return (
              (s += (c = (c + i) >>> 0) < t ? 1 : 0),
              (s += (c = (c + o) >>> 0) < o ? 1 : 0),
              (e + r + n + A + (s += (c = (c + a) >>> 0) < a ? 1 : 0)) >>> 0
            );
          }),
          (t.sum64_4_lo = function (e, t, r, i, n, o, A, a) {
            return (t + i + o + a) >>> 0;
          }),
          (t.sum64_5_hi = function (e, t, r, i, n, o, A, a, s, c) {
            var g = 0,
              l = t;
            return (
              (g += (l = (l + i) >>> 0) < t ? 1 : 0),
              (g += (l = (l + o) >>> 0) < o ? 1 : 0),
              (g += (l = (l + a) >>> 0) < a ? 1 : 0),
              (e + r + n + A + s + (g += (l = (l + c) >>> 0) < c ? 1 : 0)) >>> 0
            );
          }),
          (t.sum64_5_lo = function (e, t, r, i, n, o, A, a, s, c) {
            return (t + i + o + a + c) >>> 0;
          }),
          (t.rotr64_hi = function (e, t, r) {
            return ((t << (32 - r)) | (e >>> r)) >>> 0;
          }),
          (t.rotr64_lo = function (e, t, r) {
            return ((e << (32 - r)) | (t >>> r)) >>> 0;
          }),
          (t.shr64_hi = function (e, t, r) {
            return e >>> r;
          }),
          (t.shr64_lo = function (e, t, r) {
            return ((e << (32 - r)) | (t >>> r)) >>> 0;
          });
      },
      62333: (e, t) => {
        (t.read = function (e, t, r, i, n) {
          var o,
            A,
            a = 8 * n - i - 1,
            s = (1 << a) - 1,
            c = s >> 1,
            g = -7,
            l = r ? n - 1 : 0,
            u = r ? -1 : 1,
            h = e[t + l];
          for (
            l += u, o = h & ((1 << -g) - 1), h >>= -g, g += a;
            g > 0;
            o = 256 * o + e[t + l], l += u, g -= 8
          );
          for (
            A = o & ((1 << -g) - 1), o >>= -g, g += i;
            g > 0;
            A = 256 * A + e[t + l], l += u, g -= 8
          );
          if (0 === o) o = 1 - c;
          else {
            if (o === s) return A ? NaN : (1 / 0) * (h ? -1 : 1);
            (A += Math.pow(2, i)), (o -= c);
          }
          return (h ? -1 : 1) * A * Math.pow(2, o - i);
        }),
          (t.write = function (e, t, r, i, n, o) {
            var A,
              a,
              s,
              c = 8 * o - n - 1,
              g = (1 << c) - 1,
              l = g >> 1,
              u = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
              h = i ? 0 : o - 1,
              I = i ? 1 : -1,
              p = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              t = Math.abs(t),
                isNaN(t) || t === 1 / 0
                  ? ((a = isNaN(t) ? 1 : 0), (A = g))
                  : ((A = Math.floor(Math.log(t) / Math.LN2)),
                    t * (s = Math.pow(2, -A)) < 1 && (A--, (s *= 2)),
                    (t += A + l >= 1 ? u / s : u * Math.pow(2, 1 - l)) * s >=
                      2 && (A++, (s /= 2)),
                    A + l >= g
                      ? ((a = 0), (A = g))
                      : A + l >= 1
                      ? ((a = (t * s - 1) * Math.pow(2, n)), (A += l))
                      : ((a = t * Math.pow(2, l - 1) * Math.pow(2, n)),
                        (A = 0)));
              n >= 8;
              e[r + h] = 255 & a, h += I, a /= 256, n -= 8
            );
            for (
              A = (A << n) | a, c += n;
              c > 0;
              e[r + h] = 255 & A, h += I, A /= 256, c -= 8
            );
            e[r + h - I] |= 128 * p;
          });
      },
      91285: (e) => {
        "function" == typeof Object.create
          ? (e.exports = function (e, t) {
              t &&
                ((e.super_ = t),
                (e.prototype = Object.create(t.prototype, {
                  constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                })));
            })
          : (e.exports = function (e, t) {
              if (t) {
                e.super_ = t;
                var r = function () {};
                (r.prototype = t.prototype),
                  (e.prototype = new r()),
                  (e.prototype.constructor = e);
              }
            });
      },
      52635: (e, t, r) => {
        "use strict";
        var i = r(67226)(),
          n = r(62680)("Object.prototype.toString"),
          o = function (e) {
            return (
              !(i && e && "object" == typeof e && Symbol.toStringTag in e) &&
              "[object Arguments]" === n(e)
            );
          },
          A = function (e) {
            return (
              !!o(e) ||
              (null !== e &&
                "object" == typeof e &&
                "number" == typeof e.length &&
                e.length >= 0 &&
                "[object Array]" !== n(e) &&
                "[object Function]" === n(e.callee))
            );
          },
          a = (function () {
            return o(arguments);
          })();
        (o.isLegacyArguments = A), (e.exports = a ? o : A);
      },
      43138: (e, t, r) => {
        "use strict";
        var i,
          n = Object.prototype.toString,
          o = Function.prototype.toString,
          A = /^\s*(?:function)?\*/,
          a = r(67226)(),
          s = Object.getPrototypeOf;
        e.exports = function (e) {
          if ("function" != typeof e) return !1;
          if (A.test(o.call(e))) return !0;
          if (!a) return "[object GeneratorFunction]" === n.call(e);
          if (!s) return !1;
          if (void 0 === i) {
            var t = (function () {
              if (!a) return !1;
              try {
                return Function("return function*() {}")();
              } catch (e) {}
            })();
            i = !!t && s(t);
          }
          return s(e) === i;
        };
      },
      37053: (e) => {
        "use strict";
        e.exports = function (e) {
          return e != e;
        };
      },
      74782: (e, t, r) => {
        "use strict";
        var i = r(89429),
          n = r(14926),
          o = r(37053),
          A = r(40755),
          a = r(55346),
          s = i(A(), Number);
        n(s, { getPolyfill: A, implementation: o, shim: a }), (e.exports = s);
      },
      40755: (e, t, r) => {
        "use strict";
        var i = r(37053);
        e.exports = function () {
          return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a")
            ? Number.isNaN
            : i;
        };
      },
      55346: (e, t, r) => {
        "use strict";
        var i = r(14926),
          n = r(40755);
        e.exports = function () {
          var e = n();
          return (
            i(
              Number,
              { isNaN: e },
              {
                isNaN: function () {
                  return Number.isNaN !== e;
                },
              }
            ),
            e
          );
        };
      },
      50198: (e, t, r) => {
        "use strict";
        var i = r(46388),
          n = r(62191),
          o = r(62680),
          A = o("Object.prototype.toString"),
          a = r(67226)(),
          s = "undefined" == typeof globalThis ? r.g : globalThis,
          c = n(),
          g =
            o("Array.prototype.indexOf", !0) ||
            function (e, t) {
              for (var r = 0; r < e.length; r += 1) if (e[r] === t) return r;
              return -1;
            },
          l = o("String.prototype.slice"),
          u = {},
          h = r(29765),
          I = Object.getPrototypeOf;
        a &&
          h &&
          I &&
          i(c, function (e) {
            var t = new s[e]();
            if (Symbol.toStringTag in t) {
              var r = I(t),
                i = h(r, Symbol.toStringTag);
              if (!i) {
                var n = I(r);
                i = h(n, Symbol.toStringTag);
              }
              u[e] = i.get;
            }
          }),
          (e.exports = function (e) {
            if (!e || "object" != typeof e) return !1;
            if (!a || !(Symbol.toStringTag in e)) {
              var t = l(A(e), 8, -1);
              return g(c, t) > -1;
            }
            return (
              !!h &&
              (function (e) {
                var t = !1;
                return (
                  i(u, function (r, i) {
                    if (!t)
                      try {
                        t = r.call(e) === i;
                      } catch (e) {}
                  }),
                  t
                );
              })(e)
            );
          });
      },
      97475: (e, t, r) => {
        var i = null;
        "undefined" != typeof WebSocket
          ? (i = WebSocket)
          : "undefined" != typeof MozWebSocket
          ? (i = MozWebSocket)
          : void 0 !== r.g
          ? (i = r.g.WebSocket || r.g.MozWebSocket)
          : "undefined" != typeof window
          ? (i = window.WebSocket || window.MozWebSocket)
          : "undefined" != typeof self &&
            (i = self.WebSocket || self.MozWebSocket),
          (e.exports = i);
      },
      77105: (e, t, r) => {
        "use strict";
        const i = r(8006),
          n = Symbol("max"),
          o = Symbol("length"),
          A = Symbol("lengthCalculator"),
          a = Symbol("allowStale"),
          s = Symbol("maxAge"),
          c = Symbol("dispose"),
          g = Symbol("noDisposeOnSet"),
          l = Symbol("lruList"),
          u = Symbol("cache"),
          h = Symbol("updateAgeOnGet"),
          I = () => 1,
          p = (e, t, r) => {
            const i = e[u].get(t);
            if (i) {
              const t = i.value;
              if (d(e, t)) {
                if ((C(e, i), !e[a])) return;
              } else
                r && (e[h] && (i.value.now = Date.now()), e[l].unshiftNode(i));
              return t.value;
            }
          },
          d = (e, t) => {
            if (!t || (!t.maxAge && !e[s])) return !1;
            const r = Date.now() - t.now;
            return t.maxAge ? r > t.maxAge : e[s] && r > e[s];
          },
          f = (e) => {
            if (e[o] > e[n])
              for (let t = e[l].tail; e[o] > e[n] && null !== t; ) {
                const r = t.prev;
                C(e, t), (t = r);
              }
          },
          C = (e, t) => {
            if (t) {
              const r = t.value;
              e[c] && e[c](r.key, r.value),
                (e[o] -= r.length),
                e[u].delete(r.key),
                e[l].removeNode(t);
            }
          };
        class B {
          constructor(e, t, r, i, n) {
            (this.key = e),
              (this.value = t),
              (this.length = r),
              (this.now = i),
              (this.maxAge = n || 0);
          }
        }
        const E = (e, t, r, i) => {
          let n = r.value;
          d(e, n) && (C(e, r), e[a] || (n = void 0)),
            n && t.call(i, n.value, n.key, e);
        };
        e.exports = class {
          constructor(e) {
            if (
              ("number" == typeof e && (e = { max: e }),
              e || (e = {}),
              e.max && ("number" != typeof e.max || e.max < 0))
            )
              throw new TypeError("max must be a non-negative number");
            this[n] = e.max || 1 / 0;
            const t = e.length || I;
            if (
              ((this[A] = "function" != typeof t ? I : t),
              (this[a] = e.stale || !1),
              e.maxAge && "number" != typeof e.maxAge)
            )
              throw new TypeError("maxAge must be a number");
            (this[s] = e.maxAge || 0),
              (this[c] = e.dispose),
              (this[g] = e.noDisposeOnSet || !1),
              (this[h] = e.updateAgeOnGet || !1),
              this.reset();
          }
          set max(e) {
            if ("number" != typeof e || e < 0)
              throw new TypeError("max must be a non-negative number");
            (this[n] = e || 1 / 0), f(this);
          }
          get max() {
            return this[n];
          }
          set allowStale(e) {
            this[a] = !!e;
          }
          get allowStale() {
            return this[a];
          }
          set maxAge(e) {
            if ("number" != typeof e)
              throw new TypeError("maxAge must be a non-negative number");
            (this[s] = e), f(this);
          }
          get maxAge() {
            return this[s];
          }
          set lengthCalculator(e) {
            "function" != typeof e && (e = I),
              e !== this[A] &&
                ((this[A] = e),
                (this[o] = 0),
                this[l].forEach((e) => {
                  (e.length = this[A](e.value, e.key)), (this[o] += e.length);
                })),
              f(this);
          }
          get lengthCalculator() {
            return this[A];
          }
          get length() {
            return this[o];
          }
          get itemCount() {
            return this[l].length;
          }
          rforEach(e, t) {
            t = t || this;
            for (let r = this[l].tail; null !== r; ) {
              const i = r.prev;
              E(this, e, r, t), (r = i);
            }
          }
          forEach(e, t) {
            t = t || this;
            for (let r = this[l].head; null !== r; ) {
              const i = r.next;
              E(this, e, r, t), (r = i);
            }
          }
          keys() {
            return this[l].toArray().map((e) => e.key);
          }
          values() {
            return this[l].toArray().map((e) => e.value);
          }
          reset() {
            this[c] &&
              this[l] &&
              this[l].length &&
              this[l].forEach((e) => this[c](e.key, e.value)),
              (this[u] = new Map()),
              (this[l] = new i()),
              (this[o] = 0);
          }
          dump() {
            return this[l]
              .map(
                (e) =>
                  !d(this, e) && {
                    k: e.key,
                    v: e.value,
                    e: e.now + (e.maxAge || 0),
                  }
              )
              .toArray()
              .filter((e) => e);
          }
          dumpLru() {
            return this[l];
          }
          set(e, t, r) {
            if ((r = r || this[s]) && "number" != typeof r)
              throw new TypeError("maxAge must be a number");
            const i = r ? Date.now() : 0,
              a = this[A](t, e);
            if (this[u].has(e)) {
              if (a > this[n]) return C(this, this[u].get(e)), !1;
              const A = this[u].get(e).value;
              return (
                this[c] && (this[g] || this[c](e, A.value)),
                (A.now = i),
                (A.maxAge = r),
                (A.value = t),
                (this[o] += a - A.length),
                (A.length = a),
                this.get(e),
                f(this),
                !0
              );
            }
            const h = new B(e, t, a, i, r);
            return h.length > this[n]
              ? (this[c] && this[c](e, t), !1)
              : ((this[o] += h.length),
                this[l].unshift(h),
                this[u].set(e, this[l].head),
                f(this),
                !0);
          }
          has(e) {
            if (!this[u].has(e)) return !1;
            const t = this[u].get(e).value;
            return !d(this, t);
          }
          get(e) {
            return p(this, e, !0);
          }
          peek(e) {
            return p(this, e, !1);
          }
          pop() {
            const e = this[l].tail;
            return e ? (C(this, e), e.value) : null;
          }
          del(e) {
            C(this, this[u].get(e));
          }
          load(e) {
            this.reset();
            const t = Date.now();
            for (let r = e.length - 1; r >= 0; r--) {
              const i = e[r],
                n = i.e || 0;
              if (0 === n) this.set(i.k, i.v);
              else {
                const e = n - t;
                e > 0 && this.set(i.k, i.v, e);
              }
            }
          }
          prune() {
            this[u].forEach((e, t) => p(this, t, !1));
          }
        };
      },
      27993: (e, t, r) => {
        "use strict";
        var i = r(91285),
          n = r(84485),
          o = r(77834).Buffer,
          A = new Array(16);
        function a() {
          n.call(this, 64),
            (this._a = 1732584193),
            (this._b = 4023233417),
            (this._c = 2562383102),
            (this._d = 271733878);
        }
        function s(e, t) {
          return (e << t) | (e >>> (32 - t));
        }
        function c(e, t, r, i, n, o, A) {
          return (s((e + ((t & r) | (~t & i)) + n + o) | 0, A) + t) | 0;
        }
        function g(e, t, r, i, n, o, A) {
          return (s((e + ((t & i) | (r & ~i)) + n + o) | 0, A) + t) | 0;
        }
        function l(e, t, r, i, n, o, A) {
          return (s((e + (t ^ r ^ i) + n + o) | 0, A) + t) | 0;
        }
        function u(e, t, r, i, n, o, A) {
          return (s((e + (r ^ (t | ~i)) + n + o) | 0, A) + t) | 0;
        }
        i(a, n),
          (a.prototype._update = function () {
            for (var e = A, t = 0; t < 16; ++t)
              e[t] = this._block.readInt32LE(4 * t);
            var r = this._a,
              i = this._b,
              n = this._c,
              o = this._d;
            (r = c(r, i, n, o, e[0], 3614090360, 7)),
              (o = c(o, r, i, n, e[1], 3905402710, 12)),
              (n = c(n, o, r, i, e[2], 606105819, 17)),
              (i = c(i, n, o, r, e[3], 3250441966, 22)),
              (r = c(r, i, n, o, e[4], 4118548399, 7)),
              (o = c(o, r, i, n, e[5], 1200080426, 12)),
              (n = c(n, o, r, i, e[6], 2821735955, 17)),
              (i = c(i, n, o, r, e[7], 4249261313, 22)),
              (r = c(r, i, n, o, e[8], 1770035416, 7)),
              (o = c(o, r, i, n, e[9], 2336552879, 12)),
              (n = c(n, o, r, i, e[10], 4294925233, 17)),
              (i = c(i, n, o, r, e[11], 2304563134, 22)),
              (r = c(r, i, n, o, e[12], 1804603682, 7)),
              (o = c(o, r, i, n, e[13], 4254626195, 12)),
              (n = c(n, o, r, i, e[14], 2792965006, 17)),
              (r = g(
                r,
                (i = c(i, n, o, r, e[15], 1236535329, 22)),
                n,
                o,
                e[1],
                4129170786,
                5
              )),
              (o = g(o, r, i, n, e[6], 3225465664, 9)),
              (n = g(n, o, r, i, e[11], 643717713, 14)),
              (i = g(i, n, o, r, e[0], 3921069994, 20)),
              (r = g(r, i, n, o, e[5], 3593408605, 5)),
              (o = g(o, r, i, n, e[10], 38016083, 9)),
              (n = g(n, o, r, i, e[15], 3634488961, 14)),
              (i = g(i, n, o, r, e[4], 3889429448, 20)),
              (r = g(r, i, n, o, e[9], 568446438, 5)),
              (o = g(o, r, i, n, e[14], 3275163606, 9)),
              (n = g(n, o, r, i, e[3], 4107603335, 14)),
              (i = g(i, n, o, r, e[8], 1163531501, 20)),
              (r = g(r, i, n, o, e[13], 2850285829, 5)),
              (o = g(o, r, i, n, e[2], 4243563512, 9)),
              (n = g(n, o, r, i, e[7], 1735328473, 14)),
              (r = l(
                r,
                (i = g(i, n, o, r, e[12], 2368359562, 20)),
                n,
                o,
                e[5],
                4294588738,
                4
              )),
              (o = l(o, r, i, n, e[8], 2272392833, 11)),
              (n = l(n, o, r, i, e[11], 1839030562, 16)),
              (i = l(i, n, o, r, e[14], 4259657740, 23)),
              (r = l(r, i, n, o, e[1], 2763975236, 4)),
              (o = l(o, r, i, n, e[4], 1272893353, 11)),
              (n = l(n, o, r, i, e[7], 4139469664, 16)),
              (i = l(i, n, o, r, e[10], 3200236656, 23)),
              (r = l(r, i, n, o, e[13], 681279174, 4)),
              (o = l(o, r, i, n, e[0], 3936430074, 11)),
              (n = l(n, o, r, i, e[3], 3572445317, 16)),
              (i = l(i, n, o, r, e[6], 76029189, 23)),
              (r = l(r, i, n, o, e[9], 3654602809, 4)),
              (o = l(o, r, i, n, e[12], 3873151461, 11)),
              (n = l(n, o, r, i, e[15], 530742520, 16)),
              (r = u(
                r,
                (i = l(i, n, o, r, e[2], 3299628645, 23)),
                n,
                o,
                e[0],
                4096336452,
                6
              )),
              (o = u(o, r, i, n, e[7], 1126891415, 10)),
              (n = u(n, o, r, i, e[14], 2878612391, 15)),
              (i = u(i, n, o, r, e[5], 4237533241, 21)),
              (r = u(r, i, n, o, e[12], 1700485571, 6)),
              (o = u(o, r, i, n, e[3], 2399980690, 10)),
              (n = u(n, o, r, i, e[10], 4293915773, 15)),
              (i = u(i, n, o, r, e[1], 2240044497, 21)),
              (r = u(r, i, n, o, e[8], 1873313359, 6)),
              (o = u(o, r, i, n, e[15], 4264355552, 10)),
              (n = u(n, o, r, i, e[6], 2734768916, 15)),
              (i = u(i, n, o, r, e[13], 1309151649, 21)),
              (r = u(r, i, n, o, e[4], 4149444226, 6)),
              (o = u(o, r, i, n, e[11], 3174756917, 10)),
              (n = u(n, o, r, i, e[2], 718787259, 15)),
              (i = u(i, n, o, r, e[9], 3951481745, 21)),
              (this._a = (this._a + r) | 0),
              (this._b = (this._b + i) | 0),
              (this._c = (this._c + n) | 0),
              (this._d = (this._d + o) | 0);
          }),
          (a.prototype._digest = function () {
            (this._block[this._blockOffset++] = 128),
              this._blockOffset > 56 &&
                (this._block.fill(0, this._blockOffset, 64),
                this._update(),
                (this._blockOffset = 0)),
              this._block.fill(0, this._blockOffset, 56),
              this._block.writeUInt32LE(this._length[0], 56),
              this._block.writeUInt32LE(this._length[1], 60),
              this._update();
            var e = o.allocUnsafe(16);
            return (
              e.writeInt32LE(this._a, 0),
              e.writeInt32LE(this._b, 4),
              e.writeInt32LE(this._c, 8),
              e.writeInt32LE(this._d, 12),
              e
            );
          }),
          (e.exports = a);
      },
      79561: (e) => {
        function t(e, t) {
          if (!e) throw new Error(t || "Assertion failed");
        }
        (e.exports = t),
          (t.equal = function (e, t, r) {
            if (e != t)
              throw new Error(r || "Assertion failed: " + e + " != " + t);
          });
      },
      18169: (e) => {
        "use strict";
        var t = function (e) {
          return e != e;
        };
        e.exports = function (e, r) {
          return 0 === e && 0 === r
            ? 1 / e == 1 / r
            : e === r || !(!t(e) || !t(r));
        };
      },
      34679: (e, t, r) => {
        "use strict";
        var i = r(14926),
          n = r(89429),
          o = r(18169),
          A = r(68070),
          a = r(20191),
          s = n(A(), Object);
        i(s, { getPolyfill: A, implementation: o, shim: a }), (e.exports = s);
      },
      68070: (e, t, r) => {
        "use strict";
        var i = r(18169);
        e.exports = function () {
          return "function" == typeof Object.is ? Object.is : i;
        };
      },
      20191: (e, t, r) => {
        "use strict";
        var i = r(68070),
          n = r(14926);
        e.exports = function () {
          var e = i();
          return (
            n(
              Object,
              { is: e },
              {
                is: function () {
                  return Object.is !== e;
                },
              }
            ),
            e
          );
        };
      },
      75691: (e, t, r) => {
        "use strict";
        var i;
        if (!Object.keys) {
          var n = Object.prototype.hasOwnProperty,
            o = Object.prototype.toString,
            A = r(30801),
            a = Object.prototype.propertyIsEnumerable,
            s = !a.call({ toString: null }, "toString"),
            c = a.call(function () {}, "prototype"),
            g = [
              "toString",
              "toLocaleString",
              "valueOf",
              "hasOwnProperty",
              "isPrototypeOf",
              "propertyIsEnumerable",
              "constructor",
            ],
            l = function (e) {
              var t = e.constructor;
              return t && t.prototype === e;
            },
            u = {
              $applicationCache: !0,
              $console: !0,
              $external: !0,
              $frame: !0,
              $frameElement: !0,
              $frames: !0,
              $innerHeight: !0,
              $innerWidth: !0,
              $onmozfullscreenchange: !0,
              $onmozfullscreenerror: !0,
              $outerHeight: !0,
              $outerWidth: !0,
              $pageXOffset: !0,
              $pageYOffset: !0,
              $parent: !0,
              $scrollLeft: !0,
              $scrollTop: !0,
              $scrollX: !0,
              $scrollY: !0,
              $self: !0,
              $webkitIndexedDB: !0,
              $webkitStorageInfo: !0,
              $window: !0,
            },
            h = (function () {
              if ("undefined" == typeof window) return !1;
              for (var e in window)
                try {
                  if (
                    !u["$" + e] &&
                    n.call(window, e) &&
                    null !== window[e] &&
                    "object" == typeof window[e]
                  )
                    try {
                      l(window[e]);
                    } catch (e) {
                      return !0;
                    }
                } catch (e) {
                  return !0;
                }
              return !1;
            })();
          i = function (e) {
            var t = null !== e && "object" == typeof e,
              r = "[object Function]" === o.call(e),
              i = A(e),
              a = t && "[object String]" === o.call(e),
              u = [];
            if (!t && !r && !i)
              throw new TypeError("Object.keys called on a non-object");
            var I = c && r;
            if (a && e.length > 0 && !n.call(e, 0))
              for (var p = 0; p < e.length; ++p) u.push(String(p));
            if (i && e.length > 0)
              for (var d = 0; d < e.length; ++d) u.push(String(d));
            else
              for (var f in e)
                (I && "prototype" === f) || !n.call(e, f) || u.push(String(f));
            if (s)
              for (
                var C = (function (e) {
                    if ("undefined" == typeof window || !h) return l(e);
                    try {
                      return l(e);
                    } catch (e) {
                      return !1;
                    }
                  })(e),
                  B = 0;
                B < g.length;
                ++B
              )
                (C && "constructor" === g[B]) ||
                  !n.call(e, g[B]) ||
                  u.push(g[B]);
            return u;
          };
        }
        e.exports = i;
      },
      33464: (e, t, r) => {
        "use strict";
        var i = Array.prototype.slice,
          n = r(30801),
          o = Object.keys,
          A = o
            ? function (e) {
                return o(e);
              }
            : r(75691),
          a = Object.keys;
        (A.shim = function () {
          if (Object.keys) {
            var e = (function () {
              var e = Object.keys(arguments);
              return e && e.length === arguments.length;
            })(1, 2);
            e ||
              (Object.keys = function (e) {
                return n(e) ? a(i.call(e)) : a(e);
              });
          } else Object.keys = A;
          return Object.keys || A;
        }),
          (e.exports = A);
      },
      30801: (e) => {
        "use strict";
        var t = Object.prototype.toString;
        e.exports = function (e) {
          var r = t.call(e),
            i = "[object Arguments]" === r;
          return (
            i ||
              (i =
                "[object Array]" !== r &&
                null !== e &&
                "object" == typeof e &&
                "number" == typeof e.length &&
                e.length >= 0 &&
                "[object Function]" === t.call(e.callee)),
            i
          );
        };
      },
      30499: (e, t, r) => {
        (t.pbkdf2 = r(14874)), (t.pbkdf2Sync = r(88840));
      },
      14874: (e, t, r) => {
        var i,
          n,
          o = r(77834).Buffer,
          A = r(87351),
          a = r(25214),
          s = r(88840),
          c = r(97232),
          g = r.g.crypto && r.g.crypto.subtle,
          l = {
            sha: "SHA-1",
            "sha-1": "SHA-1",
            sha1: "SHA-1",
            sha256: "SHA-256",
            "sha-256": "SHA-256",
            sha384: "SHA-384",
            "sha-384": "SHA-384",
            "sha-512": "SHA-512",
            sha512: "SHA-512",
          },
          u = [];
        function h() {
          return (
            n ||
            (n =
              r.g.process && r.g.process.nextTick
                ? r.g.process.nextTick
                : r.g.queueMicrotask
                ? r.g.queueMicrotask
                : r.g.setImmediate
                ? r.g.setImmediate
                : r.g.setTimeout)
          );
        }
        function I(e, t, r, i, n) {
          return g
            .importKey("raw", e, { name: "PBKDF2" }, !1, ["deriveBits"])
            .then(function (e) {
              return g.deriveBits(
                { name: "PBKDF2", salt: t, iterations: r, hash: { name: n } },
                e,
                i << 3
              );
            })
            .then(function (e) {
              return o.from(e);
            });
        }
        e.exports = function (e, t, n, p, d, f) {
          "function" == typeof d && ((f = d), (d = void 0));
          var C = l[(d = d || "sha1").toLowerCase()];
          if (C && "function" == typeof r.g.Promise) {
            if (
              (A(n, p),
              (e = c(e, a, "Password")),
              (t = c(t, a, "Salt")),
              "function" != typeof f)
            )
              throw new Error("No callback provided to pbkdf2");
            !(function (e, t) {
              e.then(
                function (e) {
                  h()(function () {
                    t(null, e);
                  });
                },
                function (e) {
                  h()(function () {
                    t(e);
                  });
                }
              );
            })(
              (function (e) {
                if (r.g.process && !r.g.process.browser)
                  return Promise.resolve(!1);
                if (!g || !g.importKey || !g.deriveBits)
                  return Promise.resolve(!1);
                if (void 0 !== u[e]) return u[e];
                var t = I((i = i || o.alloc(8)), i, 10, 128, e)
                  .then(function () {
                    return !0;
                  })
                  .catch(function () {
                    return !1;
                  });
                return (u[e] = t), t;
              })(C).then(function (r) {
                return r ? I(e, t, n, p, C) : s(e, t, n, p, d);
              }),
              f
            );
          } else
            h()(function () {
              var r;
              try {
                r = s(e, t, n, p, d);
              } catch (e) {
                return f(e);
              }
              f(null, r);
            });
        };
      },
      25214: (e, t, r) => {
        var i;
        (i =
          r.g.process && r.g.process.browser
            ? "utf-8"
            : r.g.process && r.g.process.version
            ? parseInt(process.version.split(".")[0].slice(1), 10) >= 6
              ? "utf-8"
              : "binary"
            : "utf-8"),
          (e.exports = i);
      },
      87351: (e) => {
        var t = Math.pow(2, 30) - 1;
        e.exports = function (e, r) {
          if ("number" != typeof e)
            throw new TypeError("Iterations not a number");
          if (e < 0) throw new TypeError("Bad iterations");
          if ("number" != typeof r)
            throw new TypeError("Key length not a number");
          if (r < 0 || r > t || r != r) throw new TypeError("Bad key length");
        };
      },
      88840: (e, t, r) => {
        var i = r(22511),
          n = r(51445),
          o = r(9065),
          A = r(77834).Buffer,
          a = r(87351),
          s = r(25214),
          c = r(97232),
          g = A.alloc(128),
          l = {
            md5: 16,
            sha1: 20,
            sha224: 28,
            sha256: 32,
            sha384: 48,
            sha512: 64,
            rmd160: 20,
            ripemd160: 20,
          };
        function u(e, t, r) {
          var a = (function (e) {
              return "rmd160" === e || "ripemd160" === e
                ? function (e) {
                    return new n().update(e).digest();
                  }
                : "md5" === e
                ? i
                : function (t) {
                    return o(e).update(t).digest();
                  };
            })(e),
            s = "sha512" === e || "sha384" === e ? 128 : 64;
          t.length > s ? (t = a(t)) : t.length < s && (t = A.concat([t, g], s));
          for (
            var c = A.allocUnsafe(s + l[e]), u = A.allocUnsafe(s + l[e]), h = 0;
            h < s;
            h++
          )
            (c[h] = 54 ^ t[h]), (u[h] = 92 ^ t[h]);
          var I = A.allocUnsafe(s + r + 4);
          c.copy(I, 0, 0, s),
            (this.ipad1 = I),
            (this.ipad2 = c),
            (this.opad = u),
            (this.alg = e),
            (this.blocksize = s),
            (this.hash = a),
            (this.size = l[e]);
        }
        (u.prototype.run = function (e, t) {
          return (
            e.copy(t, this.blocksize),
            this.hash(t).copy(this.opad, this.blocksize),
            this.hash(this.opad)
          );
        }),
          (e.exports = function (e, t, r, i, n) {
            a(r, i);
            var o = new u(
                (n = n || "sha1"),
                (e = c(e, s, "Password")),
                (t = c(t, s, "Salt")).length
              ),
              g = A.allocUnsafe(i),
              h = A.allocUnsafe(t.length + 4);
            t.copy(h, 0, 0, t.length);
            for (
              var I = 0, p = l[n], d = Math.ceil(i / p), f = 1;
              f <= d;
              f++
            ) {
              h.writeUInt32BE(f, t.length);
              for (var C = o.run(h, o.ipad1), B = C, E = 1; E < r; E++) {
                B = o.run(B, o.ipad2);
                for (var y = 0; y < p; y++) C[y] ^= B[y];
              }
              C.copy(g, I), (I += p);
            }
            return g;
          });
      },
      97232: (e, t, r) => {
        var i = r(77834).Buffer;
        e.exports = function (e, t, r) {
          if (i.isBuffer(e)) return e;
          if ("string" == typeof e) return i.from(e, t);
          if (ArrayBuffer.isView(e)) return i.from(e.buffer);
          throw new TypeError(
            r + " must be a string, a Buffer, a typed array or a DataView"
          );
        };
      },
      14697: (e, t, r) => {
        function i(e) {
          (this.mode = o.MODE_8BIT_BYTE),
            (this.data = e),
            (this.parsedData = []);
          for (var t = 0, r = this.data.length; t < r; t++) {
            var i = [],
              n = this.data.charCodeAt(t);
            n > 65536
              ? ((i[0] = 240 | ((1835008 & n) >>> 18)),
                (i[1] = 128 | ((258048 & n) >>> 12)),
                (i[2] = 128 | ((4032 & n) >>> 6)),
                (i[3] = 128 | (63 & n)))
              : n > 2048
              ? ((i[0] = 224 | ((61440 & n) >>> 12)),
                (i[1] = 128 | ((4032 & n) >>> 6)),
                (i[2] = 128 | (63 & n)))
              : n > 128
              ? ((i[0] = 192 | ((1984 & n) >>> 6)), (i[1] = 128 | (63 & n)))
              : (i[0] = n),
              this.parsedData.push(i);
          }
          (this.parsedData = Array.prototype.concat.apply([], this.parsedData)),
            this.parsedData.length != this.data.length &&
              (this.parsedData.unshift(191),
              this.parsedData.unshift(187),
              this.parsedData.unshift(239));
        }
        function n(e, t) {
          (this.typeNumber = e),
            (this.errorCorrectLevel = t),
            (this.modules = null),
            (this.moduleCount = 0),
            (this.dataCache = null),
            (this.dataList = []);
        }
        (i.prototype = {
          getLength: function (e) {
            return this.parsedData.length;
          },
          write: function (e) {
            for (var t = 0, r = this.parsedData.length; t < r; t++)
              e.put(this.parsedData[t], 8);
          },
        }),
          (n.prototype = {
            addData: function (e) {
              var t = new i(e);
              this.dataList.push(t), (this.dataCache = null);
            },
            isDark: function (e, t) {
              if (
                e < 0 ||
                this.moduleCount <= e ||
                t < 0 ||
                this.moduleCount <= t
              )
                throw new Error(e + "," + t);
              return this.modules[e][t];
            },
            getModuleCount: function () {
              return this.moduleCount;
            },
            make: function () {
              this.makeImpl(!1, this.getBestMaskPattern());
            },
            makeImpl: function (e, t) {
              (this.moduleCount = 4 * this.typeNumber + 17),
                (this.modules = new Array(this.moduleCount));
              for (var r = 0; r < this.moduleCount; r++) {
                this.modules[r] = new Array(this.moduleCount);
                for (var i = 0; i < this.moduleCount; i++)
                  this.modules[r][i] = null;
              }
              this.setupPositionProbePattern(0, 0),
                this.setupPositionProbePattern(this.moduleCount - 7, 0),
                this.setupPositionProbePattern(0, this.moduleCount - 7),
                this.setupPositionAdjustPattern(),
                this.setupTimingPattern(),
                this.setupTypeInfo(e, t),
                this.typeNumber >= 7 && this.setupTypeNumber(e),
                null == this.dataCache &&
                  (this.dataCache = n.createData(
                    this.typeNumber,
                    this.errorCorrectLevel,
                    this.dataList
                  )),
                this.mapData(this.dataCache, t);
            },
            setupPositionProbePattern: function (e, t) {
              for (var r = -1; r <= 7; r++)
                if (!(e + r <= -1 || this.moduleCount <= e + r))
                  for (var i = -1; i <= 7; i++)
                    t + i <= -1 ||
                      this.moduleCount <= t + i ||
                      (this.modules[e + r][t + i] =
                        (0 <= r && r <= 6 && (0 == i || 6 == i)) ||
                        (0 <= i && i <= 6 && (0 == r || 6 == r)) ||
                        (2 <= r && r <= 4 && 2 <= i && i <= 4));
            },
            getBestMaskPattern: function () {
              for (var e = 0, t = 0, r = 0; r < 8; r++) {
                this.makeImpl(!0, r);
                var i = A.getLostPoint(this);
                (0 == r || e > i) && ((e = i), (t = r));
              }
              return t;
            },
            createMovieClip: function (e, t, r) {
              var i = e.createEmptyMovieClip(t, r);
              this.make();
              for (var n = 0; n < this.modules.length; n++)
                for (var o = 1 * n, A = 0; A < this.modules[n].length; A++) {
                  var a = 1 * A;
                  this.modules[n][A] &&
                    (i.beginFill(0, 100),
                    i.moveTo(a, o),
                    i.lineTo(a + 1, o),
                    i.lineTo(a + 1, o + 1),
                    i.lineTo(a, o + 1),
                    i.endFill());
                }
              return i;
            },
            setupTimingPattern: function () {
              for (var e = 8; e < this.moduleCount - 8; e++)
                null == this.modules[e][6] && (this.modules[e][6] = e % 2 == 0);
              for (var t = 8; t < this.moduleCount - 8; t++)
                null == this.modules[6][t] && (this.modules[6][t] = t % 2 == 0);
            },
            setupPositionAdjustPattern: function () {
              for (
                var e = A.getPatternPosition(this.typeNumber), t = 0;
                t < e.length;
                t++
              )
                for (var r = 0; r < e.length; r++) {
                  var i = e[t],
                    n = e[r];
                  if (null == this.modules[i][n])
                    for (var o = -2; o <= 2; o++)
                      for (var a = -2; a <= 2; a++)
                        this.modules[i + o][n + a] =
                          -2 == o ||
                          2 == o ||
                          -2 == a ||
                          2 == a ||
                          (0 == o && 0 == a);
                }
            },
            setupTypeNumber: function (e) {
              for (
                var t = A.getBCHTypeNumber(this.typeNumber), r = 0;
                r < 18;
                r++
              ) {
                var i = !e && 1 == ((t >> r) & 1);
                this.modules[Math.floor(r / 3)][
                  (r % 3) + this.moduleCount - 8 - 3
                ] = i;
              }
              for (r = 0; r < 18; r++)
                (i = !e && 1 == ((t >> r) & 1)),
                  (this.modules[(r % 3) + this.moduleCount - 8 - 3][
                    Math.floor(r / 3)
                  ] = i);
            },
            setupTypeInfo: function (e, t) {
              for (
                var r = (this.errorCorrectLevel << 3) | t,
                  i = A.getBCHTypeInfo(r),
                  n = 0;
                n < 15;
                n++
              ) {
                var o = !e && 1 == ((i >> n) & 1);
                n < 6
                  ? (this.modules[n][8] = o)
                  : n < 8
                  ? (this.modules[n + 1][8] = o)
                  : (this.modules[this.moduleCount - 15 + n][8] = o);
              }
              for (n = 0; n < 15; n++)
                (o = !e && 1 == ((i >> n) & 1)),
                  n < 8
                    ? (this.modules[8][this.moduleCount - n - 1] = o)
                    : n < 9
                    ? (this.modules[8][15 - n - 1 + 1] = o)
                    : (this.modules[8][15 - n - 1] = o);
              this.modules[this.moduleCount - 8][8] = !e;
            },
            mapData: function (e, t) {
              for (
                var r = -1,
                  i = this.moduleCount - 1,
                  n = 7,
                  o = 0,
                  a = this.moduleCount - 1;
                a > 0;
                a -= 2
              )
                for (6 == a && a--; ; ) {
                  for (var s = 0; s < 2; s++)
                    if (null == this.modules[i][a - s]) {
                      var c = !1;
                      o < e.length && (c = 1 == ((e[o] >>> n) & 1)),
                        A.getMask(t, i, a - s) && (c = !c),
                        (this.modules[i][a - s] = c),
                        -1 == --n && (o++, (n = 7));
                    }
                  if ((i += r) < 0 || this.moduleCount <= i) {
                    (i -= r), (r = -r);
                    break;
                  }
                }
            },
          }),
          (n.PAD0 = 236),
          (n.PAD1 = 17),
          (n.createData = function (e, t, r) {
            for (
              var i = g.getRSBlocks(e, t), o = new l(), a = 0;
              a < r.length;
              a++
            ) {
              var s = r[a];
              o.put(s.mode, 4),
                o.put(s.getLength(), A.getLengthInBits(s.mode, e)),
                s.write(o);
            }
            var c = 0;
            for (a = 0; a < i.length; a++) c += i[a].dataCount;
            if (o.getLengthInBits() > 8 * c)
              throw new Error(
                "code length overflow. (" +
                  o.getLengthInBits() +
                  ">" +
                  8 * c +
                  ")"
              );
            for (
              o.getLengthInBits() + 4 <= 8 * c && o.put(0, 4);
              o.getLengthInBits() % 8 != 0;

            )
              o.putBit(!1);
            for (
              ;
              !(
                o.getLengthInBits() >= 8 * c ||
                (o.put(n.PAD0, 8), o.getLengthInBits() >= 8 * c)
              );

            )
              o.put(n.PAD1, 8);
            return n.createBytes(o, i);
          }),
          (n.createBytes = function (e, t) {
            for (
              var r = 0,
                i = 0,
                n = 0,
                o = new Array(t.length),
                a = new Array(t.length),
                s = 0;
              s < t.length;
              s++
            ) {
              var g = t[s].dataCount,
                l = t[s].totalCount - g;
              (i = Math.max(i, g)), (n = Math.max(n, l)), (o[s] = new Array(g));
              for (var u = 0; u < o[s].length; u++)
                o[s][u] = 255 & e.buffer[u + r];
              r += g;
              var h = A.getErrorCorrectPolynomial(l),
                I = new c(o[s], h.getLength() - 1).mod(h);
              for (
                a[s] = new Array(h.getLength() - 1), u = 0;
                u < a[s].length;
                u++
              ) {
                var p = u + I.getLength() - a[s].length;
                a[s][u] = p >= 0 ? I.get(p) : 0;
              }
            }
            var d = 0;
            for (u = 0; u < t.length; u++) d += t[u].totalCount;
            var f = new Array(d),
              C = 0;
            for (u = 0; u < i; u++)
              for (s = 0; s < t.length; s++)
                u < o[s].length && (f[C++] = o[s][u]);
            for (u = 0; u < n; u++)
              for (s = 0; s < t.length; s++)
                u < a[s].length && (f[C++] = a[s][u]);
            return f;
          });
        for (
          var o = {
              MODE_NUMBER: 1,
              MODE_ALPHA_NUM: 2,
              MODE_8BIT_BYTE: 4,
              MODE_KANJI: 8,
            },
            A = {
              PATTERN_POSITION_TABLE: [
                [],
                [6, 18],
                [6, 22],
                [6, 26],
                [6, 30],
                [6, 34],
                [6, 22, 38],
                [6, 24, 42],
                [6, 26, 46],
                [6, 28, 50],
                [6, 30, 54],
                [6, 32, 58],
                [6, 34, 62],
                [6, 26, 46, 66],
                [6, 26, 48, 70],
                [6, 26, 50, 74],
                [6, 30, 54, 78],
                [6, 30, 56, 82],
                [6, 30, 58, 86],
                [6, 34, 62, 90],
                [6, 28, 50, 72, 94],
                [6, 26, 50, 74, 98],
                [6, 30, 54, 78, 102],
                [6, 28, 54, 80, 106],
                [6, 32, 58, 84, 110],
                [6, 30, 58, 86, 114],
                [6, 34, 62, 90, 118],
                [6, 26, 50, 74, 98, 122],
                [6, 30, 54, 78, 102, 126],
                [6, 26, 52, 78, 104, 130],
                [6, 30, 56, 82, 108, 134],
                [6, 34, 60, 86, 112, 138],
                [6, 30, 58, 86, 114, 142],
                [6, 34, 62, 90, 118, 146],
                [6, 30, 54, 78, 102, 126, 150],
                [6, 24, 50, 76, 102, 128, 154],
                [6, 28, 54, 80, 106, 132, 158],
                [6, 32, 58, 84, 110, 136, 162],
                [6, 26, 54, 82, 110, 138, 166],
                [6, 30, 58, 86, 114, 142, 170],
              ],
              G15: 1335,
              G18: 7973,
              G15_MASK: 21522,
              getBCHTypeInfo: function (e) {
                for (
                  var t = e << 10;
                  A.getBCHDigit(t) - A.getBCHDigit(A.G15) >= 0;

                )
                  t ^= A.G15 << (A.getBCHDigit(t) - A.getBCHDigit(A.G15));
                return ((e << 10) | t) ^ A.G15_MASK;
              },
              getBCHTypeNumber: function (e) {
                for (
                  var t = e << 12;
                  A.getBCHDigit(t) - A.getBCHDigit(A.G18) >= 0;

                )
                  t ^= A.G18 << (A.getBCHDigit(t) - A.getBCHDigit(A.G18));
                return (e << 12) | t;
              },
              getBCHDigit: function (e) {
                for (var t = 0; 0 != e; ) t++, (e >>>= 1);
                return t;
              },
              getPatternPosition: function (e) {
                return A.PATTERN_POSITION_TABLE[e - 1];
              },
              getMask: function (e, t, r) {
                switch (e) {
                  case 0:
                    return (t + r) % 2 == 0;
                  case 1:
                    return t % 2 == 0;
                  case 2:
                    return r % 3 == 0;
                  case 3:
                    return (t + r) % 3 == 0;
                  case 4:
                    return (Math.floor(t / 2) + Math.floor(r / 3)) % 2 == 0;
                  case 5:
                    return ((t * r) % 2) + ((t * r) % 3) == 0;
                  case 6:
                    return (((t * r) % 2) + ((t * r) % 3)) % 2 == 0;
                  case 7:
                    return (((t * r) % 3) + ((t + r) % 2)) % 2 == 0;
                  default:
                    throw new Error("bad maskPattern:" + e);
                }
              },
              getErrorCorrectPolynomial: function (e) {
                for (var t = new c([1], 0), r = 0; r < e; r++)
                  t = t.multiply(new c([1, a.gexp(r)], 0));
                return t;
              },
              getLengthInBits: function (e, t) {
                if (1 <= t && t < 10)
                  switch (e) {
                    case o.MODE_NUMBER:
                      return 10;
                    case o.MODE_ALPHA_NUM:
                      return 9;
                    case o.MODE_8BIT_BYTE:
                    case o.MODE_KANJI:
                      return 8;
                    default:
                      throw new Error("mode:" + e);
                  }
                else if (t < 27)
                  switch (e) {
                    case o.MODE_NUMBER:
                      return 12;
                    case o.MODE_ALPHA_NUM:
                      return 11;
                    case o.MODE_8BIT_BYTE:
                      return 16;
                    case o.MODE_KANJI:
                      return 10;
                    default:
                      throw new Error("mode:" + e);
                  }
                else {
                  if (!(t < 41)) throw new Error("type:" + t);
                  switch (e) {
                    case o.MODE_NUMBER:
                      return 14;
                    case o.MODE_ALPHA_NUM:
                      return 13;
                    case o.MODE_8BIT_BYTE:
                      return 16;
                    case o.MODE_KANJI:
                      return 12;
                    default:
                      throw new Error("mode:" + e);
                  }
                }
              },
              getLostPoint: function (e) {
                for (var t = e.getModuleCount(), r = 0, i = 0; i < t; i++)
                  for (var n = 0; n < t; n++) {
                    for (var o = 0, A = e.isDark(i, n), a = -1; a <= 1; a++)
                      if (!(i + a < 0 || t <= i + a))
                        for (var s = -1; s <= 1; s++)
                          n + s < 0 ||
                            t <= n + s ||
                            (0 == a && 0 == s) ||
                            (A == e.isDark(i + a, n + s) && o++);
                    o > 5 && (r += 3 + o - 5);
                  }
                for (i = 0; i < t - 1; i++)
                  for (n = 0; n < t - 1; n++) {
                    var c = 0;
                    e.isDark(i, n) && c++,
                      e.isDark(i + 1, n) && c++,
                      e.isDark(i, n + 1) && c++,
                      e.isDark(i + 1, n + 1) && c++,
                      (0 != c && 4 != c) || (r += 3);
                  }
                for (i = 0; i < t; i++)
                  for (n = 0; n < t - 6; n++)
                    e.isDark(i, n) &&
                      !e.isDark(i, n + 1) &&
                      e.isDark(i, n + 2) &&
                      e.isDark(i, n + 3) &&
                      e.isDark(i, n + 4) &&
                      !e.isDark(i, n + 5) &&
                      e.isDark(i, n + 6) &&
                      (r += 40);
                for (n = 0; n < t; n++)
                  for (i = 0; i < t - 6; i++)
                    e.isDark(i, n) &&
                      !e.isDark(i + 1, n) &&
                      e.isDark(i + 2, n) &&
                      e.isDark(i + 3, n) &&
                      e.isDark(i + 4, n) &&
                      !e.isDark(i + 5, n) &&
                      e.isDark(i + 6, n) &&
                      (r += 40);
                var g = 0;
                for (n = 0; n < t; n++)
                  for (i = 0; i < t; i++) e.isDark(i, n) && g++;
                return r + (Math.abs((100 * g) / t / t - 50) / 5) * 10;
              },
            },
            a = {
              glog: function (e) {
                if (e < 1) throw new Error("glog(" + e + ")");
                return a.LOG_TABLE[e];
              },
              gexp: function (e) {
                for (; e < 0; ) e += 255;
                for (; e >= 256; ) e -= 255;
                return a.EXP_TABLE[e];
              },
              EXP_TABLE: new Array(256),
              LOG_TABLE: new Array(256),
            },
            s = 0;
          s < 8;
          s++
        )
          a.EXP_TABLE[s] = 1 << s;
        for (s = 8; s < 256; s++)
          a.EXP_TABLE[s] =
            a.EXP_TABLE[s - 4] ^
            a.EXP_TABLE[s - 5] ^
            a.EXP_TABLE[s - 6] ^
            a.EXP_TABLE[s - 8];
        for (s = 0; s < 255; s++) a.LOG_TABLE[a.EXP_TABLE[s]] = s;
        function c(e, t) {
          if (null == e.length) throw new Error(e.length + "/" + t);
          for (var r = 0; r < e.length && 0 == e[r]; ) r++;
          this.num = new Array(e.length - r + t);
          for (var i = 0; i < e.length - r; i++) this.num[i] = e[i + r];
        }
        function g(e, t) {
          (this.totalCount = e), (this.dataCount = t);
        }
        function l() {
          (this.buffer = []), (this.length = 0);
        }
        (c.prototype = {
          get: function (e) {
            return this.num[e];
          },
          getLength: function () {
            return this.num.length;
          },
          multiply: function (e) {
            for (
              var t = new Array(this.getLength() + e.getLength() - 1), r = 0;
              r < this.getLength();
              r++
            )
              for (var i = 0; i < e.getLength(); i++)
                t[r + i] ^= a.gexp(a.glog(this.get(r)) + a.glog(e.get(i)));
            return new c(t, 0);
          },
          mod: function (e) {
            if (this.getLength() - e.getLength() < 0) return this;
            for (
              var t = a.glog(this.get(0)) - a.glog(e.get(0)),
                r = new Array(this.getLength()),
                i = 0;
              i < this.getLength();
              i++
            )
              r[i] = this.get(i);
            for (i = 0; i < e.getLength(); i++)
              r[i] ^= a.gexp(a.glog(e.get(i)) + t);
            return new c(r, 0).mod(e);
          },
        }),
          (g.RS_BLOCK_TABLE = [
            [1, 26, 19],
            [1, 26, 16],
            [1, 26, 13],
            [1, 26, 9],
            [1, 44, 34],
            [1, 44, 28],
            [1, 44, 22],
            [1, 44, 16],
            [1, 70, 55],
            [1, 70, 44],
            [2, 35, 17],
            [2, 35, 13],
            [1, 100, 80],
            [2, 50, 32],
            [2, 50, 24],
            [4, 25, 9],
            [1, 134, 108],
            [2, 67, 43],
            [2, 33, 15, 2, 34, 16],
            [2, 33, 11, 2, 34, 12],
            [2, 86, 68],
            [4, 43, 27],
            [4, 43, 19],
            [4, 43, 15],
            [2, 98, 78],
            [4, 49, 31],
            [2, 32, 14, 4, 33, 15],
            [4, 39, 13, 1, 40, 14],
            [2, 121, 97],
            [2, 60, 38, 2, 61, 39],
            [4, 40, 18, 2, 41, 19],
            [4, 40, 14, 2, 41, 15],
            [2, 146, 116],
            [3, 58, 36, 2, 59, 37],
            [4, 36, 16, 4, 37, 17],
            [4, 36, 12, 4, 37, 13],
            [2, 86, 68, 2, 87, 69],
            [4, 69, 43, 1, 70, 44],
            [6, 43, 19, 2, 44, 20],
            [6, 43, 15, 2, 44, 16],
            [4, 101, 81],
            [1, 80, 50, 4, 81, 51],
            [4, 50, 22, 4, 51, 23],
            [3, 36, 12, 8, 37, 13],
            [2, 116, 92, 2, 117, 93],
            [6, 58, 36, 2, 59, 37],
            [4, 46, 20, 6, 47, 21],
            [7, 42, 14, 4, 43, 15],
            [4, 133, 107],
            [8, 59, 37, 1, 60, 38],
            [8, 44, 20, 4, 45, 21],
            [12, 33, 11, 4, 34, 12],
            [3, 145, 115, 1, 146, 116],
            [4, 64, 40, 5, 65, 41],
            [11, 36, 16, 5, 37, 17],
            [11, 36, 12, 5, 37, 13],
            [5, 109, 87, 1, 110, 88],
            [5, 65, 41, 5, 66, 42],
            [5, 54, 24, 7, 55, 25],
            [11, 36, 12],
            [5, 122, 98, 1, 123, 99],
            [7, 73, 45, 3, 74, 46],
            [15, 43, 19, 2, 44, 20],
            [3, 45, 15, 13, 46, 16],
            [1, 135, 107, 5, 136, 108],
            [10, 74, 46, 1, 75, 47],
            [1, 50, 22, 15, 51, 23],
            [2, 42, 14, 17, 43, 15],
            [5, 150, 120, 1, 151, 121],
            [9, 69, 43, 4, 70, 44],
            [17, 50, 22, 1, 51, 23],
            [2, 42, 14, 19, 43, 15],
            [3, 141, 113, 4, 142, 114],
            [3, 70, 44, 11, 71, 45],
            [17, 47, 21, 4, 48, 22],
            [9, 39, 13, 16, 40, 14],
            [3, 135, 107, 5, 136, 108],
            [3, 67, 41, 13, 68, 42],
            [15, 54, 24, 5, 55, 25],
            [15, 43, 15, 10, 44, 16],
            [4, 144, 116, 4, 145, 117],
            [17, 68, 42],
            [17, 50, 22, 6, 51, 23],
            [19, 46, 16, 6, 47, 17],
            [2, 139, 111, 7, 140, 112],
            [17, 74, 46],
            [7, 54, 24, 16, 55, 25],
            [34, 37, 13],
            [4, 151, 121, 5, 152, 122],
            [4, 75, 47, 14, 76, 48],
            [11, 54, 24, 14, 55, 25],
            [16, 45, 15, 14, 46, 16],
            [6, 147, 117, 4, 148, 118],
            [6, 73, 45, 14, 74, 46],
            [11, 54, 24, 16, 55, 25],
            [30, 46, 16, 2, 47, 17],
            [8, 132, 106, 4, 133, 107],
            [8, 75, 47, 13, 76, 48],
            [7, 54, 24, 22, 55, 25],
            [22, 45, 15, 13, 46, 16],
            [10, 142, 114, 2, 143, 115],
            [19, 74, 46, 4, 75, 47],
            [28, 50, 22, 6, 51, 23],
            [33, 46, 16, 4, 47, 17],
            [8, 152, 122, 4, 153, 123],
            [22, 73, 45, 3, 74, 46],
            [8, 53, 23, 26, 54, 24],
            [12, 45, 15, 28, 46, 16],
            [3, 147, 117, 10, 148, 118],
            [3, 73, 45, 23, 74, 46],
            [4, 54, 24, 31, 55, 25],
            [11, 45, 15, 31, 46, 16],
            [7, 146, 116, 7, 147, 117],
            [21, 73, 45, 7, 74, 46],
            [1, 53, 23, 37, 54, 24],
            [19, 45, 15, 26, 46, 16],
            [5, 145, 115, 10, 146, 116],
            [19, 75, 47, 10, 76, 48],
            [15, 54, 24, 25, 55, 25],
            [23, 45, 15, 25, 46, 16],
            [13, 145, 115, 3, 146, 116],
            [2, 74, 46, 29, 75, 47],
            [42, 54, 24, 1, 55, 25],
            [23, 45, 15, 28, 46, 16],
            [17, 145, 115],
            [10, 74, 46, 23, 75, 47],
            [10, 54, 24, 35, 55, 25],
            [19, 45, 15, 35, 46, 16],
            [17, 145, 115, 1, 146, 116],
            [14, 74, 46, 21, 75, 47],
            [29, 54, 24, 19, 55, 25],
            [11, 45, 15, 46, 46, 16],
            [13, 145, 115, 6, 146, 116],
            [14, 74, 46, 23, 75, 47],
            [44, 54, 24, 7, 55, 25],
            [59, 46, 16, 1, 47, 17],
            [12, 151, 121, 7, 152, 122],
            [12, 75, 47, 26, 76, 48],
            [39, 54, 24, 14, 55, 25],
            [22, 45, 15, 41, 46, 16],
            [6, 151, 121, 14, 152, 122],
            [6, 75, 47, 34, 76, 48],
            [46, 54, 24, 10, 55, 25],
            [2, 45, 15, 64, 46, 16],
            [17, 152, 122, 4, 153, 123],
            [29, 74, 46, 14, 75, 47],
            [49, 54, 24, 10, 55, 25],
            [24, 45, 15, 46, 46, 16],
            [4, 152, 122, 18, 153, 123],
            [13, 74, 46, 32, 75, 47],
            [48, 54, 24, 14, 55, 25],
            [42, 45, 15, 32, 46, 16],
            [20, 147, 117, 4, 148, 118],
            [40, 75, 47, 7, 76, 48],
            [43, 54, 24, 22, 55, 25],
            [10, 45, 15, 67, 46, 16],
            [19, 148, 118, 6, 149, 119],
            [18, 75, 47, 31, 76, 48],
            [34, 54, 24, 34, 55, 25],
            [20, 45, 15, 61, 46, 16],
          ]),
          (g.getRSBlocks = function (e, t) {
            var r = g.getRsBlockTable(e, t);
            if (null == r)
              throw new Error(
                "bad rs block @ typeNumber:" + e + "/errorCorrectLevel:" + t
              );
            for (var i = r.length / 3, n = [], o = 0; o < i; o++)
              for (
                var A = r[3 * o + 0], a = r[3 * o + 1], s = r[3 * o + 2], c = 0;
                c < A;
                c++
              )
                n.push(new g(a, s));
            return n;
          }),
          (g.getRsBlockTable = function (e, t) {
            switch (t) {
              case 1:
                return g.RS_BLOCK_TABLE[4 * (e - 1) + 0];
              case 0:
                return g.RS_BLOCK_TABLE[4 * (e - 1) + 1];
              case 3:
                return g.RS_BLOCK_TABLE[4 * (e - 1) + 2];
              case 2:
                return g.RS_BLOCK_TABLE[4 * (e - 1) + 3];
              default:
                return;
            }
          }),
          (l.prototype = {
            get: function (e) {
              var t = Math.floor(e / 8);
              return 1 == ((this.buffer[t] >>> (7 - (e % 8))) & 1);
            },
            put: function (e, t) {
              for (var r = 0; r < t; r++)
                this.putBit(1 == ((e >>> (t - r - 1)) & 1));
            },
            getLengthInBits: function () {
              return this.length;
            },
            putBit: function (e) {
              var t = Math.floor(this.length / 8);
              this.buffer.length <= t && this.buffer.push(0),
                e && (this.buffer[t] |= 128 >>> this.length % 8),
                this.length++;
            },
          });
        var u = [
          [17, 14, 11, 7],
          [32, 26, 20, 14],
          [53, 42, 32, 24],
          [78, 62, 46, 34],
          [106, 84, 60, 44],
          [134, 106, 74, 58],
          [154, 122, 86, 64],
          [192, 152, 108, 84],
          [230, 180, 130, 98],
          [271, 213, 151, 119],
          [321, 251, 177, 137],
          [367, 287, 203, 155],
          [425, 331, 241, 177],
          [458, 362, 258, 194],
          [520, 412, 292, 220],
          [586, 450, 322, 250],
          [644, 504, 364, 280],
          [718, 560, 394, 310],
          [792, 624, 442, 338],
          [858, 666, 482, 382],
          [929, 711, 509, 403],
          [1003, 779, 565, 439],
          [1091, 857, 611, 461],
          [1171, 911, 661, 511],
          [1273, 997, 715, 535],
          [1367, 1059, 751, 593],
          [1465, 1125, 805, 625],
          [1528, 1190, 868, 658],
          [1628, 1264, 908, 698],
          [1732, 1370, 982, 742],
          [1840, 1452, 1030, 790],
          [1952, 1538, 1112, 842],
          [2068, 1628, 1168, 898],
          [2188, 1722, 1228, 958],
          [2303, 1809, 1283, 983],
          [2431, 1911, 1351, 1051],
          [2563, 1989, 1423, 1093],
          [2699, 2099, 1499, 1139],
          [2809, 2213, 1579, 1219],
          [2953, 2331, 1663, 1273],
        ];
        function h(e) {
          if (
            ((this.options = {
              padding: 4,
              width: 256,
              height: 256,
              typeNumber: 4,
              color: "#000000",
              background: "#ffffff",
              ecl: "M",
            }),
            "string" == typeof e && (e = { content: e }),
            e)
          )
            for (var t in e) this.options[t] = e[t];
          if ("string" != typeof this.options.content)
            throw new Error("Expected 'content' as string!");
          if (0 === this.options.content.length)
            throw new Error("Expected 'content' to be non-empty!");
          if (!(this.options.padding >= 0))
            throw new Error("Expected 'padding' value to be non-negative!");
          if (!(this.options.width > 0 && this.options.height > 0))
            throw new Error(
              "Expected 'width' or 'height' value to be higher than zero!"
            );
          var r = this.options.content,
            i = (function (e, t) {
              for (
                var r = (function (e) {
                    var t = encodeURI(e)
                      .toString()
                      .replace(/\%[0-9a-fA-F]{2}/g, "a");
                    return t.length + (t.length != e ? 3 : 0);
                  })(e),
                  i = 1,
                  n = 0,
                  o = 0,
                  A = u.length;
                o <= A;
                o++
              ) {
                var a = u[o];
                if (!a)
                  throw new Error(
                    "Content too long: expected " + n + " but got " + r
                  );
                switch (t) {
                  case "L":
                    n = a[0];
                    break;
                  case "M":
                    n = a[1];
                    break;
                  case "Q":
                    n = a[2];
                    break;
                  case "H":
                    n = a[3];
                    break;
                  default:
                    throw new Error("Unknwon error correction level: " + t);
                }
                if (r <= n) break;
                i++;
              }
              if (i > u.length) throw new Error("Content too long");
              return i;
            })(r, this.options.ecl),
            o = (function (e) {
              switch (e) {
                case "L":
                  return 1;
                case "M":
                  return 0;
                case "Q":
                  return 3;
                case "H":
                  return 2;
                default:
                  throw new Error("Unknwon error correction level: " + e);
              }
            })(this.options.ecl);
          (this.qrcode = new n(i, o)),
            this.qrcode.addData(r),
            this.qrcode.make();
        }
        (h.prototype.svg = function (e) {
          var t = this.options || {},
            r = this.qrcode.modules;
          void 0 === e && (e = { container: t.container || "svg" });
          for (
            var i = void 0 === t.pretty || !!t.pretty,
              n = i ? "  " : "",
              o = i ? "\r\n" : "",
              A = t.width,
              a = t.height,
              s = r.length,
              c = A / (s + 2 * t.padding),
              g = a / (s + 2 * t.padding),
              l = void 0 !== t.join && !!t.join,
              u = void 0 !== t.swap && !!t.swap,
              h = void 0 === t.xmlDeclaration || !!t.xmlDeclaration,
              I = void 0 !== t.predefined && !!t.predefined,
              p = I
                ? n +
                  '<defs><path id="qrmodule" d="M0 0 h' +
                  g +
                  " v" +
                  c +
                  ' H0 z" style="fill:' +
                  t.color +
                  ';shape-rendering:crispEdges;" /></defs>' +
                  o
                : "",
              d =
                n +
                '<rect x="0" y="0" width="' +
                A +
                '" height="' +
                a +
                '" style="fill:' +
                t.background +
                ';shape-rendering:crispEdges;"/>' +
                o,
              f = "",
              C = "",
              B = 0;
            B < s;
            B++
          )
            for (var E = 0; E < s; E++)
              if (r[E][B]) {
                var y = E * c + t.padding * c,
                  m = B * g + t.padding * g;
                if (u) {
                  var Q = y;
                  (y = m), (m = Q);
                }
                if (l) {
                  var v = c + y,
                    S = g + m;
                  (y = Number.isInteger(y) ? Number(y) : y.toFixed(2)),
                    (m = Number.isInteger(m) ? Number(m) : m.toFixed(2)),
                    (v = Number.isInteger(v) ? Number(v) : v.toFixed(2)),
                    (C +=
                      "M" +
                      y +
                      "," +
                      m +
                      " V" +
                      (S = Number.isInteger(S) ? Number(S) : S.toFixed(2)) +
                      " H" +
                      v +
                      " V" +
                      m +
                      " H" +
                      y +
                      " Z ");
                } else
                  f += I
                    ? n +
                      '<use x="' +
                      y.toString() +
                      '" y="' +
                      m.toString() +
                      '" href="#qrmodule" />' +
                      o
                    : n +
                      '<rect x="' +
                      y.toString() +
                      '" y="' +
                      m.toString() +
                      '" width="' +
                      c +
                      '" height="' +
                      g +
                      '" style="fill:' +
                      t.color +
                      ';shape-rendering:crispEdges;"/>' +
                      o;
              }
          l &&
            (f =
              n +
              '<path x="0" y="0" style="fill:' +
              t.color +
              ';shape-rendering:crispEdges;" d="' +
              C +
              '" />');
          var w = "";
          switch (e.container) {
            case "svg":
              h && (w += '<?xml version="1.0" standalone="yes"?>' + o),
                (w +=
                  '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                  A +
                  '" height="' +
                  a +
                  '">' +
                  o),
                (w += p + d + f),
                (w += "</svg>");
              break;
            case "svg-viewbox":
              h && (w += '<?xml version="1.0" standalone="yes"?>' + o),
                (w +=
                  '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 ' +
                  A +
                  " " +
                  a +
                  '">' +
                  o),
                (w += p + d + f),
                (w += "</svg>");
              break;
            case "g":
              (w += '<g width="' + A + '" height="' + a + '">' + o),
                (w += p + d + f),
                (w += "</g>");
              break;
            default:
              w += (p + d + f).replace(/^\s+/, "");
          }
          return w;
        }),
          (h.prototype.save = function (e, t) {
            var i = this.svg();
            "function" != typeof t && (t = function (e, t) {});
            try {
              r(16081).writeFile(e, i, t);
            } catch (e) {
              t(e);
            }
          }),
          (e.exports = h);
      },
      95003: (e, t, r) => {
        "use strict";
        var i = 65536,
          n = r(77834).Buffer,
          o = r.g.crypto || r.g.msCrypto;
        o && o.getRandomValues
          ? (e.exports = function (e, t) {
              if (e > 4294967295)
                throw new RangeError("requested too many random bytes");
              var r = n.allocUnsafe(e);
              if (e > 0)
                if (e > i)
                  for (var A = 0; A < e; A += i)
                    o.getRandomValues(r.slice(A, A + i));
                else o.getRandomValues(r);
              return "function" == typeof t
                ? process.nextTick(function () {
                    t(null, r);
                  })
                : r;
            })
          : (e.exports = function () {
              throw new Error(
                "Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11"
              );
            });
      },
      64452: (e) => {
        "use strict";
        var t = {};
        function r(e, r, i) {
          i || (i = Error);
          var n = (function (e) {
            var t, i;
            function n(t, i, n) {
              return (
                e.call(
                  this,
                  (function (e, t, i) {
                    return "string" == typeof r ? r : r(e, t, i);
                  })(t, i, n)
                ) || this
              );
            }
            return (
              (i = e),
              ((t = n).prototype = Object.create(i.prototype)),
              (t.prototype.constructor = t),
              (t.__proto__ = i),
              n
            );
          })(i);
          (n.prototype.name = i.name), (n.prototype.code = e), (t[e] = n);
        }
        function i(e, t) {
          if (Array.isArray(e)) {
            var r = e.length;
            return (
              (e = e.map(function (e) {
                return String(e);
              })),
              r > 2
                ? "one of "
                    .concat(t, " ")
                    .concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1]
                : 2 === r
                ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1])
                : "of ".concat(t, " ").concat(e[0])
            );
          }
          return "of ".concat(t, " ").concat(String(e));
        }
        r(
          "ERR_INVALID_OPT_VALUE",
          function (e, t) {
            return 'The value "' + t + '" is invalid for option "' + e + '"';
          },
          TypeError
        ),
          r(
            "ERR_INVALID_ARG_TYPE",
            function (e, t, r) {
              var n, o, A, a, s;
              if (
                ("string" == typeof t &&
                ((o = "not "), t.substr(0, o.length) === o)
                  ? ((n = "must not be"), (t = t.replace(/^not /, "")))
                  : (n = "must be"),
                (function (e, t, r) {
                  return (
                    (void 0 === r || r > e.length) && (r = e.length),
                    e.substring(r - t.length, r) === t
                  );
                })(e, " argument"))
              )
                A = "The ".concat(e, " ").concat(n, " ").concat(i(t, "type"));
              else {
                var c =
                  ("number" != typeof s && (s = 0),
                  s + ".".length > (a = e).length || -1 === a.indexOf(".", s)
                    ? "argument"
                    : "property");
                A = 'The "'
                  .concat(e, '" ')
                  .concat(c, " ")
                  .concat(n, " ")
                  .concat(i(t, "type"));
              }
              return A + ". Received type ".concat(typeof r);
            },
            TypeError
          ),
          r("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
          r("ERR_METHOD_NOT_IMPLEMENTED", function (e) {
            return "The " + e + " method is not implemented";
          }),
          r("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
          r("ERR_STREAM_DESTROYED", function (e) {
            return "Cannot call " + e + " after a stream was destroyed";
          }),
          r("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
          r("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
          r("ERR_STREAM_WRITE_AFTER_END", "write after end"),
          r(
            "ERR_STREAM_NULL_VALUES",
            "May not write null values to stream",
            TypeError
          ),
          r(
            "ERR_UNKNOWN_ENCODING",
            function (e) {
              return "Unknown encoding: " + e;
            },
            TypeError
          ),
          r(
            "ERR_STREAM_UNSHIFT_AFTER_END_EVENT",
            "stream.unshift() after end event"
          ),
          (e.exports.q = t);
      },
      77073: (e, t, r) => {
        "use strict";
        var i =
          Object.keys ||
          function (e) {
            var t = [];
            for (var r in e) t.push(r);
            return t;
          };
        e.exports = c;
        var n = r(28051),
          o = r(2557);
        r(91285)(c, n);
        for (var A = i(o.prototype), a = 0; a < A.length; a++) {
          var s = A[a];
          c.prototype[s] || (c.prototype[s] = o.prototype[s]);
        }
        function c(e) {
          if (!(this instanceof c)) return new c(e);
          n.call(this, e),
            o.call(this, e),
            (this.allowHalfOpen = !0),
            e &&
              (!1 === e.readable && (this.readable = !1),
              !1 === e.writable && (this.writable = !1),
              !1 === e.allowHalfOpen &&
                ((this.allowHalfOpen = !1), this.once("end", g)));
        }
        function g() {
          this._writableState.ended || process.nextTick(l, this);
        }
        function l(e) {
          e.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._writableState.highWaterMark;
          },
        }),
          Object.defineProperty(c.prototype, "writableBuffer", {
            enumerable: !1,
            get: function () {
              return this._writableState && this._writableState.getBuffer();
            },
          }),
          Object.defineProperty(c.prototype, "writableLength", {
            enumerable: !1,
            get: function () {
              return this._writableState.length;
            },
          }),
          Object.defineProperty(c.prototype, "destroyed", {
            enumerable: !1,
            get: function () {
              return (
                void 0 !== this._readableState &&
                void 0 !== this._writableState &&
                this._readableState.destroyed &&
                this._writableState.destroyed
              );
            },
            set: function (e) {
              void 0 !== this._readableState &&
                void 0 !== this._writableState &&
                ((this._readableState.destroyed = e),
                (this._writableState.destroyed = e));
            },
          });
      },
      95163: (e, t, r) => {
        "use strict";
        e.exports = n;
        var i = r(27640);
        function n(e) {
          if (!(this instanceof n)) return new n(e);
          i.call(this, e);
        }
        r(91285)(n, i),
          (n.prototype._transform = function (e, t, r) {
            r(null, e);
          });
      },
      28051: (e, t, r) => {
        "use strict";
        var i;
        (e.exports = v), (v.ReadableState = Q), r(22699).EventEmitter;
        var n,
          o = function (e, t) {
            return e.listeners(t).length;
          },
          A = r(15010),
          a = r(48834).Buffer,
          s = r.g.Uint8Array || function () {},
          c = r(66602);
        n = c && c.debuglog ? c.debuglog("stream") : function () {};
        var g,
          l,
          u,
          h = r(56637),
          I = r(12262),
          p = r(87605).getHighWaterMark,
          d = r(64452).q,
          f = d.ERR_INVALID_ARG_TYPE,
          C = d.ERR_STREAM_PUSH_AFTER_EOF,
          B = d.ERR_METHOD_NOT_IMPLEMENTED,
          E = d.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r(91285)(v, A);
        var y = I.errorOrDestroy,
          m = ["error", "close", "destroy", "pause", "resume"];
        function Q(e, t, n) {
          (i = i || r(77073)),
            (e = e || {}),
            "boolean" != typeof n && (n = t instanceof i),
            (this.objectMode = !!e.objectMode),
            n && (this.objectMode = this.objectMode || !!e.readableObjectMode),
            (this.highWaterMark = p(this, e, "readableHighWaterMark", n)),
            (this.buffer = new h()),
            (this.length = 0),
            (this.pipes = null),
            (this.pipesCount = 0),
            (this.flowing = null),
            (this.ended = !1),
            (this.endEmitted = !1),
            (this.reading = !1),
            (this.sync = !0),
            (this.needReadable = !1),
            (this.emittedReadable = !1),
            (this.readableListening = !1),
            (this.resumeScheduled = !1),
            (this.paused = !0),
            (this.emitClose = !1 !== e.emitClose),
            (this.autoDestroy = !!e.autoDestroy),
            (this.destroyed = !1),
            (this.defaultEncoding = e.defaultEncoding || "utf8"),
            (this.awaitDrain = 0),
            (this.readingMore = !1),
            (this.decoder = null),
            (this.encoding = null),
            e.encoding &&
              (g || (g = r(31922).s),
              (this.decoder = new g(e.encoding)),
              (this.encoding = e.encoding));
        }
        function v(e) {
          if (((i = i || r(77073)), !(this instanceof v))) return new v(e);
          var t = this instanceof i;
          (this._readableState = new Q(e, this, t)),
            (this.readable = !0),
            e &&
              ("function" == typeof e.read && (this._read = e.read),
              "function" == typeof e.destroy && (this._destroy = e.destroy)),
            A.call(this);
        }
        function S(e, t, r, i, o) {
          n("readableAddChunk", t);
          var A,
            c = e._readableState;
          if (null === t)
            (c.reading = !1),
              (function (e, t) {
                if ((n("onEofChunk"), !t.ended)) {
                  if (t.decoder) {
                    var r = t.decoder.end();
                    r &&
                      r.length &&
                      (t.buffer.push(r),
                      (t.length += t.objectMode ? 1 : r.length));
                  }
                  (t.ended = !0),
                    t.sync
                      ? N(e)
                      : ((t.needReadable = !1),
                        t.emittedReadable || ((t.emittedReadable = !0), _(e)));
                }
              })(e, c);
          else if (
            (o ||
              (A = (function (e, t) {
                var r, i;
                return (
                  (i = t),
                  a.isBuffer(i) ||
                    i instanceof s ||
                    "string" == typeof t ||
                    void 0 === t ||
                    e.objectMode ||
                    (r = new f("chunk", ["string", "Buffer", "Uint8Array"], t)),
                  r
                );
              })(c, t)),
            A)
          )
            y(e, A);
          else if (c.objectMode || (t && t.length > 0))
            if (
              ("string" == typeof t ||
                c.objectMode ||
                Object.getPrototypeOf(t) === a.prototype ||
                (t = (function (e) {
                  return a.from(e);
                })(t)),
              i)
            )
              c.endEmitted ? y(e, new E()) : w(e, c, t, !0);
            else if (c.ended) y(e, new C());
            else {
              if (c.destroyed) return !1;
              (c.reading = !1),
                c.decoder && !r
                  ? ((t = c.decoder.write(t)),
                    c.objectMode || 0 !== t.length ? w(e, c, t, !1) : D(e, c))
                  : w(e, c, t, !1);
            }
          else i || ((c.reading = !1), D(e, c));
          return !c.ended && (c.length < c.highWaterMark || 0 === c.length);
        }
        function w(e, t, r, i) {
          t.flowing && 0 === t.length && !t.sync
            ? ((t.awaitDrain = 0), e.emit("data", r))
            : ((t.length += t.objectMode ? 1 : r.length),
              i ? t.buffer.unshift(r) : t.buffer.push(r),
              t.needReadable && N(e)),
            D(e, t);
        }
        Object.defineProperty(v.prototype, "destroyed", {
          enumerable: !1,
          get: function () {
            return (
              void 0 !== this._readableState && this._readableState.destroyed
            );
          },
          set: function (e) {
            this._readableState && (this._readableState.destroyed = e);
          },
        }),
          (v.prototype.destroy = I.destroy),
          (v.prototype._undestroy = I.undestroy),
          (v.prototype._destroy = function (e, t) {
            t(e);
          }),
          (v.prototype.push = function (e, t) {
            var r,
              i = this._readableState;
            return (
              i.objectMode
                ? (r = !0)
                : "string" == typeof e &&
                  ((t = t || i.defaultEncoding) !== i.encoding &&
                    ((e = a.from(e, t)), (t = "")),
                  (r = !0)),
              S(this, e, t, !1, r)
            );
          }),
          (v.prototype.unshift = function (e) {
            return S(this, e, null, !0, !1);
          }),
          (v.prototype.isPaused = function () {
            return !1 === this._readableState.flowing;
          }),
          (v.prototype.setEncoding = function (e) {
            g || (g = r(31922).s);
            var t = new g(e);
            (this._readableState.decoder = t),
              (this._readableState.encoding =
                this._readableState.decoder.encoding);
            for (var i = this._readableState.buffer.head, n = ""; null !== i; )
              (n += t.write(i.data)), (i = i.next);
            return (
              this._readableState.buffer.clear(),
              "" !== n && this._readableState.buffer.push(n),
              (this._readableState.length = n.length),
              this
            );
          });
        var b = 1073741824;
        function k(e, t) {
          return e <= 0 || (0 === t.length && t.ended)
            ? 0
            : t.objectMode
            ? 1
            : e != e
            ? t.flowing && t.length
              ? t.buffer.head.data.length
              : t.length
            : (e > t.highWaterMark &&
                (t.highWaterMark = (function (e) {
                  return (
                    e >= b
                      ? (e = b)
                      : (e--,
                        (e |= e >>> 1),
                        (e |= e >>> 2),
                        (e |= e >>> 4),
                        (e |= e >>> 8),
                        (e |= e >>> 16),
                        e++),
                    e
                  );
                })(e)),
              e <= t.length
                ? e
                : t.ended
                ? t.length
                : ((t.needReadable = !0), 0));
        }
        function N(e) {
          var t = e._readableState;
          n("emitReadable", t.needReadable, t.emittedReadable),
            (t.needReadable = !1),
            t.emittedReadable ||
              (n("emitReadable", t.flowing),
              (t.emittedReadable = !0),
              process.nextTick(_, e));
        }
        function _(e) {
          var t = e._readableState;
          n("emitReadable_", t.destroyed, t.length, t.ended),
            t.destroyed ||
              (!t.length && !t.ended) ||
              (e.emit("readable"), (t.emittedReadable = !1)),
            (t.needReadable =
              !t.flowing && !t.ended && t.length <= t.highWaterMark),
            R(e);
        }
        function D(e, t) {
          t.readingMore || ((t.readingMore = !0), process.nextTick(O, e, t));
        }
        function O(e, t) {
          for (
            ;
            !t.reading &&
            !t.ended &&
            (t.length < t.highWaterMark || (t.flowing && 0 === t.length));

          ) {
            var r = t.length;
            if ((n("maybeReadMore read 0"), e.read(0), r === t.length)) break;
          }
          t.readingMore = !1;
        }
        function T(e) {
          var t = e._readableState;
          (t.readableListening = e.listenerCount("readable") > 0),
            t.resumeScheduled && !t.paused
              ? (t.flowing = !0)
              : e.listenerCount("data") > 0 && e.resume();
        }
        function P(e) {
          n("readable nexttick read 0"), e.read(0);
        }
        function x(e, t) {
          n("resume", t.reading),
            t.reading || e.read(0),
            (t.resumeScheduled = !1),
            e.emit("resume"),
            R(e),
            t.flowing && !t.reading && e.read(0);
        }
        function R(e) {
          var t = e._readableState;
          for (n("flow", t.flowing); t.flowing && null !== e.read(); );
        }
        function U(e, t) {
          return 0 === t.length
            ? null
            : (t.objectMode
                ? (r = t.buffer.shift())
                : !e || e >= t.length
                ? ((r = t.decoder
                    ? t.buffer.join("")
                    : 1 === t.buffer.length
                    ? t.buffer.first()
                    : t.buffer.concat(t.length)),
                  t.buffer.clear())
                : (r = t.buffer.consume(e, t.decoder)),
              r);
          var r;
        }
        function F(e) {
          var t = e._readableState;
          n("endReadable", t.endEmitted),
            t.endEmitted || ((t.ended = !0), process.nextTick(H, t, e));
        }
        function H(e, t) {
          if (
            (n("endReadableNT", e.endEmitted, e.length),
            !e.endEmitted &&
              0 === e.length &&
              ((e.endEmitted = !0),
              (t.readable = !1),
              t.emit("end"),
              e.autoDestroy))
          ) {
            var r = t._writableState;
            (!r || (r.autoDestroy && r.finished)) && t.destroy();
          }
        }
        function M(e, t) {
          for (var r = 0, i = e.length; r < i; r++) if (e[r] === t) return r;
          return -1;
        }
        (v.prototype.read = function (e) {
          n("read", e), (e = parseInt(e, 10));
          var t = this._readableState,
            r = e;
          if (
            (0 !== e && (t.emittedReadable = !1),
            0 === e &&
              t.needReadable &&
              ((0 !== t.highWaterMark
                ? t.length >= t.highWaterMark
                : t.length > 0) ||
                t.ended))
          )
            return (
              n("read: emitReadable", t.length, t.ended),
              0 === t.length && t.ended ? F(this) : N(this),
              null
            );
          if (0 === (e = k(e, t)) && t.ended)
            return 0 === t.length && F(this), null;
          var i,
            o = t.needReadable;
          return (
            n("need readable", o),
            (0 === t.length || t.length - e < t.highWaterMark) &&
              n("length less than watermark", (o = !0)),
            t.ended || t.reading
              ? n("reading or ended", (o = !1))
              : o &&
                (n("do read"),
                (t.reading = !0),
                (t.sync = !0),
                0 === t.length && (t.needReadable = !0),
                this._read(t.highWaterMark),
                (t.sync = !1),
                t.reading || (e = k(r, t))),
            null === (i = e > 0 ? U(e, t) : null)
              ? ((t.needReadable = t.length <= t.highWaterMark), (e = 0))
              : ((t.length -= e), (t.awaitDrain = 0)),
            0 === t.length &&
              (t.ended || (t.needReadable = !0), r !== e && t.ended && F(this)),
            null !== i && this.emit("data", i),
            i
          );
        }),
          (v.prototype._read = function (e) {
            y(this, new B("_read()"));
          }),
          (v.prototype.pipe = function (e, t) {
            var r = this,
              i = this._readableState;
            switch (i.pipesCount) {
              case 0:
                i.pipes = e;
                break;
              case 1:
                i.pipes = [i.pipes, e];
                break;
              default:
                i.pipes.push(e);
            }
            (i.pipesCount += 1), n("pipe count=%d opts=%j", i.pipesCount, t);
            var A =
              (t && !1 === t.end) ||
              e === process.stdout ||
              e === process.stderr
                ? I
                : a;
            function a() {
              n("onend"), e.end();
            }
            i.endEmitted ? process.nextTick(A) : r.once("end", A),
              e.on("unpipe", function t(o, A) {
                n("onunpipe"),
                  o === r &&
                    A &&
                    !1 === A.hasUnpiped &&
                    ((A.hasUnpiped = !0),
                    n("cleanup"),
                    e.removeListener("close", u),
                    e.removeListener("finish", h),
                    e.removeListener("drain", s),
                    e.removeListener("error", l),
                    e.removeListener("unpipe", t),
                    r.removeListener("end", a),
                    r.removeListener("end", I),
                    r.removeListener("data", g),
                    (c = !0),
                    !i.awaitDrain ||
                      (e._writableState && !e._writableState.needDrain) ||
                      s());
              });
            var s = (function (e) {
              return function () {
                var t = e._readableState;
                n("pipeOnDrain", t.awaitDrain),
                  t.awaitDrain && t.awaitDrain--,
                  0 === t.awaitDrain &&
                    o(e, "data") &&
                    ((t.flowing = !0), R(e));
              };
            })(r);
            e.on("drain", s);
            var c = !1;
            function g(t) {
              n("ondata");
              var o = e.write(t);
              n("dest.write", o),
                !1 === o &&
                  (((1 === i.pipesCount && i.pipes === e) ||
                    (i.pipesCount > 1 && -1 !== M(i.pipes, e))) &&
                    !c &&
                    (n("false write response, pause", i.awaitDrain),
                    i.awaitDrain++),
                  r.pause());
            }
            function l(t) {
              n("onerror", t),
                I(),
                e.removeListener("error", l),
                0 === o(e, "error") && y(e, t);
            }
            function u() {
              e.removeListener("finish", h), I();
            }
            function h() {
              n("onfinish"), e.removeListener("close", u), I();
            }
            function I() {
              n("unpipe"), r.unpipe(e);
            }
            return (
              r.on("data", g),
              (function (e, t, r) {
                if ("function" == typeof e.prependListener)
                  return e.prependListener(t, r);
                e._events && e._events.error
                  ? Array.isArray(e._events.error)
                    ? e._events.error.unshift(r)
                    : (e._events.error = [r, e._events.error])
                  : e.on(t, r);
              })(e, "error", l),
              e.once("close", u),
              e.once("finish", h),
              e.emit("pipe", r),
              i.flowing || (n("pipe resume"), r.resume()),
              e
            );
          }),
          (v.prototype.unpipe = function (e) {
            var t = this._readableState,
              r = { hasUnpiped: !1 };
            if (0 === t.pipesCount) return this;
            if (1 === t.pipesCount)
              return (
                (e && e !== t.pipes) ||
                  (e || (e = t.pipes),
                  (t.pipes = null),
                  (t.pipesCount = 0),
                  (t.flowing = !1),
                  e && e.emit("unpipe", this, r)),
                this
              );
            if (!e) {
              var i = t.pipes,
                n = t.pipesCount;
              (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1);
              for (var o = 0; o < n; o++)
                i[o].emit("unpipe", this, { hasUnpiped: !1 });
              return this;
            }
            var A = M(t.pipes, e);
            return (
              -1 === A ||
                (t.pipes.splice(A, 1),
                (t.pipesCount -= 1),
                1 === t.pipesCount && (t.pipes = t.pipes[0]),
                e.emit("unpipe", this, r)),
              this
            );
          }),
          (v.prototype.on = function (e, t) {
            var r = A.prototype.on.call(this, e, t),
              i = this._readableState;
            return (
              "data" === e
                ? ((i.readableListening = this.listenerCount("readable") > 0),
                  !1 !== i.flowing && this.resume())
                : "readable" === e &&
                  (i.endEmitted ||
                    i.readableListening ||
                    ((i.readableListening = i.needReadable = !0),
                    (i.flowing = !1),
                    (i.emittedReadable = !1),
                    n("on readable", i.length, i.reading),
                    i.length
                      ? N(this)
                      : i.reading || process.nextTick(P, this))),
              r
            );
          }),
          (v.prototype.addListener = v.prototype.on),
          (v.prototype.removeListener = function (e, t) {
            var r = A.prototype.removeListener.call(this, e, t);
            return "readable" === e && process.nextTick(T, this), r;
          }),
          (v.prototype.removeAllListeners = function (e) {
            var t = A.prototype.removeAllListeners.apply(this, arguments);
            return (
              ("readable" !== e && void 0 !== e) || process.nextTick(T, this), t
            );
          }),
          (v.prototype.resume = function () {
            var e = this._readableState;
            return (
              e.flowing ||
                (n("resume"),
                (e.flowing = !e.readableListening),
                (function (e, t) {
                  t.resumeScheduled ||
                    ((t.resumeScheduled = !0), process.nextTick(x, e, t));
                })(this, e)),
              (e.paused = !1),
              this
            );
          }),
          (v.prototype.pause = function () {
            return (
              n("call pause flowing=%j", this._readableState.flowing),
              !1 !== this._readableState.flowing &&
                (n("pause"),
                (this._readableState.flowing = !1),
                this.emit("pause")),
              (this._readableState.paused = !0),
              this
            );
          }),
          (v.prototype.wrap = function (e) {
            var t = this,
              r = this._readableState,
              i = !1;
            for (var o in (e.on("end", function () {
              if ((n("wrapped end"), r.decoder && !r.ended)) {
                var e = r.decoder.end();
                e && e.length && t.push(e);
              }
              t.push(null);
            }),
            e.on("data", function (o) {
              n("wrapped data"),
                r.decoder && (o = r.decoder.write(o)),
                (r.objectMode && null == o) ||
                  ((r.objectMode || (o && o.length)) &&
                    (t.push(o) || ((i = !0), e.pause())));
            }),
            e))
              void 0 === this[o] &&
                "function" == typeof e[o] &&
                (this[o] = (function (t) {
                  return function () {
                    return e[t].apply(e, arguments);
                  };
                })(o));
            for (var A = 0; A < m.length; A++)
              e.on(m[A], this.emit.bind(this, m[A]));
            return (
              (this._read = function (t) {
                n("wrapped _read", t), i && ((i = !1), e.resume());
              }),
              this
            );
          }),
          "function" == typeof Symbol &&
            (v.prototype[Symbol.asyncIterator] = function () {
              return void 0 === l && (l = r(1029)), l(this);
            }),
          Object.defineProperty(v.prototype, "readableHighWaterMark", {
            enumerable: !1,
            get: function () {
              return this._readableState.highWaterMark;
            },
          }),
          Object.defineProperty(v.prototype, "readableBuffer", {
            enumerable: !1,
            get: function () {
              return this._readableState && this._readableState.buffer;
            },
          }),
          Object.defineProperty(v.prototype, "readableFlowing", {
            enumerable: !1,
            get: function () {
              return this._readableState.flowing;
            },
            set: function (e) {
              this._readableState && (this._readableState.flowing = e);
            },
          }),
          (v._fromList = U),
          Object.defineProperty(v.prototype, "readableLength", {
            enumerable: !1,
            get: function () {
              return this._readableState.length;
            },
          }),
          "function" == typeof Symbol &&
            (v.from = function (e, t) {
              return void 0 === u && (u = r(90352)), u(v, e, t);
            });
      },
      27640: (e, t, r) => {
        "use strict";
        e.exports = g;
        var i = r(64452).q,
          n = i.ERR_METHOD_NOT_IMPLEMENTED,
          o = i.ERR_MULTIPLE_CALLBACK,
          A = i.ERR_TRANSFORM_ALREADY_TRANSFORMING,
          a = i.ERR_TRANSFORM_WITH_LENGTH_0,
          s = r(77073);
        function c(e, t) {
          var r = this._transformState;
          r.transforming = !1;
          var i = r.writecb;
          if (null === i) return this.emit("error", new o());
          (r.writechunk = null),
            (r.writecb = null),
            null != t && this.push(t),
            i(e);
          var n = this._readableState;
          (n.reading = !1),
            (n.needReadable || n.length < n.highWaterMark) &&
              this._read(n.highWaterMark);
        }
        function g(e) {
          if (!(this instanceof g)) return new g(e);
          s.call(this, e),
            (this._transformState = {
              afterTransform: c.bind(this),
              needTransform: !1,
              transforming: !1,
              writecb: null,
              writechunk: null,
              writeencoding: null,
            }),
            (this._readableState.needReadable = !0),
            (this._readableState.sync = !1),
            e &&
              ("function" == typeof e.transform &&
                (this._transform = e.transform),
              "function" == typeof e.flush && (this._flush = e.flush)),
            this.on("prefinish", l);
        }
        function l() {
          var e = this;
          "function" != typeof this._flush || this._readableState.destroyed
            ? u(this, null, null)
            : this._flush(function (t, r) {
                u(e, t, r);
              });
        }
        function u(e, t, r) {
          if (t) return e.emit("error", t);
          if ((null != r && e.push(r), e._writableState.length)) throw new a();
          if (e._transformState.transforming) throw new A();
          return e.push(null);
        }
        r(91285)(g, s),
          (g.prototype.push = function (e, t) {
            return (
              (this._transformState.needTransform = !1),
              s.prototype.push.call(this, e, t)
            );
          }),
          (g.prototype._transform = function (e, t, r) {
            r(new n("_transform()"));
          }),
          (g.prototype._write = function (e, t, r) {
            var i = this._transformState;
            if (
              ((i.writecb = r),
              (i.writechunk = e),
              (i.writeencoding = t),
              !i.transforming)
            ) {
              var n = this._readableState;
              (i.needTransform ||
                n.needReadable ||
                n.length < n.highWaterMark) &&
                this._read(n.highWaterMark);
            }
          }),
          (g.prototype._read = function (e) {
            var t = this._transformState;
            null === t.writechunk || t.transforming
              ? (t.needTransform = !0)
              : ((t.transforming = !0),
                this._transform(
                  t.writechunk,
                  t.writeencoding,
                  t.afterTransform
                ));
          }),
          (g.prototype._destroy = function (e, t) {
            s.prototype._destroy.call(this, e, function (e) {
              t(e);
            });
          });
      },
      2557: (e, t, r) => {
        "use strict";
        function i(e) {
          var t = this;
          (this.next = null),
            (this.entry = null),
            (this.finish = function () {
              !(function (e, t, r) {
                var i = e.entry;
                for (e.entry = null; i; ) {
                  var n = i.callback;
                  t.pendingcb--, n(undefined), (i = i.next);
                }
                t.corkedRequestsFree.next = e;
              })(t, e);
            });
        }
        var n;
        (e.exports = v), (v.WritableState = Q);
        var o,
          A = { deprecate: r(5803) },
          a = r(15010),
          s = r(48834).Buffer,
          c = r.g.Uint8Array || function () {},
          g = r(12262),
          l = r(87605).getHighWaterMark,
          u = r(64452).q,
          h = u.ERR_INVALID_ARG_TYPE,
          I = u.ERR_METHOD_NOT_IMPLEMENTED,
          p = u.ERR_MULTIPLE_CALLBACK,
          d = u.ERR_STREAM_CANNOT_PIPE,
          f = u.ERR_STREAM_DESTROYED,
          C = u.ERR_STREAM_NULL_VALUES,
          B = u.ERR_STREAM_WRITE_AFTER_END,
          E = u.ERR_UNKNOWN_ENCODING,
          y = g.errorOrDestroy;
        function m() {}
        function Q(e, t, o) {
          (n = n || r(77073)),
            (e = e || {}),
            "boolean" != typeof o && (o = t instanceof n),
            (this.objectMode = !!e.objectMode),
            o && (this.objectMode = this.objectMode || !!e.writableObjectMode),
            (this.highWaterMark = l(this, e, "writableHighWaterMark", o)),
            (this.finalCalled = !1),
            (this.needDrain = !1),
            (this.ending = !1),
            (this.ended = !1),
            (this.finished = !1),
            (this.destroyed = !1);
          var A = !1 === e.decodeStrings;
          (this.decodeStrings = !A),
            (this.defaultEncoding = e.defaultEncoding || "utf8"),
            (this.length = 0),
            (this.writing = !1),
            (this.corked = 0),
            (this.sync = !0),
            (this.bufferProcessing = !1),
            (this.onwrite = function (e) {
              !(function (e, t) {
                var r = e._writableState,
                  i = r.sync,
                  n = r.writecb;
                if ("function" != typeof n) throw new p();
                if (
                  ((function (e) {
                    (e.writing = !1),
                      (e.writecb = null),
                      (e.length -= e.writelen),
                      (e.writelen = 0);
                  })(r),
                  t)
                )
                  !(function (e, t, r, i, n) {
                    --t.pendingcb,
                      r
                        ? (process.nextTick(n, i),
                          process.nextTick(_, e, t),
                          (e._writableState.errorEmitted = !0),
                          y(e, i))
                        : (n(i),
                          (e._writableState.errorEmitted = !0),
                          y(e, i),
                          _(e, t));
                  })(e, r, i, t, n);
                else {
                  var o = k(r) || e.destroyed;
                  o ||
                    r.corked ||
                    r.bufferProcessing ||
                    !r.bufferedRequest ||
                    b(e, r),
                    i ? process.nextTick(w, e, r, o, n) : w(e, r, o, n);
                }
              })(t, e);
            }),
            (this.writecb = null),
            (this.writelen = 0),
            (this.bufferedRequest = null),
            (this.lastBufferedRequest = null),
            (this.pendingcb = 0),
            (this.prefinished = !1),
            (this.errorEmitted = !1),
            (this.emitClose = !1 !== e.emitClose),
            (this.autoDestroy = !!e.autoDestroy),
            (this.bufferedRequestCount = 0),
            (this.corkedRequestsFree = new i(this));
        }
        function v(e) {
          var t = this instanceof (n = n || r(77073));
          if (!t && !o.call(v, this)) return new v(e);
          (this._writableState = new Q(e, this, t)),
            (this.writable = !0),
            e &&
              ("function" == typeof e.write && (this._write = e.write),
              "function" == typeof e.writev && (this._writev = e.writev),
              "function" == typeof e.destroy && (this._destroy = e.destroy),
              "function" == typeof e.final && (this._final = e.final)),
            a.call(this);
        }
        function S(e, t, r, i, n, o, A) {
          (t.writelen = i),
            (t.writecb = A),
            (t.writing = !0),
            (t.sync = !0),
            t.destroyed
              ? t.onwrite(new f("write"))
              : r
              ? e._writev(n, t.onwrite)
              : e._write(n, o, t.onwrite),
            (t.sync = !1);
        }
        function w(e, t, r, i) {
          r ||
            (function (e, t) {
              0 === t.length &&
                t.needDrain &&
                ((t.needDrain = !1), e.emit("drain"));
            })(e, t),
            t.pendingcb--,
            i(),
            _(e, t);
        }
        function b(e, t) {
          t.bufferProcessing = !0;
          var r = t.bufferedRequest;
          if (e._writev && r && r.next) {
            var n = t.bufferedRequestCount,
              o = new Array(n),
              A = t.corkedRequestsFree;
            A.entry = r;
            for (var a = 0, s = !0; r; )
              (o[a] = r), r.isBuf || (s = !1), (r = r.next), (a += 1);
            (o.allBuffers = s),
              S(e, t, !0, t.length, o, "", A.finish),
              t.pendingcb++,
              (t.lastBufferedRequest = null),
              A.next
                ? ((t.corkedRequestsFree = A.next), (A.next = null))
                : (t.corkedRequestsFree = new i(t)),
              (t.bufferedRequestCount = 0);
          } else {
            for (; r; ) {
              var c = r.chunk,
                g = r.encoding,
                l = r.callback;
              if (
                (S(e, t, !1, t.objectMode ? 1 : c.length, c, g, l),
                (r = r.next),
                t.bufferedRequestCount--,
                t.writing)
              )
                break;
            }
            null === r && (t.lastBufferedRequest = null);
          }
          (t.bufferedRequest = r), (t.bufferProcessing = !1);
        }
        function k(e) {
          return (
            e.ending &&
            0 === e.length &&
            null === e.bufferedRequest &&
            !e.finished &&
            !e.writing
          );
        }
        function N(e, t) {
          e._final(function (r) {
            t.pendingcb--,
              r && y(e, r),
              (t.prefinished = !0),
              e.emit("prefinish"),
              _(e, t);
          });
        }
        function _(e, t) {
          var r = k(t);
          if (
            r &&
            ((function (e, t) {
              t.prefinished ||
                t.finalCalled ||
                ("function" != typeof e._final || t.destroyed
                  ? ((t.prefinished = !0), e.emit("prefinish"))
                  : (t.pendingcb++,
                    (t.finalCalled = !0),
                    process.nextTick(N, e, t)));
            })(e, t),
            0 === t.pendingcb &&
              ((t.finished = !0), e.emit("finish"), t.autoDestroy))
          ) {
            var i = e._readableState;
            (!i || (i.autoDestroy && i.endEmitted)) && e.destroy();
          }
          return r;
        }
        r(91285)(v, a),
          (Q.prototype.getBuffer = function () {
            for (var e = this.bufferedRequest, t = []; e; )
              t.push(e), (e = e.next);
            return t;
          }),
          (function () {
            try {
              Object.defineProperty(Q.prototype, "buffer", {
                get: A.deprecate(
                  function () {
                    return this.getBuffer();
                  },
                  "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                  "DEP0003"
                ),
              });
            } catch (e) {}
          })(),
          "function" == typeof Symbol &&
          Symbol.hasInstance &&
          "function" == typeof Function.prototype[Symbol.hasInstance]
            ? ((o = Function.prototype[Symbol.hasInstance]),
              Object.defineProperty(v, Symbol.hasInstance, {
                value: function (e) {
                  return (
                    !!o.call(this, e) ||
                    (this === v && e && e._writableState instanceof Q)
                  );
                },
              }))
            : (o = function (e) {
                return e instanceof this;
              }),
          (v.prototype.pipe = function () {
            y(this, new d());
          }),
          (v.prototype.write = function (e, t, r) {
            var i,
              n = this._writableState,
              o = !1,
              A = !n.objectMode && ((i = e), s.isBuffer(i) || i instanceof c);
            return (
              A &&
                !s.isBuffer(e) &&
                (e = (function (e) {
                  return s.from(e);
                })(e)),
              "function" == typeof t && ((r = t), (t = null)),
              A ? (t = "buffer") : t || (t = n.defaultEncoding),
              "function" != typeof r && (r = m),
              n.ending
                ? (function (e, t) {
                    var r = new B();
                    y(e, r), process.nextTick(t, r);
                  })(this, r)
                : (A ||
                    (function (e, t, r, i) {
                      var n;
                      return (
                        null === r
                          ? (n = new C())
                          : "string" == typeof r ||
                            t.objectMode ||
                            (n = new h("chunk", ["string", "Buffer"], r)),
                        !n || (y(e, n), process.nextTick(i, n), !1)
                      );
                    })(this, n, e, r)) &&
                  (n.pendingcb++,
                  (o = (function (e, t, r, i, n, o) {
                    if (!r) {
                      var A = (function (e, t, r) {
                        return (
                          e.objectMode ||
                            !1 === e.decodeStrings ||
                            "string" != typeof t ||
                            (t = s.from(t, r)),
                          t
                        );
                      })(t, i, n);
                      i !== A && ((r = !0), (n = "buffer"), (i = A));
                    }
                    var a = t.objectMode ? 1 : i.length;
                    t.length += a;
                    var c = t.length < t.highWaterMark;
                    if ((c || (t.needDrain = !0), t.writing || t.corked)) {
                      var g = t.lastBufferedRequest;
                      (t.lastBufferedRequest = {
                        chunk: i,
                        encoding: n,
                        isBuf: r,
                        callback: o,
                        next: null,
                      }),
                        g
                          ? (g.next = t.lastBufferedRequest)
                          : (t.bufferedRequest = t.lastBufferedRequest),
                        (t.bufferedRequestCount += 1);
                    } else S(e, t, !1, a, i, n, o);
                    return c;
                  })(this, n, A, e, t, r))),
              o
            );
          }),
          (v.prototype.cork = function () {
            this._writableState.corked++;
          }),
          (v.prototype.uncork = function () {
            var e = this._writableState;
            e.corked &&
              (e.corked--,
              e.writing ||
                e.corked ||
                e.bufferProcessing ||
                !e.bufferedRequest ||
                b(this, e));
          }),
          (v.prototype.setDefaultEncoding = function (e) {
            if (
              ("string" == typeof e && (e = e.toLowerCase()),
              !(
                [
                  "hex",
                  "utf8",
                  "utf-8",
                  "ascii",
                  "binary",
                  "base64",
                  "ucs2",
                  "ucs-2",
                  "utf16le",
                  "utf-16le",
                  "raw",
                ].indexOf((e + "").toLowerCase()) > -1
              ))
            )
              throw new E(e);
            return (this._writableState.defaultEncoding = e), this;
          }),
          Object.defineProperty(v.prototype, "writableBuffer", {
            enumerable: !1,
            get: function () {
              return this._writableState && this._writableState.getBuffer();
            },
          }),
          Object.defineProperty(v.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function () {
              return this._writableState.highWaterMark;
            },
          }),
          (v.prototype._write = function (e, t, r) {
            r(new I("_write()"));
          }),
          (v.prototype._writev = null),
          (v.prototype.end = function (e, t, r) {
            var i = this._writableState;
            return (
              "function" == typeof e
                ? ((r = e), (e = null), (t = null))
                : "function" == typeof t && ((r = t), (t = null)),
              null != e && this.write(e, t),
              i.corked && ((i.corked = 1), this.uncork()),
              i.ending ||
                (function (e, t, r) {
                  (t.ending = !0),
                    _(e, t),
                    r &&
                      (t.finished ? process.nextTick(r) : e.once("finish", r)),
                    (t.ended = !0),
                    (e.writable = !1);
                })(this, i, r),
              this
            );
          }),
          Object.defineProperty(v.prototype, "writableLength", {
            enumerable: !1,
            get: function () {
              return this._writableState.length;
            },
          }),
          Object.defineProperty(v.prototype, "destroyed", {
            enumerable: !1,
            get: function () {
              return (
                void 0 !== this._writableState && this._writableState.destroyed
              );
            },
            set: function (e) {
              this._writableState && (this._writableState.destroyed = e);
            },
          }),
          (v.prototype.destroy = g.destroy),
          (v.prototype._undestroy = g.undestroy),
          (v.prototype._destroy = function (e, t) {
            t(e);
          });
      },
      1029: (e, t, r) => {
        "use strict";
        var i;
        function n(e, t, r) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = r),
            e
          );
        }
        var o = r(59885),
          A = Symbol("lastResolve"),
          a = Symbol("lastReject"),
          s = Symbol("error"),
          c = Symbol("ended"),
          g = Symbol("lastPromise"),
          l = Symbol("handlePromise"),
          u = Symbol("stream");
        function h(e, t) {
          return { value: e, done: t };
        }
        function I(e) {
          var t = e[A];
          if (null !== t) {
            var r = e[u].read();
            null !== r &&
              ((e[g] = null), (e[A] = null), (e[a] = null), t(h(r, !1)));
          }
        }
        function p(e) {
          process.nextTick(I, e);
        }
        var d = Object.getPrototypeOf(function () {}),
          f = Object.setPrototypeOf(
            (n(
              (i = {
                get stream() {
                  return this[u];
                },
                next: function () {
                  var e = this,
                    t = this[s];
                  if (null !== t) return Promise.reject(t);
                  if (this[c]) return Promise.resolve(h(void 0, !0));
                  if (this[u].destroyed)
                    return new Promise(function (t, r) {
                      process.nextTick(function () {
                        e[s] ? r(e[s]) : t(h(void 0, !0));
                      });
                    });
                  var r,
                    i = this[g];
                  if (i)
                    r = new Promise(
                      (function (e, t) {
                        return function (r, i) {
                          e.then(function () {
                            t[c] ? r(h(void 0, !0)) : t[l](r, i);
                          }, i);
                        };
                      })(i, this)
                    );
                  else {
                    var n = this[u].read();
                    if (null !== n) return Promise.resolve(h(n, !1));
                    r = new Promise(this[l]);
                  }
                  return (this[g] = r), r;
                },
              }),
              Symbol.asyncIterator,
              function () {
                return this;
              }
            ),
            n(i, "return", function () {
              var e = this;
              return new Promise(function (t, r) {
                e[u].destroy(null, function (e) {
                  e ? r(e) : t(h(void 0, !0));
                });
              });
            }),
            i),
            d
          );
        e.exports = function (e) {
          var t,
            r = Object.create(
              f,
              (n((t = {}), u, { value: e, writable: !0 }),
              n(t, A, { value: null, writable: !0 }),
              n(t, a, { value: null, writable: !0 }),
              n(t, s, { value: null, writable: !0 }),
              n(t, c, { value: e._readableState.endEmitted, writable: !0 }),
              n(t, l, {
                value: function (e, t) {
                  var i = r[u].read();
                  i
                    ? ((r[g] = null), (r[A] = null), (r[a] = null), e(h(i, !1)))
                    : ((r[A] = e), (r[a] = t));
                },
                writable: !0,
              }),
              t)
            );
          return (
            (r[g] = null),
            o(e, function (e) {
              if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                var t = r[a];
                return (
                  null !== t &&
                    ((r[g] = null), (r[A] = null), (r[a] = null), t(e)),
                  void (r[s] = e)
                );
              }
              var i = r[A];
              null !== i &&
                ((r[g] = null), (r[A] = null), (r[a] = null), i(h(void 0, !0))),
                (r[c] = !0);
            }),
            e.on("readable", p.bind(null, r)),
            r
          );
        };
      },
      56637: (e, t, r) => {
        "use strict";
        function i(e, t) {
          var r = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t &&
              (i = i.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              r.push.apply(r, i);
          }
          return r;
        }
        function n(e, t, r) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = r),
            e
          );
        }
        function o(e, t) {
          for (var r = 0; r < t.length; r++) {
            var i = t[r];
            (i.enumerable = i.enumerable || !1),
              (i.configurable = !0),
              "value" in i && (i.writable = !0),
              Object.defineProperty(e, i.key, i);
          }
        }
        var A = r(48834).Buffer,
          a = r(74854).inspect,
          s = (a && a.custom) || "inspect";
        e.exports = (function () {
          function e() {
            !(function (e, t) {
              if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function");
            })(this, e),
              (this.head = null),
              (this.tail = null),
              (this.length = 0);
          }
          var t, r;
          return (
            (t = e),
            (r = [
              {
                key: "push",
                value: function (e) {
                  var t = { data: e, next: null };
                  this.length > 0 ? (this.tail.next = t) : (this.head = t),
                    (this.tail = t),
                    ++this.length;
                },
              },
              {
                key: "unshift",
                value: function (e) {
                  var t = { data: e, next: this.head };
                  0 === this.length && (this.tail = t),
                    (this.head = t),
                    ++this.length;
                },
              },
              {
                key: "shift",
                value: function () {
                  if (0 !== this.length) {
                    var e = this.head.data;
                    return (
                      1 === this.length
                        ? (this.head = this.tail = null)
                        : (this.head = this.head.next),
                      --this.length,
                      e
                    );
                  }
                },
              },
              {
                key: "clear",
                value: function () {
                  (this.head = this.tail = null), (this.length = 0);
                },
              },
              {
                key: "join",
                value: function (e) {
                  if (0 === this.length) return "";
                  for (var t = this.head, r = "" + t.data; (t = t.next); )
                    r += e + t.data;
                  return r;
                },
              },
              {
                key: "concat",
                value: function (e) {
                  if (0 === this.length) return A.alloc(0);
                  for (
                    var t,
                      r,
                      i,
                      n = A.allocUnsafe(e >>> 0),
                      o = this.head,
                      a = 0;
                    o;

                  )
                    (t = o.data),
                      (r = n),
                      (i = a),
                      A.prototype.copy.call(t, r, i),
                      (a += o.data.length),
                      (o = o.next);
                  return n;
                },
              },
              {
                key: "consume",
                value: function (e, t) {
                  var r;
                  return (
                    e < this.head.data.length
                      ? ((r = this.head.data.slice(0, e)),
                        (this.head.data = this.head.data.slice(e)))
                      : (r =
                          e === this.head.data.length
                            ? this.shift()
                            : t
                            ? this._getString(e)
                            : this._getBuffer(e)),
                    r
                  );
                },
              },
              {
                key: "first",
                value: function () {
                  return this.head.data;
                },
              },
              {
                key: "_getString",
                value: function (e) {
                  var t = this.head,
                    r = 1,
                    i = t.data;
                  for (e -= i.length; (t = t.next); ) {
                    var n = t.data,
                      o = e > n.length ? n.length : e;
                    if (
                      (o === n.length ? (i += n) : (i += n.slice(0, e)),
                      0 == (e -= o))
                    ) {
                      o === n.length
                        ? (++r,
                          t.next
                            ? (this.head = t.next)
                            : (this.head = this.tail = null))
                        : ((this.head = t), (t.data = n.slice(o)));
                      break;
                    }
                    ++r;
                  }
                  return (this.length -= r), i;
                },
              },
              {
                key: "_getBuffer",
                value: function (e) {
                  var t = A.allocUnsafe(e),
                    r = this.head,
                    i = 1;
                  for (r.data.copy(t), e -= r.data.length; (r = r.next); ) {
                    var n = r.data,
                      o = e > n.length ? n.length : e;
                    if ((n.copy(t, t.length - e, 0, o), 0 == (e -= o))) {
                      o === n.length
                        ? (++i,
                          r.next
                            ? (this.head = r.next)
                            : (this.head = this.tail = null))
                        : ((this.head = r), (r.data = n.slice(o)));
                      break;
                    }
                    ++i;
                  }
                  return (this.length -= i), t;
                },
              },
              {
                key: s,
                value: function (e, t) {
                  return a(
                    this,
                    (function (e) {
                      for (var t = 1; t < arguments.length; t++) {
                        var r = null != arguments[t] ? arguments[t] : {};
                        t % 2
                          ? i(Object(r), !0).forEach(function (t) {
                              n(e, t, r[t]);
                            })
                          : Object.getOwnPropertyDescriptors
                          ? Object.defineProperties(
                              e,
                              Object.getOwnPropertyDescriptors(r)
                            )
                          : i(Object(r)).forEach(function (t) {
                              Object.defineProperty(
                                e,
                                t,
                                Object.getOwnPropertyDescriptor(r, t)
                              );
                            });
                      }
                      return e;
                    })({}, t, { depth: 0, customInspect: !1 })
                  );
                },
              },
            ]),
            r && o(t.prototype, r),
            e
          );
        })();
      },
      12262: (e) => {
        "use strict";
        function t(e, t) {
          i(e, t), r(e);
        }
        function r(e) {
          (e._writableState && !e._writableState.emitClose) ||
            (e._readableState && !e._readableState.emitClose) ||
            e.emit("close");
        }
        function i(e, t) {
          e.emit("error", t);
        }
        e.exports = {
          destroy: function (e, n) {
            var o = this,
              A = this._readableState && this._readableState.destroyed,
              a = this._writableState && this._writableState.destroyed;
            return A || a
              ? (n
                  ? n(e)
                  : e &&
                    (this._writableState
                      ? this._writableState.errorEmitted ||
                        ((this._writableState.errorEmitted = !0),
                        process.nextTick(i, this, e))
                      : process.nextTick(i, this, e)),
                this)
              : (this._readableState && (this._readableState.destroyed = !0),
                this._writableState && (this._writableState.destroyed = !0),
                this._destroy(e || null, function (e) {
                  !n && e
                    ? o._writableState
                      ? o._writableState.errorEmitted
                        ? process.nextTick(r, o)
                        : ((o._writableState.errorEmitted = !0),
                          process.nextTick(t, o, e))
                      : process.nextTick(t, o, e)
                    : n
                    ? (process.nextTick(r, o), n(e))
                    : process.nextTick(r, o);
                }),
                this);
          },
          undestroy: function () {
            this._readableState &&
              ((this._readableState.destroyed = !1),
              (this._readableState.reading = !1),
              (this._readableState.ended = !1),
              (this._readableState.endEmitted = !1)),
              this._writableState &&
                ((this._writableState.destroyed = !1),
                (this._writableState.ended = !1),
                (this._writableState.ending = !1),
                (this._writableState.finalCalled = !1),
                (this._writableState.prefinished = !1),
                (this._writableState.finished = !1),
                (this._writableState.errorEmitted = !1));
          },
          errorOrDestroy: function (e, t) {
            var r = e._readableState,
              i = e._writableState;
            (r && r.autoDestroy) || (i && i.autoDestroy)
              ? e.destroy(t)
              : e.emit("error", t);
          },
        };
      },
      59885: (e, t, r) => {
        "use strict";
        var i = r(64452).q.ERR_STREAM_PREMATURE_CLOSE;
        function n() {}
        e.exports = function e(t, r, o) {
          if ("function" == typeof r) return e(t, null, r);
          r || (r = {}),
            (o = (function (e) {
              var t = !1;
              return function () {
                if (!t) {
                  t = !0;
                  for (
                    var r = arguments.length, i = new Array(r), n = 0;
                    n < r;
                    n++
                  )
                    i[n] = arguments[n];
                  e.apply(this, i);
                }
              };
            })(o || n));
          var A = r.readable || (!1 !== r.readable && t.readable),
            a = r.writable || (!1 !== r.writable && t.writable),
            s = function () {
              t.writable || g();
            },
            c = t._writableState && t._writableState.finished,
            g = function () {
              (a = !1), (c = !0), A || o.call(t);
            },
            l = t._readableState && t._readableState.endEmitted,
            u = function () {
              (A = !1), (l = !0), a || o.call(t);
            },
            h = function (e) {
              o.call(t, e);
            },
            I = function () {
              var e;
              return A && !l
                ? ((t._readableState && t._readableState.ended) ||
                    (e = new i()),
                  o.call(t, e))
                : a && !c
                ? ((t._writableState && t._writableState.ended) ||
                    (e = new i()),
                  o.call(t, e))
                : void 0;
            },
            p = function () {
              t.req.on("finish", g);
            };
          return (
            (function (e) {
              return e.setHeader && "function" == typeof e.abort;
            })(t)
              ? (t.on("complete", g),
                t.on("abort", I),
                t.req ? p() : t.on("request", p))
              : a && !t._writableState && (t.on("end", s), t.on("close", s)),
            t.on("end", u),
            t.on("finish", g),
            !1 !== r.error && t.on("error", h),
            t.on("close", I),
            function () {
              t.removeListener("complete", g),
                t.removeListener("abort", I),
                t.removeListener("request", p),
                t.req && t.req.removeListener("finish", g),
                t.removeListener("end", s),
                t.removeListener("close", s),
                t.removeListener("finish", g),
                t.removeListener("end", u),
                t.removeListener("error", h),
                t.removeListener("close", I);
            }
          );
        };
      },
      90352: (e) => {
        e.exports = function () {
          throw new Error("Readable.from is not available in the browser");
        };
      },
      63495: (e, t, r) => {
        "use strict";
        var i,
          n = r(64452).q,
          o = n.ERR_MISSING_ARGS,
          A = n.ERR_STREAM_DESTROYED;
        function a(e) {
          if (e) throw e;
        }
        function s(e, t, n, o) {
          o = (function (e) {
            var t = !1;
            return function () {
              t || ((t = !0), e.apply(void 0, arguments));
            };
          })(o);
          var a = !1;
          e.on("close", function () {
            a = !0;
          }),
            void 0 === i && (i = r(59885)),
            i(e, { readable: t, writable: n }, function (e) {
              if (e) return o(e);
              (a = !0), o();
            });
          var s = !1;
          return function (t) {
            if (!a && !s)
              return (
                (s = !0),
                (function (e) {
                  return e.setHeader && "function" == typeof e.abort;
                })(e)
                  ? e.abort()
                  : "function" == typeof e.destroy
                  ? e.destroy()
                  : void o(t || new A("pipe"))
              );
          };
        }
        function c(e) {
          e();
        }
        function g(e, t) {
          return e.pipe(t);
        }
        function l(e) {
          return e.length
            ? "function" != typeof e[e.length - 1]
              ? a
              : e.pop()
            : a;
        }
        e.exports = function () {
          for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          var i,
            n = l(t);
          if ((Array.isArray(t[0]) && (t = t[0]), t.length < 2))
            throw new o("streams");
          var A = t.map(function (e, r) {
            var o = r < t.length - 1;
            return s(e, o, r > 0, function (e) {
              i || (i = e), e && A.forEach(c), o || (A.forEach(c), n(i));
            });
          });
          return t.reduce(g);
        };
      },
      87605: (e, t, r) => {
        "use strict";
        var i = r(64452).q.ERR_INVALID_OPT_VALUE;
        e.exports = {
          getHighWaterMark: function (e, t, r, n) {
            var o = (function (e, t, r) {
              return null != e.highWaterMark
                ? e.highWaterMark
                : t
                ? e[r]
                : null;
            })(t, n, r);
            if (null != o) {
              if (!isFinite(o) || Math.floor(o) !== o || o < 0)
                throw new i(n ? r : "highWaterMark", o);
              return Math.floor(o);
            }
            return e.objectMode ? 16 : 16384;
          },
        };
      },
      15010: (e, t, r) => {
        e.exports = r(22699).EventEmitter;
      },
      31922: (e, t, r) => {
        "use strict";
        var i = r(77834).Buffer,
          n =
            i.isEncoding ||
            function (e) {
              switch ((e = "" + e) && e.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                  return !0;
                default:
                  return !1;
              }
            };
        function o(e) {
          var t;
          switch (
            ((this.encoding = (function (e) {
              var t = (function (e) {
                if (!e) return "utf8";
                for (var t; ; )
                  switch (e) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return e;
                    default:
                      if (t) return;
                      (e = ("" + e).toLowerCase()), (t = !0);
                  }
              })(e);
              if ("string" != typeof t && (i.isEncoding === n || !n(e)))
                throw new Error("Unknown encoding: " + e);
              return t || e;
            })(e)),
            this.encoding)
          ) {
            case "utf16le":
              (this.text = s), (this.end = c), (t = 4);
              break;
            case "utf8":
              (this.fillLast = a), (t = 4);
              break;
            case "base64":
              (this.text = g), (this.end = l), (t = 3);
              break;
            default:
              return (this.write = u), void (this.end = h);
          }
          (this.lastNeed = 0),
            (this.lastTotal = 0),
            (this.lastChar = i.allocUnsafe(t));
        }
        function A(e) {
          return e <= 127
            ? 0
            : e >> 5 == 6
            ? 2
            : e >> 4 == 14
            ? 3
            : e >> 3 == 30
            ? 4
            : e >> 6 == 2
            ? -1
            : -2;
        }
        function a(e) {
          var t = this.lastTotal - this.lastNeed,
            r = (function (e, t, r) {
              if (128 != (192 & t[0])) return (e.lastNeed = 0), "�";
              if (e.lastNeed > 1 && t.length > 1) {
                if (128 != (192 & t[1])) return (e.lastNeed = 1), "�";
                if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2]))
                  return (e.lastNeed = 2), "�";
              }
            })(this, e);
          return void 0 !== r
            ? r
            : this.lastNeed <= e.length
            ? (e.copy(this.lastChar, t, 0, this.lastNeed),
              this.lastChar.toString(this.encoding, 0, this.lastTotal))
            : (e.copy(this.lastChar, t, 0, e.length),
              void (this.lastNeed -= e.length));
        }
        function s(e, t) {
          if ((e.length - t) % 2 == 0) {
            var r = e.toString("utf16le", t);
            if (r) {
              var i = r.charCodeAt(r.length - 1);
              if (i >= 55296 && i <= 56319)
                return (
                  (this.lastNeed = 2),
                  (this.lastTotal = 4),
                  (this.lastChar[0] = e[e.length - 2]),
                  (this.lastChar[1] = e[e.length - 1]),
                  r.slice(0, -1)
                );
            }
            return r;
          }
          return (
            (this.lastNeed = 1),
            (this.lastTotal = 2),
            (this.lastChar[0] = e[e.length - 1]),
            e.toString("utf16le", t, e.length - 1)
          );
        }
        function c(e) {
          var t = e && e.length ? this.write(e) : "";
          if (this.lastNeed) {
            var r = this.lastTotal - this.lastNeed;
            return t + this.lastChar.toString("utf16le", 0, r);
          }
          return t;
        }
        function g(e, t) {
          var r = (e.length - t) % 3;
          return 0 === r
            ? e.toString("base64", t)
            : ((this.lastNeed = 3 - r),
              (this.lastTotal = 3),
              1 === r
                ? (this.lastChar[0] = e[e.length - 1])
                : ((this.lastChar[0] = e[e.length - 2]),
                  (this.lastChar[1] = e[e.length - 1])),
              e.toString("base64", t, e.length - r));
        }
        function l(e) {
          var t = e && e.length ? this.write(e) : "";
          return this.lastNeed
            ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
            : t;
        }
        function u(e) {
          return e.toString(this.encoding);
        }
        function h(e) {
          return e && e.length ? this.write(e) : "";
        }
        (t.s = o),
          (o.prototype.write = function (e) {
            if (0 === e.length) return "";
            var t, r;
            if (this.lastNeed) {
              if (void 0 === (t = this.fillLast(e))) return "";
              (r = this.lastNeed), (this.lastNeed = 0);
            } else r = 0;
            return r < e.length
              ? t
                ? t + this.text(e, r)
                : this.text(e, r)
              : t || "";
          }),
          (o.prototype.end = function (e) {
            var t = e && e.length ? this.write(e) : "";
            return this.lastNeed ? t + "�" : t;
          }),
          (o.prototype.text = function (e, t) {
            var r = (function (e, t, r) {
              var i = t.length - 1;
              if (i < r) return 0;
              var n = A(t[i]);
              return n >= 0
                ? (n > 0 && (e.lastNeed = n - 1), n)
                : --i < r || -2 === n
                ? 0
                : (n = A(t[i])) >= 0
                ? (n > 0 && (e.lastNeed = n - 2), n)
                : --i < r || -2 === n
                ? 0
                : (n = A(t[i])) >= 0
                ? (n > 0 && (2 === n ? (n = 0) : (e.lastNeed = n - 3)), n)
                : 0;
            })(this, e, t);
            if (!this.lastNeed) return e.toString("utf8", t);
            this.lastTotal = r;
            var i = e.length - (r - this.lastNeed);
            return e.copy(this.lastChar, 0, i), e.toString("utf8", t, i);
          }),
          (o.prototype.fillLast = function (e) {
            if (this.lastNeed <= e.length)
              return (
                e.copy(
                  this.lastChar,
                  this.lastTotal - this.lastNeed,
                  0,
                  this.lastNeed
                ),
                this.lastChar.toString(this.encoding, 0, this.lastTotal)
              );
            e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
              (this.lastNeed -= e.length);
          });
      },
      67525: (e, t, r) => {
        ((t = e.exports = r(28051)).Stream = t),
          (t.Readable = t),
          (t.Writable = r(2557)),
          (t.Duplex = r(77073)),
          (t.Transform = r(27640)),
          (t.PassThrough = r(95163)),
          (t.finished = r(59885)),
          (t.pipeline = r(63495));
      },
      51445: (e, t, r) => {
        "use strict";
        var i = r(48834).Buffer,
          n = r(91285),
          o = r(84485),
          A = new Array(16),
          a = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1,
            10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1,
            2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15,
            14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
          ],
          s = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7,
            0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9,
            11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13,
            9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
          ],
          c = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13,
            11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13,
            15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14,
            5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8,
            5, 6,
          ],
          g = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15,
            7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6,
            14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9,
            12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13,
            11, 11,
          ],
          l = [0, 1518500249, 1859775393, 2400959708, 2840853838],
          u = [1352829926, 1548603684, 1836072691, 2053994217, 0];
        function h() {
          o.call(this, 64),
            (this._a = 1732584193),
            (this._b = 4023233417),
            (this._c = 2562383102),
            (this._d = 271733878),
            (this._e = 3285377520);
        }
        function I(e, t) {
          return (e << t) | (e >>> (32 - t));
        }
        function p(e, t, r, i, n, o, A, a) {
          return (I((e + (t ^ r ^ i) + o + A) | 0, a) + n) | 0;
        }
        function d(e, t, r, i, n, o, A, a) {
          return (I((e + ((t & r) | (~t & i)) + o + A) | 0, a) + n) | 0;
        }
        function f(e, t, r, i, n, o, A, a) {
          return (I((e + ((t | ~r) ^ i) + o + A) | 0, a) + n) | 0;
        }
        function C(e, t, r, i, n, o, A, a) {
          return (I((e + ((t & i) | (r & ~i)) + o + A) | 0, a) + n) | 0;
        }
        function B(e, t, r, i, n, o, A, a) {
          return (I((e + (t ^ (r | ~i)) + o + A) | 0, a) + n) | 0;
        }
        n(h, o),
          (h.prototype._update = function () {
            for (var e = A, t = 0; t < 16; ++t)
              e[t] = this._block.readInt32LE(4 * t);
            for (
              var r = 0 | this._a,
                i = 0 | this._b,
                n = 0 | this._c,
                o = 0 | this._d,
                h = 0 | this._e,
                E = 0 | this._a,
                y = 0 | this._b,
                m = 0 | this._c,
                Q = 0 | this._d,
                v = 0 | this._e,
                S = 0;
              S < 80;
              S += 1
            ) {
              var w, b;
              S < 16
                ? ((w = p(r, i, n, o, h, e[a[S]], l[0], c[S])),
                  (b = B(E, y, m, Q, v, e[s[S]], u[0], g[S])))
                : S < 32
                ? ((w = d(r, i, n, o, h, e[a[S]], l[1], c[S])),
                  (b = C(E, y, m, Q, v, e[s[S]], u[1], g[S])))
                : S < 48
                ? ((w = f(r, i, n, o, h, e[a[S]], l[2], c[S])),
                  (b = f(E, y, m, Q, v, e[s[S]], u[2], g[S])))
                : S < 64
                ? ((w = C(r, i, n, o, h, e[a[S]], l[3], c[S])),
                  (b = d(E, y, m, Q, v, e[s[S]], u[3], g[S])))
                : ((w = B(r, i, n, o, h, e[a[S]], l[4], c[S])),
                  (b = p(E, y, m, Q, v, e[s[S]], u[4], g[S]))),
                (r = h),
                (h = o),
                (o = I(n, 10)),
                (n = i),
                (i = w),
                (E = v),
                (v = Q),
                (Q = I(m, 10)),
                (m = y),
                (y = b);
            }
            var k = (this._b + n + Q) | 0;
            (this._b = (this._c + o + v) | 0),
              (this._c = (this._d + h + E) | 0),
              (this._d = (this._e + r + y) | 0),
              (this._e = (this._a + i + m) | 0),
              (this._a = k);
          }),
          (h.prototype._digest = function () {
            (this._block[this._blockOffset++] = 128),
              this._blockOffset > 56 &&
                (this._block.fill(0, this._blockOffset, 64),
                this._update(),
                (this._blockOffset = 0)),
              this._block.fill(0, this._blockOffset, 56),
              this._block.writeUInt32LE(this._length[0], 56),
              this._block.writeUInt32LE(this._length[1], 60),
              this._update();
            var e = i.alloc ? i.alloc(20) : new i(20);
            return (
              e.writeInt32LE(this._a, 0),
              e.writeInt32LE(this._b, 4),
              e.writeInt32LE(this._c, 8),
              e.writeInt32LE(this._d, 12),
              e.writeInt32LE(this._e, 16),
              e
            );
          }),
          (e.exports = h);
      },
      77834: (e, t, r) => {
        var i = r(48834),
          n = i.Buffer;
        function o(e, t) {
          for (var r in e) t[r] = e[r];
        }
        function A(e, t, r) {
          return n(e, t, r);
        }
        n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow
          ? (e.exports = i)
          : (o(i, t), (t.Buffer = A)),
          (A.prototype = Object.create(n.prototype)),
          o(n, A),
          (A.from = function (e, t, r) {
            if ("number" == typeof e)
              throw new TypeError("Argument must not be a number");
            return n(e, t, r);
          }),
          (A.alloc = function (e, t, r) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            var i = n(e);
            return (
              void 0 !== t
                ? "string" == typeof r
                  ? i.fill(t, r)
                  : i.fill(t)
                : i.fill(0),
              i
            );
          }),
          (A.allocUnsafe = function (e) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            return n(e);
          }),
          (A.allocUnsafeSlow = function (e) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            return i.SlowBuffer(e);
          });
      },
      73327: (e, t, r) => {
        var i = r(77834).Buffer;
        function n(e, t) {
          (this._block = i.alloc(e)),
            (this._finalSize = t),
            (this._blockSize = e),
            (this._len = 0);
        }
        (n.prototype.update = function (e, t) {
          "string" == typeof e && ((t = t || "utf8"), (e = i.from(e, t)));
          for (
            var r = this._block,
              n = this._blockSize,
              o = e.length,
              A = this._len,
              a = 0;
            a < o;

          ) {
            for (var s = A % n, c = Math.min(o - a, n - s), g = 0; g < c; g++)
              r[s + g] = e[a + g];
            (a += c), (A += c) % n == 0 && this._update(r);
          }
          return (this._len += o), this;
        }),
          (n.prototype.digest = function (e) {
            var t = this._len % this._blockSize;
            (this._block[t] = 128),
              this._block.fill(0, t + 1),
              t >= this._finalSize &&
                (this._update(this._block), this._block.fill(0));
            var r = 8 * this._len;
            if (r <= 4294967295)
              this._block.writeUInt32BE(r, this._blockSize - 4);
            else {
              var i = (4294967295 & r) >>> 0,
                n = (r - i) / 4294967296;
              this._block.writeUInt32BE(n, this._blockSize - 8),
                this._block.writeUInt32BE(i, this._blockSize - 4);
            }
            this._update(this._block);
            var o = this._hash();
            return e ? o.toString(e) : o;
          }),
          (n.prototype._update = function () {
            throw new Error("_update must be implemented by subclass");
          }),
          (e.exports = n);
      },
      9065: (e, t, r) => {
        var i = (e.exports = function (e) {
          e = e.toLowerCase();
          var t = i[e];
          if (!t)
            throw new Error(e + " is not supported (we accept pull requests)");
          return new t();
        });
        (i.sha = r(8820)),
          (i.sha1 = r(17885)),
          (i.sha224 = r(58321)),
          (i.sha256 = r(74424)),
          (i.sha384 = r(90213)),
          (i.sha512 = r(55596));
      },
      8820: (e, t, r) => {
        var i = r(91285),
          n = r(73327),
          o = r(77834).Buffer,
          A = [1518500249, 1859775393, -1894007588, -899497514],
          a = new Array(80);
        function s() {
          this.init(), (this._w = a), n.call(this, 64, 56);
        }
        function c(e) {
          return (e << 30) | (e >>> 2);
        }
        function g(e, t, r, i) {
          return 0 === e
            ? (t & r) | (~t & i)
            : 2 === e
            ? (t & r) | (t & i) | (r & i)
            : t ^ r ^ i;
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._a = 1732584193),
              (this._b = 4023233417),
              (this._c = 2562383102),
              (this._d = 271733878),
              (this._e = 3285377520),
              this
            );
          }),
          (s.prototype._update = function (e) {
            for (
              var t,
                r = this._w,
                i = 0 | this._a,
                n = 0 | this._b,
                o = 0 | this._c,
                a = 0 | this._d,
                s = 0 | this._e,
                l = 0;
              l < 16;
              ++l
            )
              r[l] = e.readInt32BE(4 * l);
            for (; l < 80; ++l)
              r[l] = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16];
            for (var u = 0; u < 80; ++u) {
              var h = ~~(u / 20),
                I =
                  0 |
                  ((((t = i) << 5) | (t >>> 27)) +
                    g(h, n, o, a) +
                    s +
                    r[u] +
                    A[h]);
              (s = a), (a = o), (o = c(n)), (n = i), (i = I);
            }
            (this._a = (i + this._a) | 0),
              (this._b = (n + this._b) | 0),
              (this._c = (o + this._c) | 0),
              (this._d = (a + this._d) | 0),
              (this._e = (s + this._e) | 0);
          }),
          (s.prototype._hash = function () {
            var e = o.allocUnsafe(20);
            return (
              e.writeInt32BE(0 | this._a, 0),
              e.writeInt32BE(0 | this._b, 4),
              e.writeInt32BE(0 | this._c, 8),
              e.writeInt32BE(0 | this._d, 12),
              e.writeInt32BE(0 | this._e, 16),
              e
            );
          }),
          (e.exports = s);
      },
      17885: (e, t, r) => {
        var i = r(91285),
          n = r(73327),
          o = r(77834).Buffer,
          A = [1518500249, 1859775393, -1894007588, -899497514],
          a = new Array(80);
        function s() {
          this.init(), (this._w = a), n.call(this, 64, 56);
        }
        function c(e) {
          return (e << 5) | (e >>> 27);
        }
        function g(e) {
          return (e << 30) | (e >>> 2);
        }
        function l(e, t, r, i) {
          return 0 === e
            ? (t & r) | (~t & i)
            : 2 === e
            ? (t & r) | (t & i) | (r & i)
            : t ^ r ^ i;
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._a = 1732584193),
              (this._b = 4023233417),
              (this._c = 2562383102),
              (this._d = 271733878),
              (this._e = 3285377520),
              this
            );
          }),
          (s.prototype._update = function (e) {
            for (
              var t,
                r = this._w,
                i = 0 | this._a,
                n = 0 | this._b,
                o = 0 | this._c,
                a = 0 | this._d,
                s = 0 | this._e,
                u = 0;
              u < 16;
              ++u
            )
              r[u] = e.readInt32BE(4 * u);
            for (; u < 80; ++u)
              r[u] =
                ((t = r[u - 3] ^ r[u - 8] ^ r[u - 14] ^ r[u - 16]) << 1) |
                (t >>> 31);
            for (var h = 0; h < 80; ++h) {
              var I = ~~(h / 20),
                p = (c(i) + l(I, n, o, a) + s + r[h] + A[I]) | 0;
              (s = a), (a = o), (o = g(n)), (n = i), (i = p);
            }
            (this._a = (i + this._a) | 0),
              (this._b = (n + this._b) | 0),
              (this._c = (o + this._c) | 0),
              (this._d = (a + this._d) | 0),
              (this._e = (s + this._e) | 0);
          }),
          (s.prototype._hash = function () {
            var e = o.allocUnsafe(20);
            return (
              e.writeInt32BE(0 | this._a, 0),
              e.writeInt32BE(0 | this._b, 4),
              e.writeInt32BE(0 | this._c, 8),
              e.writeInt32BE(0 | this._d, 12),
              e.writeInt32BE(0 | this._e, 16),
              e
            );
          }),
          (e.exports = s);
      },
      58321: (e, t, r) => {
        var i = r(91285),
          n = r(74424),
          o = r(73327),
          A = r(77834).Buffer,
          a = new Array(64);
        function s() {
          this.init(), (this._w = a), o.call(this, 64, 56);
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._a = 3238371032),
              (this._b = 914150663),
              (this._c = 812702999),
              (this._d = 4144912697),
              (this._e = 4290775857),
              (this._f = 1750603025),
              (this._g = 1694076839),
              (this._h = 3204075428),
              this
            );
          }),
          (s.prototype._hash = function () {
            var e = A.allocUnsafe(28);
            return (
              e.writeInt32BE(this._a, 0),
              e.writeInt32BE(this._b, 4),
              e.writeInt32BE(this._c, 8),
              e.writeInt32BE(this._d, 12),
              e.writeInt32BE(this._e, 16),
              e.writeInt32BE(this._f, 20),
              e.writeInt32BE(this._g, 24),
              e
            );
          }),
          (e.exports = s);
      },
      74424: (e, t, r) => {
        var i = r(91285),
          n = r(73327),
          o = r(77834).Buffer,
          A = [
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ],
          a = new Array(64);
        function s() {
          this.init(), (this._w = a), n.call(this, 64, 56);
        }
        function c(e, t, r) {
          return r ^ (e & (t ^ r));
        }
        function g(e, t, r) {
          return (e & t) | (r & (e | t));
        }
        function l(e) {
          return (
            ((e >>> 2) | (e << 30)) ^
            ((e >>> 13) | (e << 19)) ^
            ((e >>> 22) | (e << 10))
          );
        }
        function u(e) {
          return (
            ((e >>> 6) | (e << 26)) ^
            ((e >>> 11) | (e << 21)) ^
            ((e >>> 25) | (e << 7))
          );
        }
        function h(e) {
          return ((e >>> 7) | (e << 25)) ^ ((e >>> 18) | (e << 14)) ^ (e >>> 3);
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._a = 1779033703),
              (this._b = 3144134277),
              (this._c = 1013904242),
              (this._d = 2773480762),
              (this._e = 1359893119),
              (this._f = 2600822924),
              (this._g = 528734635),
              (this._h = 1541459225),
              this
            );
          }),
          (s.prototype._update = function (e) {
            for (
              var t,
                r = this._w,
                i = 0 | this._a,
                n = 0 | this._b,
                o = 0 | this._c,
                a = 0 | this._d,
                s = 0 | this._e,
                I = 0 | this._f,
                p = 0 | this._g,
                d = 0 | this._h,
                f = 0;
              f < 16;
              ++f
            )
              r[f] = e.readInt32BE(4 * f);
            for (; f < 64; ++f)
              r[f] =
                0 |
                (((((t = r[f - 2]) >>> 17) | (t << 15)) ^
                  ((t >>> 19) | (t << 13)) ^
                  (t >>> 10)) +
                  r[f - 7] +
                  h(r[f - 15]) +
                  r[f - 16]);
            for (var C = 0; C < 64; ++C) {
              var B = (d + u(s) + c(s, I, p) + A[C] + r[C]) | 0,
                E = (l(i) + g(i, n, o)) | 0;
              (d = p),
                (p = I),
                (I = s),
                (s = (a + B) | 0),
                (a = o),
                (o = n),
                (n = i),
                (i = (B + E) | 0);
            }
            (this._a = (i + this._a) | 0),
              (this._b = (n + this._b) | 0),
              (this._c = (o + this._c) | 0),
              (this._d = (a + this._d) | 0),
              (this._e = (s + this._e) | 0),
              (this._f = (I + this._f) | 0),
              (this._g = (p + this._g) | 0),
              (this._h = (d + this._h) | 0);
          }),
          (s.prototype._hash = function () {
            var e = o.allocUnsafe(32);
            return (
              e.writeInt32BE(this._a, 0),
              e.writeInt32BE(this._b, 4),
              e.writeInt32BE(this._c, 8),
              e.writeInt32BE(this._d, 12),
              e.writeInt32BE(this._e, 16),
              e.writeInt32BE(this._f, 20),
              e.writeInt32BE(this._g, 24),
              e.writeInt32BE(this._h, 28),
              e
            );
          }),
          (e.exports = s);
      },
      90213: (e, t, r) => {
        var i = r(91285),
          n = r(55596),
          o = r(73327),
          A = r(77834).Buffer,
          a = new Array(160);
        function s() {
          this.init(), (this._w = a), o.call(this, 128, 112);
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._ah = 3418070365),
              (this._bh = 1654270250),
              (this._ch = 2438529370),
              (this._dh = 355462360),
              (this._eh = 1731405415),
              (this._fh = 2394180231),
              (this._gh = 3675008525),
              (this._hh = 1203062813),
              (this._al = 3238371032),
              (this._bl = 914150663),
              (this._cl = 812702999),
              (this._dl = 4144912697),
              (this._el = 4290775857),
              (this._fl = 1750603025),
              (this._gl = 1694076839),
              (this._hl = 3204075428),
              this
            );
          }),
          (s.prototype._hash = function () {
            var e = A.allocUnsafe(48);
            function t(t, r, i) {
              e.writeInt32BE(t, i), e.writeInt32BE(r, i + 4);
            }
            return (
              t(this._ah, this._al, 0),
              t(this._bh, this._bl, 8),
              t(this._ch, this._cl, 16),
              t(this._dh, this._dl, 24),
              t(this._eh, this._el, 32),
              t(this._fh, this._fl, 40),
              e
            );
          }),
          (e.exports = s);
      },
      55596: (e, t, r) => {
        var i = r(91285),
          n = r(73327),
          o = r(77834).Buffer,
          A = [
            1116352408, 3609767458, 1899447441, 602891725, 3049323471,
            3964484399, 3921009573, 2173295548, 961987163, 4081628472,
            1508970993, 3053834265, 2453635748, 2937671579, 2870763221,
            3664609560, 3624381080, 2734883394, 310598401, 1164996542,
            607225278, 1323610764, 1426881987, 3590304994, 1925078388,
            4068182383, 2162078206, 991336113, 2614888103, 633803317,
            3248222580, 3479774868, 3835390401, 2666613458, 4022224774,
            944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983,
            1495990901, 1249150122, 1856431235, 1555081692, 3175218132,
            1996064986, 2198950837, 2554220882, 3999719339, 2821834349,
            766784016, 2952996808, 2566594879, 3210313671, 3203337956,
            3336571891, 1034457026, 3584528711, 2466948901, 113926993,
            3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912,
            1546045734, 1294757372, 1522805485, 1396182291, 2643833823,
            1695183700, 2343527390, 1986661051, 1014477480, 2177026350,
            1206759142, 2456956037, 344077627, 2730485921, 1290863460,
            2820302411, 3158454273, 3259730800, 3505952657, 3345764771,
            106217008, 3516065817, 3606008344, 3600352804, 1432725776,
            4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752,
            506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280,
            958139571, 3318307427, 1322822218, 3812723403, 1537002063,
            2003034995, 1747873779, 3602036899, 1955562222, 1575990012,
            2024104815, 1125592928, 2227730452, 2716904306, 2361852424,
            442776044, 2428436474, 593698344, 2756734187, 3733110249,
            3204031479, 2999351573, 3329325298, 3815920427, 3391569614,
            3928383900, 3515267271, 566280711, 3940187606, 3454069534,
            4118630271, 4000239992, 116418474, 1914138554, 174292421,
            2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733,
            587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580,
            2618297676, 1288033470, 3409855158, 1501505948, 4234509866,
            1607167915, 987167468, 1816402316, 1246189591,
          ],
          a = new Array(160);
        function s() {
          this.init(), (this._w = a), n.call(this, 128, 112);
        }
        function c(e, t, r) {
          return r ^ (e & (t ^ r));
        }
        function g(e, t, r) {
          return (e & t) | (r & (e | t));
        }
        function l(e, t) {
          return (
            ((e >>> 28) | (t << 4)) ^
            ((t >>> 2) | (e << 30)) ^
            ((t >>> 7) | (e << 25))
          );
        }
        function u(e, t) {
          return (
            ((e >>> 14) | (t << 18)) ^
            ((e >>> 18) | (t << 14)) ^
            ((t >>> 9) | (e << 23))
          );
        }
        function h(e, t) {
          return ((e >>> 1) | (t << 31)) ^ ((e >>> 8) | (t << 24)) ^ (e >>> 7);
        }
        function I(e, t) {
          return (
            ((e >>> 1) | (t << 31)) ^
            ((e >>> 8) | (t << 24)) ^
            ((e >>> 7) | (t << 25))
          );
        }
        function p(e, t) {
          return ((e >>> 19) | (t << 13)) ^ ((t >>> 29) | (e << 3)) ^ (e >>> 6);
        }
        function d(e, t) {
          return (
            ((e >>> 19) | (t << 13)) ^
            ((t >>> 29) | (e << 3)) ^
            ((e >>> 6) | (t << 26))
          );
        }
        function f(e, t) {
          return e >>> 0 < t >>> 0 ? 1 : 0;
        }
        i(s, n),
          (s.prototype.init = function () {
            return (
              (this._ah = 1779033703),
              (this._bh = 3144134277),
              (this._ch = 1013904242),
              (this._dh = 2773480762),
              (this._eh = 1359893119),
              (this._fh = 2600822924),
              (this._gh = 528734635),
              (this._hh = 1541459225),
              (this._al = 4089235720),
              (this._bl = 2227873595),
              (this._cl = 4271175723),
              (this._dl = 1595750129),
              (this._el = 2917565137),
              (this._fl = 725511199),
              (this._gl = 4215389547),
              (this._hl = 327033209),
              this
            );
          }),
          (s.prototype._update = function (e) {
            for (
              var t = this._w,
                r = 0 | this._ah,
                i = 0 | this._bh,
                n = 0 | this._ch,
                o = 0 | this._dh,
                a = 0 | this._eh,
                s = 0 | this._fh,
                C = 0 | this._gh,
                B = 0 | this._hh,
                E = 0 | this._al,
                y = 0 | this._bl,
                m = 0 | this._cl,
                Q = 0 | this._dl,
                v = 0 | this._el,
                S = 0 | this._fl,
                w = 0 | this._gl,
                b = 0 | this._hl,
                k = 0;
              k < 32;
              k += 2
            )
              (t[k] = e.readInt32BE(4 * k)),
                (t[k + 1] = e.readInt32BE(4 * k + 4));
            for (; k < 160; k += 2) {
              var N = t[k - 30],
                _ = t[k - 30 + 1],
                D = h(N, _),
                O = I(_, N),
                T = p((N = t[k - 4]), (_ = t[k - 4 + 1])),
                P = d(_, N),
                x = t[k - 14],
                R = t[k - 14 + 1],
                U = t[k - 32],
                F = t[k - 32 + 1],
                H = (O + R) | 0,
                M = (D + x + f(H, O)) | 0;
              (M =
                ((M = (M + T + f((H = (H + P) | 0), P)) | 0) +
                  U +
                  f((H = (H + F) | 0), F)) |
                0),
                (t[k] = M),
                (t[k + 1] = H);
            }
            for (var G = 0; G < 160; G += 2) {
              (M = t[G]), (H = t[G + 1]);
              var L = g(r, i, n),
                K = g(E, y, m),
                Y = l(r, E),
                q = l(E, r),
                J = u(a, v),
                j = u(v, a),
                z = A[G],
                V = A[G + 1],
                W = c(a, s, C),
                X = c(v, S, w),
                Z = (b + j) | 0,
                $ = (B + J + f(Z, b)) | 0;
              $ =
                (($ =
                  (($ = ($ + W + f((Z = (Z + X) | 0), X)) | 0) +
                    z +
                    f((Z = (Z + V) | 0), V)) |
                  0) +
                  M +
                  f((Z = (Z + H) | 0), H)) |
                0;
              var ee = (q + K) | 0,
                te = (Y + L + f(ee, q)) | 0;
              (B = C),
                (b = w),
                (C = s),
                (w = S),
                (s = a),
                (S = v),
                (a = (o + $ + f((v = (Q + Z) | 0), Q)) | 0),
                (o = n),
                (Q = m),
                (n = i),
                (m = y),
                (i = r),
                (y = E),
                (r = ($ + te + f((E = (Z + ee) | 0), Z)) | 0);
            }
            (this._al = (this._al + E) | 0),
              (this._bl = (this._bl + y) | 0),
              (this._cl = (this._cl + m) | 0),
              (this._dl = (this._dl + Q) | 0),
              (this._el = (this._el + v) | 0),
              (this._fl = (this._fl + S) | 0),
              (this._gl = (this._gl + w) | 0),
              (this._hl = (this._hl + b) | 0),
              (this._ah = (this._ah + r + f(this._al, E)) | 0),
              (this._bh = (this._bh + i + f(this._bl, y)) | 0),
              (this._ch = (this._ch + n + f(this._cl, m)) | 0),
              (this._dh = (this._dh + o + f(this._dl, Q)) | 0),
              (this._eh = (this._eh + a + f(this._el, v)) | 0),
              (this._fh = (this._fh + s + f(this._fl, S)) | 0),
              (this._gh = (this._gh + C + f(this._gl, w)) | 0),
              (this._hh = (this._hh + B + f(this._hl, b)) | 0);
          }),
          (s.prototype._hash = function () {
            var e = o.allocUnsafe(64);
            function t(t, r, i) {
              e.writeInt32BE(t, i), e.writeInt32BE(r, i + 4);
            }
            return (
              t(this._ah, this._al, 0),
              t(this._bh, this._bl, 8),
              t(this._ch, this._cl, 16),
              t(this._dh, this._dl, 24),
              t(this._eh, this._el, 32),
              t(this._fh, this._fl, 40),
              t(this._gh, this._gl, 48),
              t(this._hh, this._hl, 56),
              e
            );
          }),
          (e.exports = s);
      },
      48422: function (e, t, r) {
        "use strict";
        var i = r(48834).Buffer,
          n =
            (this && this.__importDefault) ||
            function (e) {
              return e && e.__esModule ? e : { default: e };
            };
        Object.defineProperty(t, "__esModule", { value: !0 });
        const o = n(r(6391));
        (t.BN = o.default),
          (t.parseSLP = (e) => {
            "string" == typeof e && (e = i.from(e, "hex"));
            let t = 0,
              r = e;
            const n = (e, t) => {
                if (e) throw Error(t);
              },
              A = () => {
                const e = r.readUInt8(t);
                return (t += 1), new o.default(e);
              },
              a = () => {
                const e = r.readUInt16LE(t);
                return (t += 2), new o.default(e);
              },
              s = () => {
                const e = r.readUInt32LE(t);
                return (t += 4), new o.default(e);
              };
            n(0 === r.length, "scriptpubkey cannot be empty"),
              n(106 !== r[t], "scriptpubkey not op_return"),
              n(r.length < 10, "scriptpubkey too small"),
              ++t;
            const c = () => {
                if (t === r.length) return -1;
                const e = A().toNumber();
                return e > 0 && e < 76
                  ? t + e > r.length
                    ? (--t, -1)
                    : e
                  : 76 === e
                  ? t + 1 >= r.length
                    ? (--t, -1)
                    : A().toNumber()
                  : 77 === e
                  ? t + 2 >= r.length
                    ? (--t, -1)
                    : a().toNumber()
                  : 78 === e
                  ? t + 4 >= r.length
                    ? (--t, -1)
                    : s().toNumber()
                  : (--t, -1);
              },
              g = () => {
                if (1 === r.length) return A();
                if (2 === r.length) return a();
                if (4 === r.length) return s();
                if (8 === r.length)
                  return (() => {
                    const e = r.readUInt32LE(t);
                    t += 4;
                    const i = r.readUInt32LE(t);
                    return (
                      (t += 4),
                      new o.default(i).multipliedBy(Math.pow(2, 32)).plus(e)
                    );
                  })();
                throw new Error("extraction of number from buffer failed");
              },
              l = (e) => 32 === e.length,
              u = [];
            for (let e = c(); e >= 0; e = c()) {
              const i = r.slice(t, t + e);
              if (
                (n(t + e > r.length, "pushdata data extraction failed"),
                (t += e),
                u.push(i),
                1 === u.length)
              ) {
                const e = u[0];
                n(4 !== e.length, "lokad id wrong size"),
                  n(
                    e[0] !== "S".charCodeAt(0) ||
                      e[1] !== "L".charCodeAt(0) ||
                      e[2] !== "P".charCodeAt(0) ||
                      0 !== e[3],
                    "SLP not in first chunk"
                  );
              }
            }
            n(t !== r.length, "trailing data"),
              n(0 === u.length, "chunks empty");
            let h = 0;
            const I = () => {
              ++h,
                n(h === u.length, "parsing ended early"),
                (t = 0),
                (r = u[h]);
            };
            I();
            const p = r.reverse();
            n(
              1 !== p.length && 2 !== p.length,
              "token_type string length must be 1 or 2"
            );
            const d = g().toNumber();
            n(
              ![1, 65, 129].includes(d),
              "token_type not token-type1, nft1-group, or nft1-child"
            ),
              I();
            const f = r.toString();
            if ("GENESIS" === f) {
              n(10 !== u.length, "wrong number of chunks"), I();
              const e = r;
              I();
              const t = r;
              I();
              const i = r;
              I();
              const o = r;
              n(
                !(0 === o.length || 32 === o.length),
                "document_hash must be size 0 or 32"
              ),
                I(),
                n(1 !== r.length, "decimals string length must be 1");
              const A = g().toNumber();
              n(A > 9, "decimals bigger than 9"), I();
              const a = r;
              let s = 0;
              n(a.length >= 2, "mint_baton_vout string length must be 0 or 1"),
                a.length > 0 &&
                  ((s = g().toNumber()),
                  n(s < 2, "mint_baton_vout must be at least 2")),
                I();
              const c = r.reverse();
              n(
                8 !== c.length,
                "initial_qty must be provided as an 8-byte buffer"
              );
              const l = g();
              return (
                65 === d &&
                  (n(
                    0 !== A,
                    "NFT1 child token must have divisibility set to 0 decimal places"
                  ),
                  n(0 !== s, "NFT1 child token must not have a minting baton"),
                  n(
                    !l.isEqualTo(1),
                    "NFT1 child token must have quantity of 1"
                  )),
                {
                  tokenType: d,
                  transactionType: f,
                  data: {
                    ticker: e,
                    name: t,
                    documentUri: i,
                    documentHash: o,
                    decimals: A,
                    mintBatonVout: s,
                    qty: l,
                  },
                }
              );
            }
            if ("MINT" === f) {
              n(65 === d, "NFT1 Child cannot have MINT transaction type."),
                n(6 !== u.length, "wrong number of chunks"),
                I();
              const e = r;
              n(!l(e), "tokenId invalid size"), I();
              const t = r;
              let i = 0;
              n(t.length >= 2, "mint_baton_vout string length must be 0 or 1"),
                t.length > 0 &&
                  ((i = g().toNumber()),
                  n(i < 2, "mint_baton_vout must be at least 2")),
                I();
              const o = r.reverse();
              return (
                n(
                  8 !== o.length,
                  "additional_qty must be provided as an 8-byte buffer"
                ),
                {
                  tokenType: d,
                  transactionType: f,
                  data: { tokenId: e, mintBatonVout: i, qty: g() },
                }
              );
            }
            if ("SEND" === f) {
              n(u.length < 4, "wrong number of chunks"), I();
              const e = r;
              n(!l(e), "tokenId invalid size"), I();
              const i = [];
              for (; h !== u.length; ) {
                const e = r.reverse();
                n(8 !== e.length, "amount string size not 8 bytes");
                const o = g();
                i.push(o), ++h, (r = u[h]), (t = 0);
              }
              return (
                n(0 === i.length, "token_amounts size is 0"),
                n(i.length > 19, "token_amounts size is greater than 19"),
                {
                  tokenType: d,
                  transactionType: f,
                  data: { tokenId: e, amounts: i },
                }
              );
            }
            return (
              n(!0, "unknown action type"),
              { tokenType: d, transactionType: f, data: {} }
            );
          });
      },
      54851: (e, t, r) => {
        e.exports = n;
        var i = r(22699).EventEmitter;
        function n() {
          i.call(this);
        }
        r(91285)(n, i),
          (n.Readable = r(28051)),
          (n.Writable = r(2557)),
          (n.Duplex = r(77073)),
          (n.Transform = r(27640)),
          (n.PassThrough = r(95163)),
          (n.finished = r(59885)),
          (n.pipeline = r(63495)),
          (n.Stream = n),
          (n.prototype.pipe = function (e, t) {
            var r = this;
            function n(t) {
              e.writable && !1 === e.write(t) && r.pause && r.pause();
            }
            function o() {
              r.readable && r.resume && r.resume();
            }
            r.on("data", n),
              e.on("drain", o),
              e._isStdio ||
                (t && !1 === t.end) ||
                (r.on("end", a), r.on("close", s));
            var A = !1;
            function a() {
              A || ((A = !0), e.end());
            }
            function s() {
              A || ((A = !0), "function" == typeof e.destroy && e.destroy());
            }
            function c(e) {
              if ((g(), 0 === i.listenerCount(this, "error"))) throw e;
            }
            function g() {
              r.removeListener("data", n),
                e.removeListener("drain", o),
                r.removeListener("end", a),
                r.removeListener("close", s),
                r.removeListener("error", c),
                e.removeListener("error", c),
                r.removeListener("end", g),
                r.removeListener("close", g),
                e.removeListener("close", g);
            }
            return (
              r.on("error", c),
              e.on("error", c),
              r.on("end", g),
              r.on("close", g),
              e.on("close", g),
              e.emit("pipe", r),
              e
            );
          });
      },
      33974: (e, t, r) => {
        var i = r(48834).Buffer,
          n =
            i.isEncoding ||
            function (e) {
              switch (e && e.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                  return !0;
                default:
                  return !1;
              }
            },
          o = (t.s = function (e) {
            switch (
              ((this.encoding = (e || "utf8")
                .toLowerCase()
                .replace(/[-_]/, "")),
              (function (e) {
                if (e && !n(e)) throw new Error("Unknown encoding: " + e);
              })(e),
              this.encoding)
            ) {
              case "utf8":
                this.surrogateSize = 3;
                break;
              case "ucs2":
              case "utf16le":
                (this.surrogateSize = 2), (this.detectIncompleteChar = a);
                break;
              case "base64":
                (this.surrogateSize = 3), (this.detectIncompleteChar = s);
                break;
              default:
                return void (this.write = A);
            }
            (this.charBuffer = new i(6)),
              (this.charReceived = 0),
              (this.charLength = 0);
          });
        function A(e) {
          return e.toString(this.encoding);
        }
        function a(e) {
          (this.charReceived = e.length % 2),
            (this.charLength = this.charReceived ? 2 : 0);
        }
        function s(e) {
          (this.charReceived = e.length % 3),
            (this.charLength = this.charReceived ? 3 : 0);
        }
        (o.prototype.write = function (e) {
          for (var t = ""; this.charLength; ) {
            var r =
              e.length >= this.charLength - this.charReceived
                ? this.charLength - this.charReceived
                : e.length;
            if (
              (e.copy(this.charBuffer, this.charReceived, 0, r),
              (this.charReceived += r),
              this.charReceived < this.charLength)
            )
              return "";
            if (
              ((e = e.slice(r, e.length)),
              !(
                (i = (t = this.charBuffer
                  .slice(0, this.charLength)
                  .toString(this.encoding)).charCodeAt(t.length - 1)) >=
                  55296 && i <= 56319
              ))
            ) {
              if (((this.charReceived = this.charLength = 0), 0 === e.length))
                return t;
              break;
            }
            (this.charLength += this.surrogateSize), (t = "");
          }
          this.detectIncompleteChar(e);
          var i,
            n = e.length;
          if (
            (this.charLength &&
              (e.copy(this.charBuffer, 0, e.length - this.charReceived, n),
              (n -= this.charReceived)),
            (n = (t += e.toString(this.encoding, 0, n)).length - 1),
            (i = t.charCodeAt(n)) >= 55296 && i <= 56319)
          ) {
            var o = this.surrogateSize;
            return (
              (this.charLength += o),
              (this.charReceived += o),
              this.charBuffer.copy(this.charBuffer, o, 0, o),
              e.copy(this.charBuffer, 0, 0, o),
              t.substring(0, n)
            );
          }
          return t;
        }),
          (o.prototype.detectIncompleteChar = function (e) {
            for (var t = e.length >= 3 ? 3 : e.length; t > 0; t--) {
              var r = e[e.length - t];
              if (1 == t && r >> 5 == 6) {
                this.charLength = 2;
                break;
              }
              if (t <= 2 && r >> 4 == 14) {
                this.charLength = 3;
                break;
              }
              if (t <= 3 && r >> 3 == 30) {
                this.charLength = 4;
                break;
              }
            }
            this.charReceived = t;
          }),
          (o.prototype.end = function (e) {
            var t = "";
            if ((e && e.length && (t = this.write(e)), this.charReceived)) {
              var r = this.charReceived,
                i = this.charBuffer,
                n = this.encoding;
              t += i.slice(0, r).toString(n);
            }
            return t;
          });
      },
      60240: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { C: () => d });
            var n = r(34684),
              o = r(72024),
              A = r(48680),
              a = r(20252),
              s = r(93074),
              c = r(12795),
              g = r(20200),
              l = r(34167),
              u = r(39779),
              h = r(83929),
              I = r(93246),
              p = e([I, A, h, a, c, u, o, l]);
            [I, A, h, a, c, u, o, l] = p.then ? (await p)() : p;
            class d {
              constructor(e, t, r, i) {
                (this.script = e),
                  (this.parameters = t.map((e) =>
                    "number" == typeof e ? BigInt(e) : e
                  )),
                  (this.network = r || "mainnet"),
                  (this.artifact = (0, A.kM)(e)),
                  (this.provider = new h.ZP((0, a.ku)(this.network))),
                  (this.contract = this.getContractInstance()),
                  (this.nonce = i || s.X(2147483647));
              }
              getContractText() {
                return this.script;
              }
              getNonce() {
                return this.nonce;
              }
              getSerializedScript() {
                return c.r(this.script);
              }
              getSerializedParameters() {
                return c.r(
                  this.parameters
                    .map((e) => c.r(e.toString()))
                    .join(g.DELIMITER)
                );
              }
              getParameterList() {
                return this.parameters.map((e) =>
                  ArrayBuffer.isView(e)
                    ? (0, n.UM)(new Uint8Array(e.buffer))
                    : e
                );
              }
              toString() {
                return [
                  "contract",
                  this.network,
                  this.getSerializedParameters(),
                  this.getSerializedScript(),
                  this.getNonce(),
                ].join(g.DELIMITER);
              }
              static fromId(e) {
                const [t, r, i, n, o] = e.split(g.DELIMITER),
                  a = c.t(n),
                  s = (0, A.kM)(a),
                  l = c
                    .t(i)
                    .split(g.DELIMITER)
                    .map((e) => c.t(e)),
                  h = (0, u.Mn)(l, s);
                return new d(a, h, r, parseInt(o));
              }
              static _create(e, t, r, i) {
                const n = (0, A.kM)(e);
                return new this(e, (0, u.Mn)(t, n), r, i);
              }
              getDepositAddress() {
                return this.contract.address;
              }
              getTokenDepositAddress() {
                return this.contract.tokenAddress;
              }
              async getUtxos() {
                return (
                  await this.provider.getUtxos(this.getDepositAddress())
                ).map(h._P);
              }
              async getBalance() {
                return Number(await this.contract.getBalance());
              }
              info() {
                return {
                  contractId: this.toString(),
                  cashaddr: this.contract.address,
                  tokenaddr: this.contract.tokenAddress,
                  script: this.script,
                  parameters: this.getParameterList().map((e) =>
                    "bigint" == typeof e ? Number(e) : e
                  ),
                  nonce: this.nonce,
                };
              }
              _info() {
                return this.info();
              }
              getContractInstance() {
                return new o.C(this.artifact, this.parameters, {
                  provider: this.provider,
                  addressType: "p2sh20",
                });
              }
              fromCashScript() {
                return (
                  (this.artifact = (0, A.P6)(this.script)),
                  (this.contract = new o.C(this.artifact, [], {
                    provider: this.provider,
                    addressType: "p2sh20",
                  })),
                  this
                );
              }
              static fromCashScript(e, t, r, i) {
                return new this(e, t, r, i).fromCashScript();
              }
              getContractFunction(e) {
                return this.contract.functions[e];
              }
              async runFunctionFromStrings(e) {
                let t = this.getContractFunction(e.function)(
                  ...(await (0, u.Gq)(e.arguments, this.artifact, e.function))
                );
                if (((t = t.to(await (0, u.fw)(e.to))), e.utxoIds)) {
                  const r = e.utxoIds.map(l.hx).map(h.KF);
                  t = t.from(r);
                }
                return (
                  e.opReturn && (t = t.withOpReturn(e.opReturn)),
                  e.feePerByte && (t = t.withFeePerByte(e.feePerByte)),
                  e.hardcodedFee &&
                    (t = t.withHardcodedFee(BigInt(e.hardcodedFee))),
                  e.minChange && (t = t.withMinChange(BigInt(e.minChange))),
                  e.withoutChange && (t = t.withoutChange()),
                  e.age && (t = t.withAge(e.age)),
                  e.time && (t = t.withTime(e.time)),
                  "getBitauthUri" === e.action
                    ? (0, I.gl)(
                        await (0, I.R$)({
                          contract: this,
                          transaction: t,
                          manglePrivateKeys: !1,
                        })
                      )
                    : "buildTemplate" === e.action
                    ? await (0, I.R$)({ contract: this, transaction: t })
                    : await t[e.action]()
                );
              }
              getFunctionByName(e) {
                if ("function" == typeof this.contract.functions[e])
                  return this.contract.functions[e];
                throw Error(`${e} is not a contract method`);
              }
              async estimateFee(e, t, r, i, n) {
                const o = e(t, r, 10n, 2147483640n)
                    .to([{ to: i, amount: 1000n }])
                    .from(n.map(h.KF)),
                  A = await o.withHardcodedFee(500n).build();
                return Math.round((A.length / 2) * 1);
              }
              static contractRespFromJsonRequest(e) {
                const t = d._create(e.script, e.parameters, e.network);
                if (t)
                  return {
                    contractId: t.toString(),
                    cashaddr: t.getDepositAddress(),
                  };
                throw Error("Error creating contract");
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      83929: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { KF: () => a, ZP: () => c, _P: () => s });
            var n = r(99362),
              o = r(89341),
              A = e([n]);
            n = (A.then ? (await A)() : A)[0];
            const a = (e) => ({
                satoshis: BigInt(e.satoshis),
                txid: e.txid,
                vout: e.vout,
                token: e.token
                  ? {
                      amount: e.token?.amount ? BigInt(e.token.amount) : 0n,
                      category: e.token?.tokenId,
                      nft:
                        e.token?.capability || e.token?.commitment
                          ? {
                              capability: e.token?.capability,
                              commitment: e.token?.commitment,
                            }
                          : void 0,
                    }
                  : void 0,
              }),
              s = (e) => ({
                satoshis: Number(e.satoshis),
                txid: e.txid,
                vout: e.vout,
                token: e.token
                  ? {
                      amount: e.token?.amount
                        ? Number(e.token?.amount)
                        : void 0,
                      tokenId: e.token?.category,
                      capability: e.token?.nft?.capability,
                      commitment: e.token?.nft?.commitment,
                    }
                  : void 0,
              });
            class c extends n.Z {
              constructor(e) {
                super(
                  e.network === o.Z.TESTNET ? "chipnet" : e.network,
                  e.electrum
                ),
                  (this.mainnetProvider = e),
                  (this.performRequest = async (e, ...t) =>
                    this.mainnetProvider.performRequest(e, ...t));
              }
              async getUtxos(e) {
                return (await this.mainnetProvider.getUtxos(e)).map(a);
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      28793: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { a: () => d });
            var n = r(65715),
              o = r(93074),
              A = r(93321),
              a = r(12676),
              s = r(20200),
              c = r(12795),
              g = r(34167),
              l = r(56724),
              u = r(60240),
              h = r(82374),
              I = r(83929),
              p = e([u, n, A, a, c, h, g, I]);
            [u, n, A, a, c, h, g, I] = p.then ? (await p)() : p;
            class d extends u.C {
              constructor({
                sellerAddr: e,
                buyerAddr: t,
                arbiterAddr: r,
                amount: i,
                nonce: s,
              }) {
                const c = [e, t, r],
                  g = n.m(Object.values(c)),
                  l = s || o.X(2147483647),
                  u = c.map((e) => A.E(e));
                u.push(i),
                  u.push(l),
                  super(d.getContractText(), u, g, l),
                  ([this.sellerAddr, this.buyerAddr, this.arbiterAddr] = c.map(
                    (e) => a.Y(e)
                  )),
                  (this.amount = i);
              }
              static create({
                sellerAddr: e,
                buyerAddr: t,
                arbiterAddr: r,
                amount: i,
                nonce: n,
              }) {
                return new this({
                  sellerAddr: e,
                  buyerAddr: t,
                  arbiterAddr: r,
                  amount: i,
                  nonce: n,
                });
              }
              async call(e, t, r, i = !1, n) {
                if (!r)
                  if ("spend" === t) r = this.sellerAddr;
                  else {
                    if ("refund" !== t)
                      throw Error("Could not determine output address");
                    r = this.buyerAddr;
                  }
                return await this._sendMax(e, t, r, i, n);
              }
              toString() {
                return [
                  "escrowContract",
                  this.network,
                  this.getSerializedArguments(),
                  this.getSerializedParameters(),
                  this.getSerializedScript(),
                  this.getNonce(),
                ].join(s.DELIMITER);
              }
              getSerializedArguments() {
                const e = [
                  this.sellerAddr,
                  this.buyerAddr,
                  this.arbiterAddr,
                  this.amount,
                ];
                return c.r(e.map((e) => c.r(e.toString())).join(s.DELIMITER));
              }
              static fromId(e) {
                const [t, r, i, n, o, A] = e.split(s.DELIMITER),
                  [a, g, l, u] = c
                    .t(i)
                    .split(s.DELIMITER)
                    .map((e) => c.t(e)),
                  h =
                    (c.t(o),
                    c
                      .t(n)
                      .split(s.DELIMITER)
                      .map((e) => c.t(e)),
                    new d({
                      sellerAddr: a,
                      buyerAddr: g,
                      arbiterAddr: l,
                      amount: parseInt(u),
                      nonce: parseInt(A),
                    }));
                return (h.network = r), h;
              }
              static escrowContractFromJsonRequest(e) {
                const t = d.create(e);
                if (t)
                  return {
                    escrowContractId: t.toString(),
                    cashaddr: t.getDepositAddress(),
                  };
                throw Error("Error creating contract");
              }
              static getContractText() {
                return "pragma cashscript ^0.8.0;\n            contract escrow(bytes20 sellerPkh, bytes20 buyerPkh, bytes20 arbiterPkh, int contractAmount, int contractNonce) {\n\n                function spend(pubkey signingPk, sig s, int amount, int nonce) {\n                    require(hash160(signingPk) == arbiterPkh || hash160(signingPk) == buyerPkh);\n                    require(checkSig(s, signingPk));\n                    require(amount >= contractAmount);\n                    require(nonce == contractNonce);\n                    bytes25 lockingCode = new LockingBytecodeP2PKH(sellerPkh);\n                    bool sendsToSeller = tx.outputs[0].lockingBytecode == lockingCode;\n                    require(tx.outputs[0].value == amount);\n                    require(sendsToSeller);\n                }\n\n                function refund(pubkey signingPk, sig s, int amount, int nonce) {\n                    require(hash160(signingPk) == arbiterPkh||hash160(signingPk) == sellerPkh);\n                    require(checkSig(s, signingPk));\n                    require(amount >= contractAmount);\n                    require(nonce == contractNonce);\n                    bytes25 lockingCode = new LockingBytecodeP2PKH(buyerPkh);\n                    bool sendsToSeller = tx.outputs[0].lockingBytecode == lockingCode;\n                    require(tx.outputs[0].value == amount);\n                    require(sendsToSeller);\n                }\n            }\n        ";
              }
              info() {
                return {
                  ...super.info(),
                  escrowContractId: this.toString(),
                  buyerAddr: this.buyerAddr,
                  sellerAddr: this.sellerAddr,
                  arbiterAddr: this.arbiterAddr,
                  amount: this.amount,
                };
              }
              async _sendMax(e, t, r, i = !1, n) {
                const o = new h.Z(e),
                  A = o.getPublicKey(),
                  a = this.getFunctionByName(t),
                  s = i ? "build" : "send";
                let c;
                if (
                  ((c = void 0 === n ? await this.getUtxos() : n.map(g.hx)),
                  !(c.length > 0))
                )
                  throw Error(
                    "There were no UTXOs provided or available on the contract"
                  );
                try {
                  const e = await this.estimateFee(a, A, o, r, c),
                    t = await l.O(c),
                    n = t - e;
                  if (this.amount > n)
                    throw Error(
                      `The contract amount (${this.amount}) could not be submitted for a tx fee (${e}) with the available with contract balance (${t})`
                    );
                  const g = a(A, o, BigInt(n), BigInt(this.getNonce()))
                      .withHardcodedFee(BigInt(e))
                      .from(c.map(I.KF))
                      .to(r, BigInt(n)),
                    u = await g[s]();
                  return i ? { hex: u } : u;
                } catch (e) {
                  throw Error(e);
                }
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      75963: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { a: () => n.a });
            var n = r(28793),
              o = e([n]);
            (n = (o.then ? (await o)() : o)[0]), i();
          } catch (e) {
            i(e);
          }
        });
      },
      99562: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.r(t),
              r.d(t, {
                BCMR: () => c.He,
                BalanceResponse: () => c.dO,
                BaseWallet: () => c.cC,
                BigNumber: () => c.O$,
                CONST: () => c.oX,
                Config: () => c.De,
                Connection: () => c.ew,
                Contract: () => o.C,
                DefaultProvider: () => c.oL,
                ElectrumNetworkProvider: () => c.yw,
                EscrowContract: () => n.a,
                ExchangeRate: () => c.Iw,
                GsppProvider: () => c.UI,
                IndexedDBProvider: () => c.X6,
                Mainnet: () => c.ny,
                NFTCapability: () => c.hK,
                Network: () => c.Zc,
                NetworkType: () => c.td,
                OpReturnData: () => c.Rb,
                RegTestWallet: () => c.zl,
                RegTestWatchWallet: () => c.LG,
                RegTestWifWallet: () => c.Ci,
                RuntimePlatform: () => c.b1,
                SendRequest: () => c.Lt,
                SendResponse: () => c.fb,
                SignedMessage: () => c.uk,
                SlpDbProvider: () => c.A5,
                SlpTokenType: () => c.Ib,
                SqlProvider: () => c.Cc,
                TestNetWallet: () => c.fO,
                TestNetWatchWallet: () => c.Cb,
                TestNetWifWallet: () => c.Ay,
                TokenBurnRequest: () => c.ZT,
                TokenGenesisRequest: () => c.UC,
                TokenMintRequest: () => c.HO,
                TokenSendRequest: () => c.n9,
                UnitEnum: () => c.ZX,
                Wallet: () => c.w5,
                WalletTypeEnum: () => c.Kv,
                WatchWallet: () => c.t8,
                Webhook: () => c.G2,
                WebhookBch: () => c.M1,
                WebhookRecurrence: () => c.CM,
                WebhookSlp: () => c.dm,
                WebhookType: () => c.Ez,
                WebhookWorker: () => c.vj,
                WifWallet: () => c.rn,
                XPubKey: () => c.bB,
                amountInSatoshi: () => c.ao,
                asSendRequestObject: () => c.U$,
                atob: () => c.ty,
                balanceFromSatoshi: () => c.$e,
                balanceResponseFromSatoshi: () => c.Wk,
                binToBase64: () => c.yM,
                binToHex: () => c.UM,
                btoa: () => c.r3,
                buildTemplate: () => a.R$,
                castConstructorParametersFromArtifact: () => A.Mn,
                castStringArgumentsFromArtifact: () => A.Gq,
                checkTokenaddr: () => c.fl,
                convert: () => c.OQ,
                convertObject: () => c.dB,
                createSlpWallet: () => c.jS,
                createSlpWalletResponse: () => c.Zq,
                createWallet: () => c.EK,
                createWalletResponse: () => c.SQ,
                cube: () => c.kO,
                delay: () => c.gw,
                deriveCashaddr: () => c.hJ,
                derivePublicKeyHash: () => c.EI,
                deriveTokenaddr: () => c.H$,
                derivedNetwork: () => c.my,
                disconnectProviders: () => c.lC,
                expect: () => c.l_,
                fromUtxoId: () => c.hx,
                getAddrsByXpubKey: () => c.yd,
                getAddrsByXpubKeyObject: () => c.ux,
                getBitauthUri: () => a.gl,
                getNetworkProvider: () => c.ku,
                getRandomInt: () => c.XF,
                getRuntimePlatform: () => c.Bt,
                getSignatureTemplate: () => A.oL,
                getUsdRate: () => c.UX,
                getXPubKey: () => c.hR,
                getXpubKeyInfo: () => c.uC,
                getXpubKeyInfoObject: () => c.Br,
                hash160: () => c.M9,
                hexToBin: () => c.kW,
                initProviders: () => c.vY,
                isCashAddress: () => c.S1,
                isSlpAddress: () => c.F5,
                isTokenaddr: () => c.Fl,
                isValidAddress: () => c.At,
                libauth: () => c.QQ,
                mine: () => c.Ot,
                namedWallet: () => c.$2,
                namedWalletExists: () => c.yk,
                qrAddress: () => c.te,
                randomValues: () => c.Ox,
                removeAxiosMock: () => c.oQ,
                replaceNamedWallet: () => c.NS,
                sanitizeAddress: () => c.Y7,
                sanitizeUnit: () => c.OC,
                setupAxiosMock: () => c.GM,
                sha256: () => c.JQ,
                stringify: () => a.Pz,
                sumUtxoValue: () => c.ZH,
                toCashAddress: () => c.uP,
                toCashScript: () => s.KF,
                toCashaddr: () => c.US,
                toMainnet: () => s._P,
                toSlpAddress: () => c.bY,
                toTokenaddr: () => c.Gf,
                toUtxoId: () => c.GV,
                transformContractToRequests: () => A.fw,
                utf8ToBin: () => c.L$,
                walletClassMap: () => c.c0,
                walletFromId: () => c.VK,
              });
            var n = r(75963),
              o = r(60240),
              A = r(39779),
              a = r(93246),
              s = r(83929),
              c = r(49921),
              g = e([n, o, A, a, s, c]);
            ([n, o, A, a, s, c] = g.then ? (await g)() : g), i();
          } catch (e) {
            i(e);
          }
        });
      },
      93246: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Pz: () => C, R$: () => E, gl: () => B });
            var n = r(4899),
              o = r(40789),
              A = r(24090),
              a = r(34684),
              s = r(66998),
              c = r(43137),
              g = r(30861),
              l = r(47726),
              u = r(33654),
              h = r(89341),
              I = e([o, g, l]);
            function p(e) {
              return (
                e &&
                e
                  .match(
                    /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g
                  )
                  .map((e) => e.toLowerCase())
                  .join("_")
              );
            }
            [o, g, l] = I.then ? (await I)() : I;
            const d = (e) =>
                e.reduce(
                  (e, t) => ({
                    ...e,
                    [Object.keys(t)[0]]: t[Object.keys(t)[0]],
                  }),
                  {}
                ),
              f = (e, t) =>
                t === n.MX.INT && 0n === e
                  ? Uint8Array.from([0])
                  : (0, o.m)(e, t),
              C = (e, t) =>
                JSON.stringify(
                  e,
                  (e, t) =>
                    "bigint" == typeof t
                      ? `${t.toString()}`
                      : t instanceof Uint8Array
                      ? `${(0, a.UM)(t)}`
                      : t,
                  t
                ),
              B = (e) =>
                `https://ide.bitauth.com/import-template/${(0, s.yM)(
                  (0, u.Wt)((0, c.L)(C(e)))
                )
                  .replace(/\+/g, "-")
                  .replace(/\//g, "_")}`,
              E = async ({
                contract: e,
                transaction: t,
                manglePrivateKeys: r,
                includeSource: i = !1,
              }) => {
                r = void 0 === r && e.network !== h.Z.REGTEST;
                const o = await t.build(),
                  s = (0, g.c8)((0, a.kW)(o));
                if ("string" == typeof s) throw s;
                const c = e.artifact.constructorInputs.slice().reverse(),
                  u = e.parameters.slice().reverse(),
                  I = t.abiFunction.name,
                  C = e.artifact.abi.findIndex((e) => e.name === I),
                  B = e.artifact.abi[C],
                  E = B.inputs.slice().reverse(),
                  y = t.args.slice().reverse(),
                  m = t.inputs.filter((e) => (0, A.zV)(e)).length,
                  Q = (e, t) =>
                    Array.from(Array(Math.max(t.length, e.length)), (r, i) => [
                      e[i],
                      t[i],
                    ]);
                return {
                  $schema:
                    "https://ide.bitauth.com/authentication-template-v0.schema.json",
                  description: `Imported from cashscript${
                    i ? e.artifact.source : ""
                  }`,
                  name: e.artifact.contractName,
                  entities: {
                    parameters: {
                      description: "Contract creation and function parameters",
                      name: "parameters",
                      scripts: [
                        "lock",
                        "unlock_lock",
                        ...(m
                          ? [
                              "p2pkh_placeholder_lock",
                              "p2pkh_placeholder_unlock",
                            ]
                          : []),
                      ],
                      variables: d([
                        ...(m
                          ? [
                              {
                                placeholder_key: {
                                  description: "placeholder_key",
                                  name: "placeholder_key",
                                  type: "Key",
                                },
                              },
                            ]
                          : []),
                        {
                          function_index: {
                            description: "Script function index to execute",
                            name: "function_index",
                            type: "WalletData",
                          },
                        },
                        ...c.map((e) => ({
                          [p(e.name)]: {
                            description: `"${e.name}" parameter of this contract`,
                            name: e.name,
                            type: "WalletData",
                          },
                        })),
                        ...E.map((e) => ({
                          [p(e.name)]: {
                            description: `"${e.name}" parameter of function "${B.name}"`,
                            name: e.name,
                            type: e.type === n.MX.SIG ? "Key" : "WalletData",
                          },
                        })),
                      ]),
                    },
                  },
                  scenarios: {
                    evaluate_function: {
                      data: {
                        bytecode: d([
                          ...Q(E, y)
                            .filter(([e]) => e.type !== n.MX.SIG)
                            .map(([e, t]) => {
                              const r = f(t, e.type);
                              return { [p(e.name)]: "0x" + (0, a.UM)(r) };
                            }),
                          { function_index: C.toString() },
                          ...c.map((e, t) => ({
                            [p(e.name)]: "0x" + (0, a.UM)(f(u[t], c[t].type)),
                          })),
                        ]),
                        currentBlockHeight: 2,
                        currentBlockTime: Math.round(+new Date() / 1e3),
                        keys: {
                          privateKeys: d([
                            ...(m
                              ? [
                                  {
                                    placeholder_key:
                                      "<Uint8Array: 0x0000000000000000000000000000000000000000000000000000000000000000>",
                                  },
                                ]
                              : []),
                            ...Q(E, y)
                              .filter(([e]) => e.type === n.MX.SIG)
                              .map(([e, t]) => ({
                                [p(e.name)]: (0, a.UM)(
                                  r
                                    ? t.getPublicKey().slice(0, 32).slice(0, 32)
                                    : t.privateKey
                                ),
                              })),
                          ]),
                        },
                      },
                      transaction: [s].map((i) => {
                        const n = {};
                        let o = !1;
                        return (
                          (n.inputs = i.inputs.map((e, i) => {
                            const n = t.inputs[i];
                            let s = {};
                            return (
                              (0, A.zV)(n)
                                ? (s = {
                                    script: "p2pkh_placeholder_unlock",
                                    overrides: {
                                      keys: {
                                        privateKeys: {
                                          placeholder_key: (0, a.UM)(
                                            r
                                              ? n.template
                                                  .getPublicKey()
                                                  .slice(0, 32)
                                              : n.template.privateKey
                                          ),
                                        },
                                      },
                                    },
                                  })
                                : o || ((s = ["slot"]), (o = !0)),
                              {
                                outpointIndex: e.outpointIndex,
                                outpointTransactionHash:
                                  e.outpointTransactionHash instanceof
                                  Uint8Array
                                    ? (0, a.UM)(e.outpointTransactionHash)
                                    : e.outpointTransactionHash,
                                sequenceNumber: e.sequenceNumber,
                                unlockingBytecode: s,
                              }
                            );
                          })),
                          (n.locktime = i?.locktime),
                          (n.outputs = i?.outputs?.map((i, n) => {
                            const o = t.outputs[n];
                            let s = i.lockingBytecode;
                            if ("string" == typeof o.to)
                              if (
                                [
                                  e.getDepositAddress(),
                                  e.getTokenDepositAddress(),
                                ].includes(o.to)
                              )
                                s = {};
                              else
                                for (const e of t.inputs)
                                  if ((0, A.zV)(e)) {
                                    const t = (0, l.M)(
                                      e.template.getPublicKey()
                                    );
                                    (0, a.UM)(i.lockingBytecode).slice(
                                      6,
                                      46
                                    ) === (0, a.UM)(t) &&
                                      (s = {
                                        script: "p2pkh_placeholder_lock",
                                        overrides: {
                                          keys: {
                                            privateKeys: {
                                              placeholder_key: (0, a.UM)(
                                                r
                                                  ? e.template
                                                      .getPublicKey()
                                                      .slice(0, 32)
                                                  : e.template.privateKey
                                              ),
                                            },
                                          },
                                        },
                                      });
                                  }
                            return {
                              lockingBytecode:
                                s instanceof Uint8Array ? (0, a.UM)(s) : s,
                              token: i.token,
                              valueSatoshis: Number(i.valueSatoshis),
                            };
                          })),
                          (n.version = s.version),
                          n
                        );
                      })[0],
                      sourceOutputs: t.inputs.map((e, i) => {
                        const n = {};
                        let o = !1;
                        const s = t.inputs[i];
                        let c = {};
                        return (
                          (0, A.zV)(s)
                            ? (c = {
                                script: "p2pkh_placeholder_lock",
                                overrides: {
                                  keys: {
                                    privateKeys: {
                                      placeholder_key: (0, a.UM)(
                                        r
                                          ? s.template
                                              .getPublicKey()
                                              .slice(0, 32)
                                          : s.template.privateKey
                                      ),
                                    },
                                  },
                                },
                              })
                            : o || ((c = ["slot"]), (o = !0)),
                          (n.lockingBytecode = c),
                          (n.valueSatoshis = Number(s.satoshis)),
                          (n.token = s.token),
                          n
                        );
                      }),
                      description:
                        "An example evaluation where this script execution passes.",
                      name: "Evaluate",
                    },
                  },
                  scripts: {
                    unlock_lock: {
                      passes: ["evaluate_function"],
                      name: "unlock",
                      script: [
                        `// "${B.name}" function parameters`,
                        ...(E.length
                          ? Q(E, y).map(([e, t]) =>
                              e.type === n.MX.SIG
                                ? `<${p(
                                    e.name
                                  )}.schnorr_signature.all_outputs> // ${
                                    e.type
                                  }`
                                : `<${p(e.name)}> // ${e.type} = <${
                                    "0x" + (0, a.UM)(f(t, e.type))
                                  }>`
                            )
                          : ["// none"]),
                        "",
                        ...(e.artifact.abi.length > 1
                          ? [
                              "// function index in contract",
                              `<function_index> // int = <${C.toString()}>`,
                              "",
                            ]
                          : []),
                        `// "${e.artifact.contractName}" contract constructor parameters`,
                        ...(c.length
                          ? c.map((e, t) => {
                              const r = f(u[t], c[t].type);
                              return `<${p(e.name)}> // ${
                                "bytes" === e.type ? "bytes" + r.length : e.type
                              } = <${"0x" + (0, a.UM)(r)}>`;
                            })
                          : ["// none"]),
                      ].join("\n"),
                      unlocks: "lock",
                    },
                    lock: {
                      lockingType: "p2sh20",
                      name: "lock",
                      script: e.artifact.bytecode
                        .split(" ")
                        .map((e) => {
                          try {
                            return `<0x${BigInt("0x" + e).toString(16)}>`;
                          } catch {
                            return e;
                          }
                        })
                        .join("\n"),
                    },
                    ...(m
                      ? {
                          p2pkh_placeholder_unlock: {
                            name: "p2pkh_placeholder_unlock",
                            script:
                              "<placeholder_key.schnorr_signature.all_outputs>\n<placeholder_key.public_key>",
                            unlocks: "p2pkh_placeholder_lock",
                          },
                          p2pkh_placeholder_lock: {
                            lockingType: "standard",
                            name: "p2pkh_placeholder_lock",
                            script:
                              "OP_DUP\nOP_HASH160 <$(<placeholder_key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG",
                          },
                        }
                      : {}),
                  },
                  supported: ["BCH_SPEC"],
                  version: 0,
                };
              };
            i();
          } catch (y) {
            i(y);
          }
        });
      },
      39779: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Gq: () => g, Mn: () => c, fw: () => l, oL: () => h });
            var n = r(34684),
              o = r(64447),
              A = r(10149),
              a = r(82374),
              s = e([o, A, a]);
            function c(e, t) {
              const r = [],
                i = t.constructorInputs;
              return (
                e.forEach(function (e, t) {
                  if (i[t].type.startsWith("bytes")) {
                    if ("string" != typeof e)
                      throw Error(`Couldn't parse ${e} from string to bytes`);
                    {
                      let t;
                      (t = e.includes(",")
                        ? Uint8Array.from(e.split(",").map((e) => parseInt(e)))
                        : (0, n.kW)(e)),
                        r.push(t);
                    }
                  } else "int" === i[t].type ? r.push(BigInt(e)) : "boolean" === i[t].type ? r.push(Boolean(e)) : r.push(e);
                }),
                r
              );
            }
            async function g(e, t, r) {
              const i = t.abi.filter((e) => e.name === r)[0],
                A = [];
              if (e)
                for (let t = 0; t < e.length; t++)
                  if (i.inputs[t].type.startsWith("bytes")) {
                    const r = (0, n.kW)(e[t]);
                    A.push(r);
                  } else if ("int" === i.inputs[t].type) A.push(BigInt(e[t]));
                  else if ("boolean" === i.inputs[t].type)
                    A.push(Boolean(e[t]));
                  else if ("sig" === i.inputs[t].type) {
                    const r = h(await (0, o.VK)(e[t]));
                    A.push(r);
                  } else A.push(e[t]);
              return A;
            }
            async function l(e) {
              if (Array.isArray(e)) {
                const t = [];
                for (const r of e) t.push(await u(r));
                return t;
              }
              return [await u(e)];
            }
            async function u(e) {
              if ("tokenId" in e)
                return {
                  to: e.cashaddr,
                  amount: BigInt(e.value ?? 1e3),
                  token: {
                    amount: e.amount ? BigInt(e.amount) : void 0,
                    category: e.tokenId,
                    nft:
                      e.capability || e.commitment
                        ? { capability: e.capability, commitment: e.commitment }
                        : void 0,
                  },
                };
              if ("unit" in e) {
                const t = await A.a(e.value, e.unit);
                return { to: e.cashaddr, amount: BigInt(t) };
              }
              return {
                ...e,
                amount:
                  "number" == typeof e.amount ? BigInt(e.amount) : e.amount,
              };
            }
            function h(e) {
              return new a.Z(e.privateKeyWif);
            }
            ([o, A, a] = s.then ? (await s)() : s), i();
          } catch (I) {
            i(I);
          }
        });
      },
      5803: (e, t, r) => {
        function i(e) {
          try {
            if (!r.g.localStorage) return !1;
          } catch (e) {
            return !1;
          }
          var t = r.g.localStorage[e];
          return null != t && "true" === String(t).toLowerCase();
        }
        e.exports = function (e, t) {
          if (i("noDeprecation")) return e;
          var r = !1;
          return function () {
            if (!r) {
              if (i("throwDeprecation")) throw new Error(t);
              i("traceDeprecation") ? console.trace(t) : console.warn(t),
                (r = !0);
            }
            return e.apply(this, arguments);
          };
        };
      },
      10082: (e) => {
        e.exports = function (e) {
          return (
            e &&
            "object" == typeof e &&
            "function" == typeof e.copy &&
            "function" == typeof e.fill &&
            "function" == typeof e.readUInt8
          );
        };
      },
      54895: (e, t, r) => {
        "use strict";
        var i = r(52635),
          n = r(43138),
          o = r(32094),
          A = r(50198);
        function a(e) {
          return e.call.bind(e);
        }
        var s = "undefined" != typeof BigInt,
          c = "undefined" != typeof Symbol,
          g = a(Object.prototype.toString),
          l = a(Number.prototype.valueOf),
          u = a(String.prototype.valueOf),
          h = a(Boolean.prototype.valueOf);
        if (s) var I = a(BigInt.prototype.valueOf);
        if (c) var p = a(Symbol.prototype.valueOf);
        function d(e, t) {
          if ("object" != typeof e) return !1;
          try {
            return t(e), !0;
          } catch (e) {
            return !1;
          }
        }
        function f(e) {
          return "[object Map]" === g(e);
        }
        function C(e) {
          return "[object Set]" === g(e);
        }
        function B(e) {
          return "[object WeakMap]" === g(e);
        }
        function E(e) {
          return "[object WeakSet]" === g(e);
        }
        function y(e) {
          return "[object ArrayBuffer]" === g(e);
        }
        function m(e) {
          return (
            "undefined" != typeof ArrayBuffer &&
            (y.working ? y(e) : e instanceof ArrayBuffer)
          );
        }
        function Q(e) {
          return "[object DataView]" === g(e);
        }
        function v(e) {
          return (
            "undefined" != typeof DataView &&
            (Q.working ? Q(e) : e instanceof DataView)
          );
        }
        (t.isArgumentsObject = i),
          (t.isGeneratorFunction = n),
          (t.isTypedArray = A),
          (t.isPromise = function (e) {
            return (
              ("undefined" != typeof Promise && e instanceof Promise) ||
              (null !== e &&
                "object" == typeof e &&
                "function" == typeof e.then &&
                "function" == typeof e.catch)
            );
          }),
          (t.isArrayBufferView = function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : A(e) || v(e);
          }),
          (t.isUint8Array = function (e) {
            return "Uint8Array" === o(e);
          }),
          (t.isUint8ClampedArray = function (e) {
            return "Uint8ClampedArray" === o(e);
          }),
          (t.isUint16Array = function (e) {
            return "Uint16Array" === o(e);
          }),
          (t.isUint32Array = function (e) {
            return "Uint32Array" === o(e);
          }),
          (t.isInt8Array = function (e) {
            return "Int8Array" === o(e);
          }),
          (t.isInt16Array = function (e) {
            return "Int16Array" === o(e);
          }),
          (t.isInt32Array = function (e) {
            return "Int32Array" === o(e);
          }),
          (t.isFloat32Array = function (e) {
            return "Float32Array" === o(e);
          }),
          (t.isFloat64Array = function (e) {
            return "Float64Array" === o(e);
          }),
          (t.isBigInt64Array = function (e) {
            return "BigInt64Array" === o(e);
          }),
          (t.isBigUint64Array = function (e) {
            return "BigUint64Array" === o(e);
          }),
          (f.working = "undefined" != typeof Map && f(new Map())),
          (t.isMap = function (e) {
            return (
              "undefined" != typeof Map && (f.working ? f(e) : e instanceof Map)
            );
          }),
          (C.working = "undefined" != typeof Set && C(new Set())),
          (t.isSet = function (e) {
            return (
              "undefined" != typeof Set && (C.working ? C(e) : e instanceof Set)
            );
          }),
          (B.working = "undefined" != typeof WeakMap && B(new WeakMap())),
          (t.isWeakMap = function (e) {
            return (
              "undefined" != typeof WeakMap &&
              (B.working ? B(e) : e instanceof WeakMap)
            );
          }),
          (E.working = "undefined" != typeof WeakSet && E(new WeakSet())),
          (t.isWeakSet = function (e) {
            return E(e);
          }),
          (y.working =
            "undefined" != typeof ArrayBuffer && y(new ArrayBuffer())),
          (t.isArrayBuffer = m),
          (Q.working =
            "undefined" != typeof ArrayBuffer &&
            "undefined" != typeof DataView &&
            Q(new DataView(new ArrayBuffer(1), 0, 1))),
          (t.isDataView = v);
        var S =
          "undefined" != typeof SharedArrayBuffer ? SharedArrayBuffer : void 0;
        function w(e) {
          return "[object SharedArrayBuffer]" === g(e);
        }
        function b(e) {
          return (
            void 0 !== S &&
            (void 0 === w.working && (w.working = w(new S())),
            w.working ? w(e) : e instanceof S)
          );
        }
        function k(e) {
          return d(e, l);
        }
        function N(e) {
          return d(e, u);
        }
        function _(e) {
          return d(e, h);
        }
        function D(e) {
          return s && d(e, I);
        }
        function O(e) {
          return c && d(e, p);
        }
        (t.isSharedArrayBuffer = b),
          (t.isAsyncFunction = function (e) {
            return "[object AsyncFunction]" === g(e);
          }),
          (t.isMapIterator = function (e) {
            return "[object Map Iterator]" === g(e);
          }),
          (t.isSetIterator = function (e) {
            return "[object Set Iterator]" === g(e);
          }),
          (t.isGeneratorObject = function (e) {
            return "[object Generator]" === g(e);
          }),
          (t.isWebAssemblyCompiledModule = function (e) {
            return "[object WebAssembly.Module]" === g(e);
          }),
          (t.isNumberObject = k),
          (t.isStringObject = N),
          (t.isBooleanObject = _),
          (t.isBigIntObject = D),
          (t.isSymbolObject = O),
          (t.isBoxedPrimitive = function (e) {
            return k(e) || N(e) || _(e) || D(e) || O(e);
          }),
          (t.isAnyArrayBuffer = function (e) {
            return "undefined" != typeof Uint8Array && (m(e) || b(e));
          }),
          ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(
            function (e) {
              Object.defineProperty(t, e, {
                enumerable: !1,
                value: function () {
                  throw new Error(e + " is not supported in userland");
                },
              });
            }
          );
      },
      43335: (e, t, r) => {
        var i =
            Object.getOwnPropertyDescriptors ||
            function (e) {
              for (var t = Object.keys(e), r = {}, i = 0; i < t.length; i++)
                r[t[i]] = Object.getOwnPropertyDescriptor(e, t[i]);
              return r;
            },
          n = /%[sdj%]/g;
        (t.format = function (e) {
          if (!f(e)) {
            for (var t = [], r = 0; r < arguments.length; r++)
              t.push(a(arguments[r]));
            return t.join(" ");
          }
          r = 1;
          for (
            var i = arguments,
              o = i.length,
              A = String(e).replace(n, function (e) {
                if ("%%" === e) return "%";
                if (r >= o) return e;
                switch (e) {
                  case "%s":
                    return String(i[r++]);
                  case "%d":
                    return Number(i[r++]);
                  case "%j":
                    try {
                      return JSON.stringify(i[r++]);
                    } catch (e) {
                      return "[Circular]";
                    }
                  default:
                    return e;
                }
              }),
              s = i[r];
            r < o;
            s = i[++r]
          )
            p(s) || !E(s) ? (A += " " + s) : (A += " " + a(s));
          return A;
        }),
          (t.deprecate = function (e, r) {
            if ("undefined" != typeof process && !0 === process.noDeprecation)
              return e;
            if ("undefined" == typeof process)
              return function () {
                return t.deprecate(e, r).apply(this, arguments);
              };
            var i = !1;
            return function () {
              if (!i) {
                if (process.throwDeprecation) throw new Error(r);
                process.traceDeprecation ? console.trace(r) : console.error(r),
                  (i = !0);
              }
              return e.apply(this, arguments);
            };
          });
        var o = {},
          A = /^$/;
        function a(e, r) {
          var i = { seen: [], stylize: c };
          return (
            arguments.length >= 3 && (i.depth = arguments[2]),
            arguments.length >= 4 && (i.colors = arguments[3]),
            I(r) ? (i.showHidden = r) : r && t._extend(i, r),
            C(i.showHidden) && (i.showHidden = !1),
            C(i.depth) && (i.depth = 2),
            C(i.colors) && (i.colors = !1),
            C(i.customInspect) && (i.customInspect = !0),
            i.colors && (i.stylize = s),
            g(i, e, i.depth)
          );
        }
        function s(e, t) {
          var r = a.styles[t];
          return r
            ? "[" + a.colors[r][0] + "m" + e + "[" + a.colors[r][1] + "m"
            : e;
        }
        function c(e, t) {
          return e;
        }
        function g(e, r, i) {
          if (
            e.customInspect &&
            r &&
            Q(r.inspect) &&
            r.inspect !== t.inspect &&
            (!r.constructor || r.constructor.prototype !== r)
          ) {
            var n = r.inspect(i, e);
            return f(n) || (n = g(e, n, i)), n;
          }
          var o = (function (e, t) {
            if (C(t)) return e.stylize("undefined", "undefined");
            if (f(t)) {
              var r =
                "'" +
                JSON.stringify(t)
                  .replace(/^"|"$/g, "")
                  .replace(/'/g, "\\'")
                  .replace(/\\"/g, '"') +
                "'";
              return e.stylize(r, "string");
            }
            return d(t)
              ? e.stylize("" + t, "number")
              : I(t)
              ? e.stylize("" + t, "boolean")
              : p(t)
              ? e.stylize("null", "null")
              : void 0;
          })(e, r);
          if (o) return o;
          var A = Object.keys(r),
            a = (function (e) {
              var t = {};
              return (
                e.forEach(function (e, r) {
                  t[e] = !0;
                }),
                t
              );
            })(A);
          if (
            (e.showHidden && (A = Object.getOwnPropertyNames(r)),
            m(r) &&
              (A.indexOf("message") >= 0 || A.indexOf("description") >= 0))
          )
            return l(r);
          if (0 === A.length) {
            if (Q(r)) {
              var s = r.name ? ": " + r.name : "";
              return e.stylize("[Function" + s + "]", "special");
            }
            if (B(r))
              return e.stylize(RegExp.prototype.toString.call(r), "regexp");
            if (y(r)) return e.stylize(Date.prototype.toString.call(r), "date");
            if (m(r)) return l(r);
          }
          var c,
            E = "",
            v = !1,
            S = ["{", "}"];
          return (
            h(r) && ((v = !0), (S = ["[", "]"])),
            Q(r) && (E = " [Function" + (r.name ? ": " + r.name : "") + "]"),
            B(r) && (E = " " + RegExp.prototype.toString.call(r)),
            y(r) && (E = " " + Date.prototype.toUTCString.call(r)),
            m(r) && (E = " " + l(r)),
            0 !== A.length || (v && 0 != r.length)
              ? i < 0
                ? B(r)
                  ? e.stylize(RegExp.prototype.toString.call(r), "regexp")
                  : e.stylize("[Object]", "special")
                : (e.seen.push(r),
                  (c = v
                    ? (function (e, t, r, i, n) {
                        for (var o = [], A = 0, a = t.length; A < a; ++A)
                          k(t, String(A))
                            ? o.push(u(e, t, r, i, String(A), !0))
                            : o.push("");
                        return (
                          n.forEach(function (n) {
                            n.match(/^\d+$/) || o.push(u(e, t, r, i, n, !0));
                          }),
                          o
                        );
                      })(e, r, i, a, A)
                    : A.map(function (t) {
                        return u(e, r, i, a, t, v);
                      })),
                  e.seen.pop(),
                  (function (e, t, r) {
                    return e.reduce(function (e, t) {
                      return (
                        t.indexOf("\n"),
                        e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                      );
                    }, 0) > 60
                      ? r[0] +
                          ("" === t ? "" : t + "\n ") +
                          " " +
                          e.join(",\n  ") +
                          " " +
                          r[1]
                      : r[0] + t + " " + e.join(", ") + " " + r[1];
                  })(c, E, S))
              : S[0] + E + S[1]
          );
        }
        function l(e) {
          return "[" + Error.prototype.toString.call(e) + "]";
        }
        function u(e, t, r, i, n, o) {
          var A, a, s;
          if (
            ((s = Object.getOwnPropertyDescriptor(t, n) || { value: t[n] }).get
              ? (a = s.set
                  ? e.stylize("[Getter/Setter]", "special")
                  : e.stylize("[Getter]", "special"))
              : s.set && (a = e.stylize("[Setter]", "special")),
            k(i, n) || (A = "[" + n + "]"),
            a ||
              (e.seen.indexOf(s.value) < 0
                ? (a = p(r)
                    ? g(e, s.value, null)
                    : g(e, s.value, r - 1)).indexOf("\n") > -1 &&
                  (a = o
                    ? a
                        .split("\n")
                        .map(function (e) {
                          return "  " + e;
                        })
                        .join("\n")
                        .substr(2)
                    : "\n" +
                      a
                        .split("\n")
                        .map(function (e) {
                          return "   " + e;
                        })
                        .join("\n"))
                : (a = e.stylize("[Circular]", "special"))),
            C(A))
          ) {
            if (o && n.match(/^\d+$/)) return a;
            (A = JSON.stringify("" + n)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)
              ? ((A = A.substr(1, A.length - 2)), (A = e.stylize(A, "name")))
              : ((A = A.replace(/'/g, "\\'")
                  .replace(/\\"/g, '"')
                  .replace(/(^"|"$)/g, "'")),
                (A = e.stylize(A, "string")));
          }
          return A + ": " + a;
        }
        function h(e) {
          return Array.isArray(e);
        }
        function I(e) {
          return "boolean" == typeof e;
        }
        function p(e) {
          return null === e;
        }
        function d(e) {
          return "number" == typeof e;
        }
        function f(e) {
          return "string" == typeof e;
        }
        function C(e) {
          return void 0 === e;
        }
        function B(e) {
          return E(e) && "[object RegExp]" === v(e);
        }
        function E(e) {
          return "object" == typeof e && null !== e;
        }
        function y(e) {
          return E(e) && "[object Date]" === v(e);
        }
        function m(e) {
          return E(e) && ("[object Error]" === v(e) || e instanceof Error);
        }
        function Q(e) {
          return "function" == typeof e;
        }
        function v(e) {
          return Object.prototype.toString.call(e);
        }
        function S(e) {
          return e < 10 ? "0" + e.toString(10) : e.toString(10);
        }
        (t.debuglog = function (e) {
          if (((e = e.toUpperCase()), !o[e]))
            if (A.test(e)) {
              var r = process.pid;
              o[e] = function () {
                var i = t.format.apply(t, arguments);
                console.error("%s %d: %s", e, r, i);
              };
            } else o[e] = function () {};
          return o[e];
        }),
          (t.inspect = a),
          (a.colors = {
            bold: [1, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            white: [37, 39],
            grey: [90, 39],
            black: [30, 39],
            blue: [34, 39],
            cyan: [36, 39],
            green: [32, 39],
            magenta: [35, 39],
            red: [31, 39],
            yellow: [33, 39],
          }),
          (a.styles = {
            special: "cyan",
            number: "yellow",
            boolean: "yellow",
            undefined: "grey",
            null: "bold",
            string: "green",
            date: "magenta",
            regexp: "red",
          }),
          (t.types = r(54895)),
          (t.isArray = h),
          (t.isBoolean = I),
          (t.isNull = p),
          (t.isNullOrUndefined = function (e) {
            return null == e;
          }),
          (t.isNumber = d),
          (t.isString = f),
          (t.isSymbol = function (e) {
            return "symbol" == typeof e;
          }),
          (t.isUndefined = C),
          (t.isRegExp = B),
          (t.types.isRegExp = B),
          (t.isObject = E),
          (t.isDate = y),
          (t.types.isDate = y),
          (t.isError = m),
          (t.types.isNativeError = m),
          (t.isFunction = Q),
          (t.isPrimitive = function (e) {
            return (
              null === e ||
              "boolean" == typeof e ||
              "number" == typeof e ||
              "string" == typeof e ||
              "symbol" == typeof e ||
              void 0 === e
            );
          }),
          (t.isBuffer = r(10082));
        var w = [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ];
        function b() {
          var e = new Date(),
            t = [S(e.getHours()), S(e.getMinutes()), S(e.getSeconds())].join(
              ":"
            );
          return [e.getDate(), w[e.getMonth()], t].join(" ");
        }
        function k(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
        (t.log = function () {
          console.log("%s - %s", b(), t.format.apply(t, arguments));
        }),
          (t.inherits = r(91285)),
          (t._extend = function (e, t) {
            if (!t || !E(t)) return e;
            for (var r = Object.keys(t), i = r.length; i--; ) e[r[i]] = t[r[i]];
            return e;
          });
        var N =
          "undefined" != typeof Symbol
            ? Symbol("util.promisify.custom")
            : void 0;
        function _(e, t) {
          if (!e) {
            var r = new Error("Promise was rejected with a falsy value");
            (r.reason = e), (e = r);
          }
          return t(e);
        }
        (t.promisify = function (e) {
          if ("function" != typeof e)
            throw new TypeError(
              'The "original" argument must be of type Function'
            );
          if (N && e[N]) {
            var t;
            if ("function" != typeof (t = e[N]))
              throw new TypeError(
                'The "util.promisify.custom" argument must be of type Function'
              );
            return (
              Object.defineProperty(t, N, {
                value: t,
                enumerable: !1,
                writable: !1,
                configurable: !0,
              }),
              t
            );
          }
          function t() {
            for (
              var t,
                r,
                i = new Promise(function (e, i) {
                  (t = e), (r = i);
                }),
                n = [],
                o = 0;
              o < arguments.length;
              o++
            )
              n.push(arguments[o]);
            n.push(function (e, i) {
              e ? r(e) : t(i);
            });
            try {
              e.apply(this, n);
            } catch (e) {
              r(e);
            }
            return i;
          }
          return (
            Object.setPrototypeOf(t, Object.getPrototypeOf(e)),
            N &&
              Object.defineProperty(t, N, {
                value: t,
                enumerable: !1,
                writable: !1,
                configurable: !0,
              }),
            Object.defineProperties(t, i(e))
          );
        }),
          (t.promisify.custom = N),
          (t.callbackify = function (e) {
            if ("function" != typeof e)
              throw new TypeError(
                'The "original" argument must be of type Function'
              );
            function t() {
              for (var t = [], r = 0; r < arguments.length; r++)
                t.push(arguments[r]);
              var i = t.pop();
              if ("function" != typeof i)
                throw new TypeError(
                  "The last argument must be of type Function"
                );
              var n = this,
                o = function () {
                  return i.apply(n, arguments);
                };
              e.apply(this, t).then(
                function (e) {
                  process.nextTick(o.bind(null, null, e));
                },
                function (e) {
                  process.nextTick(_.bind(null, e, o));
                }
              );
            }
            return (
              Object.setPrototypeOf(t, Object.getPrototypeOf(e)),
              Object.defineProperties(t, i(e)),
              t
            );
          });
      },
      32094: (e, t, r) => {
        "use strict";
        var i = r(46388),
          n = r(62191),
          o = r(62680),
          A = o("Object.prototype.toString"),
          a = r(67226)(),
          s = "undefined" == typeof globalThis ? r.g : globalThis,
          c = n(),
          g = o("String.prototype.slice"),
          l = {},
          u = r(29765),
          h = Object.getPrototypeOf;
        a &&
          u &&
          h &&
          i(c, function (e) {
            if ("function" == typeof s[e]) {
              var t = new s[e]();
              if (Symbol.toStringTag in t) {
                var r = h(t),
                  i = u(r, Symbol.toStringTag);
                if (!i) {
                  var n = h(r);
                  i = u(n, Symbol.toStringTag);
                }
                l[e] = i.get;
              }
            }
          });
        var I = r(50198);
        e.exports = function (e) {
          return (
            !!I(e) &&
            (a && Symbol.toStringTag in e
              ? (function (e) {
                  var t = !1;
                  return (
                    i(l, function (r, i) {
                      if (!t)
                        try {
                          var n = r.call(e);
                          n === i && (t = n);
                        } catch (e) {}
                    }),
                    t
                  );
                })(e)
              : g(A(e), 8, -1))
          );
        };
      },
      38268: (e) => {
        "use strict";
        e.exports = function (e) {
          e.prototype[Symbol.iterator] = function* () {
            for (let e = this.head; e; e = e.next) yield e.value;
          };
        };
      },
      8006: (e, t, r) => {
        "use strict";
        function i(e) {
          var t = this;
          if (
            (t instanceof i || (t = new i()),
            (t.tail = null),
            (t.head = null),
            (t.length = 0),
            e && "function" == typeof e.forEach)
          )
            e.forEach(function (e) {
              t.push(e);
            });
          else if (arguments.length > 0)
            for (var r = 0, n = arguments.length; r < n; r++)
              t.push(arguments[r]);
          return t;
        }
        function n(e, t, r) {
          var i = t === e.head ? new a(r, null, t, e) : new a(r, t, t.next, e);
          return (
            null === i.next && (e.tail = i),
            null === i.prev && (e.head = i),
            e.length++,
            i
          );
        }
        function o(e, t) {
          (e.tail = new a(t, e.tail, null, e)),
            e.head || (e.head = e.tail),
            e.length++;
        }
        function A(e, t) {
          (e.head = new a(t, null, e.head, e)),
            e.tail || (e.tail = e.head),
            e.length++;
        }
        function a(e, t, r, i) {
          if (!(this instanceof a)) return new a(e, t, r, i);
          (this.list = i),
            (this.value = e),
            t ? ((t.next = this), (this.prev = t)) : (this.prev = null),
            r ? ((r.prev = this), (this.next = r)) : (this.next = null);
        }
        (e.exports = i),
          (i.Node = a),
          (i.create = i),
          (i.prototype.removeNode = function (e) {
            if (e.list !== this)
              throw new Error(
                "removing node which does not belong to this list"
              );
            var t = e.next,
              r = e.prev;
            return (
              t && (t.prev = r),
              r && (r.next = t),
              e === this.head && (this.head = t),
              e === this.tail && (this.tail = r),
              e.list.length--,
              (e.next = null),
              (e.prev = null),
              (e.list = null),
              t
            );
          }),
          (i.prototype.unshiftNode = function (e) {
            if (e !== this.head) {
              e.list && e.list.removeNode(e);
              var t = this.head;
              (e.list = this),
                (e.next = t),
                t && (t.prev = e),
                (this.head = e),
                this.tail || (this.tail = e),
                this.length++;
            }
          }),
          (i.prototype.pushNode = function (e) {
            if (e !== this.tail) {
              e.list && e.list.removeNode(e);
              var t = this.tail;
              (e.list = this),
                (e.prev = t),
                t && (t.next = e),
                (this.tail = e),
                this.head || (this.head = e),
                this.length++;
            }
          }),
          (i.prototype.push = function () {
            for (var e = 0, t = arguments.length; e < t; e++)
              o(this, arguments[e]);
            return this.length;
          }),
          (i.prototype.unshift = function () {
            for (var e = 0, t = arguments.length; e < t; e++)
              A(this, arguments[e]);
            return this.length;
          }),
          (i.prototype.pop = function () {
            if (this.tail) {
              var e = this.tail.value;
              return (
                (this.tail = this.tail.prev),
                this.tail ? (this.tail.next = null) : (this.head = null),
                this.length--,
                e
              );
            }
          }),
          (i.prototype.shift = function () {
            if (this.head) {
              var e = this.head.value;
              return (
                (this.head = this.head.next),
                this.head ? (this.head.prev = null) : (this.tail = null),
                this.length--,
                e
              );
            }
          }),
          (i.prototype.forEach = function (e, t) {
            t = t || this;
            for (var r = this.head, i = 0; null !== r; i++)
              e.call(t, r.value, i, this), (r = r.next);
          }),
          (i.prototype.forEachReverse = function (e, t) {
            t = t || this;
            for (var r = this.tail, i = this.length - 1; null !== r; i--)
              e.call(t, r.value, i, this), (r = r.prev);
          }),
          (i.prototype.get = function (e) {
            for (var t = 0, r = this.head; null !== r && t < e; t++) r = r.next;
            if (t === e && null !== r) return r.value;
          }),
          (i.prototype.getReverse = function (e) {
            for (var t = 0, r = this.tail; null !== r && t < e; t++) r = r.prev;
            if (t === e && null !== r) return r.value;
          }),
          (i.prototype.map = function (e, t) {
            t = t || this;
            for (var r = new i(), n = this.head; null !== n; )
              r.push(e.call(t, n.value, this)), (n = n.next);
            return r;
          }),
          (i.prototype.mapReverse = function (e, t) {
            t = t || this;
            for (var r = new i(), n = this.tail; null !== n; )
              r.push(e.call(t, n.value, this)), (n = n.prev);
            return r;
          }),
          (i.prototype.reduce = function (e, t) {
            var r,
              i = this.head;
            if (arguments.length > 1) r = t;
            else {
              if (!this.head)
                throw new TypeError(
                  "Reduce of empty list with no initial value"
                );
              (i = this.head.next), (r = this.head.value);
            }
            for (var n = 0; null !== i; n++)
              (r = e(r, i.value, n)), (i = i.next);
            return r;
          }),
          (i.prototype.reduceReverse = function (e, t) {
            var r,
              i = this.tail;
            if (arguments.length > 1) r = t;
            else {
              if (!this.tail)
                throw new TypeError(
                  "Reduce of empty list with no initial value"
                );
              (i = this.tail.prev), (r = this.tail.value);
            }
            for (var n = this.length - 1; null !== i; n--)
              (r = e(r, i.value, n)), (i = i.prev);
            return r;
          }),
          (i.prototype.toArray = function () {
            for (
              var e = new Array(this.length), t = 0, r = this.head;
              null !== r;
              t++
            )
              (e[t] = r.value), (r = r.next);
            return e;
          }),
          (i.prototype.toArrayReverse = function () {
            for (
              var e = new Array(this.length), t = 0, r = this.tail;
              null !== r;
              t++
            )
              (e[t] = r.value), (r = r.prev);
            return e;
          }),
          (i.prototype.slice = function (e, t) {
            (t = t || this.length) < 0 && (t += this.length),
              (e = e || 0) < 0 && (e += this.length);
            var r = new i();
            if (t < e || t < 0) return r;
            e < 0 && (e = 0), t > this.length && (t = this.length);
            for (var n = 0, o = this.head; null !== o && n < e; n++) o = o.next;
            for (; null !== o && n < t; n++, o = o.next) r.push(o.value);
            return r;
          }),
          (i.prototype.sliceReverse = function (e, t) {
            (t = t || this.length) < 0 && (t += this.length),
              (e = e || 0) < 0 && (e += this.length);
            var r = new i();
            if (t < e || t < 0) return r;
            e < 0 && (e = 0), t > this.length && (t = this.length);
            for (var n = this.length, o = this.tail; null !== o && n > t; n--)
              o = o.prev;
            for (; null !== o && n > e; n--, o = o.prev) r.push(o.value);
            return r;
          }),
          (i.prototype.splice = function (e, t, ...r) {
            e > this.length && (e = this.length - 1),
              e < 0 && (e = this.length + e);
            for (var i = 0, o = this.head; null !== o && i < e; i++) o = o.next;
            var A = [];
            for (i = 0; o && i < t; i++)
              A.push(o.value), (o = this.removeNode(o));
            for (
              null === o && (o = this.tail),
                o !== this.head && o !== this.tail && (o = o.prev),
                i = 0;
              i < r.length;
              i++
            )
              o = n(this, o, r[i]);
            return A;
          }),
          (i.prototype.reverse = function () {
            for (
              var e = this.head, t = this.tail, r = e;
              null !== r;
              r = r.prev
            ) {
              var i = r.prev;
              (r.prev = r.next), (r.next = i);
            }
            return (this.head = t), (this.tail = e), this;
          });
        try {
          r(38268)(i);
        } catch (e) {}
      },
      22257: (e, t, r) => {
        const i = Symbol("SemVer ANY");
        class n {
          static get ANY() {
            return i;
          }
          constructor(e, t) {
            if (((t = o(t)), e instanceof n)) {
              if (e.loose === !!t.loose) return e;
              e = e.value;
            }
            c("comparator", e, t),
              (this.options = t),
              (this.loose = !!t.loose),
              this.parse(e),
              this.semver === i
                ? (this.value = "")
                : (this.value = this.operator + this.semver.version),
              c("comp", this);
          }
          parse(e) {
            const t = this.options.loose
                ? A[a.COMPARATORLOOSE]
                : A[a.COMPARATOR],
              r = e.match(t);
            if (!r) throw new TypeError(`Invalid comparator: ${e}`);
            (this.operator = void 0 !== r[1] ? r[1] : ""),
              "=" === this.operator && (this.operator = ""),
              r[2]
                ? (this.semver = new g(r[2], this.options.loose))
                : (this.semver = i);
          }
          toString() {
            return this.value;
          }
          test(e) {
            if (
              (c("Comparator.test", e, this.options.loose),
              this.semver === i || e === i)
            )
              return !0;
            if ("string" == typeof e)
              try {
                e = new g(e, this.options);
              } catch (e) {
                return !1;
              }
            return s(e, this.operator, this.semver, this.options);
          }
          intersects(e, t) {
            if (!(e instanceof n))
              throw new TypeError("a Comparator is required");
            if (
              ((t && "object" == typeof t) ||
                (t = { loose: !!t, includePrerelease: !1 }),
              "" === this.operator)
            )
              return "" === this.value || new l(e.value, t).test(this.value);
            if ("" === e.operator)
              return "" === e.value || new l(this.value, t).test(e.semver);
            const r = !(
                (">=" !== this.operator && ">" !== this.operator) ||
                (">=" !== e.operator && ">" !== e.operator)
              ),
              i = !(
                ("<=" !== this.operator && "<" !== this.operator) ||
                ("<=" !== e.operator && "<" !== e.operator)
              ),
              o = this.semver.version === e.semver.version,
              A = !(
                (">=" !== this.operator && "<=" !== this.operator) ||
                (">=" !== e.operator && "<=" !== e.operator)
              ),
              a =
                s(this.semver, "<", e.semver, t) &&
                (">=" === this.operator || ">" === this.operator) &&
                ("<=" === e.operator || "<" === e.operator),
              c =
                s(this.semver, ">", e.semver, t) &&
                ("<=" === this.operator || "<" === this.operator) &&
                (">=" === e.operator || ">" === e.operator);
            return r || i || (o && A) || a || c;
          }
        }
        e.exports = n;
        const o = r(12893),
          { re: A, t: a } = r(55765),
          s = r(7539),
          c = r(74225),
          g = r(26376),
          l = r(66902);
      },
      66902: (e, t, r) => {
        class i {
          constructor(e, t) {
            if (((t = o(t)), e instanceof i))
              return e.loose === !!t.loose &&
                e.includePrerelease === !!t.includePrerelease
                ? e
                : new i(e.raw, t);
            if (e instanceof A)
              return (
                (this.raw = e.value), (this.set = [[e]]), this.format(), this
              );
            if (
              ((this.options = t),
              (this.loose = !!t.loose),
              (this.includePrerelease = !!t.includePrerelease),
              (this.raw = e),
              (this.set = e
                .split(/\s*\|\|\s*/)
                .map((e) => this.parseRange(e.trim()))
                .filter((e) => e.length)),
              !this.set.length)
            )
              throw new TypeError(`Invalid SemVer Range: ${e}`);
            if (this.set.length > 1) {
              const e = this.set[0];
              if (
                ((this.set = this.set.filter((e) => !I(e[0]))),
                0 === this.set.length)
              )
                this.set = [e];
              else if (this.set.length > 1)
                for (const e of this.set)
                  if (1 === e.length && p(e[0])) {
                    this.set = [e];
                    break;
                  }
            }
            this.format();
          }
          format() {
            return (
              (this.range = this.set
                .map((e) => e.join(" ").trim())
                .join("||")
                .trim()),
              this.range
            );
          }
          toString() {
            return this.range;
          }
          parseRange(e) {
            e = e.trim();
            const t = `parseRange:${Object.keys(this.options).join(",")}:${e}`,
              r = n.get(t);
            if (r) return r;
            const i = this.options.loose,
              o = i ? c[g.HYPHENRANGELOOSE] : c[g.HYPHENRANGE];
            (e = e.replace(o, b(this.options.includePrerelease))),
              a("hyphen replace", e),
              (e = e.replace(c[g.COMPARATORTRIM], l)),
              a("comparator trim", e, c[g.COMPARATORTRIM]),
              (e = (e = (e = e.replace(c[g.TILDETRIM], u)).replace(
                c[g.CARETTRIM],
                h
              ))
                .split(/\s+/)
                .join(" "));
            const s = i ? c[g.COMPARATORLOOSE] : c[g.COMPARATOR],
              p = e
                .split(" ")
                .map((e) => f(e, this.options))
                .join(" ")
                .split(/\s+/)
                .map((e) => w(e, this.options))
                .filter(this.options.loose ? (e) => !!e.match(s) : () => !0)
                .map((e) => new A(e, this.options)),
              d = (p.length, new Map());
            for (const e of p) {
              if (I(e)) return [e];
              d.set(e.value, e);
            }
            d.size > 1 && d.has("") && d.delete("");
            const C = [...d.values()];
            return n.set(t, C), C;
          }
          intersects(e, t) {
            if (!(e instanceof i)) throw new TypeError("a Range is required");
            return this.set.some(
              (r) =>
                d(r, t) &&
                e.set.some(
                  (e) =>
                    d(e, t) &&
                    r.every((r) => e.every((e) => r.intersects(e, t)))
                )
            );
          }
          test(e) {
            if (!e) return !1;
            if ("string" == typeof e)
              try {
                e = new s(e, this.options);
              } catch (e) {
                return !1;
              }
            for (let t = 0; t < this.set.length; t++)
              if (k(this.set[t], e, this.options)) return !0;
            return !1;
          }
        }
        e.exports = i;
        const n = new (r(77105))({ max: 1e3 }),
          o = r(12893),
          A = r(22257),
          a = r(74225),
          s = r(26376),
          {
            re: c,
            t: g,
            comparatorTrimReplace: l,
            tildeTrimReplace: u,
            caretTrimReplace: h,
          } = r(55765),
          I = (e) => "<0.0.0-0" === e.value,
          p = (e) => "" === e.value,
          d = (e, t) => {
            let r = !0;
            const i = e.slice();
            let n = i.pop();
            for (; r && i.length; )
              (r = i.every((e) => n.intersects(e, t))), (n = i.pop());
            return r;
          },
          f = (e, t) => (
            a("comp", e, t),
            (e = y(e, t)),
            a("caret", e),
            (e = B(e, t)),
            a("tildes", e),
            (e = Q(e, t)),
            a("xrange", e),
            (e = S(e, t)),
            a("stars", e),
            e
          ),
          C = (e) => !e || "x" === e.toLowerCase() || "*" === e,
          B = (e, t) =>
            e
              .trim()
              .split(/\s+/)
              .map((e) => E(e, t))
              .join(" "),
          E = (e, t) => {
            const r = t.loose ? c[g.TILDELOOSE] : c[g.TILDE];
            return e.replace(r, (t, r, i, n, o) => {
              let A;
              return (
                a("tilde", e, t, r, i, n, o),
                C(r)
                  ? (A = "")
                  : C(i)
                  ? (A = `>=${r}.0.0 <${+r + 1}.0.0-0`)
                  : C(n)
                  ? (A = `>=${r}.${i}.0 <${r}.${+i + 1}.0-0`)
                  : o
                  ? (a("replaceTilde pr", o),
                    (A = `>=${r}.${i}.${n}-${o} <${r}.${+i + 1}.0-0`))
                  : (A = `>=${r}.${i}.${n} <${r}.${+i + 1}.0-0`),
                a("tilde return", A),
                A
              );
            });
          },
          y = (e, t) =>
            e
              .trim()
              .split(/\s+/)
              .map((e) => m(e, t))
              .join(" "),
          m = (e, t) => {
            a("caret", e, t);
            const r = t.loose ? c[g.CARETLOOSE] : c[g.CARET],
              i = t.includePrerelease ? "-0" : "";
            return e.replace(r, (t, r, n, o, A) => {
              let s;
              return (
                a("caret", e, t, r, n, o, A),
                C(r)
                  ? (s = "")
                  : C(n)
                  ? (s = `>=${r}.0.0${i} <${+r + 1}.0.0-0`)
                  : C(o)
                  ? (s =
                      "0" === r
                        ? `>=${r}.${n}.0${i} <${r}.${+n + 1}.0-0`
                        : `>=${r}.${n}.0${i} <${+r + 1}.0.0-0`)
                  : A
                  ? (a("replaceCaret pr", A),
                    (s =
                      "0" === r
                        ? "0" === n
                          ? `>=${r}.${n}.${o}-${A} <${r}.${n}.${+o + 1}-0`
                          : `>=${r}.${n}.${o}-${A} <${r}.${+n + 1}.0-0`
                        : `>=${r}.${n}.${o}-${A} <${+r + 1}.0.0-0`))
                  : (a("no pr"),
                    (s =
                      "0" === r
                        ? "0" === n
                          ? `>=${r}.${n}.${o}${i} <${r}.${n}.${+o + 1}-0`
                          : `>=${r}.${n}.${o}${i} <${r}.${+n + 1}.0-0`
                        : `>=${r}.${n}.${o} <${+r + 1}.0.0-0`)),
                a("caret return", s),
                s
              );
            });
          },
          Q = (e, t) => (
            a("replaceXRanges", e, t),
            e
              .split(/\s+/)
              .map((e) => v(e, t))
              .join(" ")
          ),
          v = (e, t) => {
            e = e.trim();
            const r = t.loose ? c[g.XRANGELOOSE] : c[g.XRANGE];
            return e.replace(r, (r, i, n, o, A, s) => {
              a("xRange", e, r, i, n, o, A, s);
              const c = C(n),
                g = c || C(o),
                l = g || C(A),
                u = l;
              return (
                "=" === i && u && (i = ""),
                (s = t.includePrerelease ? "-0" : ""),
                c
                  ? (r = ">" === i || "<" === i ? "<0.0.0-0" : "*")
                  : i && u
                  ? (g && (o = 0),
                    (A = 0),
                    ">" === i
                      ? ((i = ">="),
                        g
                          ? ((n = +n + 1), (o = 0), (A = 0))
                          : ((o = +o + 1), (A = 0)))
                      : "<=" === i &&
                        ((i = "<"), g ? (n = +n + 1) : (o = +o + 1)),
                    "<" === i && (s = "-0"),
                    (r = `${i + n}.${o}.${A}${s}`))
                  : g
                  ? (r = `>=${n}.0.0${s} <${+n + 1}.0.0-0`)
                  : l && (r = `>=${n}.${o}.0${s} <${n}.${+o + 1}.0-0`),
                a("xRange return", r),
                r
              );
            });
          },
          S = (e, t) => (
            a("replaceStars", e, t), e.trim().replace(c[g.STAR], "")
          ),
          w = (e, t) => (
            a("replaceGTE0", e, t),
            e.trim().replace(c[t.includePrerelease ? g.GTE0PRE : g.GTE0], "")
          ),
          b = (e) => (t, r, i, n, o, A, a, s, c, g, l, u, h) =>
            `${(r = C(i)
              ? ""
              : C(n)
              ? `>=${i}.0.0${e ? "-0" : ""}`
              : C(o)
              ? `>=${i}.${n}.0${e ? "-0" : ""}`
              : A
              ? `>=${r}`
              : `>=${r}${e ? "-0" : ""}`)} ${(s = C(c)
              ? ""
              : C(g)
              ? `<${+c + 1}.0.0-0`
              : C(l)
              ? `<${c}.${+g + 1}.0-0`
              : u
              ? `<=${c}.${g}.${l}-${u}`
              : e
              ? `<${c}.${g}.${+l + 1}-0`
              : `<=${s}`)}`.trim(),
          k = (e, t, r) => {
            for (let r = 0; r < e.length; r++) if (!e[r].test(t)) return !1;
            if (t.prerelease.length && !r.includePrerelease) {
              for (let r = 0; r < e.length; r++)
                if (
                  (a(e[r].semver),
                  e[r].semver !== A.ANY && e[r].semver.prerelease.length > 0)
                ) {
                  const i = e[r].semver;
                  if (
                    i.major === t.major &&
                    i.minor === t.minor &&
                    i.patch === t.patch
                  )
                    return !0;
                }
              return !1;
            }
            return !0;
          };
      },
      26376: (e, t, r) => {
        const i = r(74225),
          { MAX_LENGTH: n, MAX_SAFE_INTEGER: o } = r(83295),
          { re: A, t: a } = r(55765),
          s = r(12893),
          { compareIdentifiers: c } = r(86742);
        class g {
          constructor(e, t) {
            if (((t = s(t)), e instanceof g)) {
              if (
                e.loose === !!t.loose &&
                e.includePrerelease === !!t.includePrerelease
              )
                return e;
              e = e.version;
            } else if ("string" != typeof e)
              throw new TypeError(`Invalid Version: ${e}`);
            if (e.length > n)
              throw new TypeError(`version is longer than ${n} characters`);
            i("SemVer", e, t),
              (this.options = t),
              (this.loose = !!t.loose),
              (this.includePrerelease = !!t.includePrerelease);
            const r = e.trim().match(t.loose ? A[a.LOOSE] : A[a.FULL]);
            if (!r) throw new TypeError(`Invalid Version: ${e}`);
            if (
              ((this.raw = e),
              (this.major = +r[1]),
              (this.minor = +r[2]),
              (this.patch = +r[3]),
              this.major > o || this.major < 0)
            )
              throw new TypeError("Invalid major version");
            if (this.minor > o || this.minor < 0)
              throw new TypeError("Invalid minor version");
            if (this.patch > o || this.patch < 0)
              throw new TypeError("Invalid patch version");
            r[4]
              ? (this.prerelease = r[4].split(".").map((e) => {
                  if (/^[0-9]+$/.test(e)) {
                    const t = +e;
                    if (t >= 0 && t < o) return t;
                  }
                  return e;
                }))
              : (this.prerelease = []),
              (this.build = r[5] ? r[5].split(".") : []),
              this.format();
          }
          format() {
            return (
              (this.version = `${this.major}.${this.minor}.${this.patch}`),
              this.prerelease.length &&
                (this.version += `-${this.prerelease.join(".")}`),
              this.version
            );
          }
          toString() {
            return this.version;
          }
          compare(e) {
            if (
              (i("SemVer.compare", this.version, this.options, e),
              !(e instanceof g))
            ) {
              if ("string" == typeof e && e === this.version) return 0;
              e = new g(e, this.options);
            }
            return e.version === this.version
              ? 0
              : this.compareMain(e) || this.comparePre(e);
          }
          compareMain(e) {
            return (
              e instanceof g || (e = new g(e, this.options)),
              c(this.major, e.major) ||
                c(this.minor, e.minor) ||
                c(this.patch, e.patch)
            );
          }
          comparePre(e) {
            if (
              (e instanceof g || (e = new g(e, this.options)),
              this.prerelease.length && !e.prerelease.length)
            )
              return -1;
            if (!this.prerelease.length && e.prerelease.length) return 1;
            if (!this.prerelease.length && !e.prerelease.length) return 0;
            let t = 0;
            do {
              const r = this.prerelease[t],
                n = e.prerelease[t];
              if (
                (i("prerelease compare", t, r, n), void 0 === r && void 0 === n)
              )
                return 0;
              if (void 0 === n) return 1;
              if (void 0 === r) return -1;
              if (r !== n) return c(r, n);
            } while (++t);
          }
          compareBuild(e) {
            e instanceof g || (e = new g(e, this.options));
            let t = 0;
            do {
              const r = this.build[t],
                n = e.build[t];
              if (
                (i("prerelease compare", t, r, n), void 0 === r && void 0 === n)
              )
                return 0;
              if (void 0 === n) return 1;
              if (void 0 === r) return -1;
              if (r !== n) return c(r, n);
            } while (++t);
          }
          inc(e, t) {
            switch (e) {
              case "premajor":
                (this.prerelease.length = 0),
                  (this.patch = 0),
                  (this.minor = 0),
                  this.major++,
                  this.inc("pre", t);
                break;
              case "preminor":
                (this.prerelease.length = 0),
                  (this.patch = 0),
                  this.minor++,
                  this.inc("pre", t);
                break;
              case "prepatch":
                (this.prerelease.length = 0),
                  this.inc("patch", t),
                  this.inc("pre", t);
                break;
              case "prerelease":
                0 === this.prerelease.length && this.inc("patch", t),
                  this.inc("pre", t);
                break;
              case "major":
                (0 === this.minor &&
                  0 === this.patch &&
                  0 !== this.prerelease.length) ||
                  this.major++,
                  (this.minor = 0),
                  (this.patch = 0),
                  (this.prerelease = []);
                break;
              case "minor":
                (0 === this.patch && 0 !== this.prerelease.length) ||
                  this.minor++,
                  (this.patch = 0),
                  (this.prerelease = []);
                break;
              case "patch":
                0 === this.prerelease.length && this.patch++,
                  (this.prerelease = []);
                break;
              case "pre":
                if (0 === this.prerelease.length) this.prerelease = [0];
                else {
                  let e = this.prerelease.length;
                  for (; --e >= 0; )
                    "number" == typeof this.prerelease[e] &&
                      (this.prerelease[e]++, (e = -2));
                  -1 === e && this.prerelease.push(0);
                }
                t &&
                  (this.prerelease[0] === t
                    ? isNaN(this.prerelease[1]) && (this.prerelease = [t, 0])
                    : (this.prerelease = [t, 0]));
                break;
              default:
                throw new Error(`invalid increment argument: ${e}`);
            }
            return this.format(), (this.raw = this.version), this;
          }
        }
        e.exports = g;
      },
      13507: (e, t, r) => {
        const i = r(33959);
        e.exports = (e, t) => {
          const r = i(e.trim().replace(/^[=v]+/, ""), t);
          return r ? r.version : null;
        };
      },
      7539: (e, t, r) => {
        const i = r(58718),
          n = r(81194),
          o = r(71312),
          A = r(25903),
          a = r(21544),
          s = r(12056);
        e.exports = (e, t, r, c) => {
          switch (t) {
            case "===":
              return (
                "object" == typeof e && (e = e.version),
                "object" == typeof r && (r = r.version),
                e === r
              );
            case "!==":
              return (
                "object" == typeof e && (e = e.version),
                "object" == typeof r && (r = r.version),
                e !== r
              );
            case "":
            case "=":
            case "==":
              return i(e, r, c);
            case "!=":
              return n(e, r, c);
            case ">":
              return o(e, r, c);
            case ">=":
              return A(e, r, c);
            case "<":
              return a(e, r, c);
            case "<=":
              return s(e, r, c);
            default:
              throw new TypeError(`Invalid operator: ${t}`);
          }
        };
      },
      99038: (e, t, r) => {
        const i = r(26376),
          n = r(33959),
          { re: o, t: A } = r(55765);
        e.exports = (e, t) => {
          if (e instanceof i) return e;
          if (("number" == typeof e && (e = String(e)), "string" != typeof e))
            return null;
          let r = null;
          if ((t = t || {}).rtl) {
            let t;
            for (
              ;
              (t = o[A.COERCERTL].exec(e)) &&
              (!r || r.index + r[0].length !== e.length);

            )
              (r && t.index + t[0].length === r.index + r[0].length) || (r = t),
                (o[A.COERCERTL].lastIndex =
                  t.index + t[1].length + t[2].length);
            o[A.COERCERTL].lastIndex = -1;
          } else r = e.match(o[A.COERCE]);
          return null === r
            ? null
            : n(`${r[2]}.${r[3] || "0"}.${r[4] || "0"}`, t);
        };
      },
      88880: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t, r) => {
          const n = new i(e, r),
            o = new i(t, r);
          return n.compare(o) || n.compareBuild(o);
        };
      },
      27880: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t) => i(e, t, !0);
      },
      46269: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t, r) => new i(e, r).compare(new i(t, r));
      },
      62378: (e, t, r) => {
        const i = r(33959),
          n = r(58718);
        e.exports = (e, t) => {
          if (n(e, t)) return null;
          {
            const r = i(e),
              n = i(t),
              o = r.prerelease.length || n.prerelease.length,
              A = o ? "pre" : "",
              a = o ? "prerelease" : "";
            for (const e in r)
              if (
                ("major" === e || "minor" === e || "patch" === e) &&
                r[e] !== n[e]
              )
                return A + e;
            return a;
          }
        };
      },
      58718: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => 0 === i(e, t, r);
      },
      71312: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => i(e, t, r) > 0;
      },
      25903: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => i(e, t, r) >= 0;
      },
      20253: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t, r, n) => {
          "string" == typeof r && ((n = r), (r = void 0));
          try {
            return new i(e, r).inc(t, n).version;
          } catch (e) {
            return null;
          }
        };
      },
      21544: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => i(e, t, r) < 0;
      },
      12056: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => i(e, t, r) <= 0;
      },
      38679: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t) => new i(e, t).major;
      },
      87789: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t) => new i(e, t).minor;
      },
      81194: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => 0 !== i(e, t, r);
      },
      33959: (e, t, r) => {
        const { MAX_LENGTH: i } = r(83295),
          { re: n, t: o } = r(55765),
          A = r(26376),
          a = r(12893);
        e.exports = (e, t) => {
          if (((t = a(t)), e instanceof A)) return e;
          if ("string" != typeof e) return null;
          if (e.length > i) return null;
          if (!(t.loose ? n[o.LOOSE] : n[o.FULL]).test(e)) return null;
          try {
            return new A(e, t);
          } catch (e) {
            return null;
          }
        };
      },
      52358: (e, t, r) => {
        const i = r(26376);
        e.exports = (e, t) => new i(e, t).patch;
      },
      57559: (e, t, r) => {
        const i = r(33959);
        e.exports = (e, t) => {
          const r = i(e, t);
          return r && r.prerelease.length ? r.prerelease : null;
        };
      },
      79795: (e, t, r) => {
        const i = r(46269);
        e.exports = (e, t, r) => i(t, e, r);
      },
      63657: (e, t, r) => {
        const i = r(88880);
        e.exports = (e, t) => e.sort((e, r) => i(r, e, t));
      },
      45712: (e, t, r) => {
        const i = r(66902);
        e.exports = (e, t, r) => {
          try {
            t = new i(t, r);
          } catch (e) {
            return !1;
          }
          return t.test(e);
        };
      },
      21100: (e, t, r) => {
        const i = r(88880);
        e.exports = (e, t) => e.sort((e, r) => i(e, r, t));
      },
      76397: (e, t, r) => {
        const i = r(33959);
        e.exports = (e, t) => {
          const r = i(e, t);
          return r ? r.version : null;
        };
      },
      81249: (e, t, r) => {
        const i = r(55765);
        e.exports = {
          re: i.re,
          src: i.src,
          tokens: i.t,
          SEMVER_SPEC_VERSION: r(83295).SEMVER_SPEC_VERSION,
          SemVer: r(26376),
          compareIdentifiers: r(86742).compareIdentifiers,
          rcompareIdentifiers: r(86742).rcompareIdentifiers,
          parse: r(33959),
          valid: r(76397),
          clean: r(13507),
          inc: r(20253),
          diff: r(62378),
          major: r(38679),
          minor: r(87789),
          patch: r(52358),
          prerelease: r(57559),
          compare: r(46269),
          rcompare: r(79795),
          compareLoose: r(27880),
          compareBuild: r(88880),
          sort: r(21100),
          rsort: r(63657),
          gt: r(71312),
          lt: r(21544),
          eq: r(58718),
          neq: r(81194),
          gte: r(25903),
          lte: r(12056),
          cmp: r(7539),
          coerce: r(99038),
          Comparator: r(22257),
          Range: r(66902),
          satisfies: r(45712),
          toComparators: r(51042),
          maxSatisfying: r(85775),
          minSatisfying: r(71657),
          minVersion: r(95316),
          validRange: r(89042),
          outside: r(6826),
          gtr: r(97606),
          ltr: r(50032),
          intersects: r(82937),
          simplifyRange: r(17908),
          subset: r(50799),
        };
      },
      83295: (e) => {
        const t = Number.MAX_SAFE_INTEGER || 9007199254740991;
        e.exports = {
          SEMVER_SPEC_VERSION: "2.0.0",
          MAX_LENGTH: 256,
          MAX_SAFE_INTEGER: t,
          MAX_SAFE_COMPONENT_LENGTH: 16,
        };
      },
      74225: (e) => {
        const t = ("object" == typeof process && process.env, () => {});
        e.exports = t;
      },
      86742: (e) => {
        const t = /^[0-9]+$/,
          r = (e, r) => {
            const i = t.test(e),
              n = t.test(r);
            return (
              i && n && ((e = +e), (r = +r)),
              e === r ? 0 : i && !n ? -1 : n && !i ? 1 : e < r ? -1 : 1
            );
          };
        e.exports = {
          compareIdentifiers: r,
          rcompareIdentifiers: (e, t) => r(t, e),
        };
      },
      12893: (e) => {
        const t = ["includePrerelease", "loose", "rtl"];
        e.exports = (e) =>
          e
            ? "object" != typeof e
              ? { loose: !0 }
              : t.filter((t) => e[t]).reduce((e, t) => ((e[t] = !0), e), {})
            : {};
      },
      55765: (e, t, r) => {
        const { MAX_SAFE_COMPONENT_LENGTH: i } = r(83295),
          n = r(74225),
          o = ((t = e.exports = {}).re = []),
          A = (t.src = []),
          a = (t.t = {});
        let s = 0;
        const c = (e, t, r) => {
          const i = s++;
          n(i, t),
            (a[e] = i),
            (A[i] = t),
            (o[i] = new RegExp(t, r ? "g" : void 0));
        };
        c("NUMERICIDENTIFIER", "0|[1-9]\\d*"),
          c("NUMERICIDENTIFIERLOOSE", "[0-9]+"),
          c("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"),
          c(
            "MAINVERSION",
            `(${A[a.NUMERICIDENTIFIER]})\\.(${A[a.NUMERICIDENTIFIER]})\\.(${
              A[a.NUMERICIDENTIFIER]
            })`
          ),
          c(
            "MAINVERSIONLOOSE",
            `(${A[a.NUMERICIDENTIFIERLOOSE]})\\.(${
              A[a.NUMERICIDENTIFIERLOOSE]
            })\\.(${A[a.NUMERICIDENTIFIERLOOSE]})`
          ),
          c(
            "PRERELEASEIDENTIFIER",
            `(?:${A[a.NUMERICIDENTIFIER]}|${A[a.NONNUMERICIDENTIFIER]})`
          ),
          c(
            "PRERELEASEIDENTIFIERLOOSE",
            `(?:${A[a.NUMERICIDENTIFIERLOOSE]}|${A[a.NONNUMERICIDENTIFIER]})`
          ),
          c(
            "PRERELEASE",
            `(?:-(${A[a.PRERELEASEIDENTIFIER]}(?:\\.${
              A[a.PRERELEASEIDENTIFIER]
            })*))`
          ),
          c(
            "PRERELEASELOOSE",
            `(?:-?(${A[a.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${
              A[a.PRERELEASEIDENTIFIERLOOSE]
            })*))`
          ),
          c("BUILDIDENTIFIER", "[0-9A-Za-z-]+"),
          c(
            "BUILD",
            `(?:\\+(${A[a.BUILDIDENTIFIER]}(?:\\.${A[a.BUILDIDENTIFIER]})*))`
          ),
          c(
            "FULLPLAIN",
            `v?${A[a.MAINVERSION]}${A[a.PRERELEASE]}?${A[a.BUILD]}?`
          ),
          c("FULL", `^${A[a.FULLPLAIN]}$`),
          c(
            "LOOSEPLAIN",
            `[v=\\s]*${A[a.MAINVERSIONLOOSE]}${A[a.PRERELEASELOOSE]}?${
              A[a.BUILD]
            }?`
          ),
          c("LOOSE", `^${A[a.LOOSEPLAIN]}$`),
          c("GTLT", "((?:<|>)?=?)"),
          c("XRANGEIDENTIFIERLOOSE", `${A[a.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),
          c("XRANGEIDENTIFIER", `${A[a.NUMERICIDENTIFIER]}|x|X|\\*`),
          c(
            "XRANGEPLAIN",
            `[v=\\s]*(${A[a.XRANGEIDENTIFIER]})(?:\\.(${
              A[a.XRANGEIDENTIFIER]
            })(?:\\.(${A[a.XRANGEIDENTIFIER]})(?:${A[a.PRERELEASE]})?${
              A[a.BUILD]
            }?)?)?`
          ),
          c(
            "XRANGEPLAINLOOSE",
            `[v=\\s]*(${A[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${
              A[a.XRANGEIDENTIFIERLOOSE]
            })(?:\\.(${A[a.XRANGEIDENTIFIERLOOSE]})(?:${
              A[a.PRERELEASELOOSE]
            })?${A[a.BUILD]}?)?)?`
          ),
          c("XRANGE", `^${A[a.GTLT]}\\s*${A[a.XRANGEPLAIN]}$`),
          c("XRANGELOOSE", `^${A[a.GTLT]}\\s*${A[a.XRANGEPLAINLOOSE]}$`),
          c(
            "COERCE",
            `(^|[^\\d])(\\d{1,${i}})(?:\\.(\\d{1,${i}}))?(?:\\.(\\d{1,${i}}))?(?:$|[^\\d])`
          ),
          c("COERCERTL", A[a.COERCE], !0),
          c("LONETILDE", "(?:~>?)"),
          c("TILDETRIM", `(\\s*)${A[a.LONETILDE]}\\s+`, !0),
          (t.tildeTrimReplace = "$1~"),
          c("TILDE", `^${A[a.LONETILDE]}${A[a.XRANGEPLAIN]}$`),
          c("TILDELOOSE", `^${A[a.LONETILDE]}${A[a.XRANGEPLAINLOOSE]}$`),
          c("LONECARET", "(?:\\^)"),
          c("CARETTRIM", `(\\s*)${A[a.LONECARET]}\\s+`, !0),
          (t.caretTrimReplace = "$1^"),
          c("CARET", `^${A[a.LONECARET]}${A[a.XRANGEPLAIN]}$`),
          c("CARETLOOSE", `^${A[a.LONECARET]}${A[a.XRANGEPLAINLOOSE]}$`),
          c("COMPARATORLOOSE", `^${A[a.GTLT]}\\s*(${A[a.LOOSEPLAIN]})$|^$`),
          c("COMPARATOR", `^${A[a.GTLT]}\\s*(${A[a.FULLPLAIN]})$|^$`),
          c(
            "COMPARATORTRIM",
            `(\\s*)${A[a.GTLT]}\\s*(${A[a.LOOSEPLAIN]}|${A[a.XRANGEPLAIN]})`,
            !0
          ),
          (t.comparatorTrimReplace = "$1$2$3"),
          c(
            "HYPHENRANGE",
            `^\\s*(${A[a.XRANGEPLAIN]})\\s+-\\s+(${A[a.XRANGEPLAIN]})\\s*$`
          ),
          c(
            "HYPHENRANGELOOSE",
            `^\\s*(${A[a.XRANGEPLAINLOOSE]})\\s+-\\s+(${
              A[a.XRANGEPLAINLOOSE]
            })\\s*$`
          ),
          c("STAR", "(<|>)?=?\\s*\\*"),
          c("GTE0", "^\\s*>=\\s*0.0.0\\s*$"),
          c("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      },
      97606: (e, t, r) => {
        const i = r(6826);
        e.exports = (e, t, r) => i(e, t, ">", r);
      },
      82937: (e, t, r) => {
        const i = r(66902);
        e.exports = (e, t, r) => (
          (e = new i(e, r)), (t = new i(t, r)), e.intersects(t)
        );
      },
      50032: (e, t, r) => {
        const i = r(6826);
        e.exports = (e, t, r) => i(e, t, "<", r);
      },
      85775: (e, t, r) => {
        const i = r(26376),
          n = r(66902);
        e.exports = (e, t, r) => {
          let o = null,
            A = null,
            a = null;
          try {
            a = new n(t, r);
          } catch (e) {
            return null;
          }
          return (
            e.forEach((e) => {
              a.test(e) &&
                ((o && -1 !== A.compare(e)) || ((o = e), (A = new i(o, r))));
            }),
            o
          );
        };
      },
      71657: (e, t, r) => {
        const i = r(26376),
          n = r(66902);
        e.exports = (e, t, r) => {
          let o = null,
            A = null,
            a = null;
          try {
            a = new n(t, r);
          } catch (e) {
            return null;
          }
          return (
            e.forEach((e) => {
              a.test(e) &&
                ((o && 1 !== A.compare(e)) || ((o = e), (A = new i(o, r))));
            }),
            o
          );
        };
      },
      95316: (e, t, r) => {
        const i = r(26376),
          n = r(66902),
          o = r(71312);
        e.exports = (e, t) => {
          e = new n(e, t);
          let r = new i("0.0.0");
          if (e.test(r)) return r;
          if (((r = new i("0.0.0-0")), e.test(r))) return r;
          r = null;
          for (let t = 0; t < e.set.length; ++t) {
            const n = e.set[t];
            let A = null;
            n.forEach((e) => {
              const t = new i(e.semver.version);
              switch (e.operator) {
                case ">":
                  0 === t.prerelease.length ? t.patch++ : t.prerelease.push(0),
                    (t.raw = t.format());
                case "":
                case ">=":
                  (A && !o(t, A)) || (A = t);
                  break;
                case "<":
                case "<=":
                  break;
                default:
                  throw new Error(`Unexpected operation: ${e.operator}`);
              }
            }),
              !A || (r && !o(r, A)) || (r = A);
          }
          return r && e.test(r) ? r : null;
        };
      },
      6826: (e, t, r) => {
        const i = r(26376),
          n = r(22257),
          { ANY: o } = n,
          A = r(66902),
          a = r(45712),
          s = r(71312),
          c = r(21544),
          g = r(12056),
          l = r(25903);
        e.exports = (e, t, r, u) => {
          let h, I, p, d, f;
          switch (((e = new i(e, u)), (t = new A(t, u)), r)) {
            case ">":
              (h = s), (I = g), (p = c), (d = ">"), (f = ">=");
              break;
            case "<":
              (h = c), (I = l), (p = s), (d = "<"), (f = "<=");
              break;
            default:
              throw new TypeError('Must provide a hilo val of "<" or ">"');
          }
          if (a(e, t, u)) return !1;
          for (let r = 0; r < t.set.length; ++r) {
            const i = t.set[r];
            let A = null,
              a = null;
            if (
              (i.forEach((e) => {
                e.semver === o && (e = new n(">=0.0.0")),
                  (A = A || e),
                  (a = a || e),
                  h(e.semver, A.semver, u)
                    ? (A = e)
                    : p(e.semver, a.semver, u) && (a = e);
              }),
              A.operator === d || A.operator === f)
            )
              return !1;
            if ((!a.operator || a.operator === d) && I(e, a.semver)) return !1;
            if (a.operator === f && p(e, a.semver)) return !1;
          }
          return !0;
        };
      },
      17908: (e, t, r) => {
        const i = r(45712),
          n = r(46269);
        e.exports = (e, t, r) => {
          const o = [];
          let A = null,
            a = null;
          const s = e.sort((e, t) => n(e, t, r));
          for (const e of s)
            i(e, t, r)
              ? ((a = e), A || (A = e))
              : (a && o.push([A, a]), (a = null), (A = null));
          A && o.push([A, null]);
          const c = [];
          for (const [e, t] of o)
            e === t
              ? c.push(e)
              : t || e !== s[0]
              ? t
                ? e === s[0]
                  ? c.push(`<=${t}`)
                  : c.push(`${e} - ${t}`)
                : c.push(`>=${e}`)
              : c.push("*");
          const g = c.join(" || "),
            l = "string" == typeof t.raw ? t.raw : String(t);
          return g.length < l.length ? g : t;
        };
      },
      50799: (e, t, r) => {
        const i = r(66902),
          n = r(22257),
          { ANY: o } = n,
          A = r(45712),
          a = r(46269),
          s = (e, t, r) => {
            if (e === t) return !0;
            if (1 === e.length && e[0].semver === o) {
              if (1 === t.length && t[0].semver === o) return !0;
              e = r.includePrerelease
                ? [new n(">=0.0.0-0")]
                : [new n(">=0.0.0")];
            }
            if (1 === t.length && t[0].semver === o) {
              if (r.includePrerelease) return !0;
              t = [new n(">=0.0.0")];
            }
            const i = new Set();
            let s, l, u, h, I, p, d;
            for (const t of e)
              ">" === t.operator || ">=" === t.operator
                ? (s = c(s, t, r))
                : "<" === t.operator || "<=" === t.operator
                ? (l = g(l, t, r))
                : i.add(t.semver);
            if (i.size > 1) return null;
            if (s && l) {
              if (((u = a(s.semver, l.semver, r)), u > 0)) return null;
              if (0 === u && (">=" !== s.operator || "<=" !== l.operator))
                return null;
            }
            for (const e of i) {
              if (s && !A(e, String(s), r)) return null;
              if (l && !A(e, String(l), r)) return null;
              for (const i of t) if (!A(e, String(i), r)) return !1;
              return !0;
            }
            let f =
                !(!l || r.includePrerelease || !l.semver.prerelease.length) &&
                l.semver,
              C =
                !(!s || r.includePrerelease || !s.semver.prerelease.length) &&
                s.semver;
            f &&
              1 === f.prerelease.length &&
              "<" === l.operator &&
              0 === f.prerelease[0] &&
              (f = !1);
            for (const e of t) {
              if (
                ((d = d || ">" === e.operator || ">=" === e.operator),
                (p = p || "<" === e.operator || "<=" === e.operator),
                s)
              )
                if (
                  (C &&
                    e.semver.prerelease &&
                    e.semver.prerelease.length &&
                    e.semver.major === C.major &&
                    e.semver.minor === C.minor &&
                    e.semver.patch === C.patch &&
                    (C = !1),
                  ">" === e.operator || ">=" === e.operator)
                ) {
                  if (((h = c(s, e, r)), h === e && h !== s)) return !1;
                } else if (">=" === s.operator && !A(s.semver, String(e), r))
                  return !1;
              if (l)
                if (
                  (f &&
                    e.semver.prerelease &&
                    e.semver.prerelease.length &&
                    e.semver.major === f.major &&
                    e.semver.minor === f.minor &&
                    e.semver.patch === f.patch &&
                    (f = !1),
                  "<" === e.operator || "<=" === e.operator)
                ) {
                  if (((I = g(l, e, r)), I === e && I !== l)) return !1;
                } else if ("<=" === l.operator && !A(l.semver, String(e), r))
                  return !1;
              if (!e.operator && (l || s) && 0 !== u) return !1;
            }
            return !(
              (s && p && !l && 0 !== u) ||
              (l && d && !s && 0 !== u) ||
              C ||
              f
            );
          },
          c = (e, t, r) => {
            if (!e) return t;
            const i = a(e.semver, t.semver, r);
            return i > 0
              ? e
              : i < 0 || (">" === t.operator && ">=" === e.operator)
              ? t
              : e;
          },
          g = (e, t, r) => {
            if (!e) return t;
            const i = a(e.semver, t.semver, r);
            return i < 0
              ? e
              : i > 0 || ("<" === t.operator && "<=" === e.operator)
              ? t
              : e;
          };
        e.exports = (e, t, r = {}) => {
          if (e === t) return !0;
          (e = new i(e, r)), (t = new i(t, r));
          let n = !1;
          e: for (const i of e.set) {
            for (const e of t.set) {
              const t = s(i, e, r);
              if (((n = n || null !== t), t)) continue e;
            }
            if (n) return !1;
          }
          return !0;
        };
      },
      51042: (e, t, r) => {
        const i = r(66902);
        e.exports = (e, t) =>
          new i(e, t).set.map((e) =>
            e
              .map((e) => e.value)
              .join(" ")
              .trim()
              .split(" ")
          );
      },
      89042: (e, t, r) => {
        const i = r(66902);
        e.exports = (e, t) => {
          try {
            return new i(e, t).range || "*";
          } catch (e) {
            return null;
          }
        };
      },
      84219: () => {},
      5714: () => {},
      16081: () => {},
      74854: () => {},
      66602: () => {},
      36165: () => {},
      87801: () => {},
      56170: () => {},
      1098: () => {},
      9669: () => {},
      36667: () => {},
      63181: () => {},
      62191: (e, t, r) => {
        "use strict";
        var i = [
            "BigInt64Array",
            "BigUint64Array",
            "Float32Array",
            "Float64Array",
            "Int16Array",
            "Int32Array",
            "Int8Array",
            "Uint16Array",
            "Uint32Array",
            "Uint8Array",
            "Uint8ClampedArray",
          ],
          n = "undefined" == typeof globalThis ? r.g : globalThis;
        e.exports = function () {
          for (var e = [], t = 0; t < i.length; t++)
            "function" == typeof n[i[t]] && (e[e.length] = i[t]);
          return e;
        };
      },
      29765: (e, t, r) => {
        "use strict";
        var i = r(67286)("%Object.getOwnPropertyDescriptor%");
        if (i)
          try {
            i([], "length");
          } catch (e) {
            i = null;
          }
        e.exports = i;
      },
      49942: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { k3: () => l, qT: () => n, si: () => u });
            var n,
              o = r(12909),
              A = r(47726),
              a = r(34684),
              s = r(6833),
              c = e([o, A]);
            ([o, A] = c.then ? (await c)() : c),
              (function (e) {
                (e[(e.p2pkh = 0)] = "p2pkh"),
                  (e[(e.p2sh20 = 5)] = "p2sh20"),
                  (e[(e.wif = 128)] = "wif"),
                  (e[(e.p2pkhTestnet = 111)] = "p2pkhTestnet"),
                  (e[(e.p2sh20Testnet = 196)] = "p2sh20Testnet"),
                  (e[(e.wifTestnet = 239)] = "wifTestnet"),
                  (e[(e.p2pkhCopayBCH = 28)] = "p2pkhCopayBCH"),
                  (e[(e.p2sh20CopayBCH = 40)] = "p2sh20CopayBCH");
              })(n || (n = {}));
            const l = (e, t, r = o.JQ) => {
              const i = Uint8Array.from([e, ...t]),
                n = (0, A.W)(i, r).slice(0, 4),
                c = (0, a.kg)([i, n]);
              return (0, s.Yu)(c);
            };
            var g;
            !(function (e) {
              (e.unknownCharacter =
                "Base58Address error: address may only contain valid base58 characters."),
                (e.tooShort =
                  "Base58Address error: address is too short to be valid."),
                (e.invalidChecksum =
                  "Base58Address error: address has an invalid checksum."),
                (e.unknownAddressVersion =
                  "Base58Address error: address uses an unknown address version."),
                (e.incorrectLength =
                  "Base58Address error: the encoded payload is not the correct length (20 bytes).");
            })(g || (g = {}));
            const u = (e, t = o.JQ) => {
              const r = (0, s.e9)(e);
              if (r === s.C4.unknownCharacter) return g.unknownCharacter;
              if (r.length < 5) return g.tooShort;
              const i = r.slice(0, -4),
                n = r.slice(-4),
                A = t.hash(t.hash(i)).slice(0, 4);
              return n.every((e, t) => e === A[t])
                ? { payload: i.slice(1), version: i[0] }
                : g.invalidChecksum;
            };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      5102: (e, t, r) => {
        "use strict";
        r.d(t, {
          wQ: () => S,
          s: () => g,
          Jl: () => u,
          cr: () => p,
          Hc: () => _,
          ef: () => N,
          Jy: () => D,
          pl: () => B,
          Hh: () => b,
        });
        var i = r(10377);
        const n = "qpzry9x8gf2tvdw0s3jn54khce6mua7l",
          o = {
            q: 0,
            p: 1,
            z: 2,
            r: 3,
            y: 4,
            9: 5,
            x: 6,
            8: 7,
            g: 8,
            f: 9,
            2: 10,
            t: 11,
            v: 12,
            d: 13,
            w: 14,
            0: 15,
            s: 16,
            3: 17,
            j: 18,
            n: 19,
            5: 20,
            4: 21,
            k: 22,
            h: 23,
            c: 24,
            e: 25,
            6: 26,
            m: 27,
            u: 28,
            a: 29,
            7: 30,
            l: 31,
          };
        var A;
        !(function (e) {
          (e.integerOutOfRange =
            "An integer provided in the source array is out of the range of the specified source word length."),
            (e.hasDisallowedPadding =
              "Encountered padding when padding was disallowed."),
            (e.requiresDisallowedPadding =
              "Encoding requires padding while padding is disallowed.");
        })(A || (A = {}));
        const a = ({
            bin: e,
            sourceWordLength: t,
            resultWordLength: r,
            allowPadding: i = !0,
          }) => {
            let n = 0,
              o = 0;
            const a = [],
              s = (1 << r) - 1;
            for (let i = 0; i < e.length; ++i) {
              const c = e[i];
              if (c < 0 || c >> t != 0) return A.integerOutOfRange;
              for (n = (n << t) | c, o += t; o >= r; )
                (o -= r), a.push((n >> o) & s);
            }
            if (i) o > 0 && a.push((n << (r - o)) & s);
            else {
              if (o >= t) return A.hasDisallowedPadding;
              if (((n << (r - o)) & s) > 0) return A.requiresDisallowedPadding;
            }
            return a;
          },
          s = new RegExp(`[^${n}]`, "u");
        var c, g, l, u, h;
        !(function (e) {
          e.notBech32CharacterSet =
            "Bech32 decoding error: input contains characters outside of the Bech32 character set.";
        })(c || (c = {})),
          (function (e) {
            (e.mainnet = "bitcoincash"),
              (e.testnet = "bchtest"),
              (e.regtest = "bchreg");
          })(g || (g = {})),
          (function (e) {
            (e[(e.p2pkh = 0)] = "p2pkh"),
              (e[(e.p2sh20 = 8)] = "p2sh20"),
              (e[(e.p2sh32 = 11)] = "p2sh32"),
              (e[(e.p2pkhWithTokens = 16)] = "p2pkhWithTokens"),
              (e[(e.p2sh20WithTokens = 24)] = "p2sh20WithTokens"),
              (e[(e.p2sh32WithTokens = 27)] = "p2sh32WithTokens");
          })(l || (l = {})),
          (function (e) {
            (e.p2pkh = "p2pkh"),
              (e.p2sh = "p2sh"),
              (e.p2pkhWithTokens = "p2pkhWithTokens"),
              (e.p2shWithTokens = "p2shWithTokens");
          })(u || (u = {})),
          (function (e) {
            (e[(e.p2pkh = 0)] = "p2pkh"),
              (e[(e.p2sh = 1)] = "p2sh"),
              (e[(e.p2pkhWithTokens = 2)] = "p2pkhWithTokens"),
              (e[(e.p2shWithTokens = 3)] = "p2shWithTokens");
          })(h || (h = {}));
        const I = {
            [u.p2pkh]: h.p2pkh,
            [u.p2sh]: h.p2sh,
            [u.p2pkhWithTokens]: h.p2pkhWithTokens,
            [u.p2shWithTokens]: h.p2shWithTokens,
          },
          p = {
            [h.p2pkh]: u.p2pkh,
            [h.p2sh]: u.p2sh,
            [h.p2pkhWithTokens]: u.p2pkhWithTokens,
            [h.p2shWithTokens]: u.p2shWithTokens,
          },
          d = { 0: 20, 1: 24, 2: 28, 3: 32, 4: 40, 5: 48, 6: 56, 7: 64 },
          f = { 20: 0, 24: 1, 28: 2, 32: 3, 40: 4, 48: 5, 56: 6, 64: 7 };
        var C;
        !(function (e) {
          e.reservedBitSet = "Reserved bit is set.";
        })(C || (C = {}));
        const B = (e) =>
            0 != (128 & e)
              ? C.reservedBitSet
              : { length: d[7 & e], typeBits: (e >>> 3) & 15 },
          E = (e) => {
            const t = [];
            for (let r = 0; r < e.length; r++) t.push(31 & e.charCodeAt(r));
            return t;
          },
          y = [152, 121, 243, 174, 30],
          m = [4072443489, 3077413346, 1046459332, 783016616, 1329849456],
          Q = (e) => {
            let t = 0,
              r = 1,
              i = 0;
            for (let n = 0; n < e.length; n++) {
              (i = t >>> 3),
                (t &= 7),
                (t <<= 5),
                (t |= r >>> 27),
                (r &= 134217727),
                (r <<= 5),
                (r ^= e[n]);
              for (let e = 0; e < y.length; ++e)
                i & (1 << e) && ((t ^= y[e]), (r ^= m[e]));
            }
            return (
              (r ^= 1),
              r < 0 && ((r ^= 1 << 31), (r += 2 * (1 << 30))),
              t * (1 << 30) * 4 + r
            );
          },
          v = (e) => {
            const t = [];
            for (let r = 0; r < 8; ++r) t.push(31 & e), (e /= 32);
            return t.reverse();
          };
        var S;
        !(function (e) {
          (e.unsupportedPayloadLength =
            "Error encoding CashAddress: a payload of this length can not be encoded as a valid CashAddress."),
            (e.noTypeBitsValueStandardizedForP2pk =
              "Error encoding CashAddress: no CashAddress type bit has been standardized for P2PK locking bytecode."),
            (e.unknownLockingBytecodeType =
              "Error encoding CashAddress: unknown locking bytecode type.");
        })(S || (S = {}));
        const w = (e, t, r) => {
            const { length: o } = r;
            if (!((e) => void 0 !== f[e])(o))
              throw new Error(
                (0, i.Z)(S.unsupportedPayloadLength, `Payload length: ${o}.`)
              );
            return ((e, t, r) => {
              const i = a({
                  bin: Uint8Array.from([t, ...r]),
                  resultWordLength: 5,
                  sourceWordLength: 8,
                }),
                o = [...E(e), 0, ...i, 0, 0, 0, 0, 0, 0, 0, 0],
                A = Q(o);
              return `${e}:${((e) => {
                let t = "";
                for (let r = 0; r < e.length; r++) t += n[e[r]];
                return t;
              })([...i, ...v(A)])}`;
            })(e, ((e, t) => (e << 3) | f[t])(t, o), r);
          },
          b = (e, t, r) => w(e, I[t], r);
        var k;
        !(function (e) {
          (e.improperPadding =
            "Error decoding CashAddress: the payload is improperly padded."),
            (e.invalidCharacters =
              "Error decoding CashAddress: the payload contains non-bech32 characters."),
            (e.invalidChecksum =
              "Error decoding CashAddress: invalid checksum - please review the address for errors."),
            (e.invalidFormat =
              'Error decoding CashAddress: CashAddresses should be of the form "prefix:payload".'),
            (e.mismatchedPayloadLength =
              "Error decoding CashAddress: mismatched payload length for specified address version."),
            (e.reservedByte =
              "Error decoding CashAddress: unknown CashAddress version, reserved byte set."),
            (e.unknownAddressType =
              "Error decoding CashAddress: unknown CashAddress type.");
        })(k || (k = {}));
        const N = (e) => {
            const t = e.toLowerCase().split(":");
            if (2 !== t.length || "" === t[0] || "" === t[1])
              return k.invalidFormat;
            const [r, i] = t;
            if (((n = i), s.test(n))) return k.invalidCharacters;
            var n;
            const A = ((e) => {
                const t = [];
                for (let r = 0; r < e.length; r++) t.push(o[e[r]]);
                return t;
              })(i),
              c = [...E(r), 0, ...A];
            if (0 !== Q(c)) return k.invalidChecksum;
            const g = a({
              allowPadding: !1,
              bin: A.slice(0, -8),
              resultWordLength: 8,
              sourceWordLength: 5,
            });
            if ("string" == typeof g) return k.improperPadding;
            const [l, ...u] = g;
            return { payload: Uint8Array.from(u), prefix: r, version: l };
          },
          _ = (e) => {
            const t = ((e) => {
              const t = N(e);
              if ("string" == typeof t) return t;
              const r = B(t.version);
              return r === C.reservedBitSet
                ? k.reservedByte
                : t.payload.length !== r.length
                ? k.mismatchedPayloadLength
                : {
                    payload: t.payload,
                    prefix: t.prefix,
                    typeBits: r.typeBits,
                  };
            })(e);
            if ("string" == typeof t) return t;
            const r = p[t.typeBits];
            return void 0 === r
              ? `${k.unknownAddressType} Type bit value: ${t.typeBits}.`
              : { payload: t.payload, prefix: t.prefix, type: r };
          },
          D = (e, t = [g.mainnet, g.testnet, g.regtest]) => {
            for (const r of t) {
              const t = N(`${r}:${e}`);
              if (t !== k.invalidChecksum) return t;
            }
            return k.invalidChecksum;
          };
        var O;
        !(function (e) {
          e.tooManyErrors =
            "This address has more than 2 errors and cannot be corrected.";
        })(O || (O = {}));
      },
      11779: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              EG: () => n,
              Gw: () => C,
              IW: () => g,
              PG: () => B,
              m1: () => l,
              mJ: () => c,
              nA: () => E,
              pI: () => u,
            });
            var n,
              o = r(10377),
              A = r(5102);
            !(function (e) {
              (e.p2pk = "P2PK"),
                (e.p2pkh = "P2PKH"),
                (e.p2sh20 = "P2SH20"),
                (e.p2sh32 = "P2SH32");
            })(n || (n = {}));
            const e = (e) => 67 === e.length && 65 === e[0] && 172 === e[66],
              s = (e) => 35 === e.length && 33 === e[0] && 172 === e[34],
              c = (t) => s(t) || e(t),
              g = (e) =>
                25 === e.length &&
                118 === e[0] &&
                169 === e[1] &&
                20 === e[2] &&
                136 === e[23] &&
                172 === e[24],
              l = (e) =>
                23 === e.length && 169 === e[0] && 20 === e[1] && 135 === e[22],
              u = (e) =>
                35 === e.length && 170 === e[0] && 32 === e[1] && 135 === e[34],
              h = (t) =>
                g(t)
                  ? { payload: t.slice(3, 23), type: n.p2pkh }
                  : l(t)
                  ? { payload: t.slice(2, 22), type: n.p2sh20 }
                  : u(t)
                  ? { payload: t.slice(2, 34), type: n.p2sh32 }
                  : e(t)
                  ? { payload: t.slice(1, 66), type: n.p2pk }
                  : s(t)
                  ? { payload: t.slice(1, 34), type: n.p2pk }
                  : { payload: t.slice(), type: "unknown" },
              I = (e) => Uint8Array.from([118, 169, 20, ...e, 136, 172]),
              p = (e) => Uint8Array.from([169, 20, ...e, 135]),
              d = (e) => Uint8Array.from([170, 32, ...e, 135]),
              f = (e) =>
                33 === e.length
                  ? Uint8Array.from([33, ...e, 172])
                  : Uint8Array.from([65, ...e, 172]),
              C = ({ payload: e, type: t }) =>
                t === n.p2pkh
                  ? I(e)
                  : t === n.p2sh20
                  ? p(e)
                  : t === n.p2sh32
                  ? d(e)
                  : t === n.p2pk
                  ? f(e)
                  : (0, o.m)(t, `Unrecognized addressContents type: ${t}`),
              B = (e, t = "bitcoincash", r = { tokenSupport: !1 }) => {
                const i = h(e);
                return i.type === n.p2pkh
                  ? r.tokenSupport
                    ? (0, A.Hh)(t, A.Jl.p2pkhWithTokens, i.payload)
                    : (0, A.Hh)(t, A.Jl.p2pkh, i.payload)
                  : i.type === n.p2sh20 || i.type === n.p2sh32
                  ? r.tokenSupport
                    ? (0, A.Hh)(t, A.Jl.p2shWithTokens, i.payload)
                    : (0, A.Hh)(t, A.Jl.p2sh, i.payload)
                  : "P2PK" === i.type
                  ? { error: A.wQ.noTypeBitsValueStandardizedForP2pk }
                  : "unknown" === i.type
                  ? { error: A.wQ.unknownLockingBytecodeType }
                  : (0, o.m)(
                      i.type,
                      `Unrecognized locking bytecode type: ${i.type}`
                    );
              };
            var a;
            !(function (e) {
              e.unsupportedPayloadLength =
                "Error generating locking bytecode: no standard locking bytecode patterns support a payload of this length.";
            })(a || (a = {}));
            const E = (e) => {
              const t = (0, A.Hc)(e);
              return "string" == typeof t
                ? t
                : 20 !== t.payload.length && 32 !== t.payload.length
                ? (0, o.Z)(
                    a.unsupportedPayloadLength,
                    `Payload length: ${t.payload.length}`
                  )
                : t.type === A.Jl.p2pkh || t.type === A.Jl.p2pkhWithTokens
                ? {
                    bytecode: C({ payload: t.payload, type: n.p2pkh }),
                    options: { tokenSupport: t.type === A.Jl.p2pkhWithTokens },
                    prefix: t.prefix,
                  }
                : t.type === A.Jl.p2sh || t.type === A.Jl.p2shWithTokens
                ? {
                    bytecode: C({
                      payload: t.payload,
                      type: 32 === t.payload.length ? n.p2sh32 : n.p2sh20,
                    }),
                    options: { tokenSupport: t.type === A.Jl.p2shWithTokens },
                    prefix: t.prefix,
                  }
                : (0, o.m)(t.type, `Unrecognized address type: ${t.type}`);
            };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      49354: (e, t, r) => {
        "use strict";
        r.d(t, { r: () => i });
        const i = async (e, t, r, i, n, o) => {
          const A = (
            await WebAssembly.instantiate(e, {
              [t]: {
                __wbindgen_throw: (e, t) => {
                  throw new Error(
                    Array.from(l().subarray(e, e + t))
                      .map((e) => String.fromCharCode(e))
                      .join("")
                  );
                },
              },
            })
          ).instance.exports;
          let a, s, c;
          const g = () => (
            void 0 === c && (c = A.__wbindgen_global_argument_ptr()), c
          );
          function l() {
            return (
              (void 0 !== a && a.buffer === A.memory.buffer) ||
                (a = new Uint8Array(A.memory.buffer)),
              a
            );
          }
          const u = () => (
              (void 0 !== s && s.buffer === A.memory.buffer) ||
                (s = new Uint32Array(A.memory.buffer)),
              s
            ),
            h = (e) => {
              const t = A.__wbindgen_malloc(e.length);
              return l().set(e, t), [t, e.length];
            },
            I = (e, t) => l().subarray(e, e + t);
          return {
            final: (e) => {
              const [t, r] = h(e),
                i = g();
              try {
                A[o](i, t, r);
                const n = u(),
                  a = n[i / 4],
                  s = n[i / 4 + 1],
                  c = I(a, s).slice();
                return A.__wbindgen_free(a, s), c;
              } finally {
                e.set(l().subarray(t / 1, t / 1 + r)), A.__wbindgen_free(t, r);
              }
            },
            hash: (e) => {
              const [t, i] = h(e),
                n = g();
              try {
                A[r](n, t, i);
                const e = u(),
                  o = e[n / 4],
                  a = e[n / 4 + 1],
                  s = I(o, a).slice();
                return A.__wbindgen_free(o, a), s;
              } finally {
                A.__wbindgen_free(t, i);
              }
            },
            init: () => {
              const e = g();
              A[i](e);
              const t = u(),
                r = t[e / 4],
                n = t[e / 4 + 1],
                o = I(r, n).slice();
              return A.__wbindgen_free(r, n), o;
            },
            update: (e, t) => {
              const [r, i] = h(e),
                [o, a] = h(t),
                s = g();
              try {
                A[n](s, r, i, o, a);
                const t = u(),
                  c = t[s / 4],
                  g = t[s / 4 + 1],
                  h = I(c, g).slice();
                return A.__wbindgen_free(c, g), h;
              } finally {
                e.set(l().subarray(r / 1, r / 1 + i)),
                  A.__wbindgen_free(r, i),
                  A.__wbindgen_free(o, a);
              }
            },
          };
        };
      },
      13609: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { m6: () => T });
            var n,
              o = r(47726),
              A = r(12909),
              a = r(44115),
              s = r(85671),
              c = r(83468),
              g = r(48945),
              l = r(59108),
              u = r(82219),
              h = r(41869),
              I = e([a, o, l, u, h, s, A, g]);
            ([a, o, l, u, h, s, A, g] = I.then ? (await I)() : I),
              (function (e) {
                (e.allOutputs = "all_outputs"),
                  (e.allOutputsAllUtxos = "all_outputs_all_utxos"),
                  (e.allOutputsSingleInput = "all_outputs_single_input"),
                  (e.allOutputsSingleInputInvalidAllUtxos =
                    "all_outputs_single_input_INVALID_all_utxos"),
                  (e.correspondingOutput = "corresponding_output"),
                  (e.correspondingOutputAllUtxos =
                    "corresponding_output_all_utxos"),
                  (e.correspondingOutputSingleInput =
                    "corresponding_output_single_input"),
                  (e.correspondingOutputSingleInputInvalidAllUtxos =
                    "corresponding_output_single_input_INVALID_all_utxos"),
                  (e.default = "default"),
                  (e.noOutputs = "no_outputs"),
                  (e.noOutputsAllUtxos = "no_outputs_all_utxos"),
                  (e.noOutputsSingleInput = "no_outputs_single_input"),
                  (e.noOutputsSingleInputInvalidAllUtxos =
                    "no_outputs_single_input_INVALID_all_utxos");
              })(n || (n = {}));
            const p = (e, t = "") => {
                switch (e) {
                  case `${t}${n.allOutputs}`:
                    return Uint8Array.of(a.BU.allOutputs);
                  case `${t}${n.allOutputsAllUtxos}`:
                  case `${t}${n.default}`:
                    return Uint8Array.of(a.BU.allOutputsAllUtxos);
                  case `${t}${n.allOutputsSingleInput}`:
                    return Uint8Array.of(a.BU.allOutputsSingleInput);
                  case `${t}${n.allOutputsSingleInputInvalidAllUtxos}`:
                    return Uint8Array.of(
                      a.IR.allOutputs |
                        a.IR.singleInput |
                        a.IR.utxos |
                        a.IR.forkId
                    );
                  case `${t}${n.correspondingOutput}`:
                    return Uint8Array.of(a.BU.correspondingOutput);
                  case `${t}${n.correspondingOutputAllUtxos}`:
                    return Uint8Array.of(a.BU.correspondingOutputAllUtxos);
                  case `${t}${n.correspondingOutputSingleInput}`:
                    return Uint8Array.of(a.BU.correspondingOutputSingleInput);
                  case `${t}${n.correspondingOutputSingleInputInvalidAllUtxos}`:
                    return Uint8Array.of(
                      a.IR.correspondingOutput |
                        a.IR.singleInput |
                        a.IR.utxos |
                        a.IR.forkId
                    );
                  case `${t}${n.noOutputs}`:
                    return Uint8Array.of(a.BU.noOutputs);
                  case `${t}${n.noOutputsAllUtxos}`:
                    return Uint8Array.of(a.BU.noOutputsAllUtxos);
                  case `${t}${n.noOutputsSingleInput}`:
                    return Uint8Array.of(a.BU.noOutputsSingleInput);
                  case `${t}${n.noOutputsSingleInputInvalidAllUtxos}`:
                    return Uint8Array.of(
                      a.IR.noOutputs |
                        a.IR.singleInput |
                        a.IR.utxos |
                        a.IR.forkId
                    );
                  default:
                    return;
                }
              },
              d = ({
                coveredBytecode: e,
                identifier: t,
                compilationContext: r,
                operationName: i,
                privateKey: n,
                sha256: A,
                sign: s,
              }) => {
                const [, , c, g] = t.split(".");
                if (void 0 !== g)
                  return {
                    error: `Unknown component in "${t}" - the fragment "${g}" is not recognized.`,
                    status: "error",
                  };
                if (void 0 === c)
                  return {
                    error: `Invalid signature identifier. Signatures must be of the form: "[variable_id].${i}.[signing_serialization_type]".`,
                    status: "error",
                  };
                const l = p(c);
                if (void 0 === l)
                  return {
                    error: `Unknown signing serialization algorithm, "${c}".`,
                    status: "error",
                  };
                const u = (0, a.Y8)(
                    r,
                    { coveredBytecode: e, signingSerializationType: l },
                    A
                  ),
                  h = (0, o.W)(u, A);
                return {
                  bytecode: Uint8Array.from([...s(n, h), ...l]),
                  signature: { serialization: u },
                  status: "success",
                };
              },
              f = ({ operationName: e, secp256k1Method: t }) =>
                (0, l.uX)(
                  [l.E2],
                  (0, l.St)({
                    canBeSkipped: !1,
                    configurationProperties: [
                      "entityOwnership",
                      "ripemd160",
                      "secp256k1",
                      "sha256",
                      "sha512",
                      "variables",
                      "sourceScriptIds",
                      "unlockingScripts",
                    ],
                    dataProperties: ["hdKeys", "compilationContext"],
                    operation: (r, i, n) => {
                      const { hdKeys: o, compilationContext: A } = i,
                        {
                          secp256k1: a,
                          sha256: s,
                          sourceScriptIds: c,
                          unlockingScripts: g,
                        } = n,
                        u = (0, l.oX)({
                          configuration: n,
                          hdKeys: o,
                          identifier: r,
                        });
                      if ("error" === u.status) return u;
                      const h = (0, l.em)({
                        configuration: n,
                        data: i,
                        identifier: r,
                        sourceScriptIds: c,
                        unlockingScripts: g,
                      });
                      return "error" in h
                        ? h
                        : d({
                            compilationContext: A,
                            coveredBytecode: h,
                            identifier: r,
                            operationName: e,
                            privateKey: u.bytecode,
                            sha256: s,
                            sign: a[t],
                          });
                    },
                  })
                ),
              C = f({
                operationName: "signature",
                secp256k1Method: "signMessageHashDER",
              }),
              B = f({
                operationName: "schnorr_signature",
                secp256k1Method: "signMessageHashSchnorr",
              }),
              E = ({ operationName: e, secp256k1Method: t }) =>
                (0, l.uX)(
                  [l.E2],
                  (0, l.St)({
                    canBeSkipped: !1,
                    configurationProperties: [
                      "sha256",
                      "secp256k1",
                      "unlockingScripts",
                      "sourceScriptIds",
                    ],
                    dataProperties: ["keys", "compilationContext"],
                    operation: (r, i, n) => {
                      const { keys: o, compilationContext: A } = i,
                        {
                          secp256k1: a,
                          sha256: s,
                          unlockingScripts: c,
                          sourceScriptIds: g,
                        } = n,
                        { privateKeys: u } = o,
                        [h] = r.split("."),
                        I = void 0 === u ? void 0 : u[h];
                      if (void 0 === I)
                        return {
                          error: `Identifier "${r}" refers to a Key, but a private key for "${h}" (or an existing signature) was not provided in the compilation data.`,
                          recoverable: !0,
                          status: "error",
                        };
                      const p = (0, l.em)({
                        configuration: n,
                        data: i,
                        identifier: r,
                        sourceScriptIds: g,
                        unlockingScripts: c,
                      });
                      return "error" in p
                        ? p
                        : d({
                            compilationContext: A,
                            coveredBytecode: p,
                            identifier: r,
                            operationName: e,
                            privateKey: I,
                            sha256: s,
                            sign: a[t],
                          });
                    },
                  })
                ),
              y = E({
                operationName: "signature",
                secp256k1Method: "signMessageHashDER",
              }),
              m = E({
                operationName: "schnorr_signature",
                secp256k1Method: "signMessageHashSchnorr",
              }),
              Q = ({
                data: e,
                configuration: t,
                identifier: r,
                operationName: i,
                privateKey: n,
                sha256: o,
                sign: A,
              }) => {
                const [, , a, s] = r.split(".");
                if (void 0 !== s)
                  return {
                    error: `Unknown component in "${r}" - the fragment "${s}" is not recognized.`,
                    status: "error",
                  };
                if (void 0 === a)
                  return {
                    error: `Invalid data signature identifier. Data signatures must be of the form: "[variable_id].${i}.[target_script_id]".`,
                    status: "error",
                  };
                const c = (0, l.Kh)({
                  configuration: t,
                  data: e,
                  targetScriptId: a,
                });
                if (!1 === c)
                  return {
                    error: `Data signature tried to sign an unknown target script, "${a}".`,
                    status: "error",
                  };
                if ("error" in c) return c;
                const g = o.hash(c);
                return {
                  bytecode: A(n, g),
                  signature: { digest: g, message: c },
                  status: "success",
                };
              },
              v = ({ operationName: e, secp256k1Method: t }) =>
                (0, l.uX)(
                  [l.E2],
                  (0, l.St)({
                    canBeSkipped: !1,
                    configurationProperties: ["sha256", "secp256k1"],
                    dataProperties: ["keys"],
                    operation: (r, i, n) => {
                      const { keys: o } = i,
                        { secp256k1: A, sha256: a } = n,
                        { privateKeys: s } = o,
                        [c] = r.split("."),
                        g = void 0 === s ? void 0 : s[c];
                      return void 0 === g
                        ? {
                            error: `Identifier "${r}" refers to a Key, but a private key for "${c}" (or an existing signature) was not provided in the compilation data.`,
                            recoverable: !0,
                            status: "error",
                          }
                        : Q({
                            configuration: n,
                            data: i,
                            identifier: r,
                            operationName: e,
                            privateKey: g,
                            sha256: a,
                            sign: A[t],
                          });
                    },
                  })
                ),
              S = v({
                operationName: "data_signature",
                secp256k1Method: "signMessageHashDER",
              }),
              w = v({
                operationName: "schnorr_data_signature",
                secp256k1Method: "signMessageHashSchnorr",
              }),
              b = ({ operationName: e, secp256k1Method: t }) =>
                (0, l.uX)(
                  [l.E2],
                  (0, l.St)({
                    canBeSkipped: !1,
                    configurationProperties: [
                      "entityOwnership",
                      "ripemd160",
                      "secp256k1",
                      "sha256",
                      "sha512",
                      "variables",
                    ],
                    dataProperties: ["hdKeys"],
                    operation: (r, i, n) => {
                      const { hdKeys: o } = i,
                        { secp256k1: A, sha256: a } = n,
                        s = (0, l.oX)({
                          configuration: n,
                          hdKeys: o,
                          identifier: r,
                        });
                      return "error" === s.status
                        ? s
                        : Q({
                            configuration: n,
                            data: i,
                            identifier: r,
                            operationName: e,
                            privateKey: s.bytecode,
                            sha256: a,
                            sign: A[t],
                          });
                    },
                  })
                ),
              k = b({
                operationName: "data_signature",
                secp256k1Method: "signMessageHashDER",
              }),
              N = b({
                operationName: "schnorr_data_signature",
                secp256k1Method: "signMessageHashSchnorr",
              }),
              _ = (0, l.St)({
                canBeSkipped: !1,
                configurationProperties: [
                  "sha256",
                  "sourceScriptIds",
                  "unlockingScripts",
                ],
                dataProperties: ["compilationContext"],
                operation: (e, t, r) => {
                  const [, i, n] = e.split(".");
                  if (void 0 === i)
                    return {
                      error:
                        'Invalid signing serialization operation. Include the desired component or algorithm, e.g. "signing_serialization.version".',
                      status: "error",
                    };
                  if (void 0 !== n)
                    return {
                      error: `Unknown component in "${e}" - the fragment "${n}" is not recognized.`,
                      status: "error",
                    };
                  const o = p(i, "full_");
                  if (void 0 === o)
                    return {
                      error: `Unknown signing serialization algorithm, "${i}".`,
                      status: "error",
                    };
                  const {
                      sha256: A,
                      sourceScriptIds: s,
                      unlockingScripts: c,
                    } = r,
                    g = (0, l.em)({
                      configuration: r,
                      data: t,
                      identifier: e,
                      sourceScriptIds: s,
                      unlockingScripts: c,
                    });
                  if ("error" in g) return g;
                  const { compilationContext: u } = t;
                  return {
                    bytecode: (0, a.Y8)(
                      u,
                      { coveredBytecode: g, signingSerializationType: o },
                      A
                    ),
                    status: "success",
                  };
                },
              }),
              D = {
                ...u.Cr,
                hdKey: {
                  data_signature: k,
                  public_key: u.Cr.hdKey.public_key,
                  schnorr_data_signature: N,
                  schnorr_signature: B,
                  signature: C,
                },
                key: {
                  data_signature: S,
                  public_key: u.Cr.key.public_key,
                  schnorr_data_signature: w,
                  schnorr_signature: m,
                  signature: y,
                },
                signingSerialization: {
                  ...u.Cr.signingSerialization,
                  full_all_outputs: _,
                  full_all_outputs_all_utxos: _,
                  full_all_outputs_single_input: _,
                  full_all_outputs_single_input_INVALID_all_utxos: _,
                  full_corresponding_output: _,
                  full_corresponding_output_all_utxos: _,
                  full_corresponding_output_single_input: _,
                  full_corresponding_output_single_input_INVALID_all_utxos: _,
                  full_default: _,
                  full_no_outputs: _,
                  full_no_outputs_all_utxos: _,
                  full_no_outputs_single_input: _,
                  full_no_outputs_single_input_INVALID_all_utxos: _,
                },
              },
              O = (e) =>
                (0, h.p4)({
                  createAuthenticationProgram: h.kw,
                  opcodes: (0, s.oC)(c.L),
                  operations: D,
                  ripemd160: A.bP,
                  secp256k1: A.kA,
                  sha256: A.JQ,
                  sha512: A.o,
                  vm: void 0 === e.vm ? (0, g.j)() : e.vm,
                  ...e,
                }),
              T = (e, t) => O({ ...t, ...(0, h.e5)(e) });
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      43743: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { z: () => i }),
          (function (e) {
            (e[(e.defaultScenarioAddressIndex = 0)] =
              "defaultScenarioAddressIndex"),
              (e.defaultScenarioBytecode = ""),
              (e[(e.defaultScenarioCurrentBlockHeight = 2)] =
                "defaultScenarioCurrentBlockHeight"),
              (e[(e.defaultScenarioCurrentBlockTime = 1231469665)] =
                "defaultScenarioCurrentBlockTime"),
              (e.defaultScenarioInputOutpointTransactionHash =
                "0000000000000000000000000000000000000000000000000000000000000001"),
              (e.defaultScenarioOutputTokenCategory =
                "0000000000000000000000000000000000000000000000000000000000000002"),
              (e[(e.defaultScenarioInputSequenceNumber = 0)] =
                "defaultScenarioInputSequenceNumber"),
              (e[(e.defaultScenarioOutputValueSatoshis = 0)] =
                "defaultScenarioOutputValueSatoshis"),
              (e[(e.defaultScenarioTransactionLocktime = 0)] =
                "defaultScenarioTransactionLocktime"),
              (e[(e.defaultScenarioTransactionVersion = 2)] =
                "defaultScenarioTransactionVersion"),
              (e[(e.hdKeyAddressOffset = 0)] = "hdKeyAddressOffset"),
              (e.hdKeyHdPublicKeyDerivationPath = "m"),
              (e.hdKeyPrivateDerivationPath = "m/i"),
              (e.scenarioBytecodeScriptPrefix = "_scenario.");
          })(i || (i = {}));
      },
      59108: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              B4: () => l,
              E2: () => g,
              Kh: () => p,
              St: () => c,
              _n: () => u,
              em: () => d,
              oX: () => I,
              uX: () => s,
              z0: () => h,
            });
            var n = r(59431),
              o = r(1365),
              A = r(43743),
              a = e([n, o]);
            [n, o] = a.then ? (await a)() : a;
            const s = (e, t) => (r, i, n) => {
                for (const t of e) {
                  const e = t(r, i, n);
                  if ("skip" !== e.status) return e;
                }
                return t(r, i, n);
              },
              c =
                ({
                  canBeSkipped: e,
                  dataProperties: t,
                  configurationProperties: r,
                  operation: i,
                }) =>
                (n, o, A) => {
                  for (const t of r)
                    if (void 0 === A[t])
                      return e
                        ? { status: "skip" }
                        : {
                            error: `Cannot resolve "${n}" - the "${t}" property was not provided in the compiler configuration.`,
                            status: "error",
                          };
                  for (const r of t)
                    if (void 0 === o[r])
                      return e
                        ? { status: "skip" }
                        : {
                            error: `Cannot resolve "${n}" - the "${r}" property was not provided in the compilation data.`,
                            status: "error",
                          };
                  return i(n, o, A);
                },
              g = c({
                canBeSkipped: !0,
                configurationProperties: [],
                dataProperties: ["bytecode"],
                operation: (e, t) => {
                  const r = t.bytecode[e];
                  return void 0 !== r
                    ? { bytecode: r, status: "success" }
                    : { status: "skip" };
                },
              }),
              l = ({
                addressIndex: e,
                entityId: t,
                entityHdPrivateKey: r,
                configuration: i,
                hdKey: o,
                identifier: a,
              }) => {
                const s = o.addressOffset ?? A.z.hdKeyAddressOffset,
                  c = o.privateDerivationPath ?? A.z.hdKeyPrivateDerivationPath,
                  g = e + s;
                if (!/^m(?:\/(?:[0-9]+|i)'?)*$/u.test(c))
                  return {
                    error: `Could not generate ${a} - the path "${c}" is not a valid "privateDerivationPath".`,
                    status: "error",
                  };
                const l = c.replace("i", g.toString()),
                  u = (0, n.Wt)(r, i);
                if ("string" == typeof u)
                  return {
                    error: `Could not generate ${a} - the HD private key provided for ${t} could not be decoded: ${u}`,
                    status: "error",
                  };
                const h = (0, n.Ai)(u.node, l, i);
                return "string" == typeof h
                  ? {
                      error: `Could not generate ${a} - the path "${l}" could not be derived for entity "${t}": ${h}`,
                      status: "error",
                    }
                  : { bytecode: h.privateKey, status: "success" };
              },
              u = (e, t) => ({
                error: `Identifier "${e}" refers to an HdKey, but the "entityOwnership" for "${t}" is not available in this compiler configuration.`,
                status: "error",
              }),
              h = (e) => ({
                error: `Identifier "${e}" refers to an HdKey, but "hdKeys.addressIndex" was not provided in the compilation data.`,
                status: "error",
              }),
              I = ({ configuration: e, hdKeys: t, identifier: r }) => {
                const { addressIndex: i, hdPrivateKeys: n } = t,
                  [o] = r.split("."),
                  A = e.entityOwnership[o];
                if (void 0 === A) return u(r, o);
                if (void 0 === i) return h(r);
                const a = void 0 === n ? void 0 : n[A];
                if (void 0 === a)
                  return {
                    error: `Identifier "${r}" refers to an HdKey owned by "${A}", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,
                    recoverable: !0,
                    status: "error",
                  };
                const s = e.variables[o];
                return l({
                  addressIndex: i,
                  configuration: e,
                  entityHdPrivateKey: a,
                  entityId: A,
                  hdKey: s,
                  identifier: r,
                });
              },
              p = ({ targetScriptId: e, data: t, configuration: r }) => {
                const i = r.scripts[e],
                  n = (0, o.kZ)({ configuration: r, data: t, identifier: e });
                return (
                  void 0 !== i &&
                  !1 !== n &&
                  ("string" == typeof n
                    ? { error: n, status: "error" }
                    : n.bytecode)
                );
              },
              d = ({
                data: e,
                configuration: t,
                identifier: r,
                sourceScriptIds: i,
                unlockingScripts: n,
              }) => {
                const o = i[i.length - 1];
                if (void 0 === o)
                  return {
                    error: `Identifier "${r}" requires a signing serialization, but "coveredBytecode" cannot be determined because the compiler configuration's "sourceScriptIds" is empty.`,
                    status: "error",
                  };
                const A = n[o];
                if (void 0 === A)
                  return {
                    error: `Identifier "${r}" requires a signing serialization, but "coveredBytecode" cannot be determined because "${o}" is not present in the compiler configuration's "unlockingScripts".`,
                    status: "error",
                  };
                const a = p({ configuration: t, data: e, targetScriptId: A });
                return !1 === a
                  ? {
                      error: `Identifier "${r}" requires a signing serialization that covers an unknown locking script, "${A}".`,
                      status: "error",
                    }
                  : a;
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      82219: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Cr: () => P });
            var n = r(78997),
              o = r(59431),
              A = r(30861),
              a = r(85671),
              s = r(44115),
              c = r(43743),
              g = r(59108),
              l = e([g, a, s, A, o]);
            [g, a, s, A, o] = l.then ? (await l)() : l;
            const u = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["bytecode"],
                operation: (e, t) => {
                  const r = t.bytecode[e];
                  return void 0 !== r
                    ? { bytecode: r, status: "success" }
                    : {
                        error: `Identifier "${e}" refers to an AddressData, but "${e}" was not provided in the CompilationData "bytecode".`,
                        recoverable: !0,
                        status: "error",
                      };
                },
              }),
              h = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["bytecode"],
                operation: (e, t) => {
                  const r = t.bytecode[e];
                  return void 0 !== r
                    ? { bytecode: r, status: "success" }
                    : {
                        error: `Identifier "${e}" refers to a WalletData, but "${e}" was not provided in the CompilationData "bytecode".`,
                        recoverable: !0,
                        status: "error",
                      };
                },
              }),
              I = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["currentBlockTime"],
                operation: (e, t) => ({
                  bytecode: (0, n.UC)(t.currentBlockTime),
                  status: "success",
                }),
              }),
              p = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["currentBlockHeight"],
                operation: (e, t) => ({
                  bytecode: (0, a.qR)(BigInt(t.currentBlockHeight)),
                  status: "success",
                }),
              }),
              d = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => {
                  const { correspondingOutput: r } = (0, s.F_)(
                    t.compilationContext
                  );
                  return void 0 === r
                    ? { bytecode: Uint8Array.of(), status: "success" }
                    : { bytecode: r, status: "success" };
                },
              }),
              f = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: ["sha256"],
                dataProperties: ["compilationContext"],
                operation: (e, t, r) => {
                  const { correspondingOutput: i } = (0, s.F_)(
                    t.compilationContext
                  );
                  return void 0 === i
                    ? { bytecode: Uint8Array.of(), status: "success" }
                    : {
                        bytecode: r.sha256.hash(r.sha256.hash(i)),
                        status: "success",
                      };
                },
              }),
              C = (e) =>
                (0, g.St)({
                  canBeSkipped: !1,
                  configurationProperties: [
                    "sourceScriptIds",
                    "unlockingScripts",
                  ],
                  dataProperties: ["compilationContext"],
                  operation: (t, r, i) => {
                    const { unlockingScripts: o, sourceScriptIds: A } = i,
                      a = (0, g.em)({
                        configuration: i,
                        data: r,
                        identifier: t,
                        sourceScriptIds: A,
                        unlockingScripts: o,
                      });
                    return "error" in a
                      ? a
                      : {
                          bytecode: e ? (0, n.us)(BigInt(a.length)) : a,
                          status: "success",
                        };
                  },
                }),
              B = C(!1),
              E = C(!0),
              y = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, n.UC)(
                    t.compilationContext.transaction.locktime
                  ),
                  status: "success",
                }),
              }),
              m = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, n.UC)(
                    t.compilationContext.transaction.inputs[
                      t.compilationContext.inputIndex
                    ].outpointIndex
                  ),
                  status: "success",
                }),
              }),
              Q = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode:
                    t.compilationContext.transaction.inputs[
                      t.compilationContext.inputIndex
                    ].outpointTransactionHash,
                  status: "success",
                }),
              }),
              v = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, n.dd)(
                    t.compilationContext.sourceOutputs[
                      t.compilationContext.inputIndex
                    ].valueSatoshis
                  ),
                  status: "success",
                }),
              }),
              S = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, n.UC)(
                    t.compilationContext.transaction.inputs[
                      t.compilationContext.inputIndex
                    ].sequenceNumber
                  ),
                  status: "success",
                }),
              }),
              w = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, A.Sx)(t.compilationContext.transaction.inputs),
                  status: "success",
                }),
              }),
              b = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: ["sha256"],
                dataProperties: ["compilationContext"],
                operation: (e, t, r) => ({
                  bytecode: r.sha256.hash(
                    r.sha256.hash(
                      (0, A.Sx)(t.compilationContext.transaction.inputs)
                    )
                  ),
                  status: "success",
                }),
              }),
              k = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, A.nY)(t.compilationContext.transaction.outputs),
                  status: "success",
                }),
              }),
              N = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: ["sha256"],
                dataProperties: ["compilationContext"],
                operation: (e, t, r) => ({
                  bytecode: r.sha256.hash(
                    r.sha256.hash(
                      (0, A.nY)(t.compilationContext.transaction.outputs)
                    )
                  ),
                  status: "success",
                }),
              }),
              _ = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, A.Hg)(t.compilationContext.transaction.inputs),
                  status: "success",
                }),
              }),
              D = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: ["sha256"],
                dataProperties: ["compilationContext"],
                operation: (e, t, r) => ({
                  bytecode: r.sha256.hash(
                    r.sha256.hash(
                      (0, A.Hg)(t.compilationContext.transaction.inputs)
                    )
                  ),
                  status: "success",
                }),
              }),
              O = (0, g.St)({
                canBeSkipped: !1,
                configurationProperties: [],
                dataProperties: ["compilationContext"],
                operation: (e, t) => ({
                  bytecode: (0, n.UC)(t.compilationContext.transaction.version),
                  status: "success",
                }),
              }),
              T = (0, g.uX)(
                [g.E2],
                (0, g.St)({
                  canBeSkipped: !1,
                  configurationProperties: ["secp256k1"],
                  dataProperties: ["keys"],
                  operation: (e, t, r) => {
                    const { keys: i } = t,
                      { secp256k1: n } = r,
                      { privateKeys: o } = i,
                      [A] = e.split(".");
                    return void 0 !== o?.[A]
                      ? {
                          bytecode: n.derivePublicKeyCompressed(o[A]),
                          status: "success",
                        }
                      : {
                          error: `Identifier "${e}" refers to a public key, but no public or private keys for "${A}" were provided in the compilation data.`,
                          recoverable: !0,
                          status: "error",
                        };
                  },
                })
              ),
              P = {
                addressData: u,
                currentBlockHeight: p,
                currentBlockTime: I,
                hdKey: {
                  public_key: (0, g.uX)(
                    [g.E2],
                    (0, g.St)({
                      canBeSkipped: !1,
                      configurationProperties: [
                        "entityOwnership",
                        "ripemd160",
                        "secp256k1",
                        "sha256",
                        "sha512",
                        "variables",
                      ],
                      dataProperties: ["hdKeys"],
                      operation: (e, t, r) => {
                        const { hdKeys: i } = t,
                          {
                            hdPrivateKeys: n,
                            addressIndex: A,
                            hdPublicKeys: a,
                          } = i,
                          [s] = e.split("."),
                          l = r.entityOwnership[s];
                        if (void 0 === l) return (0, g._n)(e, s);
                        if (void 0 === A) return (0, g.z0)(e);
                        const u = void 0 === n ? void 0 : n[l],
                          h = r.variables[s];
                        if (void 0 !== u) {
                          const t = (0, g.B4)({
                            addressIndex: A,
                            configuration: r,
                            entityHdPrivateKey: u,
                            entityId: l,
                            hdKey: h,
                            identifier: e,
                          });
                          return "error" === t.status
                            ? t
                            : {
                                bytecode: r.secp256k1.derivePublicKeyCompressed(
                                  t.bytecode
                                ),
                                status: "success",
                              };
                        }
                        const I = void 0 === a ? void 0 : a[l];
                        if (void 0 === I)
                          return {
                            error: `Identifier "${e}" refers to an HdKey owned by "${l}", but an HD private key or HD public key for this entity was not provided in the compilation data.`,
                            recoverable: !0,
                            status: "error",
                          };
                        const p = h.addressOffset ?? c.z.hdKeyAddressOffset,
                          d =
                            h.privateDerivationPath ??
                            c.z.hdKeyPrivateDerivationPath,
                          f = h.publicDerivationPath ?? d.replace("m", "M");
                        if (!/^M(?:\/(?:[0-9]+|i))*$/u.test(f))
                          return {
                            error: `Could not generate ${e} - the path "${f}" is not a valid "publicDerivationPath".`,
                            status: "error",
                          };
                        const C = A + p,
                          B = f.replace("i", C.toString()),
                          E = (0, o.$I)(I, r);
                        if ("string" == typeof E)
                          return {
                            error: `Could not generate "${e}" - the HD public key provided for "${l}" could not be decoded: ${E}`,
                            status: "error",
                          };
                        const y = (0, o.Ai)(E.node, B, r);
                        return "string" == typeof y
                          ? {
                              error: `Could not generate "${e}" - the path "${B}" could not be derived for entity "${l}": ${y}`,
                              status: "error",
                            }
                          : { bytecode: y.publicKey, status: "success" };
                      },
                    })
                  ),
                },
                key: { public_key: T },
                signingSerialization: {
                  corresponding_output: d,
                  corresponding_output_hash: f,
                  covered_bytecode: B,
                  covered_bytecode_length: E,
                  locktime: y,
                  outpoint_index: m,
                  outpoint_transaction_hash: Q,
                  output_value: v,
                  sequence_number: S,
                  transaction_outpoints: w,
                  transaction_outpoints_hash: b,
                  transaction_outputs: k,
                  transaction_outputs_hash: N,
                  transaction_sequence_numbers: _,
                  transaction_sequence_numbers_hash: D,
                  version: O,
                },
                walletData: h,
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      41869: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { e5: () => l, kw: () => g, p4: () => s });
            var n = r(26389),
              o = r(41503),
              A = e([n, o]);
            [n, o] = A.then ? (await A)() : A;
            const a =
                (e) =>
                ({ data: t, debug: r, scriptId: i }) => {
                  const o = (0, n.s)(i, t, e);
                  return !0 === r
                    ? o
                    : o.success
                    ? { bytecode: o.bytecode, success: !0 }
                    : { errorType: o.errorType, errors: o.errors, success: !1 };
                },
              s = (e) => {
                const t = a(e);
                return {
                  configuration: e,
                  generateBytecode: t,
                  generateScenario: ({
                    lockingScriptId: r,
                    unlockingScriptId: i,
                    scenarioId: n,
                    debug: A,
                  }) =>
                    (0, o.ll)(
                      {
                        configuration: e,
                        generateBytecode: t,
                        lockingScriptId: r,
                        scenarioId: n,
                        unlockingScriptId: i,
                      },
                      A
                    ),
                };
              },
              c = 32,
              g = (e) => ({
                inputIndex: 0,
                sourceOutputs: [{ lockingBytecode: e, valueSatoshis: 0n }],
                transaction: {
                  inputs: [
                    {
                      outpointIndex: 0,
                      outpointTransactionHash: new Uint8Array(c),
                      sequenceNumber: 0,
                      unlockingBytecode: Uint8Array.of(),
                    },
                  ],
                  locktime: 0,
                  outputs: [
                    { lockingBytecode: Uint8Array.of(), valueSatoshis: 0n },
                  ],
                  version: 0,
                },
              }),
              l = (e) => {
                const t = Object.entries(e.scripts).reduce(
                    (e, [t, r]) =>
                      "tests" in r
                        ? {
                            ...e,
                            ...Object.entries(r.tests).reduce((e, [i, n]) => {
                              const o = !0 === r.pushed,
                                A = `${t}.${i}.check`,
                                a = `${t}.${i}.lock`,
                                s = `${t}.${i}.unlock`;
                              return {
                                ...e,
                                [A]: { script: n.check },
                                [a]: {
                                  script: o ? `<${t}> ${A}` : `${t} ${A}`,
                                },
                                [s]: { script: n.setup ?? "", unlocks: a },
                              };
                            }, {}),
                          }
                        : e,
                    {}
                  ),
                  r = { ...e.scripts, ...t },
                  i = Object.entries(r).reduce(
                    (e, [t, r]) => ({ ...e, [t]: r.script }),
                    {}
                  ),
                  n = Object.values(e.entities).reduce(
                    (e, t) => ({ ...e, ...t.variables }),
                    {}
                  ),
                  o = Object.entries(e.entities).reduce(
                    (e, [t, r]) => ({
                      ...e,
                      ...Object.keys(r.variables ?? {}).reduce(
                        (e, r) => ({ ...e, [r]: t }),
                        {}
                      ),
                    }),
                    {}
                  ),
                  A = Object.entries(r).reduce(
                    (e, [t, r]) =>
                      "unlocks" in r && void 0 !== r.unlocks
                        ? { ...e, [t]: r.unlocks }
                        : e,
                    {}
                  ),
                  a = Object.entries(r).reduce(
                    (e, [t, r]) =>
                      "timeLockType" in r && void 0 !== r.timeLockType
                        ? { ...e, [t]: r.timeLockType }
                        : e,
                    {}
                  ),
                  s = Object.entries(r).reduce(
                    (e, [t, r]) =>
                      "lockingType" in r && void 0 !== r.lockingType
                        ? { ...e, [t]: r.lockingType }
                        : e,
                    {}
                  ),
                  c =
                    void 0 === e.scenarios
                      ? void 0
                      : Object.entries(e.scenarios).reduce(
                          (e, [t, r]) => ({ ...e, [t]: r }),
                          {}
                        );
                return {
                  entityOwnership: o,
                  lockingScriptTypes: s,
                  ...(void 0 === c ? {} : { scenarios: c }),
                  scripts: i,
                  unlockingScriptTimeLockTypes: a,
                  unlockingScripts: A,
                  variables: n,
                };
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      41503: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { ll: () => y });
            var n = r(78997),
              o = r(34684),
              A = r(59431),
              a = r(1365),
              s = r(46607),
              c = r(43743),
              g = e([A, a, s]);
            [A, a, s] = g.then ? (await g)() : g;
            const l = () => ({}),
              u = (e) => {
                const { variables: t, entityOwnership: r } = e,
                  i =
                    void 0 === t
                      ? []
                      : Object.entries(t)
                          .filter((e) => "Key" === e[1].type)
                          .map(([e]) => e),
                  a =
                    void 0 === r
                      ? []
                      : Object.keys(
                          Object.values(r).reduce(
                            (e, t) => ({ ...e, [t]: !0 }),
                            {}
                          )
                        ),
                  s = [...i, ...a]
                    .sort((e, t) => e.localeCompare(t, "en"))
                    .reduce(
                      (e, t, r) => ({ ...e, [t]: (0, n.d8)(BigInt(r + 1)) }),
                      {}
                    ),
                  g =
                    void 0 === t
                      ? void 0
                      : Object.entries(t).reduce(
                          (e, [t, r]) =>
                            "Key" === r.type
                              ? { ...e, [t]: (0, o.UM)(s[t]) }
                              : e,
                          {}
                        ),
                  u = {
                    data: {
                      currentBlockHeight: c.z.defaultScenarioCurrentBlockHeight,
                      currentBlockTime: c.z.defaultScenarioCurrentBlockTime,
                      ...(void 0 === g || 0 === Object.keys(g).length
                        ? {}
                        : { keys: { privateKeys: g } }),
                    },
                    sourceOutputs: [{ lockingBytecode: ["slot"] }],
                    transaction: {
                      inputs: [{ unlockingBytecode: ["slot"] }],
                      locktime: c.z.defaultScenarioTransactionLocktime,
                      outputs: [{ lockingBytecode: l() }],
                      version: c.z.defaultScenarioTransactionVersion,
                    },
                  };
                if (
                  void 0 === t ||
                  -1 === Object.values(t).findIndex((e) => "HdKey" === e.type)
                )
                  return u;
                const { sha256: h, sha512: I } = e;
                if (void 0 === h)
                  return 'An implementations of "sha256" is required to generate defaults for HD keys, but the "sha256" property is not included in this compiler configuration.';
                if (void 0 === I)
                  return 'An implementations of "sha512" is required to generate defaults for HD keys, but the "sha512" property is not included in this compiler configuration.';
                const p = { sha256: h, sha512: I },
                  d = a.reduce((e, t) => {
                    const r = (0, A.hC)(s[t], !0, p);
                    return {
                      ...e,
                      [t]: (0, A.Jx)({ network: "mainnet", node: r }, p),
                    };
                  }, {});
                return {
                  ...u,
                  data: {
                    ...u.data,
                    hdKeys: {
                      addressIndex: c.z.defaultScenarioAddressIndex,
                      hdPrivateKeys: d,
                    },
                  },
                };
              },
              h = (e, t) => ({
                ...e,
                ...t,
                ...(void 0 === e.bytecode && void 0 === t.bytecode
                  ? {}
                  : { bytecode: { ...e.bytecode, ...t.bytecode } }),
                ...(void 0 === e.hdKeys && void 0 === t.hdKeys
                  ? {}
                  : {
                      hdKeys: {
                        ...e.hdKeys,
                        ...t.hdKeys,
                        ...(void 0 === e.hdKeys?.hdPrivateKeys &&
                        void 0 === t.hdKeys?.hdPrivateKeys
                          ? {}
                          : {
                              hdPrivateKeys: {
                                ...e.hdKeys?.hdPrivateKeys,
                                ...t.hdKeys?.hdPrivateKeys,
                              },
                            }),
                        ...(void 0 === e.hdKeys?.hdPublicKeys &&
                        void 0 === t.hdKeys?.hdPublicKeys
                          ? {}
                          : {
                              hdPublicKeys: {
                                ...e.hdKeys?.hdPublicKeys,
                                ...t.hdKeys?.hdPublicKeys,
                              },
                            }),
                      },
                    }),
                ...(void 0 === e.keys && void 0 === t.keys
                  ? {}
                  : {
                      keys: {
                        privateKeys: {
                          ...e.keys?.privateKeys,
                          ...t.keys?.privateKeys,
                        },
                      },
                    }),
              }),
              I = (e, t) => ({
                ...(void 0 === e.data && void 0 === t.data
                  ? {}
                  : { data: h(e.data ?? {}, t.data ?? {}) }),
                ...(void 0 === e.transaction && void 0 === t.transaction
                  ? {}
                  : { transaction: { ...e.transaction, ...t.transaction } }),
                ...(void 0 === e.sourceOutputs && void 0 === t.sourceOutputs
                  ? {}
                  : { sourceOutputs: t.sourceOutputs ?? e.sourceOutputs }),
              }),
              p = ({
                configuration: e,
                scenarioId: t,
                sourceScenarioIds: r = [],
              }) => {
                if (void 0 === t) return u(e);
                if (r.includes(t))
                  return `Cannot extend scenario "${t}": scenario "${t}" extends itself. Scenario inheritance path: ${r.join(
                    " → "
                  )}`;
                const i = e.scenarios?.[t];
                if (void 0 === i)
                  return `Cannot extend scenario "${t}": a scenario with the identifier ${t} is not included in this compiler configuration.`;
                const n =
                  void 0 === i.extends
                    ? u(e)
                    : p({
                        configuration: e,
                        scenarioId: i.extends,
                        sourceScenarioIds: [...r, t],
                      });
                return "string" == typeof n ? n : I(n, i);
              },
              d = (e) => ({
                ...(void 0 === e.data.currentBlockHeight
                  ? {}
                  : { currentBlockHeight: e.data.currentBlockHeight }),
                ...(void 0 === e.data.currentBlockTime
                  ? {}
                  : { currentBlockTime: e.data.currentBlockTime }),
                ...(void 0 === e.data.hdKeys
                  ? {}
                  : {
                      hdKeys: {
                        ...(void 0 === e.data.hdKeys.addressIndex
                          ? {}
                          : { addressIndex: e.data.hdKeys.addressIndex }),
                        ...(void 0 !== e.data.hdKeys.hdPrivateKeys &&
                        Object.keys(e.data.hdKeys.hdPrivateKeys).length > 0
                          ? { hdPrivateKeys: e.data.hdKeys.hdPrivateKeys }
                          : {}),
                        ...(void 0 === e.data.hdKeys.hdPublicKeys
                          ? {}
                          : { hdPublicKeys: e.data.hdKeys.hdPublicKeys }),
                      },
                    }),
                ...(void 0 !== e.data.keys?.privateKeys &&
                Object.keys(e.data.keys.privateKeys).length > 0
                  ? {
                      keys: {
                        privateKeys: Object.entries(
                          e.data.keys.privateKeys
                        ).reduce(
                          (e, [t, r]) => ({ ...e, [t]: (0, o.kW)(r) }),
                          {}
                        ),
                      },
                    }
                  : {}),
              }),
              f = ({
                compilationData: e,
                configuration: t,
                scenarioDataBytecodeScripts: r,
              }) => {
                const i = (e) => `${c.z.scenarioBytecodeScriptPrefix}${e}`,
                  n = Object.entries(r).reduce(
                    (e, [t, r]) => ({ ...e, [i(t)]: r }),
                    {}
                  ),
                  o = { ...t, scripts: { ...t.scripts, ...n } },
                  A = Object.keys(r).map((t) => {
                    const r = (0, a.pI)({
                      configuration: o,
                      data: e,
                      scriptId: i(t),
                    });
                    return r.success
                      ? { bytecode: r.bytecode, id: t }
                      : { errors: r.errors, id: t };
                  }),
                  g = A.filter((e) => "errors" in e);
                if (g.length > 0)
                  return `${g
                    .map(
                      (e) =>
                        `Compilation error while generating bytecode for "${
                          e.id
                        }": ${(0, s.IF)(e.errors)}`
                    )
                    .join("; ")}`;
                const l = A.reduce(
                  (e, t) => ({ ...e, [t.id]: t.bytecode }),
                  {}
                );
                return {
                  ...(Object.keys(l).length > 0 ? { bytecode: l } : {}),
                  ...e,
                };
              },
              C = (e = c.z.defaultScenarioOutputValueSatoshis) =>
                "string" == typeof e ? (0, n.lj)((0, o.kW)(e)) : BigInt(e),
              B = ({
                bytecodeDefinition: e,
                compilationContext: t,
                configuration: r,
                defaultOverride: i,
                extendedScenario: n,
                generateBytecode: A,
                lockingOrUnlockingScriptIdUnderTest: a,
              }) => {
                if ("string" == typeof e) return (0, o.kW)(e);
                const s =
                  void 0 === e.script || Array.isArray(e.script) ? a : e.script;
                if (void 0 === s) return (0, o.kW)("");
                const c = e.overrides ?? i,
                  g = h(n.data, c),
                  l = f({
                    compilationData: d({ data: g }),
                    configuration: r,
                    scenarioDataBytecodeScripts: g.bytecode ?? {},
                  });
                return "string" == typeof l
                  ? {
                      errors: [
                        {
                          error: `Could not compile scenario "data.bytecode": ${l}`,
                        },
                      ],
                      success: !1,
                    }
                  : A({
                      data: { ...l, compilationContext: t },
                      debug: !0,
                      scriptId: s,
                    });
              },
              E = (e) =>
                void 0 === e.token
                  ? {}
                  : {
                      token: {
                        amount: BigInt(e.token.amount ?? 0),
                        category: (0, o.kW)(
                          e.token.category ??
                            c.z.defaultScenarioOutputTokenCategory
                        ),
                        ...(void 0 === e.token.nft
                          ? {}
                          : {
                              nft: {
                                capability: e.token.nft.capability ?? "none",
                                commitment: (0, o.kW)(
                                  e.token.nft.commitment ?? ""
                                ),
                              },
                            }),
                      },
                    },
              y = (
                {
                  configuration: e,
                  generateBytecode: t,
                  scenarioId: r,
                  unlockingScriptId: i,
                  lockingScriptId: n,
                },
                A
              ) => {
                const { scenarioDefinition: a, scenarioName: s } =
                  void 0 === r
                    ? {
                        scenarioDefinition: {},
                        scenarioName: "the default scenario",
                      }
                    : {
                        scenarioDefinition: e.scenarios?.[r],
                        scenarioName: `scenario "${r}"`,
                      };
                if (void 0 === a)
                  return `Cannot generate ${s}: a scenario definition with the identifier ${r} is not included in this compiler configuration.`;
                const g = p({ configuration: e, scenarioId: r });
                if ("string" == typeof g) return `Cannot generate ${s}: ${g}`;
                const l = I(g, a),
                  u = d(l),
                  h = f({
                    compilationData: u,
                    configuration: e,
                    scenarioDataBytecodeScripts: l.data.bytecode ?? {},
                  });
                if ("string" == typeof h) return `Cannot generate ${s}. ${h}`;
                if (l.transaction.inputs.length !== l.sourceOutputs.length)
                  return `Cannot generate ${s}: could not match source outputs with inputs - "sourceOutputs" must be the same length as "transaction.inputs".`;
                if (
                  1 !==
                  l.transaction.inputs.filter((e) =>
                    Array.isArray(e.unlockingBytecode)
                  ).length
                )
                  return `Cannot generate ${s}: the specific input under test in this scenario is ambiguous - "transaction.inputs" must include exactly one input that has "unlockingBytecode" set to ["slot"].`;
                const y = l.transaction.inputs.findIndex((e) =>
                  Array.isArray(e.unlockingBytecode)
                );
                if (
                  1 !==
                  l.sourceOutputs.filter((e) =>
                    Array.isArray(e.lockingBytecode)
                  ).length
                )
                  return `Cannot generate ${s}: the source output unlocked by the input under test in this scenario is ambiguous - "sourceOutputs" must include exactly one output that has "lockingBytecode" set to ["slot"].`;
                if (!Array.isArray(l.sourceOutputs[y]?.lockingBytecode))
                  return `Cannot generate ${s}: the source output unlocked by the input under test in this scenario is ambiguous - the ["slot"] in "transaction.inputs" and "sourceOutputs" must be at the same index.`;
                if (void 0 !== i && void 0 !== n)
                  return `Cannot generate ${s}: a scenario cannot be generated with both unlocking and locking script IDs defined. If an unlocking script is provided, the associated locking script ID must be read from the template.`;
                const m =
                  void 0 === n
                    ? void 0 === i
                      ? void 0
                      : e.unlockingScripts?.[i]
                    : n;
                if (void 0 !== i && void 0 === m)
                  return `Cannot generate ${s} using unlocking script "${i}": the locking script unlocked by "${i}" is not provided in this compiler configuration.`;
                const Q = l.sourceOutputs.map((r, i) => {
                    const n = Array.isArray(r.lockingBytecode),
                      o = n
                        ? void 0 === m
                          ? c.z.defaultScenarioBytecode
                          : { script: m }
                        : r.lockingBytecode ?? {};
                    return {
                      compiled: {
                        lockingBytecode: B({
                          bytecodeDefinition: o,
                          configuration: e,
                          defaultOverride: {},
                          extendedScenario: l,
                          generateBytecode: t,
                          lockingOrUnlockingScriptIdUnderTest: m,
                        }),
                        valueSatoshis: C(r.valueSatoshis),
                        ...E(r),
                      },
                      index: i,
                      slot: n,
                      type: "source output",
                    };
                  }),
                  v = Q.find((e) => e.slot)?.compiled.lockingBytecode,
                  S = l.transaction.outputs.map((r, i) => ({
                    compiled: {
                      lockingBytecode: B({
                        bytecodeDefinition: r.lockingBytecode ?? {},
                        configuration: e,
                        defaultOverride: { hdKeys: { addressIndex: 1 } },
                        extendedScenario: l,
                        generateBytecode: t,
                        lockingOrUnlockingScriptIdUnderTest: m,
                      }),
                      valueSatoshis: C(r.valueSatoshis),
                      ...E(r),
                    },
                    index: i,
                    type: "transaction output",
                  })),
                  w = [...Q, ...S].reduce(
                    (e, t) =>
                      "errors" in t.compiled.lockingBytecode
                        ? [
                            ...e,
                            ...t.compiled.lockingBytecode.errors.map(
                              (e) =>
                                `Failed compilation of ${t.type} at index ${t.index}: ${e.error}`
                            ),
                          ]
                        : e,
                    []
                  );
                if (w.length > 0) {
                  const e = `Cannot generate ${s}: ${w.join(" ")}`;
                  return !0 === A ? { lockingCompilation: v, scenario: e } : e;
                }
                const b = S,
                  k = (e) => {
                    const {
                      lockingBytecode: t,
                      valueSatoshis: r,
                      token: i,
                    } = e.compiled;
                    return {
                      lockingBytecode: "bytecode" in t ? t.bytecode : t,
                      valueSatoshis: r,
                      ...(void 0 === i ? {} : { token: i }),
                    };
                  },
                  N = Q.map(k),
                  _ = b.map(k),
                  D = l.transaction.inputs.map((e, t) => ({
                    outpointIndex: e.outpointIndex ?? t,
                    outpointTransactionHash: (0, o.kW)(
                      e.outpointTransactionHash ??
                        c.z.defaultScenarioInputOutpointTransactionHash
                    ),
                    sequenceNumber:
                      e.sequenceNumber ??
                      c.z.defaultScenarioInputSequenceNumber,
                    unlockingBytecode: void 0,
                  })),
                  O = l.transaction.inputs.map((r, n) => {
                    const o = Array.isArray(r.unlockingBytecode),
                      A = Array.isArray(r.unlockingBytecode)
                        ? void 0 === i
                          ? c.z.defaultScenarioBytecode
                          : { script: i }
                        : r.unlockingBytecode ?? {};
                    return {
                      compiled: {
                        outpointIndex: D[n].outpointIndex,
                        outpointTransactionHash: D[n].outpointTransactionHash,
                        sequenceNumber: D[n].sequenceNumber,
                        unlockingBytecode: B({
                          bytecodeDefinition: A,
                          compilationContext: {
                            inputIndex: n,
                            sourceOutputs: N,
                            transaction: {
                              inputs: D,
                              locktime: l.transaction.locktime,
                              outputs: _,
                              version: l.transaction.version,
                            },
                          },
                          configuration: e,
                          defaultOverride: {},
                          extendedScenario: l,
                          generateBytecode: t,
                          lockingOrUnlockingScriptIdUnderTest: i,
                        }),
                      },
                      index: n,
                      slot: o,
                    };
                  }),
                  T = O.find((e) => e.slot)?.compiled.unlockingBytecode,
                  P = O.reduce(
                    (e, t) =>
                      "errors" in t.compiled.unlockingBytecode
                        ? [
                            ...e,
                            ...t.compiled.unlockingBytecode.errors.map(
                              (e) =>
                                `Failed compilation of input at index ${t.index}: ${e.error}`
                            ),
                          ]
                        : e,
                    []
                  );
                if (P.length > 0) {
                  const e = `Cannot generate ${s}: ${P.join(" ")}`;
                  return !0 === A
                    ? {
                        lockingCompilation: v,
                        scenario: e,
                        unlockingCompilation: T,
                      }
                    : e;
                }
                const x = O.map((e) => {
                    const {
                      outpointIndex: t,
                      outpointTransactionHash: r,
                      sequenceNumber: i,
                      unlockingBytecode: n,
                    } = e.compiled;
                    return {
                      outpointIndex: t,
                      outpointTransactionHash: r,
                      sequenceNumber: i,
                      unlockingBytecode: "bytecode" in n ? n.bytecode : n,
                    };
                  }),
                  R = {
                    data: h,
                    program: {
                      inputIndex: y,
                      sourceOutputs: N,
                      transaction: {
                        inputs: x,
                        locktime: l.transaction.locktime,
                        outputs: _,
                        version: l.transaction.version,
                      },
                    },
                  };
                return !0 === A
                  ? {
                      lockingCompilation: v,
                      scenario: R,
                      unlockingCompilation: T,
                    }
                  : R;
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      13744: (e, t, r) => {
        "use strict";
        r.d(t, { F: () => i, W: () => n });
        const i = {
            $schema:
              "https://bitauth.com/schemas/authentication-template-v0.schema.json",
            description:
              "A standard single-factor authentication template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.",
            entities: {
              owner: {
                description: "The individual who can spend from this wallet.",
                name: "Owner",
                scripts: ["lock", "unlock"],
                variables: {
                  key: {
                    description: "The private key that controls this wallet.",
                    name: "Key",
                    type: "Key",
                  },
                },
              },
            },
            name: "Single Signature (P2PKH)",
            scripts: {
              lock: {
                lockingType: "standard",
                name: "P2PKH Lock",
                script:
                  "OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG",
              },
              unlock: {
                name: "Unlock",
                script: "<key.schnorr_signature.all_outputs>\n<key.public_key>",
                unlocks: "lock",
              },
            },
            supported: ["BCH_2020_05", "BCH_2021_05", "BCH_2022_05"],
            version: 0,
          },
          n = {
            $schema:
              "https://bitauth.com/schemas/authentication-template-v0.schema.json",
            description:
              "A standard single-factor authentication template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports watch-only clients.",
            entities: {
              owner: {
                description: "The individual who can spend from this wallet.",
                name: "Owner",
                scripts: ["lock", "unlock"],
                variables: {
                  key: {
                    description: "The private key that controls this wallet.",
                    name: "Key",
                    type: "HdKey",
                  },
                },
              },
            },
            name: "Single Signature (P2PKH)",
            scripts: {
              lock: {
                lockingType: "standard",
                name: "P2PKH Lock",
                script:
                  "OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG",
              },
              unlock: {
                name: "Unlock",
                script: "<key.schnorr_signature.all_outputs>\n<key.public_key>",
                unlocks: "lock",
              },
            },
            supported: ["BCH_2020_05", "BCH_2021_05", "BCH_2022_05"],
            version: 0,
          };
      },
      47726: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { M: () => A, W: () => a });
            var n = r(12909),
              o = e([n]);
            n = (o.then ? (await o)() : o)[0];
            const A = (e, t = { ripemd160: n.bP, sha256: n.JQ }) =>
                t.ripemd160.hash(t.sha256.hash(e)),
              a = (e, t = n.JQ) => t.hash(t.hash(e));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      12909: (e, t, r) => {
        "use strict";
        r.a(
          e,
          async (e, i) => {
            try {
              r.d(t, {
                JQ: () => c,
                bP: () => l,
                kA: () => u,
                o: () => g,
                q4: () => e,
              });
              var n = r(86124),
                o = r(78468),
                A = r(11992),
                a = r(91040),
                s = r(5848);
              const [e, c, g, l, u] = await Promise.all([
                (0, A.IU)(),
                (0, a.Um)(),
                (0, s.f8)(),
                (0, n.bF)(),
                (0, o.M2)(),
              ]);
              i();
            } catch (e) {
              i(e);
            }
          },
          1
        );
      },
      59906: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { c6: () => c });
            var n = r(12909),
              o = r(34684),
              A = e([n]);
            n = (A.then ? (await A)() : A)[0];
            const a = (e, t) => (r, i) => {
                const n = new Uint8Array(t).fill(0);
                n.set(r.length > t ? e(r) : r, 0);
                const A = new Uint8Array(t).fill(54).map((e, t) => e ^ n[t]),
                  a = (0, o.kg)([A, i]),
                  s = e(a),
                  c = new Uint8Array(t).fill(92).map((e, t) => e ^ n[t]);
                return e((0, o.kg)([c, s]));
              },
              s = 128,
              c = (e, t, r = n.o) => a(r.hash, s)(e, t);
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      86124: (e, t, r) => {
        "use strict";
        r.d(t, { bF: () => o });
        var i = r(49354),
          n = r(66998);
        const o = async () =>
          (async (e) => {
            const t = await (0, i.r)(
              e,
              "./ripemd160",
              "ripemd160",
              "ripemd160_init",
              "ripemd160_update",
              "ripemd160_final"
            );
            return {
              final: t.final,
              hash: t.hash,
              init: t.init,
              update: t.update,
            };
          })(
            (0, n.VB)(
              ""
            ).buffer
          );
      },
      78468: (e, t, r) => {
        "use strict";
        var i, n;
        r.d(t, { M2: () => c }),
          (function (e) {
            (e[(e.NONE = 1)] = "NONE"),
              (e[(e.VERIFY = 257)] = "VERIFY"),
              (e[(e.SIGN = 513)] = "SIGN"),
              (e[(e.BOTH = 769)] = "BOTH");
          })(i || (i = {})),
          (function (e) {
            (e[(e.COMPRESSED = 258)] = "COMPRESSED"),
              (e[(e.UNCOMPRESSED = 2)] = "UNCOMPRESSED");
          })(n || (n = {}));
        var o = r(66998);
        const A = (e, t) => Math.ceil(t / e) * e,
          a = async () =>
            (async (e) => {
              const t = new WebAssembly.Memory({ initial: 256, maximum: 256 });
              if (
                !((e) => {
                  const t = new Int16Array(e),
                    r = new Int32Array(e),
                    i = new Uint8Array(e);
                  return (
                    (r[0] = 1668509029),
                    (t[1] = 25459),
                    115 === i[2] && 99 === i[3]
                  );
                })(t.buffer)
              )
                throw new Error(
                  "Runtime error: expected the system to be little-endian."
                );
              const r = A(16, 68752),
                i = A(16, r + 5242880),
                n = new Uint8Array(t.buffer),
                o = new Int32Array(t.buffer),
                a = new Uint32Array(t.buffer);
              let s;
              o[17184] = i;
              const c = {
                env: {
                  DYNAMICTOP_PTR: 68736,
                  STACKTOP: r,
                  ___setErrNo: (e) => (void 0 !== s && (o[s() >> 2] = e), e),
                  _abort: (e = "Secp256k1 Error") => {
                    throw new Error(e);
                  },
                  _emscripten_memcpy_big: (e, t, r) => (
                    n.set(n.subarray(t, t + r), e), e
                  ),
                  abort: (e = "Secp256k1 Error") => {
                    throw new Error(e);
                  },
                  abortOnCannotGrowMemory: () => {
                    throw new Error(
                      "Secp256k1 Error: abortOnCannotGrowMemory was called."
                    );
                  },
                  enlargeMemory: () => {
                    throw new Error(
                      "Secp256k1 Error: enlargeMemory was called."
                    );
                  },
                  getTotalMemory: () => 16777216,
                  memory: t,
                  memoryBase: 1024,
                  table: new WebAssembly.Table({
                    element: "anyfunc",
                    initial: 6,
                    maximum: 6,
                  }),
                  tableBase: 0,
                },
                global: { Infinity: 1 / 0, NaN: NaN },
              };
              return WebAssembly.instantiate(e, c).then(
                (e) => (
                  (s = e.instance.exports.___errno_location),
                  ((e, t, r) => ({
                    contextCreate: (t) =>
                      e.exports._secp256k1_context_create(t),
                    contextRandomize: (t, r) =>
                      e.exports._secp256k1_context_randomize(t, r),
                    free: (t) => e.exports._free(t),
                    heapU32: r,
                    heapU8: t,
                    instance: e,
                    malloc: (t) => e.exports._malloc(t),
                    mallocSizeT: (t) => {
                      const i = e.exports._malloc(4),
                        n = i >> 2;
                      return r.set([t], n), i;
                    },
                    mallocUint8Array: (r) => {
                      const i = e.exports._malloc(r.length);
                      return t.set(r, i), i;
                    },
                    privkeyTweakAdd: (t, r, i) =>
                      e.exports._secp256k1_ec_privkey_tweak_add(t, r, i),
                    privkeyTweakMul: (t, r, i) =>
                      e.exports._secp256k1_ec_privkey_tweak_mul(t, r, i),
                    pubkeyCreate: (t, r, i) =>
                      e.exports._secp256k1_ec_pubkey_create(t, r, i),
                    pubkeyParse: (t, r, i, n) =>
                      e.exports._secp256k1_ec_pubkey_parse(t, r, i, n),
                    pubkeySerialize: (t, r, i, n, o) =>
                      e.exports._secp256k1_ec_pubkey_serialize(t, r, i, n, o),
                    pubkeyTweakAdd: (t, r, i) =>
                      e.exports._secp256k1_ec_pubkey_tweak_add(t, r, i),
                    pubkeyTweakMul: (t, r, i) =>
                      e.exports._secp256k1_ec_pubkey_tweak_mul(t, r, i),
                    readHeapU8: (e, r) => new Uint8Array(t.buffer, e, r),
                    readSizeT: (e) => r[e >> 2],
                    recover: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_recover(t, r, i, n),
                    recoverableSignatureParse: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(
                        t,
                        r,
                        i,
                        n
                      ),
                    recoverableSignatureSerialize: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(
                        t,
                        r,
                        i,
                        n
                      ),
                    schnorrSign: (t, r, i, n) =>
                      e.exports._secp256k1_schnorr_sign(t, r, i, n),
                    schnorrVerify: (t, r, i, n) =>
                      e.exports._secp256k1_schnorr_verify(t, r, i, n),
                    seckeyVerify: (t, r) =>
                      e.exports._secp256k1_ec_seckey_verify(t, r),
                    sign: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_sign(t, r, i, n),
                    signRecoverable: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_sign_recoverable(t, r, i, n),
                    signatureMalleate: (t, r, i) =>
                      e.exports._secp256k1_ecdsa_signature_malleate(t, r, i),
                    signatureNormalize: (t, r, i) =>
                      e.exports._secp256k1_ecdsa_signature_normalize(t, r, i),
                    signatureParseCompact: (t, r, i) =>
                      e.exports._secp256k1_ecdsa_signature_parse_compact(
                        t,
                        r,
                        i
                      ),
                    signatureParseDER: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_signature_parse_der(
                        t,
                        r,
                        i,
                        n
                      ),
                    signatureSerializeCompact: (t, r, i) =>
                      e.exports._secp256k1_ecdsa_signature_serialize_compact(
                        t,
                        r,
                        i
                      ),
                    signatureSerializeDER: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_signature_serialize_der(
                        t,
                        r,
                        i,
                        n
                      ),
                    verify: (t, r, i, n) =>
                      e.exports._secp256k1_ecdsa_verify(t, r, i, n),
                  }))(e.instance, n, a)
                )
              );
            })(
              (0, o.VB)(
                ""
              ).buffer
            );
        var s;
        !(function (e) {
          (e.unparsableSignature = "Failed to parse signature."),
            (e.unparsablePublicKey = "Failed to parse public key."),
            (e.derivePublicKeyFromInvalidPrivateKey =
              "Cannot derive public key from invalid private key."),
            (e.signWithInvalidPrivateKey =
              "Failed to sign message hash. The private key is not valid."),
            (e.recoverPublicKeyWithUnparsableSignature =
              "Failed to recover public key. Could not parse signature."),
            (e.recoverPublicKeyInvalidMaterial =
              "Failed to recover public key. The compact signature, recovery, or message hash is invalid."),
            (e.addTweakPrivateKey = "Private key is invalid or adding failed."),
            (e.mulTweakPrivateKey =
              "Private key is invalid or multiplying failed."),
            (e.addTweakPublicKey = "Failed to tweak public key (by addition)."),
            (e.mulTweakPublicKey =
              "Failed to tweak public key (by multiplication).");
        })(s || (s = {}));
        const c = async (e) =>
          ((e, t) => {
            const r = e.contextCreate(i.BOTH),
              o = e.malloc(72),
              A = e.malloc(65),
              a = e.malloc(32),
              c = e.malloc(64),
              g = e.malloc(64),
              l = e.malloc(64),
              u = e.malloc(32),
              h = e.malloc(65),
              I = e.malloc(4),
              p = I >> 2,
              d = e.malloc(4),
              f = d >> 2,
              C = (e, t) => {
                const r = new Uint8Array(t);
                return r.set(e), r;
              },
              B = (t) => {
                const i = C(t, 65);
                return (
                  e.heapU8.set(i, A), 1 === e.pubkeyParse(r, c, A, t.length)
                );
              },
              E = (t) => {
                e.heapU32.set([t], f);
              },
              y = () => e.heapU32[f],
              m = (t, i) => (
                E(t),
                e.pubkeySerialize(r, A, d, c, i),
                e.readHeapU8(A, y()).slice()
              ),
              Q = (e) => (e ? m(33, n.COMPRESSED) : m(65, n.UNCOMPRESSED)),
              v = (e) => (t) => B(t) ? Q(e) : s.unparsablePublicKey,
              S = (t, i) => {
                const n = C(t, 72);
                return (
                  e.heapU8.set(n, o),
                  i
                    ? 1 === e.signatureParseDER(r, g, o, t.length)
                    : 1 === e.signatureParseCompact(r, g, o)
                );
              },
              w = () => (
                e.signatureSerializeCompact(r, o, g),
                e.readHeapU8(o, 64).slice()
              ),
              b = () => (
                E(72),
                e.signatureSerializeDER(r, o, d, g),
                e.readHeapU8(o, y()).slice()
              ),
              k = (e) => (t) =>
                S(t, e) ? (e ? w() : b()) : s.unparsableSignature,
              N = (t, r) => {
                e.heapU8.fill(0, t, t + r);
              },
              _ = (t, r) => {
                ((t) => {
                  const r = C(t, 32);
                  e.heapU8.set(r, u);
                })(t);
                const i = r();
                return N(u, 32), i;
              },
              D = (t) => (i) =>
                _(i, () => 1 !== e.pubkeyCreate(r, c, u))
                  ? s.derivePublicKeyFromInvalidPrivateKey
                  : Q(t),
              O = (t) => {
                const r = C(t, 32);
                e.heapU8.set(r, a);
              },
              T = () => {
                e.signatureNormalize(r, g, g);
              },
              P = (t, i) => (n) =>
                S(n, t)
                  ? (i ? T() : e.signatureMalleate(r, g, g), t ? b() : w())
                  : s.unparsableSignature,
              x = (t) => (i, n) => (
                O(n),
                _(i, () =>
                  1 !== e.sign(r, g, a, u)
                    ? s.signWithInvalidPrivateKey
                    : t
                    ? (E(72),
                      e.signatureSerializeDER(r, o, d, g),
                      e.readHeapU8(o, y()).slice())
                    : (e.signatureSerializeCompact(r, o, g),
                      e.readHeapU8(o, 64).slice())
                )
              ),
              R = (t, i) => (n, o, A) =>
                B(o) &&
                ((e, t, r) => {
                  const i = S(e, t);
                  return r && T(), i;
                })(n, t, i) &&
                ((t) => (O(t), 1 === e.verify(r, g, a, c)))(A),
              U = (t) => (i, n, A) => {
                O(A);
                const g = C(i, 72);
                return (
                  e.heapU8.set(g, o),
                  1 !== e.recoverableSignatureParse(r, h, o, n)
                    ? s.recoverPublicKeyWithUnparsableSignature
                    : 1 !== e.recover(r, c, h, a)
                    ? s.recoverPublicKeyInvalidMaterial
                    : Q(t)
                );
              },
              F = (t) => (i, n) =>
                B(i)
                  ? (O(n),
                    1 !== e.pubkeyTweakAdd(r, c, a)
                      ? s.addTweakPublicKey
                      : Q(t))
                  : s.unparsablePublicKey,
              H = (t) => (i, n) =>
                B(i)
                  ? (O(n),
                    1 !== e.pubkeyTweakMul(r, c, a)
                      ? s.mulTweakPublicKey
                      : Q(t))
                  : s.unparsablePublicKey;
            if (void 0 !== t) {
              const i = a,
                n = C(t, 32);
              e.heapU8.set(n, i), e.contextRandomize(r, i), N(i, 32);
            }
            return {
              addTweakPrivateKey: (t, i) => (
                O(i),
                _(t, () =>
                  1 !== e.privkeyTweakAdd(r, u, a)
                    ? s.addTweakPrivateKey
                    : e.readHeapU8(u, 32).slice()
                )
              ),
              addTweakPublicKeyCompressed: F(!0),
              addTweakPublicKeyUncompressed: F(!1),
              compressPublicKey: v(!0),
              derivePublicKeyCompressed: D(!0),
              derivePublicKeyUncompressed: D(!1),
              malleateSignatureCompact: P(!1, !1),
              malleateSignatureDER: P(!0, !1),
              mulTweakPrivateKey: (t, i) => (
                O(i),
                _(t, () =>
                  1 !== e.privkeyTweakMul(r, u, a)
                    ? s.mulTweakPrivateKey
                    : e.readHeapU8(u, 32).slice()
                )
              ),
              mulTweakPublicKeyCompressed: H(!0),
              mulTweakPublicKeyUncompressed: H(!1),
              normalizeSignatureCompact: P(!1, !0),
              normalizeSignatureDER: P(!0, !0),
              recoverPublicKeyCompressed: U(!0),
              recoverPublicKeyUncompressed: U(!1),
              signMessageHashCompact: x(!1),
              signMessageHashDER: x(!0),
              signMessageHashRecoverableCompact: (t, i) => (
                O(i),
                _(t, () =>
                  1 !== e.signRecoverable(r, h, a, u)
                    ? s.signWithInvalidPrivateKey
                    : (e.recoverableSignatureSerialize(r, o, I, h),
                      {
                        recoveryId: e.heapU32[p],
                        signature: e.readHeapU8(o, 64).slice(),
                      })
                )
              ),
              signMessageHashSchnorr: (t, i) => (
                O(i),
                _(t, () =>
                  1 !== e.schnorrSign(r, l, a, u)
                    ? s.signWithInvalidPrivateKey
                    : e.readHeapU8(l, 64).slice()
                )
              ),
              signatureCompactToDER: k(!1),
              signatureDERToCompact: k(!0),
              uncompressPublicKey: v(!1),
              validatePrivateKey: (t) => _(t, () => 1 === e.seckeyVerify(r, u)),
              validatePublicKey: B,
              verifySignatureCompact: R(!1, !0),
              verifySignatureCompactLowS: R(!1, !1),
              verifySignatureDER: R(!0, !0),
              verifySignatureDERLowS: R(!0, !1),
              verifySignatureSchnorr: (t, i, n) =>
                !!B(i) &&
                ((t, i) => {
                  O(t);
                  const n = C(i, 64);
                  return e.heapU8.set(n, l), 1 === e.schnorrVerify(r, l, a, c);
                })(n, t),
            };
          })(await a(), e);
      },
      11992: (e, t, r) => {
        "use strict";
        r.d(t, { IU: () => o });
        var i = r(49354),
          n = r(66998);
        const o = async () =>
          (async (e) => {
            const t = await (0, i.r)(
              e,
              "./sha1",
              "sha1",
              "sha1_init",
              "sha1_update",
              "sha1_final"
            );
            return {
              final: t.final,
              hash: t.hash,
              init: t.init,
              update: t.update,
            };
          })(
            (0, n.VB)(
              ""
            ).buffer
          );
      },
      91040: (e, t, r) => {
        "use strict";
        r.d(t, { Um: () => o });
        var i = r(49354),
          n = r(66998);
        const o = async () =>
          (async (e) => {
            const t = await (0, i.r)(
              e,
              "./sha256",
              "sha256",
              "sha256_init",
              "sha256_update",
              "sha256_final"
            );
            return {
              final: t.final,
              hash: t.hash,
              init: t.init,
              update: t.update,
            };
          })(
            (0, n.VB)(
              ""
            ).buffer
          );
      },
      5848: (e, t, r) => {
        "use strict";
        r.d(t, { f8: () => o });
        var i = r(49354),
          n = r(66998);
        const o = async () =>
          (async (e) => {
            const t = await (0, i.r)(
              e,
              "./sha512",
              "sha512",
              "sha512_init",
              "sha512_update",
              "sha512_final"
            );
            return {
              final: t.final,
              hash: t.hash,
              init: t.init,
              update: t.update,
            };
          })(
            (0, n.VB)(
              ""
            ).buffer
          );
      },
      6833: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { C4: () => i, Yu: () => A, e9: () => o }),
          (function (e) {
            (e.tooLong = "An alphabet may be no longer than 254 characters."),
              (e.ambiguousCharacter =
                "A character code may only appear once in a single alphabet."),
              (e.unknownCharacter =
                "Encountered an unknown character for this alphabet.");
          })(i || (i = {}));
        const n = ((e) => {
            const t = 255,
              r = 256;
            if (e.length >= t) return i.tooLong;
            const n = new Uint8Array(r).fill(t);
            for (let r = 0; r < e.length; r++) {
              const o = e.charCodeAt(r);
              if (n[o] !== t) return i.ambiguousCharacter;
              n[o] = r;
            }
            const o = e.length,
              A = e.charAt(0),
              a = Math.log(o) / Math.log(r),
              s = Math.log(r) / Math.log(o);
            return {
              decode: (e) => {
                if (0 === e.length) return Uint8Array.of();
                const s = e.split("").findIndex((e) => e !== A);
                if (-1 === s) return new Uint8Array(e.length);
                const c = Math.floor((e.length - s) * a + 1),
                  g = new Uint8Array(c);
                let l = s,
                  u = 0;
                for (; void 0 !== e[l]; ) {
                  let A = n[e.charCodeAt(l)];
                  if (A === t) return i.unknownCharacter;
                  let a = 0;
                  for (let e = c - 1; (0 !== A || a < u) && -1 !== e; e--, a++)
                    (A += Math.floor(o * g[e])),
                      (g[e] = Math.floor(A % r)),
                      (A = Math.floor(A / r));
                  (u = a), l++;
                }
                const h = g.findIndex((e) => 0 !== e),
                  I = new Uint8Array(s + (c - h));
                return I.set(g.slice(h), s), I;
              },
              encode: (t) => {
                if (0 === t.length) return "";
                const i = t.findIndex((e) => 0 !== e);
                if (-1 === i) return A.repeat(t.length);
                const n = Math.floor((t.length - i) * s + 1),
                  a = new Uint8Array(n);
                let c = i,
                  g = 0;
                for (; c !== t.length; ) {
                  let e = t[c],
                    i = 0;
                  for (let t = n - 1; (0 !== e || i < g) && -1 !== t; t--, i++)
                    (e += Math.floor(r * a[t])),
                      (a[t] = Math.floor(e % o)),
                      (e = Math.floor(e / o));
                  (g = i), c++;
                }
                const l = a.findIndex((e) => 0 !== e),
                  u = A.repeat(i);
                return a.slice(l).reduce((t, r) => t + e.charAt(r), u);
              },
            };
          })("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),
          o = n.decode,
          A = n.encode;
      },
      66998: (e, t, r) => {
        "use strict";
        r.d(t, { VB: () => A, Zp: () => o, yM: () => a });
        const i =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          n = new RegExp(`[^${i}=]`, "u"),
          o = (e) => e.length % 4 == 0 && !n.test(e),
          A = (e) => {
            const t = new Uint8Array(123);
            for (let e = 0; e < i.length; e++) t[i.charCodeAt(e)] = e;
            const r = 0.75 * e.length,
              n = e.length,
              o =
                "=" === e[e.length - 1]
                  ? "=" === e[e.length - 2]
                    ? r - 2
                    : r - 1
                  : r,
              A = new ArrayBuffer(o),
              a = new Uint8Array(A);
            let s = 0;
            for (let r = 0; r < n; r += 4) {
              const i = t[e.charCodeAt(r)],
                n = t[e.charCodeAt(r + 1)],
                o = t[e.charCodeAt(r + 2)],
                A = t[e.charCodeAt(r + 3)];
              (a[s++] = (i << 2) | (n >> 4)),
                (a[s++] = ((15 & n) << 4) | (o >> 2)),
                (a[s++] = ((3 & o) << 6) | (63 & A));
            }
            return a;
          },
          a = (e) => {
            let t = "";
            for (let r = 0; r < e.length; r += 3)
              (t += i[e[r] >> 2]),
                (t += i[((3 & e[r]) << 4) | (e[r + 1] >> 4)]),
                (t += i[((15 & e[r + 1]) << 2) | (e[r + 2] >> 6)]),
                (t += i[63 & e[r + 2]]);
            return e.length % 3 == 2
              ? `${t.substring(0, t.length - 1)}=`
              : e.length % 3 == 1
              ? `${t.substring(0, t.length - 2)}==`
              : t;
          };
      },
      98378: (e, t, r) => {
        "use strict";
        r.d(t, { SD: () => n });
        var i = r(34684);
        const n = (e) =>
          Uint8Array.from((0, i.Me)(e, 8).map((e) => parseInt(e, 2)));
      },
      10377: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => i, m: () => n });
        const i = (e, t) => `${e}${void 0 === t ? "" : ` ${t}`}`,
          n = (
            e,
            t = `Received an unknown value: ${String(
              e
            )}. This should have been caught by TypeScript - are your types correct?`
          ) => {
            throw new Error(t);
          };
      },
      34684: (e, t, r) => {
        "use strict";
        r.d(t, {
          Me: () => n,
          UM: () => A,
          kW: () => o,
          kg: () => a,
          sv: () => s,
          w6: () => i,
        });
        const i = (e, t = 0) => Array.from({ length: e }, (e, r) => t + r),
          n = (e, t) =>
            i(Math.ceil(e.length / t))
              .map((e) => e * t)
              .map((r) => e.slice(r, r + t)),
          o = (e) => Uint8Array.from(n(e, 2).map((e) => parseInt(e, 16))),
          A = (e) =>
            e.reduce((e, t) => e + t.toString(16).padStart(2, "0"), ""),
          a = (e) => {
            const t = e.reduce((e, t) => e + t.length, 0),
              r = new Uint8Array(t);
            return e.reduce((e, t) => (r.set(t, e), e + t.length), 0), r;
          },
          s = (e, t) => {
            if (e.length !== t.length) return !1;
            for (let r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1;
            return !0;
          };
      },
      78997: (e, t, r) => {
        "use strict";
        r.d(t, {
          ED: () => g,
          RN: () => I,
          UC: () => A,
          Z2: () => B,
          d8: () => u,
          dd: () => d,
          l0: () => o,
          lj: () => p,
          nc: () => a,
          of: () => c,
          op: () => l,
          rO: () => E,
          us: () => C,
        });
        var i = r(10377);
        const n = (e, t) => {
            const r = new Uint8Array(t);
            return e.length > t ? r.fill(255) : r.set(e), r;
          },
          o = (e) => {
            const t = new Uint8Array(2);
            return (
              new DataView(t.buffer, t.byteOffset, t.byteLength).setUint16(
                0,
                e,
                !0
              ),
              t
            );
          },
          A = (e) => {
            const t = new Uint8Array(4);
            return (
              new DataView(t.buffer, t.byteOffset, t.byteLength).setUint32(
                0,
                e,
                !0
              ),
              t
            );
          },
          a = (e) => {
            const t = new Uint8Array(4);
            return (
              new DataView(t.buffer, t.byteOffset, t.byteLength).setUint32(
                0,
                e,
                !1
              ),
              t
            );
          },
          s = (e) => {
            const t = BigInt(256),
              r = [];
            let i = e;
            for (; i >= t; ) r.push(Number(i % t)), (i /= t);
            return (
              i > 0n && r.push(Number(i)),
              Uint8Array.from(r.length > 0 ? r : [0])
            );
          },
          c = (e) => {
            const t = ((e) => n(s(e), 8))(BigInt.asUintN(64, e));
            return t;
          },
          g = (e) =>
            new DataView(e.buffer, e.byteOffset, e.byteLength).getUint16(0, !0),
          l = (e) =>
            new DataView(e.buffer, e.byteOffset, e.byteLength).getUint32(0, !0),
          u = (e) => n(s(e), 32).reverse(),
          h = (e, t = e.length) => {
            if (e.length !== t) throw new TypeError(`Bin length must be ${t}.`);
            return new Uint8Array(e.buffer, e.byteOffset, e.length).reduceRight(
              (e, t) => (e << BigInt(8)) | BigInt(t),
              0n
            );
          },
          I = (e) => {
            const t = e.length > 8 ? e.slice(0, 8) : e;
            return h(t, 8);
          },
          p = I,
          d = c;
        var f;
        !(function (e) {
          (e.noPrefix =
            "Error reading CompactSize: requires at least one byte."),
            (e.insufficientBytes =
              "Error reading CompactSize: insufficient bytes."),
            (e.nonMinimal =
              "Error reading CompactSize: CompactSize is not minimally encoded."),
            (e.excessiveBytes =
              "Error decoding CompactSize: unexpected bytes after CompactSize.");
        })(f || (f = {}));
        const C = (e) =>
            e <= BigInt(252)
              ? Uint8Array.of(Number(e))
              : e <= BigInt(65535)
              ? Uint8Array.from([253, ...o(Number(e))])
              : e <= BigInt(4294967295)
              ? Uint8Array.from([254, ...A(Number(e))])
              : Uint8Array.from([255, ...c(e)]),
          B = (e) => {
            const t = ((e) => {
              const { bin: t, index: r } = e,
                n = t[r];
              if (void 0 === n) return (0, i.Z)(f.noPrefix);
              const o = ((e) => {
                switch (e) {
                  case 253:
                    return 3;
                  case 254:
                    return 5;
                  case 255:
                    return 9;
                  default:
                    return 1;
                }
              })(n);
              if (t.length - r < o)
                return (0, i.Z)(
                  f.insufficientBytes,
                  `CompactSize prefix ${n} requires at least ${o} bytes. Remaining bytes: ${
                    t.length - r
                  }`
                );
              const A =
                1 !== o ? t.subarray(r + 1, r + o) : t.subarray(r, r + o);
              return { position: { bin: t, index: r + o }, result: h(A) };
            })(e);
            if ("string" == typeof t) return t;
            const r = t.position.index - e.index,
              n = C(t.result);
            return r !== n.length
              ? (0, i.Z)(
                  f.nonMinimal,
                  `Value: ${t.result.toString()}, encoded length: ${r}, canonical length: ${
                    n.length
                  }`
                )
              : t;
          },
          E = (e) => Int32Array.from(Uint32Array.of(e))[0];
      },
      52477: (e, t, r) => {
        "use strict";
        r.d(t, { go: () => o, zR: () => a });
        var i = r(10377),
          n = r(78997);
        const o = (e, t) => {
          let r = e;
          const i = [];
          for (const e of t) {
            const t = e(r);
            if ("string" == typeof t) return t;
            i.push(t.result), (r = t.position);
          }
          return { position: r, result: i };
        };
        var A;
        !(function (e) {
          (e.itemCount = "Error reading item count."),
            (e.item = "Error reading item.");
        })(A || (A = {}));
        const a = (e, t) => {
          const r = (0, n.Z2)(e);
          if ("string" == typeof r) return (0, i.Z)(A.itemCount, r);
          let o = r.position;
          const a = [];
          for (let e = Number(r.result); e > 0; e--) {
            const e = t(o);
            if ("string" == typeof e) return (0, i.Z)(A.item, e);
            a.push(e.result), (o = e.position);
          }
          return { position: o, result: a };
        };
      },
      43137: (e, t, r) => {
        "use strict";
        r.d(t, { L: () => n, x: () => A });
        const i = new TextEncoder(),
          n = (e) => i.encode(e),
          o = new TextDecoder(),
          A = (e) => o.decode(e);
      },
      59431: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $I: () => m,
              Ai: () => k,
              Jx: () => Q,
              Q$: () => v,
              Wt: () => y,
              dD: () => b,
              hC: () => f,
              od: () => S,
            });
            var n = r(12909),
              o = r(59906),
              A = r(6833),
              a = r(78997),
              s = r(34684),
              c = r(41118),
              g = e([n, o]);
            [n, o] = g.then ? (await g)() : g;
            const p = Uint8Array.from([
                66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100,
              ]),
              d = 32,
              f = (e, t, r = { sha512: n.o }) => {
                const i = (0, o.c6)(p, e, r.sha512),
                  A = i.slice(0, d),
                  a = i.slice(d),
                  s = Uint8Array.from([0, 0, 0, 0]),
                  g = t ?? (0, c.T)(A);
                return g
                  ? {
                      chainCode: a,
                      childIndex: 0,
                      depth: 0,
                      parentFingerprint: s,
                      privateKey: A,
                      valid: g,
                    }
                  : {
                      chainCode: a,
                      childIndex: 0,
                      depth: 0,
                      invalidPrivateKey: A,
                      parentFingerprint: s,
                      valid: g,
                    };
              },
              C = (
                e,
                t = { ripemd160: n.bP, secp256k1: n.kA, sha256: n.JQ }
              ) => {
                const r = t.secp256k1.derivePublicKeyCompressed(e.privateKey);
                return "string" == typeof r
                  ? r
                  : t.ripemd160.hash(t.sha256.hash(r));
              },
              B = (e, t = { ripemd160: n.bP, sha256: n.JQ }) =>
                t.ripemd160.hash(t.sha256.hash(e.publicKey));
            var l, u;
            !(function (e) {
              (e[(e.mainnetPrivateKey = 76066276)] = "mainnetPrivateKey"),
                (e[(e.mainnetPublicKey = 76067358)] = "mainnetPublicKey"),
                (e[(e.testnetPrivateKey = 70615956)] = "testnetPrivateKey"),
                (e[(e.testnetPublicKey = 70617039)] = "testnetPublicKey");
            })(l || (l = {})),
              (function (e) {
                (e.incorrectLength =
                  "HD key decoding error: length is incorrect (must encode 82 bytes)."),
                  (e.invalidChecksum =
                    "HD key decoding error: checksum is invalid."),
                  (e.invalidPrivateNode =
                    "HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key."),
                  (e.missingPrivateKeyPaddingByte =
                    "HD key decoding error: version indicates a private key, but the key data is missing a padding byte."),
                  (e.privateKeyExpected =
                    "HD key decoding error: expected an HD private key, but encountered an HD public key."),
                  (e.publicKeyExpected =
                    "HD key decoding error: expected an HD public key, but encountered an HD private key."),
                  (e.unknownCharacter =
                    "HD key decoding error: key includes a non-base58 character."),
                  (e.unknownVersion =
                    "HD key decoding error: key uses an unknown version.");
              })(u || (u = {}));
            const E = (e, t = { sha256: n.JQ }) => {
                const r = (0, A.e9)(e);
                if (r === A.C4.unknownCharacter) return u.unknownCharacter;
                if (82 !== r.length) return u.incorrectLength;
                const i = r.slice(0, 78),
                  o = r.slice(78),
                  a = t.sha256.hash(t.sha256.hash(i));
                if (!o.every((e, t) => e === a[t])) return u.invalidChecksum;
                const s = new DataView(r.buffer, r.byteOffset, 4).getUint32(0),
                  g = r[4],
                  h = r.slice(5, 9),
                  I = new DataView(
                    r.buffer,
                    r.byteOffset + 9,
                    r.byteOffset + 13
                  ).getUint32(0),
                  p = r.slice(13, 45),
                  d = r.slice(45, 78),
                  f = s === l.mainnetPrivateKey || s === l.testnetPrivateKey;
                if (f && 0 !== d[0]) return u.missingPrivateKeyPaddingByte;
                if (f) {
                  const e = d.slice(1);
                  return {
                    node: (0, c.T)(e)
                      ? {
                          chainCode: p,
                          childIndex: I,
                          depth: g,
                          parentFingerprint: h,
                          privateKey: e,
                          valid: !0,
                        }
                      : {
                          chainCode: p,
                          childIndex: I,
                          depth: g,
                          invalidPrivateKey: e,
                          parentFingerprint: h,
                          valid: !1,
                        },
                    version: s,
                  };
                }
                return s === l.mainnetPublicKey || s === l.testnetPublicKey
                  ? {
                      node: {
                        chainCode: p,
                        childIndex: I,
                        depth: g,
                        parentFingerprint: h,
                        publicKey: d,
                      },
                      version: s,
                    }
                  : u.unknownVersion;
              },
              y = (e, t = { sha256: n.JQ }) => {
                const r = E(e, t);
                return "string" == typeof r
                  ? r
                  : "publicKey" in r.node
                  ? u.privateKeyExpected
                  : r.node.valid
                  ? r.version === l.mainnetPrivateKey
                    ? { network: "mainnet", node: r.node }
                    : { network: "testnet", node: r.node }
                  : u.invalidPrivateNode;
              },
              m = (e, t = { sha256: n.JQ }) => {
                const r = E(e, t);
                return "string" == typeof r
                  ? r
                  : r.version === l.mainnetPublicKey
                  ? { network: "mainnet", node: r.node }
                  : r.version === l.testnetPublicKey
                  ? { network: "testnet", node: r.node }
                  : u.publicKeyExpected;
              },
              Q = (e, t = { sha256: n.JQ }) => {
                const r = (0, a.nc)(
                    "mainnet" === e.network
                      ? l.mainnetPrivateKey
                      : l.testnetPrivateKey
                  ),
                  i = Uint8Array.of(e.node.depth),
                  o = (0, a.nc)(e.node.childIndex),
                  c = Uint8Array.of(0),
                  g = (0, s.kg)([
                    r,
                    i,
                    e.node.parentFingerprint,
                    o,
                    e.node.chainCode,
                    c,
                    e.node.privateKey,
                  ]),
                  u = t.sha256.hash(t.sha256.hash(g)).slice(0, 4);
                return (0, A.Yu)((0, s.kg)([g, u]));
              },
              v = (e, t = { sha256: n.JQ }) => {
                const r = (0, a.nc)(
                    "mainnet" === e.network
                      ? l.mainnetPublicKey
                      : l.testnetPublicKey
                  ),
                  i = Uint8Array.of(e.node.depth),
                  o = (0, a.nc)(e.node.childIndex),
                  c = (0, s.kg)([
                    r,
                    i,
                    e.node.parentFingerprint,
                    o,
                    e.node.chainCode,
                    e.node.publicKey,
                  ]),
                  g = t.sha256.hash(t.sha256.hash(c)).slice(0, 4);
                return (0, A.Yu)((0, s.kg)([c, g]));
              },
              S = (e, t = { secp256k1: n.kA }) => ({
                chainCode: e.chainCode,
                childIndex: e.childIndex,
                depth: e.depth,
                parentFingerprint: e.parentFingerprint,
                ...(void 0 === e.parentIdentifier
                  ? {}
                  : { parentIdentifier: e.parentIdentifier }),
                publicKey: t.secp256k1.derivePublicKeyCompressed(e.privateKey),
              });
            var h;
            !(function (e) {
              (e.childIndexExceedsMaximum =
                "HD key derivation error: child index exceeds maximum (4294967295)."),
                (e.nextChildIndexRequiresHardenedAlgorithm =
                  "HD key derivation error: an incredibly rare HMAC-SHA512 result occurred, and incrementing the child index would require switching to the hardened algorithm."),
                (e.hardenedDerivationRequiresPrivateNode =
                  "HD key derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node."),
                (e.invalidDerivationPath =
                  'HD key derivation error: invalid derivation path - paths must begin with "m" or "M" and contain only forward slashes ("/"), apostrophes ("\'"), or positive child index numbers.'),
                (e.invalidPrivateDerivationPrefix =
                  'HD key derivation error: private derivation paths must begin with "m".'),
                (e.invalidPublicDerivationPrefix =
                  'HD key derivation error: public derivation paths must begin with "M".');
            })(h || (h = {}));
            const w = (
                e,
                t,
                r = {
                  ripemd160: n.bP,
                  secp256k1: n.kA,
                  sha256: n.JQ,
                  sha512: n.o,
                }
              ) => {
                if (t > 4294967295) return h.childIndexExceedsMaximum;
                const i = t >= 2147483648,
                  A = i
                    ? e.privateKey
                    : r.secp256k1.derivePublicKeyCompressed(e.privateKey),
                  s = Uint8Array.from([
                    ...(i ? [0] : []),
                    ...A,
                    ...(0, a.nc)(t),
                  ]),
                  c = (0, o.c6)(e.chainCode, s, r.sha512),
                  g = c.slice(0, 32),
                  l = c.slice(32),
                  u = r.secp256k1.addTweakPrivateKey(e.privateKey, g);
                if ("string" == typeof u)
                  return 2147483647 === t
                    ? h.nextChildIndexRequiresHardenedAlgorithm
                    : w(e, t + 1, r);
                const I = C(e, r);
                return {
                  chainCode: l,
                  childIndex: t,
                  depth: e.depth + 1,
                  parentFingerprint: I.slice(0, 4),
                  parentIdentifier: I,
                  privateKey: u,
                  valid: !0,
                };
              },
              b = (
                e,
                t,
                r = {
                  ripemd160: n.bP,
                  secp256k1: n.kA,
                  sha256: n.JQ,
                  sha512: n.o,
                }
              ) => {
                if (t >= 2147483648)
                  return h.hardenedDerivationRequiresPrivateNode;
                const i = Uint8Array.from([...e.publicKey, ...(0, a.nc)(t)]),
                  A = (0, o.c6)(e.chainCode, i, r.sha512),
                  s = A.slice(0, 32),
                  c = A.slice(32),
                  g = r.secp256k1.addTweakPublicKeyCompressed(e.publicKey, s);
                if ("string" == typeof g)
                  return 2147483647 === t
                    ? h.nextChildIndexRequiresHardenedAlgorithm
                    : b(e, t + 1, r);
                const l = B(e, r);
                return {
                  chainCode: c,
                  childIndex: t,
                  depth: e.depth + 1,
                  parentFingerprint: l.slice(0, 4),
                  parentIdentifier: l,
                  publicKey: g,
                };
              },
              k = (
                e,
                t,
                r = {
                  ripemd160: n.bP,
                  secp256k1: n.kA,
                  sha256: n.JQ,
                  sha512: n.o,
                }
              ) => {
                if (!/^[mM](?:\/[0-9]+'?)*$/u.test(t))
                  return h.invalidDerivationPath;
                const i = t.split("/"),
                  o = "privateKey" in e;
                if (o && "m" !== i[0]) return h.invalidPrivateDerivationPrefix;
                if (!o && "M" !== i[0]) return h.invalidPublicDerivationPrefix;
                const A = i
                  .slice(1)
                  .map((e) =>
                    e.endsWith("'")
                      ? parseInt(e.slice(0, -1), 10) + 2147483648
                      : parseInt(e, 10)
                  );
                return o
                  ? A.reduce(
                      (e, t) => ("string" == typeof e ? e : w(e, t, r)),
                      e
                    )
                  : A.reduce(
                      (e, t) => ("string" == typeof e ? e : b(e, t, r)),
                      e
                    );
              };
            var I;
            !(function (e) {
              e.cannotCrackHardenedDerivation =
                "HD node cracking error: cannot crack an HD parent node using hardened child node.";
            })(I || (I = {})),
              i();
          } catch (e) {
            i(e);
          }
        });
      },
      41118: (e, t, r) => {
        "use strict";
        r.d(t, { T: () => i, w: () => n });
        const i = (e) => {
            if (32 !== e.length || e.every((e) => 0 === e)) return !1;
            const t = [
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210,
                94, 140, 208, 54, 65, 63,
              ],
              r = e.findIndex((e, r) => e !== t[r]);
            return -1 === r || e[r] < t[r];
          },
          n = (e) => {
            let t;
            do {
              t = e();
            } while (!i(t));
            return t;
          };
      },
      19555: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { L: () => c, ep: () => s });
            var n,
              o = r(49942),
              A = r(12909),
              a = e([A, o]);
            ([A, o] = a.then ? (await a)() : a),
              (function (e) {
                e.incorrectLength =
                  "The WIF private key payload is not the correct length.";
              })(n || (n = {}));
            const s = (e, t, r = A.JQ) => {
                const i = "mainnet" === t || "mainnetUncompressed" === t,
                  n =
                    "mainnet" === t || "testnet" === t
                      ? Uint8Array.from([...e, 1])
                      : e;
                return (0, o.k3)(i ? o.qT.wif : o.qT.wifTestnet, n, r);
              },
              c = (e, t = A.JQ) => {
                const r = (0, o.si)(e, t);
                if ("string" == typeof r) return r;
                const i = r.version === o.qT.wif,
                  n = 33 === r.payload.length;
                return {
                  privateKey: n ? r.payload.slice(0, -1) : r.payload,
                  type: i
                    ? n
                      ? "mainnet"
                      : "mainnetUncompressed"
                    : n
                    ? "testnet"
                    : "testnetUncompressed",
                };
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      26389: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { s: () => A });
            var n = r(1365),
              o = e([n]);
            n = (o.then ? (await o)() : o)[0];
            const A = (e, t, r) => {
              const i = 5e8;
              if (void 0 !== t.compilationContext?.transaction.locktime) {
                if (
                  "height" === r.unlockingScriptTimeLockTypes?.[e] &&
                  t.compilationContext.transaction.locktime >= i
                )
                  return {
                    errorType: "parse",
                    errors: [
                      {
                        error: `The script "${e}" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime ("${t.compilationContext.transaction.locktime}").`,
                        range: (0, n.Pq)(),
                      },
                    ],
                    success: !1,
                  };
                if (
                  "timestamp" === r.unlockingScriptTimeLockTypes?.[e] &&
                  t.compilationContext.transaction.locktime < i
                )
                  return {
                    errorType: "parse",
                    errors: [
                      {
                        error: `The script "${e}" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime ("${t.compilationContext.transaction.locktime}").`,
                        range: (0, n.Pq)(),
                      },
                    ],
                    success: !1,
                  };
              }
              if (
                void 0 !==
                  t.compilationContext?.transaction.inputs[
                    t.compilationContext.inputIndex
                  ]?.sequenceNumber &&
                void 0 !== r.unlockingScriptTimeLockTypes?.[e] &&
                4294967295 ===
                  t.compilationContext.transaction.inputs[
                    t.compilationContext.inputIndex
                  ].sequenceNumber
              )
                return {
                  errorType: "parse",
                  errors: [
                    {
                      error: `The script "${e}" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number that does not disable locktime.`,
                      range: (0, n.Pq)(),
                    },
                  ],
                  success: !1,
                };
              const o = (0, n.pI)({ configuration: r, data: t, scriptId: e });
              if (!o.success) return o;
              const A = r.unlockingScripts?.[e],
                a = void 0 === A ? void 0 : r.lockingScriptTypes?.[A],
                s = "p2sh20" === a || "p2sh32" === a,
                c = r.lockingScriptTypes?.[e];
              if ("p2sh20" === c || "p2sh32" === c) {
                const e = (0, n.pI)({
                  configuration: {
                    ...r,
                    scripts: {
                      p2sh20Locking:
                        "OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL",
                      p2sh32Locking:
                        "OP_HASH256 <$(<lockingBytecode> OP_HASH256)> OP_EQUAL",
                    },
                    variables: { lockingBytecode: { type: "AddressData" } },
                  },
                  data: { bytecode: { lockingBytecode: o.bytecode } },
                  scriptId: "p2sh20" === c ? "p2sh20Locking" : "p2sh32Locking",
                });
                return e.success
                  ? {
                      ...o,
                      bytecode: e.bytecode,
                      transformed:
                        "p2sh20" === c ? "p2sh20-locking" : "p2sh32-locking",
                    }
                  : e;
              }
              if (s) {
                const e = (0, n.pI)({ configuration: r, data: t, scriptId: A });
                if (!e.success) return e;
                const i = (0, n.pI)({
                  configuration: {
                    ...r,
                    scripts: {
                      p2shUnlocking: "unlockingBytecode <lockingBytecode>",
                    },
                    variables: {
                      lockingBytecode: { type: "AddressData" },
                      unlockingBytecode: { type: "AddressData" },
                    },
                  },
                  data: {
                    bytecode: {
                      lockingBytecode: e.bytecode,
                      unlockingBytecode: o.bytecode,
                    },
                  },
                  scriptId: "p2shUnlocking",
                });
                return {
                  ...o,
                  bytecode: i.bytecode,
                  transformed:
                    "p2sh20" === a ? "p2sh20-unlocking" : "p2sh32-unlocking",
                };
              }
              return o;
            };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      87075: (e, t, r) => {
        "use strict";
        var i, n;
        r.d(t, { V: () => i, Y: () => n }),
          (function (e) {
            (e.opcode = "opcode"),
              (e.variable = "variable"),
              (e.script = "script");
          })(i || (i = {})),
          (function (e) {
            (e.unknown = "unknown"),
              (e.variable = "variable"),
              (e.script = "script");
          })(n || (n = {}));
      },
      46607: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { IF: () => a, az: () => A, lr: () => o });
            const e = (e) => ({
                startColumn: e.startColumn,
                startLineNumber: e.startLineNumber,
              }),
              n = (e) => ({
                endColumn: e.endColumn,
                endLineNumber: e.endLineNumber,
              }),
              o = (
                t,
                r = {
                  endColumn: 0,
                  endLineNumber: 0,
                  startColumn: 0,
                  startLineNumber: 0,
                }
              ) => {
                const i =
                  t.length < 2
                    ? 1 === t.length
                      ? t[0]
                      : r
                    : t.reduce(
                        (t, r) => ({
                          ...(r.endLineNumber > t.endLineNumber ||
                          (r.endLineNumber === t.endLineNumber &&
                            r.endColumn > t.endColumn)
                            ? n(r)
                            : n(t)),
                          ...(r.startLineNumber < t.startLineNumber ||
                          (r.startLineNumber === t.startLineNumber &&
                            r.startColumn < t.startColumn)
                            ? e(r)
                            : e(t)),
                        }),
                        t[0]
                      );
                return { ...n(i), ...e(i) };
              },
              A = (e) =>
                e.reduce((e, t) => {
                  switch (t.type) {
                    case "error":
                      return [
                        ...e,
                        {
                          error: t.value,
                          ...(void 0 === t.missingIdentifier
                            ? {}
                            : {
                                missingIdentifier: t.missingIdentifier,
                                owningEntity: t.owningEntity,
                              }),
                          range: t.range,
                        },
                      ];
                    case "push":
                    case "evaluation":
                      return [...e, ...A(t.value)];
                    default:
                      return e;
                  }
                }, []),
              a = (e, t = "; ") =>
                `${e
                  .map(
                    (e) =>
                      `[${e.range.startLineNumber}, ${e.range.startColumn}] ${e.error}`
                  )
                  .join(t)}`;
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      97953: (e, t, r) => {
        "use strict";
        function i(e) {
          if (!(this instanceof i)) return new i(e);
          this._ = e;
        }
        r.d(t, { b: () => Q });
        const n = i.prototype;
        function o(e, t) {
          return { expected: [], furthest: -1, index: e, status: !0, value: t };
        }
        function A(e, t) {
          return {
            expected: (t = [t]),
            furthest: e,
            index: -1,
            status: !1,
            value: null,
          };
        }
        function a(e, t) {
          return t
            ? e.furthest > t.furthest
              ? e
              : {
                  expected:
                    e.furthest === t.furthest
                      ? (function (e, t) {
                          const r = {};
                          for (let t = 0; t < e.length; t++) r[e[t]] = !0;
                          for (let e = 0; e < t.length; e++) r[t[e]] = !0;
                          const i = [];
                          for (const e in r) i.push(e);
                          return i.sort(), i;
                        })(e.expected, t.expected)
                      : t.expected,
                  furthest: t.furthest,
                  index: e.index,
                  status: e.status,
                  value: e.value,
                }
            : e;
        }
        function s(e, t) {
          const r = e.slice(0, t).split("\n"),
            i = r.length;
          return { column: r[r.length - 1].length + 1, line: i, offset: t };
        }
        function c(...e) {
          const t = [].slice.call(e),
            r = t.length;
          return i(function (e, i) {
            let n;
            const A = new Array(r);
            for (let o = 0; o < r; o += 1) {
              if (((n = a(t[o]._(e, i), n)), !n.status)) return n;
              (A[o] = n.value), (i = n.index);
            }
            return a(o(i, A), n);
          });
        }
        function g(...e) {
          const t = [].slice.call(e),
            r = t.pop();
          return c.apply(null, t).map(function (e) {
            return r.apply(null, e);
          });
        }
        function l(...e) {
          const t = [].slice.call(e);
          return i(function (e, r) {
            let i;
            for (let n = 0; n < t.length; n += 1)
              if (((i = a(t[n]._(e, r), i)), i.status)) return i;
            return i;
          });
        }
        function u(e, t) {
          return h(e, t).or(p([]));
        }
        function h(e, t) {
          return g(e, t.then(e).many(), function (e, t) {
            return [e].concat(t);
          });
        }
        function I(e, t = 0) {
          const r = (function (e) {
              return RegExp(
                `^(?:${e.source})`,
                (function (e) {
                  const t = String(e);
                  return t.slice(t.lastIndexOf("/") + 1);
                })(e)
              );
            })(e),
            n = String(e);
          return i(function (e, i) {
            const a = r.exec(e.slice(i));
            if (a) {
              const e = a[0],
                r = a[t];
              return o(i + e.length, r);
            }
            return A(i, n);
          });
        }
        function p(e) {
          return i(function (t, r) {
            return o(r, e);
          });
        }
        function d(e) {
          const t = i(function (r, i) {
            return (t._ = e()._), t._(r, i);
          });
          return t;
        }
        (n.parse = function (e) {
          const t = this.skip(C)._(e, 0);
          return t.status
            ? { status: !0, value: t.value }
            : { expected: t.expected, index: s(e, t.furthest), status: !1 };
        }),
          (n.or = function (e) {
            return l(this, e);
          }),
          (n.then = function (e) {
            return c(this, e).map(function (e) {
              return e[1];
            });
          }),
          (n.many = function () {
            const e = this;
            return i(function (t, r) {
              const i = [];
              let n;
              for (;;) {
                if (((n = a(e._(t, r), n)), !n.status)) return a(o(r, i), n);
                if (r === n.index)
                  throw new Error(
                    "infinite loop detected in .many() parser --- calling .many() on a parser that can accept zero characters is usually the cause"
                  );
                (r = n.index), i.push(n.value);
              }
            });
          }),
          (n.map = function (e) {
            const t = this;
            return i(function (r, i) {
              const n = t._(r, i);
              return n.status ? a(o(n.index, e(n.value)), n) : n;
            });
          }),
          (n.skip = function (e) {
            return c(this, e).map(function (e) {
              return e[0];
            });
          }),
          (n.node = function (e) {
            return g(f, this, f, function (t, r, i) {
              return { end: i, name: e, start: t, value: r };
            });
          }),
          (n.sepBy = function (e) {
            return u(this, e);
          }),
          (n.desc = function (e) {
            e = [e];
            const t = this;
            return i(function (r, i) {
              const n = t._(r, i);
              return n.status || (n.expected = e), n;
            });
          });
        const f = i(function (e, t) {
            return o(t, s(e, t));
          }),
          C = i(function (e, t) {
            return t < e.length ? A(t, "EOF") : o(t, null);
          }),
          B = I(/\s*/u).desc("optional whitespace"),
          E = I(/\s+/u).desc("whitespace"),
          y = {
            alt: l,
            createLanguage: function (e) {
              const t = {};
              for (const r in e)
                !(function (r) {
                  t[r] = d(function () {
                    return e[r](t);
                  });
                })(r);
              return t;
            },
            index: f,
            lazy: d,
            makeFailure: A,
            makeSuccess: o,
            of: p,
            optWhitespace: B,
            regexp: I,
            sepBy: u,
            sepBy1: h,
            seq: c,
            seqMap: g,
            string: function (e) {
              const t = `'${e}'`;
              return i(function (r, i) {
                const n = i + e.length,
                  a = r.slice(i, n);
                return a === e ? o(n, a) : A(i, t);
              });
            },
            succeed: p,
            whitespace: E,
          },
          m = y.createLanguage({
            script: (e) =>
              y
                .seqMap(
                  y.optWhitespace,
                  e.expression.sepBy(y.optWhitespace),
                  y.optWhitespace,
                  (e, t) => t
                )
                .node("Script"),
            expression: (e) =>
              y.alt(
                e.comment,
                e.push,
                e.evaluation,
                e.utf8,
                e.binary,
                e.hex,
                e.bigint,
                e.identifier
              ),
            comment: (e) =>
              y.alt(e.singleLineComment, e.multiLineComment).node("Comment"),
            singleLineComment: () =>
              y.seqMap(
                y
                  .string("//")
                  .desc("the start of a single-line comment ('//')"),
                y.regexp(/[^\n]*/u),
                (e, t) => t.trim()
              ),
            multiLineComment: () =>
              y.seqMap(
                y.string("/*").desc("the start of a multi-line comment ('/*')"),
                y
                  .regexp(/[\s\S]*?\*\//u)
                  .desc("the end of this multi-line comment ('*/')"),
                (e, t) => t.slice(0, -"*/".length).trim()
              ),
            push: (e) =>
              y
                .seqMap(
                  y.string("<").desc("the start of a push statement ('<')"),
                  e.script,
                  y.string(">").desc("the end of this push statement ('>')"),
                  (e, t) => t
                )
                .node("Push"),
            evaluation: (e) =>
              y
                .seqMap(
                  y.string("$").desc("the start of an evaluation ('$')"),
                  y
                    .string("(")
                    .desc("the opening parenthesis of this evaluation ('(')"),
                  e.script,
                  y
                    .string(")")
                    .desc("the closing parenthesis of this evaluation (')')"),
                  (e, t, r) => r
                )
                .node("Evaluation"),
            identifier: () =>
              y
                .regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)
                .desc("a valid identifier")
                .node("Identifier"),
            utf8: () =>
              y
                .alt(
                  y.seqMap(
                    y.string('"').desc('a double quote (")'),
                    y.regexp(/[^"]*/u),
                    y.string('"').desc('a closing double quote (")'),
                    (e, t) => t
                  ),
                  y.seqMap(
                    y.string("'").desc("a single quote (')"),
                    y.regexp(/[^']*/u),
                    y.string("'").desc("a closing single quote (')"),
                    (e, t) => t
                  )
                )
                .node("UTF8Literal"),
            hex: () =>
              y
                .seqMap(
                  y.string("0x").desc("a hex literal ('0x...')"),
                  y
                    .regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu)
                    .desc("a valid hexadecimal string"),
                  (e, t) => t
                )
                .node("HexLiteral"),
            binary: () =>
              y
                .seqMap(
                  y.string("0b").desc("a binary literal ('0b...')"),
                  y
                    .regexp(/[01]+(?:[01_]*[01]+)*/iu)
                    .desc("a string of binary digits"),
                  (e, t) => t
                )
                .node("BinaryLiteral"),
            bigint: () =>
              y
                .regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)
                .desc("an integer literal")
                .node("BigIntLiteral"),
          }),
          Q = (e) => m.script.parse(e);
      },
      90909: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { N: () => l });
            var n = r(34684),
              o = r(69362),
              A = r(67289),
              a = r(46607),
              s = e([A, a]);
            [A, a] = s.then ? (await s)() : s;
            const c = (e) => ({ bytecode: Uint8Array.of(), range: e }),
              g = (e) =>
                void 0 !== e.error
                  ? e.error
                  : 0 !== e.controlStack.length
                  ? o.a.nonEmptyControlStack
                  : 1 === e.stack.length || o.a.requiresCleanStack,
              l = (e, t, r) => {
                const i = e.map((e) => {
                    switch (e.type) {
                      case "bytecode":
                        return { bytecode: e.value, range: e.range };
                      case "push": {
                        const i = l(e.value, t, r);
                        return {
                          bytecode: (0, A.WV)(i.bytecode),
                          ...(void 0 === i.errors
                            ? void 0
                            : { errors: i.errors }),
                          push: i,
                          range: e.range,
                        };
                      }
                      case "evaluation": {
                        if (void 0 === t || void 0 === r)
                          return {
                            errors: [
                              {
                                error:
                                  "Both a VM and a createState method are required to reduce evaluations.",
                                range: e.range,
                              },
                            ],
                            ...c(e.range),
                          };
                        const i = l(e.value, t, r);
                        if (void 0 !== i.errors)
                          return {
                            ...c(e.range),
                            errors: i.errors,
                            source: i,
                            trace: [],
                          };
                        const n = t.debug(r(i.bytecode)),
                          o = n[n.length - 1],
                          A = g(o),
                          a = o.stack[o.stack.length - 1];
                        return {
                          ...("string" == typeof A
                            ? {
                                bytecode: Uint8Array.of(),
                                errors: [
                                  {
                                    error: `Failed to reduce evaluation: ${A}`,
                                    range: e.range,
                                  },
                                ],
                              }
                            : { bytecode: a }),
                          range: e.range,
                          source: i,
                          trace: n,
                        };
                      }
                      case "comment":
                        return c(e.range);
                      case "error":
                        return {
                          errors: [
                            {
                              error: `Tried to reduce a CashAssembly script with resolution errors: ${e.value}`,
                              range: e.range,
                            },
                          ],
                          ...c(e.range),
                        };
                      default:
                        throw new Error(
                          `"${e.type}" is not a known segment type.`
                        );
                    }
                  }),
                  o = i.reduce(
                    (e, t) => ({
                      bytecode: [...e.bytecode, t.bytecode],
                      ranges: [...e.ranges, t.range],
                      ...(void 0 !== e.errors || void 0 !== t.errors
                        ? {
                            errors: [
                              ...(void 0 === e.errors ? [] : e.errors),
                              ...(void 0 === t.errors ? [] : t.errors),
                            ],
                          }
                        : void 0),
                    }),
                    { bytecode: [], ranges: [] }
                  );
                return {
                  ...(void 0 === o.errors ? void 0 : { errors: o.errors }),
                  bytecode: (0, n.kg)(o.bytecode),
                  range: (0, a.lr)(
                    o.ranges,
                    0 === e.length ? void 0 : e[0].range
                  ),
                  script: i,
                };
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      1365: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Pq: () => E, kZ: () => m, pI: () => y });
            var n = r(98378),
              o = r(34684),
              A = r(43137),
              a = r(85671),
              s = r(87075),
              c = r(46607),
              g = r(97953),
              l = r(90909),
              u = e([a, c, l]);
            [a, c, l] = u.then ? (await u)() : u;
            const I = (e) => ({
                endColumn: e.end.column,
                endLineNumber: e.end.line,
                startColumn: e.start.column,
                startLineNumber: e.start.line,
              }),
              p = (e) => e.replace(/_/gu, ""),
              d = (e, t) => {
                const r = e.value.map((e) => {
                  const r = I(e);
                  switch (e.name) {
                    case "Identifier": {
                      const i = e.value,
                        n = t(i);
                      return n.status
                        ? {
                            range: r,
                            type: "bytecode",
                            value: n.bytecode,
                            ...(n.type === s.V.opcode
                              ? { opcode: i }
                              : n.type === s.V.variable
                              ? {
                                  ...("debug" in n ? { debug: n.debug } : {}),
                                  ...("signature" in n
                                    ? { signature: n.signature }
                                    : {}),
                                  variable: i,
                                }
                              : n.type === s.V.script
                              ? { script: i, source: n.source }
                              : { unknown: i }),
                          }
                        : {
                            ...("debug" in n ? { debug: n.debug } : {}),
                            ...("recoverable" in n && n.recoverable
                              ? {
                                  missingIdentifier: i,
                                  owningEntity: n.entityOwnership,
                                }
                              : {}),
                            range: r,
                            type: "error",
                            value: n.error,
                          };
                    }
                    case "Push":
                      return { range: r, type: "push", value: d(e.value, t) };
                    case "Evaluation":
                      return {
                        range: r,
                        type: "evaluation",
                        value: d(e.value, t),
                      };
                    case "BigIntLiteral":
                      return {
                        literal: e.value,
                        literalType: "BigIntLiteral",
                        range: r,
                        type: "bytecode",
                        value: (0, a.qR)(BigInt(p(e.value))),
                      };
                    case "BinaryLiteral":
                      return {
                        literal: e.value,
                        literalType: "BinaryLiteral",
                        range: r,
                        type: "bytecode",
                        value: (0, n.SD)(p(e.value)),
                      };
                    case "HexLiteral":
                      return {
                        literal: e.value,
                        literalType: "HexLiteral",
                        range: r,
                        type: "bytecode",
                        value: (0, o.kW)(p(e.value)),
                      };
                    case "UTF8Literal":
                      return {
                        literal: e.value,
                        literalType: "UTF8Literal",
                        range: r,
                        type: "bytecode",
                        value: (0, A.L)(e.value),
                      };
                    case "Comment":
                      return { range: r, type: "comment", value: e.value };
                    default:
                      return {
                        range: r,
                        type: "error",
                        value: `Unrecognized segment: ${e.name}`,
                      };
                  }
                });
                return 0 === r.length
                  ? [{ range: I(e), type: "comment", value: "" }]
                  : r;
              };
            var h;
            !(function (e) {
              (e.currentBlockTime = "current_block_time"),
                (e.currentBlockHeight = "current_block_height"),
                (e.signingSerialization = "signing_serialization");
            })(h || (h = {}));
            const f = ({
                data: e,
                configuration: t,
                identifier: r,
                matchingOperations: i,
                operationExample: n = "operation_identifier",
                operationId: o,
                variableId: A,
                variableType: a,
              }) => {
                if (void 0 === i)
                  return {
                    error: `The "${A}" variable type can not be resolved because the "${a}" operation has not been included in this compiler's CompilationEnvironment.`,
                    status: "error",
                  };
                if ("function" == typeof i) return i(r, e, t);
                if (void 0 === o)
                  return {
                    error: `This "${A}" variable could not be resolved because this compiler's "${a}" operations require an operation identifier, e.g. '${A}.${n}'.`,
                    status: "error",
                  };
                const s = i[o];
                return void 0 === s
                  ? {
                      error: `The identifier "${r}" could not be resolved because the "${A}.${o}" operation is not available to this compiler.`,
                      status: "error",
                    }
                  : s(r, e, t);
              },
              C = ({ data: e, configuration: t, identifier: r }) => {
                const [i, n] = r.split(".");
                switch (i) {
                  case h.currentBlockHeight:
                    return f({
                      configuration: t,
                      data: e,
                      identifier: r,
                      matchingOperations: t.operations?.currentBlockHeight,
                      operationId: n,
                      variableId: i,
                      variableType: "currentBlockHeight",
                    });
                  case h.currentBlockTime:
                    return f({
                      configuration: t,
                      data: e,
                      identifier: r,
                      matchingOperations: t.operations?.currentBlockTime,
                      operationId: n,
                      variableId: i,
                      variableType: "currentBlockTime",
                    });
                  case h.signingSerialization:
                    return f({
                      configuration: t,
                      data: e,
                      identifier: r,
                      matchingOperations: t.operations?.signingSerialization,
                      operationExample: "version",
                      operationId: n,
                      variableId: i,
                      variableType: "signingSerialization",
                    });
                  default: {
                    const o = t.variables?.[i];
                    return void 0 === o
                      ? { status: "skip" }
                      : f({
                          configuration: t,
                          data: e,
                          identifier: r,
                          operationId: n,
                          variableId: i,
                          ...{
                            AddressData: {
                              matchingOperations: t.operations?.addressData,
                              variableType: "addressData",
                            },
                            HdKey: {
                              matchingOperations: t.operations?.hdKey,
                              operationExample: "public_key",
                              variableType: "hdKey",
                            },
                            Key: {
                              matchingOperations: t.operations?.key,
                              operationExample: "public_key",
                              variableType: "key",
                            },
                            WalletData: {
                              matchingOperations: t.operations?.walletData,
                              variableType: "walletData",
                            },
                          }[o.type],
                        });
                  }
                }
              },
              B = (e) => {
                const t = e.filter((e) => "EOF" !== e);
                t.length !== e.length && t.push("the end of the script");
                const r = t.slice(0, t.length - 1),
                  i = t[t.length - 1];
                return `Encountered unexpected input while parsing script. Expected ${
                  t.length >= 3
                    ? r.join(", ").concat(`, or ${i}`)
                    : 2 === t.length
                    ? t.join(" or ")
                    : i
                }.`;
              },
              E = () => ({
                endColumn: 0,
                endLineNumber: 0,
                startColumn: 0,
                startLineNumber: 0,
              }),
              y = ({ data: e, configuration: t, scriptId: r }) => {
                const i = t.scripts[r];
                if (void 0 === i)
                  return {
                    errorType: "parse",
                    errors: [
                      {
                        error: `No script with an ID of "${r}" was provided in the compiler configuration.`,
                        range: E(),
                      },
                    ],
                    success: !1,
                  };
                if (!0 === t.sourceScriptIds?.includes(r))
                  return {
                    errorType: "parse",
                    errors: [
                      {
                        error: `A circular dependency was encountered: script "${r}" relies on itself to be generated. (Source scripts: ${t.sourceScriptIds.join(
                          " → "
                        )})`,
                        range: E(),
                      },
                    ],
                    success: !1,
                  };
                const n =
                  void 0 === t.sourceScriptIds
                    ? [r]
                    : [...t.sourceScriptIds, r];
                return v({
                  configuration: { ...t, sourceScriptIds: n },
                  data: e,
                  script: i,
                });
              },
              m = ({ data: e, configuration: t, identifier: r }) => {
                if (void 0 === t.scripts[r]) return !1;
                const i = y({ configuration: t, data: e, scriptId: r });
                return i.success
                  ? i
                  : `Compilation error in resolved script "${r}": ${(0, c.IF)(
                      i.errors
                    )}`;
              },
              Q =
                ({ data: e, configuration: t }) =>
                (r) => {
                  const i = t.opcodes?.[r];
                  if (void 0 !== i)
                    return { bytecode: i, status: !0, type: s.V.opcode };
                  const n = C({ configuration: t, data: e, identifier: r });
                  if ("skip" !== n.status)
                    return "error" === n.status
                      ? {
                          ...("debug" in n ? { debug: n.debug } : {}),
                          error: n.error,
                          ...(void 0 === t.entityOwnership
                            ? {}
                            : {
                                entityOwnership:
                                  t.entityOwnership[r.split(".")[0]],
                              }),
                          recoverable: "recoverable" in n,
                          status: !1,
                          type: s.Y.variable,
                        }
                      : {
                          ...("debug" in n ? { debug: n.debug } : {}),
                          bytecode: n.bytecode,
                          ...("signature" in n
                            ? { signature: n.signature }
                            : {}),
                          status: !0,
                          type: s.V.variable,
                        };
                  const o = m({ configuration: t, data: e, identifier: r });
                  return !1 !== o
                    ? "string" == typeof o
                      ? { error: o, scriptId: r, status: !1, type: s.Y.script }
                      : {
                          bytecode: o.bytecode,
                          source: o.resolve,
                          status: !0,
                          type: s.V.script,
                        }
                    : {
                        error: `Unknown identifier "${r}".`,
                        status: !1,
                        type: s.Y.unknown,
                      };
                },
              v = ({ data: e, configuration: t, script: r }) => {
                const i = (0, g.b)(r);
                if (!i.status)
                  return {
                    errorType: "parse",
                    errors: [
                      {
                        error: B(i.expected),
                        range: {
                          endColumn: i.index.column,
                          endLineNumber: i.index.line,
                          startColumn: i.index.column,
                          startLineNumber: i.index.line,
                        },
                      },
                    ],
                    success: !1,
                  };
                const n = Q({ configuration: t, data: e }),
                  o = d(i.value, n),
                  A = (0, c.az)(o);
                if (0 !== A.length)
                  return {
                    errorType: "resolve",
                    errors: A,
                    parse: i.value,
                    resolve: o,
                    success: !1,
                  };
                const a = (0, l.N)(o, t.vm, t.createAuthenticationProgram);
                return {
                  ...(void 0 === a.errors
                    ? { bytecode: a.bytecode, success: !0 }
                    : { errorType: "reduce", errors: a.errors, success: !1 }),
                  parse: i.value,
                  reduce: a,
                  resolve: o,
                };
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      45390: (e, t, r) => {
        "use strict";
        r.d(t, {
          P$: () => g,
          aB: () => s,
          dv: () => h,
          sB: () => A,
          xF: () => u,
        });
        var i,
          n = r(10377),
          o = r(78997);
        !(function (e) {
          e.insufficientLength = "Error reading bytes: insufficient length.";
        })(i || (i = {}));
        const A = (e) => (t) => {
          const r = { bin: t.bin, index: t.index + e },
            o = t.bin.slice(t.index, r.index);
          return o.length !== e
            ? (0, n.Z)(i.insufficientLength, `Provided length: ${o.length}`)
            : { position: r, result: o };
        };
        var a;
        !(function (e) {
          e.insufficientBytes = "Error reading Uint32LE: requires 4 bytes.";
        })(a || (a = {}));
        const s = (e) => {
          const t = { bin: e.bin, index: e.index + 4 },
            r = e.bin.subarray(e.index, t.index);
          return 4 !== r.length
            ? (0, n.Z)(a.insufficientBytes, `Provided length: ${r.length}`)
            : { position: t, result: (0, o.op)(r) };
        };
        var c;
        !(function (e) {
          e.insufficientBytes = "Error reading Uint64LE: requires 8 bytes.";
        })(c || (c = {}));
        const g = (e) => {
          const t = { bin: e.bin, index: e.index + 8 },
            r = e.bin.subarray(e.index, t.index);
          return 8 !== r.length
            ? (0, n.Z)(c.insufficientBytes, `Provided length: ${r.length}`)
            : { position: t, result: (0, o.RN)(r) };
        };
        var l;
        !(function (e) {
          (e.invalidCompactSize =
            "Error reading CompactSize-prefixed bin: invalid CompactSize."),
            (e.insufficientBytes =
              "Error reading CompactSize-prefixed bin: insufficient bytes.");
        })(l || (l = {}));
        const u = (e) => {
            const t = (0, o.Z2)(e);
            if ("string" == typeof t) return (0, n.Z)(l.invalidCompactSize, t);
            const { result: r, position: i } = t,
              A = Number(r),
              a = { bin: e.bin, index: i.index + A },
              s = e.bin.slice(i.index, a.index);
            return s.length !== A
              ? (0, n.Z)(
                  l.insufficientBytes,
                  `Required bytes: ${A}, remaining bytes: ${s.length}`
                )
              : { position: a, result: s };
          },
          h = (e) => {
            const t = { bin: e.bin, index: e.bin.length };
            return { position: t, result: e.bin.subarray(e.index, t.index) };
          };
      },
      30861: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              Hg: () => x,
              Hs: () => O,
              Mz: () => k,
              SC: () => N,
              Sx: () => T,
              _w: () => m,
              c8: () => b,
              jm: () => D,
              nY: () => P,
              vy: () => Q,
            });
            var n = r(34684),
              o = r(78997),
              A = r(52477),
              a = r(10377),
              s = r(45390),
              c = r(14548);
            const e = (e) =>
              (0, n.kg)([
                e.outpointTransactionHash.slice().reverse(),
                (0, o.UC)(e.outpointIndex),
                (0, o.us)(BigInt(e.unlockingBytecode.length)),
                e.unlockingBytecode,
                (0, o.UC)(e.sequenceNumber),
              ]);
            var g;
            !(function (e) {
              (e.transaction = "Error reading transaction."),
                (e.endsWithUnexpectedBytes =
                  "Error decoding transaction: the provided input includes unexpected bytes after the encoded transaction."),
                (e.input = "Error reading transaction input."),
                (e.inputs = "Error reading transaction inputs."),
                (e.output = "Error reading transaction output."),
                (e.outputs = "Error reading transaction outputs."),
                (e.lockingBytecodeLength =
                  "Error reading locking bytecode length.");
            })(g || (g = {}));
            const u = (e) => {
                const t = (0, A.go)(e, [(0, s.sB)(32), s.aB, s.xF, s.aB]);
                if ("string" == typeof t) return (0, a.Z)(g.input, t);
                const {
                  position: r,
                  result: [i, n, o, c],
                } = t;
                return {
                  position: r,
                  result: {
                    outpointIndex: n,
                    outpointTransactionHash: i.reverse(),
                    sequenceNumber: c,
                    unlockingBytecode: o,
                  },
                };
              },
              h = (t) => (0, n.kg)([(0, o.us)(BigInt(t.length)), ...t.map(e)]),
              I = (e) => {
                const t = (0, A.zR)(e, u);
                return "string" == typeof t ? (0, a.Z)(g.inputs, t) : t;
              },
              p = 9223372036854775807n,
              d = [c.c.none, c.c.mutable, c.c.minting],
              f = { [c.c.none]: 0, [c.c.mutable]: 1, [c.c.minting]: 2 };
            var l;
            !(function (e) {
              (e.invalidPrefix = "Error reading token prefix."),
                (e.insufficientLength =
                  "Invalid token prefix: insufficient length."),
                (e.reservedBit = "Invalid token prefix: reserved bit is set."),
                (e.invalidCapability =
                  "Invalid token prefix: capability must be none (0), mutable (1), or minting (2)."),
                (e.commitmentWithoutNft =
                  "Invalid token prefix: commitment requires an NFT."),
                (e.capabilityWithoutNft =
                  "Invalid token prefix: capability requires an NFT."),
                (e.commitmentLengthZero =
                  "Invalid token prefix: if encoded, commitment length must be greater than 0."),
                (e.invalidCommitment =
                  "Invalid token prefix: invalid non-fungible token commitment."),
                (e.invalidAmountEncoding =
                  "Invalid token prefix: invalid fungible token amount encoding."),
                (e.zeroAmount =
                  "Invalid token prefix: if encoded, fungible token amount must be greater than 0."),
                (e.excessiveAmount =
                  "Invalid token prefix: exceeds maximum fungible token amount of 9223372036854775807."),
                (e.noTokens =
                  "Invalid token prefix: must encode at least one token.");
            })(l || (l = {}));
            const C = (e) => {
                const t = (0, o.Z2)(e);
                return "string" == typeof t
                  ? (0, a.Z)(l.invalidAmountEncoding, t)
                  : t.result > p
                  ? (0, a.Z)(l.excessiveAmount, `Encoded amount: ${t.result}`)
                  : 0n === t.result
                  ? (0, a.Z)(l.zeroAmount)
                  : t;
              },
              B = (e) => {
                const { bin: t, index: r } = e;
                if (239 !== t[r]) return { position: e, result: {} };
                if (t.length < r + 34)
                  return (0, a.Z)(
                    l.insufficientLength,
                    "The minimum possible length is 34. Missing bytes: " +
                      (34 - (t.length - r))
                  );
                const i = t.slice(r + 1, r + 33).reverse(),
                  n = t[r + 33],
                  o = 240 & n;
                if (0 != (128 & o))
                  return (0, a.Z)(
                    l.reservedBit,
                    `Bitfield: 0b${n.toString(2)}`
                  );
                const A = 15 & n;
                if (A > 2)
                  return (0, a.Z)(
                    l.invalidCapability,
                    `Capability value: ${A}`
                  );
                const g = d[A],
                  u = 0 != (32 & o),
                  h = 0 != (64 & o);
                if (h && !u)
                  return (0, a.Z)(
                    l.commitmentWithoutNft,
                    `Bitfield: 0b${n.toString(2)}`
                  );
                const I = 0 != (16 & o),
                  p = { bin: t, index: r + 33 + 1 };
                if (u) {
                  const e = h
                    ? (0, s.xF)(p)
                    : { position: p, result: Uint8Array.of() };
                  if ("string" == typeof e)
                    return (0, a.Z)(l.invalidCommitment, e);
                  if (h && 0 === e.result.length)
                    return (0, a.Z)(l.commitmentLengthZero);
                  const t = I
                    ? C(e.position)
                    : { position: e.position, result: 0n };
                  return "string" == typeof t
                    ? t
                    : {
                        position: t.position,
                        result: {
                          token: {
                            amount: t.result,
                            category: i,
                            nft: { capability: g, commitment: e.result },
                          },
                        },
                      };
                }
                if (g !== c.c.none)
                  return (0, a.Z)(
                    l.capabilityWithoutNft,
                    `Bitfield: 0b${n.toString(2)}`
                  );
                if (!I)
                  return (0, a.Z)(l.noTokens, `Bitfield: 0b${n.toString(2)}`);
                const f = C(p);
                return "string" == typeof f
                  ? f
                  : {
                      position: f.position,
                      result: { token: { amount: f.result, category: i } },
                    };
              },
              E = (e) => {
                const t = (0, s.xF)(e);
                if ("string" == typeof t)
                  return (0, a.Z)(g.lockingBytecodeLength, t);
                const { result: r, position: i } = t,
                  n = (0, A.go)({ bin: r, index: 0 }, [B, s.dv]);
                if ("string" == typeof n) return (0, a.Z)(l.invalidPrefix, n);
                const {
                  result: [{ token: o }, c],
                } = n;
                return {
                  position: i,
                  result: {
                    lockingBytecode: c,
                    ...(void 0 === o ? {} : { token: o }),
                  },
                };
              },
              y = (e) => {
                const t = (0, A.go)(e, [s.P$, E]);
                if ("string" == typeof t) return (0, a.Z)(g.output, t);
                const {
                  position: r,
                  result: [i, { lockingBytecode: n, token: o }],
                } = t;
                return {
                  position: r,
                  result: {
                    lockingBytecode: n,
                    ...(void 0 === o ? {} : { token: o }),
                    valueSatoshis: i,
                  },
                };
              },
              m = (e) => {
                if (void 0 === e || (void 0 === e.nft && e.amount < 1n))
                  return Uint8Array.of();
                const t = void 0 === e.nft ? 0 : 32,
                  r = void 0 === e.nft ? 0 : f[e.nft.capability],
                  i = void 0 !== e.nft && e.nft.commitment.length > 0 ? 64 : 0,
                  A = e.amount > 0n ? 16 : 0,
                  a = t | i | A | r;
                return (0, n.kg)([
                  Uint8Array.of(239),
                  e.category.slice().reverse(),
                  Uint8Array.of(a),
                  ...(0 === i
                    ? []
                    : [
                        (0, o.us)(BigInt(e.nft.commitment.length)),
                        e.nft.commitment,
                      ]),
                  ...(0 === A ? [] : [(0, o.us)(e.amount)]),
                ]);
              },
              Q = (e) => {
                const t = (0, n.kg)([m(e.token), e.lockingBytecode]);
                return (0, n.kg)([
                  (0, o.dd)(e.valueSatoshis),
                  (0, o.us)(BigInt(t.length)),
                  t,
                ]);
              },
              v = (e) => {
                const t = (0, A.zR)(e, y);
                return "string" == typeof t ? (0, a.Z)(g.outputs, t) : t;
              },
              S = (e) => (0, n.kg)([(0, o.us)(BigInt(e.length)), ...e.map(Q)]),
              w = (e) => {
                const t = (0, A.go)(e, [s.aB, I, v, s.aB]);
                if ("string" == typeof t) return (0, a.Z)(g.transaction, t);
                const {
                  position: r,
                  result: [i, n, o, c],
                } = t;
                return {
                  position: r,
                  result: { inputs: n, locktime: c, outputs: o, version: i },
                };
              },
              b = (e) => {
                const t = w({ bin: e, index: 0 });
                return "string" == typeof t
                  ? t
                  : t.position.index !== e.length
                  ? (0, a.Z)(
                      g.endsWithUnexpectedBytes,
                      `Encoded transaction ends at index ${
                        t.position.index - 1
                      }, leaving ${
                        e.length - t.position.index
                      } remaining bytes.`
                    )
                  : t.result;
              },
              k = (e) =>
                (0, n.kg)([
                  (0, o.UC)(e.version),
                  h(e.inputs),
                  S(e.outputs),
                  (0, o.UC)(e.locktime),
                ]),
              N = k,
              _ = (e) =>
                e.map((e) => ({
                  outpointIndex: e.outpointIndex,
                  outpointTransactionHash: e.outpointTransactionHash.slice(),
                  sequenceNumber: e.sequenceNumber,
                  unlockingBytecode: e.unlockingBytecode.slice(),
                })),
              D = (e) =>
                e.map((e) => ({
                  lockingBytecode: e.lockingBytecode.slice(),
                  ...(void 0 === e.token
                    ? {}
                    : {
                        token: {
                          amount: e.token.amount,
                          category: e.token.category.slice(),
                          ...(void 0 === e.token.nft
                            ? {}
                            : {
                                nft: {
                                  capability: e.token.nft.capability,
                                  commitment: e.token.nft.commitment.slice(),
                                },
                              }),
                        },
                      }),
                  valueSatoshis: e.valueSatoshis,
                })),
              O = (e) => ({
                inputs: _(e.inputs),
                locktime: e.locktime,
                outputs: D(e.outputs),
                version: e.version,
              }),
              T = (e) =>
                (0, n.kg)(
                  e.map((e) =>
                    (0, n.kg)([
                      e.outpointTransactionHash.slice().reverse(),
                      (0, o.UC)(e.outpointIndex),
                    ])
                  )
                ),
              P = (e) => (0, n.kg)(e.map(Q)),
              x = (e) => (0, n.kg)(e.map((e) => (0, o.UC)(e.sequenceNumber)));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      14548: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { c: () => i }),
          (function (e) {
            (e.none = "none"), (e.mutable = "mutable"), (e.minting = "minting");
          })(i || (i = {})),
          Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);
      },
      2783: (e, t, r) => {
        "use strict";
        r.d(t, { d: () => B });
        const i = function e(
            t,
            {
              instancePath: r = "",
              parentData: i,
              parentDataProperty: n,
              rootData: o = t,
            } = {}
          ) {
            let A = null,
              a = 0;
            return (
              C(t, {
                instancePath: r,
                parentData: i,
                parentDataProperty: n,
                rootData: o,
              }) ||
                ((A = null === A ? C.errors : A.concat(C.errors)),
                (a = A.length)),
              (e.errors = A),
              0 === a
            );
          },
          n = {
            additionalProperties: !1,
            properties: {
              lockingType: {
                description:
                  'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\n\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 "redeem script" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\n\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the "redeem script" transformation.)\n\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.',
                enum: ["p2sh20", "p2sh32", "standard"],
                type: "string",
              },
              name: {
                description:
                  "A single-line, human-readable name for this script (for use in user interfaces).",
                type: "string",
              },
              script: {
                description: "The script definition in CashAssembly.",
                type: "string",
              },
            },
            required: ["lockingType", "script"],
            type: "object",
          },
          o = {
            additionalProperties: !1,
            properties: {
              ageLock: {
                description:
                  'TODO: not yet implemented\n\nThe minimum input age required for this unlocking script to become valid.\n\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the "type bit" and the 2-byte "value" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\n\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains "age-locked" can be displayed in user interfaces (by parsing the "type bit" and "value" as described in BIP68).\n\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',
                type: "string",
              },
              estimate: {
                description:
                  'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\n\nUsing estimate scenarios, it\'s possible for wallet software to compute an "estimated transaction", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\'s change output(s). Because estimate scenarios provide "estimated" values for all variables, this estimation can be done by a single entity without input from other entities.\n\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `AuthenticationTemplateScenario.extends` for details.',
                type: "string",
              },
              fails: {
                description:
                  "A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\n\nThese scenarios can be used to test this script in development and review.",
                items: { type: "string" },
                type: "array",
              },
              invalid: {
                description:
                  "A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\n\nThese scenarios can be used to test this script in development and review.",
                items: { type: "string" },
                type: "array",
              },
              name: {
                description:
                  "A single-line, human-readable name for this script (for use in user interfaces).",
                type: "string",
              },
              passes: {
                description:
                  "A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\n\nThese scenarios can be used to test this script in development and review.",
                items: { type: "string" },
                type: "array",
              },
              script: {
                description: "The script definition in CashAssembly.",
                type: "string",
              },
              timeLockType: {
                description:
                  "The expected type of time locks in this script.\n\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\n\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\n\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\n\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\n\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.",
                enum: ["height", "timestamp"],
                type: "string",
              },
              unlocks: {
                description:
                  "The identifier of the script that can be unlocked by this script.\n\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.",
                type: "string",
              },
            },
            required: ["script", "unlocks"],
            type: "object",
          },
          A = {
            description:
              "Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\n\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.",
            enum: [
              "BCH_2020_05",
              "BCH_2021_05",
              "BCH_2022_05",
              "BCH_2023_05",
              "BCH_SPEC",
              "BSV_2020_02",
              "BSV_SPEC",
              "BTC_2017_08",
              "BTC_SPEC",
              "XEC_2020_05",
              "XEC_SPEC",
            ],
            type: "string",
          };
        function a(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          const s = A;
          let c = !1;
          const g = A;
          if (A == A)
            if (e && "object" == typeof e && !Array.isArray(e)) {
              let r;
              if (void 0 === e.type && (r = "type")) {
                const e = {
                  instancePath: t,
                  schemaPath:
                    "#/definitions/AuthenticationTemplateAddressData/required",
                  keyword: "required",
                  params: { missingProperty: r },
                  message: "must have required property '" + r + "'",
                };
                null === o ? (o = [e]) : o.push(e), A++;
              } else {
                const r = A;
                for (const r in e)
                  if ("description" !== r && "name" !== r && "type" !== r) {
                    const e = {
                      instancePath: t,
                      schemaPath:
                        "#/definitions/AuthenticationTemplateAddressData/additionalProperties",
                      keyword: "additionalProperties",
                      params: { additionalProperty: r },
                      message: "must NOT have additional properties",
                    };
                    null === o ? (o = [e]) : o.push(e), A++;
                    break;
                  }
                if (r === A) {
                  if (void 0 !== e.description) {
                    const r = A;
                    if ("string" != typeof e.description) {
                      const e = {
                        instancePath: t + "/description",
                        schemaPath:
                          "#/definitions/AuthenticationTemplateAddressData/properties/description/type",
                        keyword: "type",
                        params: { type: "string" },
                        message: "must be string",
                      };
                      null === o ? (o = [e]) : o.push(e), A++;
                    }
                    var l = r === A;
                  } else l = !0;
                  if (l) {
                    if (void 0 !== e.name) {
                      const r = A;
                      if ("string" != typeof e.name) {
                        const e = {
                          instancePath: t + "/name",
                          schemaPath:
                            "#/definitions/AuthenticationTemplateAddressData/properties/name/type",
                          keyword: "type",
                          params: { type: "string" },
                          message: "must be string",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                      l = r === A;
                    } else l = !0;
                    if (l)
                      if (void 0 !== e.type) {
                        let r = e.type;
                        const i = A;
                        if ("string" != typeof r) {
                          const e = {
                            instancePath: t + "/type",
                            schemaPath:
                              "#/definitions/AuthenticationTemplateAddressData/properties/type/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        }
                        if ("AddressData" !== r) {
                          const e = {
                            instancePath: t + "/type",
                            schemaPath:
                              "#/definitions/AuthenticationTemplateAddressData/properties/type/const",
                            keyword: "const",
                            params: { allowedValue: "AddressData" },
                            message: "must be equal to constant",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        }
                        l = i === A;
                      } else l = !0;
                  }
                }
              }
            } else {
              const e = {
                instancePath: t,
                schemaPath:
                  "#/definitions/AuthenticationTemplateAddressData/type",
                keyword: "type",
                params: { type: "object" },
                message: "must be object",
              };
              null === o ? (o = [e]) : o.push(e), A++;
            }
          var u = g === A;
          if (((c = c || u), !c)) {
            const r = A;
            if (A == A)
              if (e && "object" == typeof e && !Array.isArray(e)) {
                let r;
                if (void 0 === e.type && (r = "type")) {
                  const e = {
                    instancePath: t,
                    schemaPath:
                      "#/definitions/AuthenticationTemplateHdKey/required",
                    keyword: "required",
                    params: { missingProperty: r },
                    message: "must have required property '" + r + "'",
                  };
                  null === o ? (o = [e]) : o.push(e), A++;
                } else {
                  const r = A;
                  for (const r in e)
                    if (
                      "addressOffset" !== r &&
                      "description" !== r &&
                      "hdPublicKeyDerivationPath" !== r &&
                      "name" !== r &&
                      "privateDerivationPath" !== r &&
                      "publicDerivationPath" !== r &&
                      "type" !== r
                    ) {
                      const e = {
                        instancePath: t,
                        schemaPath:
                          "#/definitions/AuthenticationTemplateHdKey/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      };
                      null === o ? (o = [e]) : o.push(e), A++;
                      break;
                    }
                  if (r === A) {
                    if (void 0 !== e.addressOffset) {
                      let r = e.addressOffset;
                      const i = A;
                      if ("number" != typeof r || !isFinite(r)) {
                        const e = {
                          instancePath: t + "/addressOffset",
                          schemaPath:
                            "#/definitions/AuthenticationTemplateHdKey/properties/addressOffset/type",
                          keyword: "type",
                          params: { type: "number" },
                          message: "must be number",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                      var h = i === A;
                    } else h = !0;
                    if (h) {
                      if (void 0 !== e.description) {
                        const r = A;
                        if ("string" != typeof e.description) {
                          const e = {
                            instancePath: t + "/description",
                            schemaPath:
                              "#/definitions/AuthenticationTemplateHdKey/properties/description/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        }
                        h = r === A;
                      } else h = !0;
                      if (h) {
                        if (void 0 !== e.hdPublicKeyDerivationPath) {
                          const r = A;
                          if ("string" != typeof e.hdPublicKeyDerivationPath) {
                            const e = {
                              instancePath: t + "/hdPublicKeyDerivationPath",
                              schemaPath:
                                "#/definitions/AuthenticationTemplateHdKey/properties/hdPublicKeyDerivationPath/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            };
                            null === o ? (o = [e]) : o.push(e), A++;
                          }
                          h = r === A;
                        } else h = !0;
                        if (h) {
                          if (void 0 !== e.name) {
                            const r = A;
                            if ("string" != typeof e.name) {
                              const e = {
                                instancePath: t + "/name",
                                schemaPath:
                                  "#/definitions/AuthenticationTemplateHdKey/properties/name/type",
                                keyword: "type",
                                params: { type: "string" },
                                message: "must be string",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            h = r === A;
                          } else h = !0;
                          if (h) {
                            if (void 0 !== e.privateDerivationPath) {
                              const r = A;
                              if ("string" != typeof e.privateDerivationPath) {
                                const e = {
                                  instancePath: t + "/privateDerivationPath",
                                  schemaPath:
                                    "#/definitions/AuthenticationTemplateHdKey/properties/privateDerivationPath/type",
                                  keyword: "type",
                                  params: { type: "string" },
                                  message: "must be string",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              }
                              h = r === A;
                            } else h = !0;
                            if (h) {
                              if (void 0 !== e.publicDerivationPath) {
                                const r = A;
                                if ("string" != typeof e.publicDerivationPath) {
                                  const e = {
                                    instancePath: t + "/publicDerivationPath",
                                    schemaPath:
                                      "#/definitions/AuthenticationTemplateHdKey/properties/publicDerivationPath/type",
                                    keyword: "type",
                                    params: { type: "string" },
                                    message: "must be string",
                                  };
                                  null === o ? (o = [e]) : o.push(e), A++;
                                }
                                h = r === A;
                              } else h = !0;
                              if (h)
                                if (void 0 !== e.type) {
                                  let r = e.type;
                                  const i = A;
                                  if ("string" != typeof r) {
                                    const e = {
                                      instancePath: t + "/type",
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateHdKey/properties/type/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    };
                                    null === o ? (o = [e]) : o.push(e), A++;
                                  }
                                  if ("HdKey" !== r) {
                                    const e = {
                                      instancePath: t + "/type",
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateHdKey/properties/type/const",
                                      keyword: "const",
                                      params: { allowedValue: "HdKey" },
                                      message: "must be equal to constant",
                                    };
                                    null === o ? (o = [e]) : o.push(e), A++;
                                  }
                                  h = i === A;
                                } else h = !0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              } else {
                const e = {
                  instancePath: t,
                  schemaPath: "#/definitions/AuthenticationTemplateHdKey/type",
                  keyword: "type",
                  params: { type: "object" },
                  message: "must be object",
                };
                null === o ? (o = [e]) : o.push(e), A++;
              }
            if (((u = r === A), (c = c || u), !c)) {
              const r = A;
              if (A == A)
                if (e && "object" == typeof e && !Array.isArray(e)) {
                  let r;
                  if (void 0 === e.type && (r = "type")) {
                    const e = {
                      instancePath: t,
                      schemaPath:
                        "#/definitions/AuthenticationTemplateKey/required",
                      keyword: "required",
                      params: { missingProperty: r },
                      message: "must have required property '" + r + "'",
                    };
                    null === o ? (o = [e]) : o.push(e), A++;
                  } else {
                    const r = A;
                    for (const r in e)
                      if ("description" !== r && "name" !== r && "type" !== r) {
                        const e = {
                          instancePath: t,
                          schemaPath:
                            "#/definitions/AuthenticationTemplateKey/additionalProperties",
                          keyword: "additionalProperties",
                          params: { additionalProperty: r },
                          message: "must NOT have additional properties",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                        break;
                      }
                    if (r === A) {
                      if (void 0 !== e.description) {
                        const r = A;
                        if ("string" != typeof e.description) {
                          const e = {
                            instancePath: t + "/description",
                            schemaPath:
                              "#/definitions/AuthenticationTemplateKey/properties/description/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        }
                        var I = r === A;
                      } else I = !0;
                      if (I) {
                        if (void 0 !== e.name) {
                          const r = A;
                          if ("string" != typeof e.name) {
                            const e = {
                              instancePath: t + "/name",
                              schemaPath:
                                "#/definitions/AuthenticationTemplateKey/properties/name/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            };
                            null === o ? (o = [e]) : o.push(e), A++;
                          }
                          I = r === A;
                        } else I = !0;
                        if (I)
                          if (void 0 !== e.type) {
                            let r = e.type;
                            const i = A;
                            if ("string" != typeof r) {
                              const e = {
                                instancePath: t + "/type",
                                schemaPath:
                                  "#/definitions/AuthenticationTemplateKey/properties/type/type",
                                keyword: "type",
                                params: { type: "string" },
                                message: "must be string",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            if ("Key" !== r) {
                              const e = {
                                instancePath: t + "/type",
                                schemaPath:
                                  "#/definitions/AuthenticationTemplateKey/properties/type/const",
                                keyword: "const",
                                params: { allowedValue: "Key" },
                                message: "must be equal to constant",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            I = i === A;
                          } else I = !0;
                      }
                    }
                  }
                } else {
                  const e = {
                    instancePath: t,
                    schemaPath: "#/definitions/AuthenticationTemplateKey/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  };
                  null === o ? (o = [e]) : o.push(e), A++;
                }
              if (((u = r === A), (c = c || u), !c)) {
                const r = A;
                if (A == A)
                  if (e && "object" == typeof e && !Array.isArray(e)) {
                    let r;
                    if (void 0 === e.type && (r = "type")) {
                      const e = {
                        instancePath: t,
                        schemaPath:
                          "#/definitions/AuthenticationTemplateWalletData/required",
                        keyword: "required",
                        params: { missingProperty: r },
                        message: "must have required property '" + r + "'",
                      };
                      null === o ? (o = [e]) : o.push(e), A++;
                    } else {
                      const r = A;
                      for (const r in e)
                        if (
                          "description" !== r &&
                          "name" !== r &&
                          "type" !== r
                        ) {
                          const e = {
                            instancePath: t,
                            schemaPath:
                              "#/definitions/AuthenticationTemplateWalletData/additionalProperties",
                            keyword: "additionalProperties",
                            params: { additionalProperty: r },
                            message: "must NOT have additional properties",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                          break;
                        }
                      if (r === A) {
                        if (void 0 !== e.description) {
                          const r = A;
                          if ("string" != typeof e.description) {
                            const e = {
                              instancePath: t + "/description",
                              schemaPath:
                                "#/definitions/AuthenticationTemplateWalletData/properties/description/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            };
                            null === o ? (o = [e]) : o.push(e), A++;
                          }
                          var p = r === A;
                        } else p = !0;
                        if (p) {
                          if (void 0 !== e.name) {
                            const r = A;
                            if ("string" != typeof e.name) {
                              const e = {
                                instancePath: t + "/name",
                                schemaPath:
                                  "#/definitions/AuthenticationTemplateWalletData/properties/name/type",
                                keyword: "type",
                                params: { type: "string" },
                                message: "must be string",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            p = r === A;
                          } else p = !0;
                          if (p)
                            if (void 0 !== e.type) {
                              let r = e.type;
                              const i = A;
                              if ("string" != typeof r) {
                                const e = {
                                  instancePath: t + "/type",
                                  schemaPath:
                                    "#/definitions/AuthenticationTemplateWalletData/properties/type/type",
                                  keyword: "type",
                                  params: { type: "string" },
                                  message: "must be string",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              }
                              if ("WalletData" !== r) {
                                const e = {
                                  instancePath: t + "/type",
                                  schemaPath:
                                    "#/definitions/AuthenticationTemplateWalletData/properties/type/const",
                                  keyword: "const",
                                  params: { allowedValue: "WalletData" },
                                  message: "must be equal to constant",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              }
                              p = i === A;
                            } else p = !0;
                        }
                      }
                    }
                  } else {
                    const e = {
                      instancePath: t,
                      schemaPath:
                        "#/definitions/AuthenticationTemplateWalletData/type",
                      keyword: "type",
                      params: { type: "object" },
                      message: "must be object",
                    };
                    null === o ? (o = [e]) : o.push(e), A++;
                  }
                (u = r === A), (c = c || u);
              }
            }
          }
          if (!c) {
            const e = {
              instancePath: t,
              schemaPath: "#/anyOf",
              keyword: "anyOf",
              params: {},
              message: "must match a schema in anyOf",
            };
            return null === o ? (o = [e]) : o.push(e), A++, (a.errors = o), !1;
          }
          return (
            (A = s),
            null !== o && (s ? (o.length = s) : (o = null)),
            (a.errors = o),
            0 === A
          );
        }
        function s(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          if (0 === A) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (s.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              const r = A;
              for (const r in e)
                if (
                  "description" !== r &&
                  "name" !== r &&
                  "scripts" !== r &&
                  "variables" !== r
                )
                  return (
                    (s.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (r === A) {
                if (void 0 !== e.description) {
                  const r = A;
                  if ("string" != typeof e.description)
                    return (
                      (s.errors = [
                        {
                          instancePath: t + "/description",
                          schemaPath: "#/properties/description/type",
                          keyword: "type",
                          params: { type: "string" },
                          message: "must be string",
                        },
                      ]),
                      !1
                    );
                  var c = r === A;
                } else c = !0;
                if (c) {
                  if (void 0 !== e.name) {
                    const r = A;
                    if ("string" != typeof e.name)
                      return (
                        (s.errors = [
                          {
                            instancePath: t + "/name",
                            schemaPath: "#/properties/name/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          },
                        ]),
                        !1
                      );
                    c = r === A;
                  } else c = !0;
                  if (c) {
                    if (void 0 !== e.scripts) {
                      let r = e.scripts;
                      const i = A;
                      if (A === i) {
                        if (!Array.isArray(r))
                          return (
                            (s.errors = [
                              {
                                instancePath: t + "/scripts",
                                schemaPath: "#/properties/scripts/type",
                                keyword: "type",
                                params: { type: "array" },
                                message: "must be array",
                              },
                            ]),
                            !1
                          );
                        {
                          const e = r.length;
                          for (let i = 0; i < e; i++) {
                            const e = A;
                            if ("string" != typeof r[i])
                              return (
                                (s.errors = [
                                  {
                                    instancePath: t + "/scripts/" + i,
                                    schemaPath:
                                      "#/properties/scripts/items/type",
                                    keyword: "type",
                                    params: { type: "string" },
                                    message: "must be string",
                                  },
                                ]),
                                !1
                              );
                            if (e !== A) break;
                          }
                        }
                      }
                      c = i === A;
                    } else c = !0;
                    if (c)
                      if (void 0 !== e.variables) {
                        let r = e.variables;
                        const i = A;
                        if (A === i) {
                          if (!r || "object" != typeof r || Array.isArray(r))
                            return (
                              (s.errors = [
                                {
                                  instancePath: t + "/variables",
                                  schemaPath: "#/properties/variables/type",
                                  keyword: "type",
                                  params: { type: "object" },
                                  message: "must be object",
                                },
                              ]),
                              !1
                            );
                          for (const e in r) {
                            const i = A;
                            if (
                              (a(r[e], {
                                instancePath:
                                  t +
                                  "/variables/" +
                                  e.replace(/~/g, "~0").replace(/\//g, "~1"),
                                parentData: r,
                                parentDataProperty: e,
                                rootData: n,
                              }) ||
                                ((o =
                                  null === o ? a.errors : o.concat(a.errors)),
                                (A = o.length)),
                              i !== A)
                            )
                              break;
                          }
                        }
                        c = i === A;
                      } else c = !0;
                  }
                }
              }
            }
          }
          return (s.errors = o), 0 === A;
        }
        const c = {
          additionalProperties: !1,
          description:
            "An example output used to define a scenario for an authentication template.",
          properties: {
            lockingBytecode: {
              anyOf: [
                {
                  $ref: "#/definitions/AuthenticationTemplateScenarioBytecode",
                },
                {
                  items: { const: "slot", type: "string" },
                  maxItems: 1,
                  minItems: 1,
                  type: "array",
                },
              ],
              description:
                'The locking bytecode used to encumber this output.\n\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\n\nOnly source outputs may specify a `lockingBytecode` of `["slot"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',
            },
            token: {
              additionalProperties: !1,
              description:
                "The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.",
              properties: {
                amount: {
                  description:
                    'The number of fungible tokens (of `category`) held in this output.\n\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `"9223372036854775807"`.\n\nIf undefined, this defaults to: `0`.',
                  type: ["number", "string"],
                },
                category: {
                  description:
                    "The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\n\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`",
                  type: "string",
                },
                nft: {
                  additionalProperties: !1,
                  description:
                    "If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.",
                  properties: {
                    capability: {
                      description:
                        "The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\n\nIf undefined, this defaults to: `none`.",
                      enum: ["minting", "mutable", "none"],
                      type: "string",
                    },
                    commitment: {
                      description:
                        'The hex-encoded commitment contents included in the non-fungible token held in this output.\n\nIf undefined, this defaults to: `""` (a zero-length commitment).',
                      type: "string",
                    },
                  },
                  type: "object",
                },
              },
              type: "object",
            },
            valueSatoshis: {
              description:
                'The value of the output in satoshis, the smallest unit of bitcoin.\n\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\n\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `"ffffffffffffffff"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\n\nIf undefined, this defaults to: `0`.',
              type: ["number", "string"],
            },
          },
          type: "object",
        };
        function g(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          const a = A;
          let s = !1;
          const c = A;
          if ("string" != typeof e) {
            const e = {
              instancePath: t,
              schemaPath: "#/anyOf/0/type",
              keyword: "type",
              params: { type: "string" },
              message: "must be string",
            };
            null === o ? (o = [e]) : o.push(e), A++;
          }
          var l = c === A;
          if (((s = s || l), !s)) {
            const r = A;
            if (A === r)
              if (e && "object" == typeof e && !Array.isArray(e)) {
                const r = A;
                for (const r in e)
                  if ("overrides" !== r && "script" !== r) {
                    const e = {
                      instancePath: t,
                      schemaPath: "#/anyOf/1/additionalProperties",
                      keyword: "additionalProperties",
                      params: { additionalProperty: r },
                      message: "must NOT have additional properties",
                    };
                    null === o ? (o = [e]) : o.push(e), A++;
                    break;
                  }
                if (r === A) {
                  if (void 0 !== e.overrides) {
                    let r = e.overrides;
                    const i = A;
                    if (A == A)
                      if (r && "object" == typeof r && !Array.isArray(r)) {
                        const e = A;
                        for (const e in r)
                          if (
                            "bytecode" !== e &&
                            "currentBlockHeight" !== e &&
                            "currentBlockTime" !== e &&
                            "hdKeys" !== e &&
                            "keys" !== e
                          ) {
                            const r = {
                              instancePath: t + "/overrides",
                              schemaPath:
                                "#/definitions/AuthenticationTemplateScenarioData/additionalProperties",
                              keyword: "additionalProperties",
                              params: { additionalProperty: e },
                              message: "must NOT have additional properties",
                            };
                            null === o ? (o = [r]) : o.push(r), A++;
                            break;
                          }
                        if (e === A) {
                          if (void 0 !== r.bytecode) {
                            let e = r.bytecode;
                            const i = A;
                            if (A === i)
                              if (
                                e &&
                                "object" == typeof e &&
                                !Array.isArray(e)
                              )
                                for (const r in e) {
                                  const i = A;
                                  if ("string" != typeof e[r]) {
                                    const e = {
                                      instancePath:
                                        t +
                                        "/overrides/bytecode/" +
                                        r
                                          .replace(/~/g, "~0")
                                          .replace(/\//g, "~1"),
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/additionalProperties/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    };
                                    null === o ? (o = [e]) : o.push(e), A++;
                                  }
                                  if (i !== A) break;
                                }
                              else {
                                const e = {
                                  instancePath: t + "/overrides/bytecode",
                                  schemaPath:
                                    "#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/type",
                                  keyword: "type",
                                  params: { type: "object" },
                                  message: "must be object",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              }
                            var u = i === A;
                          } else u = !0;
                          if (u) {
                            if (void 0 !== r.currentBlockHeight) {
                              let e = r.currentBlockHeight;
                              const i = A;
                              if ("number" != typeof e || !isFinite(e)) {
                                const e = {
                                  instancePath:
                                    t + "/overrides/currentBlockHeight",
                                  schemaPath:
                                    "#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockHeight/type",
                                  keyword: "type",
                                  params: { type: "number" },
                                  message: "must be number",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              }
                              u = i === A;
                            } else u = !0;
                            if (u) {
                              if (void 0 !== r.currentBlockTime) {
                                let e = r.currentBlockTime;
                                const i = A;
                                if ("number" != typeof e || !isFinite(e)) {
                                  const e = {
                                    instancePath:
                                      t + "/overrides/currentBlockTime",
                                    schemaPath:
                                      "#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockTime/type",
                                    keyword: "type",
                                    params: { type: "number" },
                                    message: "must be number",
                                  };
                                  null === o ? (o = [e]) : o.push(e), A++;
                                }
                                u = i === A;
                              } else u = !0;
                              if (u) {
                                if (void 0 !== r.hdKeys) {
                                  let e = r.hdKeys;
                                  const i = A;
                                  if (A === i)
                                    if (
                                      e &&
                                      "object" == typeof e &&
                                      !Array.isArray(e)
                                    ) {
                                      const r = A;
                                      for (const r in e)
                                        if (
                                          "addressIndex" !== r &&
                                          "hdPrivateKeys" !== r &&
                                          "hdPublicKeys" !== r
                                        ) {
                                          const e = {
                                            instancePath:
                                              t + "/overrides/hdKeys",
                                            schemaPath:
                                              "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/additionalProperties",
                                            keyword: "additionalProperties",
                                            params: { additionalProperty: r },
                                            message:
                                              "must NOT have additional properties",
                                          };
                                          null === o ? (o = [e]) : o.push(e),
                                            A++;
                                          break;
                                        }
                                      if (r === A) {
                                        if (void 0 !== e.addressIndex) {
                                          let r = e.addressIndex;
                                          const i = A;
                                          if (
                                            "number" != typeof r ||
                                            !isFinite(r)
                                          ) {
                                            const e = {
                                              instancePath:
                                                t +
                                                "/overrides/hdKeys/addressIndex",
                                              schemaPath:
                                                "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/addressIndex/type",
                                              keyword: "type",
                                              params: { type: "number" },
                                              message: "must be number",
                                            };
                                            null === o ? (o = [e]) : o.push(e),
                                              A++;
                                          }
                                          var h = i === A;
                                        } else h = !0;
                                        if (h) {
                                          if (void 0 !== e.hdPrivateKeys) {
                                            let r = e.hdPrivateKeys;
                                            const i = A;
                                            if (A === i)
                                              if (
                                                r &&
                                                "object" == typeof r &&
                                                !Array.isArray(r)
                                              )
                                                for (const e in r) {
                                                  const i = A;
                                                  if ("string" != typeof r[e]) {
                                                    const r = {
                                                      instancePath:
                                                        t +
                                                        "/overrides/hdKeys/hdPrivateKeys/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(/\//g, "~1"),
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    };
                                                    null === o
                                                      ? (o = [r])
                                                      : o.push(r),
                                                      A++;
                                                  }
                                                  if (i !== A) break;
                                                }
                                              else {
                                                const e = {
                                                  instancePath:
                                                    t +
                                                    "/overrides/hdKeys/hdPrivateKeys",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type",
                                                  keyword: "type",
                                                  params: { type: "object" },
                                                  message: "must be object",
                                                };
                                                null === o
                                                  ? (o = [e])
                                                  : o.push(e),
                                                  A++;
                                              }
                                            h = i === A;
                                          } else h = !0;
                                          if (h)
                                            if (void 0 !== e.hdPublicKeys) {
                                              let r = e.hdPublicKeys;
                                              const i = A;
                                              if (A === i)
                                                if (
                                                  r &&
                                                  "object" == typeof r &&
                                                  !Array.isArray(r)
                                                )
                                                  for (const e in r) {
                                                    const i = A;
                                                    if (
                                                      "string" != typeof r[e]
                                                    ) {
                                                      const r = {
                                                        instancePath:
                                                          t +
                                                          "/overrides/hdKeys/hdPublicKeys/" +
                                                          e
                                                            .replace(/~/g, "~0")
                                                            .replace(
                                                              /\//g,
                                                              "~1"
                                                            ),
                                                        schemaPath:
                                                          "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type",
                                                        keyword: "type",
                                                        params: {
                                                          type: "string",
                                                        },
                                                        message:
                                                          "must be string",
                                                      };
                                                      null === o
                                                        ? (o = [r])
                                                        : o.push(r),
                                                        A++;
                                                    }
                                                    if (i !== A) break;
                                                  }
                                                else {
                                                  const e = {
                                                    instancePath:
                                                      t +
                                                      "/overrides/hdKeys/hdPublicKeys",
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type",
                                                    keyword: "type",
                                                    params: { type: "object" },
                                                    message: "must be object",
                                                  };
                                                  null === o
                                                    ? (o = [e])
                                                    : o.push(e),
                                                    A++;
                                                }
                                              h = i === A;
                                            } else h = !0;
                                        }
                                      }
                                    } else {
                                      const e = {
                                        instancePath: t + "/overrides/hdKeys",
                                        schemaPath:
                                          "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/type",
                                        keyword: "type",
                                        params: { type: "object" },
                                        message: "must be object",
                                      };
                                      null === o ? (o = [e]) : o.push(e), A++;
                                    }
                                  u = i === A;
                                } else u = !0;
                                if (u)
                                  if (void 0 !== r.keys) {
                                    let e = r.keys;
                                    const i = A;
                                    if (A === i)
                                      if (
                                        e &&
                                        "object" == typeof e &&
                                        !Array.isArray(e)
                                      ) {
                                        const r = A;
                                        for (const r in e)
                                          if ("privateKeys" !== r) {
                                            const e = {
                                              instancePath:
                                                t + "/overrides/keys",
                                              schemaPath:
                                                "#/definitions/AuthenticationTemplateScenarioData/properties/keys/additionalProperties",
                                              keyword: "additionalProperties",
                                              params: { additionalProperty: r },
                                              message:
                                                "must NOT have additional properties",
                                            };
                                            null === o ? (o = [e]) : o.push(e),
                                              A++;
                                            break;
                                          }
                                        if (
                                          r === A &&
                                          void 0 !== e.privateKeys
                                        ) {
                                          let r = e.privateKeys;
                                          if (A == A)
                                            if (
                                              r &&
                                              "object" == typeof r &&
                                              !Array.isArray(r)
                                            )
                                              for (const e in r) {
                                                const i = A;
                                                if ("string" != typeof r[e]) {
                                                  const r = {
                                                    instancePath:
                                                      t +
                                                      "/overrides/keys/privateKeys/" +
                                                      e
                                                        .replace(/~/g, "~0")
                                                        .replace(/\//g, "~1"),
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type",
                                                    keyword: "type",
                                                    params: { type: "string" },
                                                    message: "must be string",
                                                  };
                                                  null === o
                                                    ? (o = [r])
                                                    : o.push(r),
                                                    A++;
                                                }
                                                if (i !== A) break;
                                              }
                                            else {
                                              const e = {
                                                instancePath:
                                                  t +
                                                  "/overrides/keys/privateKeys",
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/type",
                                                keyword: "type",
                                                params: { type: "object" },
                                                message: "must be object",
                                              };
                                              null === o
                                                ? (o = [e])
                                                : o.push(e),
                                                A++;
                                            }
                                        }
                                      } else {
                                        const e = {
                                          instancePath: t + "/overrides/keys",
                                          schemaPath:
                                            "#/definitions/AuthenticationTemplateScenarioData/properties/keys/type",
                                          keyword: "type",
                                          params: { type: "object" },
                                          message: "must be object",
                                        };
                                        null === o ? (o = [e]) : o.push(e), A++;
                                      }
                                    u = i === A;
                                  } else u = !0;
                              }
                            }
                          }
                        }
                      } else {
                        const e = {
                          instancePath: t + "/overrides",
                          schemaPath:
                            "#/definitions/AuthenticationTemplateScenarioData/type",
                          keyword: "type",
                          params: { type: "object" },
                          message: "must be object",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                    var I = i === A;
                  } else I = !0;
                  if (I)
                    if (void 0 !== e.script) {
                      let r = e.script;
                      const i = A,
                        n = A;
                      let a = !1;
                      const s = A;
                      if ("string" != typeof r) {
                        const e = {
                          instancePath: t + "/script",
                          schemaPath:
                            "#/anyOf/1/properties/script/anyOf/0/type",
                          keyword: "type",
                          params: { type: "string" },
                          message: "must be string",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                      var p = s === A;
                      if (((a = a || p), !a)) {
                        const e = A;
                        if (A === e)
                          if (Array.isArray(r))
                            if (r.length > 1) {
                              const e = {
                                instancePath: t + "/script",
                                schemaPath:
                                  "#/anyOf/1/properties/script/anyOf/1/maxItems",
                                keyword: "maxItems",
                                params: { limit: 1 },
                                message: "must NOT have more than 1 items",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            } else if (r.length < 1) {
                              const e = {
                                instancePath: t + "/script",
                                schemaPath:
                                  "#/anyOf/1/properties/script/anyOf/1/minItems",
                                keyword: "minItems",
                                params: { limit: 1 },
                                message: "must NOT have fewer than 1 items",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            } else {
                              const e = r.length;
                              for (let i = 0; i < e; i++) {
                                let e = r[i];
                                const n = A;
                                if ("string" != typeof e) {
                                  const e = {
                                    instancePath: t + "/script/" + i,
                                    schemaPath:
                                      "#/anyOf/1/properties/script/anyOf/1/items/type",
                                    keyword: "type",
                                    params: { type: "string" },
                                    message: "must be string",
                                  };
                                  null === o ? (o = [e]) : o.push(e), A++;
                                }
                                if ("copy" !== e) {
                                  const e = {
                                    instancePath: t + "/script/" + i,
                                    schemaPath:
                                      "#/anyOf/1/properties/script/anyOf/1/items/const",
                                    keyword: "const",
                                    params: { allowedValue: "copy" },
                                    message: "must be equal to constant",
                                  };
                                  null === o ? (o = [e]) : o.push(e), A++;
                                }
                                if (n !== A) break;
                              }
                            }
                          else {
                            const e = {
                              instancePath: t + "/script",
                              schemaPath:
                                "#/anyOf/1/properties/script/anyOf/1/type",
                              keyword: "type",
                              params: { type: "array" },
                              message: "must be array",
                            };
                            null === o ? (o = [e]) : o.push(e), A++;
                          }
                        (p = e === A), (a = a || p);
                      }
                      if (a)
                        (A = n),
                          null !== o && (n ? (o.length = n) : (o = null));
                      else {
                        const e = {
                          instancePath: t + "/script",
                          schemaPath: "#/anyOf/1/properties/script/anyOf",
                          keyword: "anyOf",
                          params: {},
                          message: "must match a schema in anyOf",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                      I = i === A;
                    } else I = !0;
                }
              } else {
                const e = {
                  instancePath: t,
                  schemaPath: "#/anyOf/1/type",
                  keyword: "type",
                  params: { type: "object" },
                  message: "must be object",
                };
                null === o ? (o = [e]) : o.push(e), A++;
              }
            (l = r === A), (s = s || l);
          }
          if (!s) {
            const e = {
              instancePath: t,
              schemaPath: "#/anyOf",
              keyword: "anyOf",
              params: {},
              message: "must match a schema in anyOf",
            };
            return null === o ? (o = [e]) : o.push(e), A++, (g.errors = o), !1;
          }
          return (
            (A = a),
            null !== o && (a ? (o.length = a) : (o = null)),
            (g.errors = o),
            0 === A
          );
        }
        function l(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          if (0 === A) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (l.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              const r = A;
              for (const r in e)
                if (
                  "lockingBytecode" !== r &&
                  "token" !== r &&
                  "valueSatoshis" !== r
                )
                  return (
                    (l.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (r === A) {
                if (void 0 !== e.lockingBytecode) {
                  let r = e.lockingBytecode;
                  const i = A,
                    c = A;
                  let u = !1;
                  const h = A;
                  g(r, {
                    instancePath: t + "/lockingBytecode",
                    parentData: e,
                    parentDataProperty: "lockingBytecode",
                    rootData: n,
                  }) ||
                    ((o = null === o ? g.errors : o.concat(g.errors)),
                    (A = o.length));
                  var a = h === A;
                  if (((u = u || a), !u)) {
                    const e = A;
                    if (A === e)
                      if (Array.isArray(r))
                        if (r.length > 1) {
                          const e = {
                            instancePath: t + "/lockingBytecode",
                            schemaPath:
                              "#/properties/lockingBytecode/anyOf/1/maxItems",
                            keyword: "maxItems",
                            params: { limit: 1 },
                            message: "must NOT have more than 1 items",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        } else if (r.length < 1) {
                          const e = {
                            instancePath: t + "/lockingBytecode",
                            schemaPath:
                              "#/properties/lockingBytecode/anyOf/1/minItems",
                            keyword: "minItems",
                            params: { limit: 1 },
                            message: "must NOT have fewer than 1 items",
                          };
                          null === o ? (o = [e]) : o.push(e), A++;
                        } else {
                          const e = r.length;
                          for (let i = 0; i < e; i++) {
                            let e = r[i];
                            const n = A;
                            if ("string" != typeof e) {
                              const e = {
                                instancePath: t + "/lockingBytecode/" + i,
                                schemaPath:
                                  "#/properties/lockingBytecode/anyOf/1/items/type",
                                keyword: "type",
                                params: { type: "string" },
                                message: "must be string",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            if ("slot" !== e) {
                              const e = {
                                instancePath: t + "/lockingBytecode/" + i,
                                schemaPath:
                                  "#/properties/lockingBytecode/anyOf/1/items/const",
                                keyword: "const",
                                params: { allowedValue: "slot" },
                                message: "must be equal to constant",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                            if (n !== A) break;
                          }
                        }
                      else {
                        const e = {
                          instancePath: t + "/lockingBytecode",
                          schemaPath:
                            "#/properties/lockingBytecode/anyOf/1/type",
                          keyword: "type",
                          params: { type: "array" },
                          message: "must be array",
                        };
                        null === o ? (o = [e]) : o.push(e), A++;
                      }
                    (a = e === A), (u = u || a);
                  }
                  if (!u) {
                    const e = {
                      instancePath: t + "/lockingBytecode",
                      schemaPath: "#/properties/lockingBytecode/anyOf",
                      keyword: "anyOf",
                      params: {},
                      message: "must match a schema in anyOf",
                    };
                    return (
                      null === o ? (o = [e]) : o.push(e),
                      A++,
                      (l.errors = o),
                      !1
                    );
                  }
                  (A = c), null !== o && (c ? (o.length = c) : (o = null));
                  var s = i === A;
                } else s = !0;
                if (s) {
                  if (void 0 !== e.token) {
                    let r = e.token;
                    const i = A;
                    if (A === i) {
                      if (!r || "object" != typeof r || Array.isArray(r))
                        return (
                          (l.errors = [
                            {
                              instancePath: t + "/token",
                              schemaPath: "#/properties/token/type",
                              keyword: "type",
                              params: { type: "object" },
                              message: "must be object",
                            },
                          ]),
                          !1
                        );
                      {
                        const e = A;
                        for (const e in r)
                          if ("amount" !== e && "category" !== e && "nft" !== e)
                            return (
                              (l.errors = [
                                {
                                  instancePath: t + "/token",
                                  schemaPath:
                                    "#/properties/token/additionalProperties",
                                  keyword: "additionalProperties",
                                  params: { additionalProperty: e },
                                  message:
                                    "must NOT have additional properties",
                                },
                              ]),
                              !1
                            );
                        if (e === A) {
                          if (void 0 !== r.amount) {
                            let e = r.amount;
                            const i = A;
                            if (
                              ("number" != typeof e || !isFinite(e)) &&
                              "string" != typeof e
                            )
                              return (
                                (l.errors = [
                                  {
                                    instancePath: t + "/token/amount",
                                    schemaPath:
                                      "#/properties/token/properties/amount/type",
                                    keyword: "type",
                                    params: {
                                      type: c.properties.token.properties.amount
                                        .type,
                                    },
                                    message: "must be number,string",
                                  },
                                ]),
                                !1
                              );
                            var u = i === A;
                          } else u = !0;
                          if (u) {
                            if (void 0 !== r.category) {
                              const e = A;
                              if ("string" != typeof r.category)
                                return (
                                  (l.errors = [
                                    {
                                      instancePath: t + "/token/category",
                                      schemaPath:
                                        "#/properties/token/properties/category/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    },
                                  ]),
                                  !1
                                );
                              u = e === A;
                            } else u = !0;
                            if (u)
                              if (void 0 !== r.nft) {
                                let e = r.nft;
                                const i = A;
                                if (A === i) {
                                  if (
                                    !e ||
                                    "object" != typeof e ||
                                    Array.isArray(e)
                                  )
                                    return (
                                      (l.errors = [
                                        {
                                          instancePath: t + "/token/nft",
                                          schemaPath:
                                            "#/properties/token/properties/nft/type",
                                          keyword: "type",
                                          params: { type: "object" },
                                          message: "must be object",
                                        },
                                      ]),
                                      !1
                                    );
                                  {
                                    const r = A;
                                    for (const r in e)
                                      if (
                                        "capability" !== r &&
                                        "commitment" !== r
                                      )
                                        return (
                                          (l.errors = [
                                            {
                                              instancePath: t + "/token/nft",
                                              schemaPath:
                                                "#/properties/token/properties/nft/additionalProperties",
                                              keyword: "additionalProperties",
                                              params: { additionalProperty: r },
                                              message:
                                                "must NOT have additional properties",
                                            },
                                          ]),
                                          !1
                                        );
                                    if (r === A) {
                                      if (void 0 !== e.capability) {
                                        let r = e.capability;
                                        const i = A;
                                        if ("string" != typeof r)
                                          return (
                                            (l.errors = [
                                              {
                                                instancePath:
                                                  t + "/token/nft/capability",
                                                schemaPath:
                                                  "#/properties/token/properties/nft/properties/capability/type",
                                                keyword: "type",
                                                params: { type: "string" },
                                                message: "must be string",
                                              },
                                            ]),
                                            !1
                                          );
                                        if (
                                          "minting" !== r &&
                                          "mutable" !== r &&
                                          "none" !== r
                                        )
                                          return (
                                            (l.errors = [
                                              {
                                                instancePath:
                                                  t + "/token/nft/capability",
                                                schemaPath:
                                                  "#/properties/token/properties/nft/properties/capability/enum",
                                                keyword: "enum",
                                                params: {
                                                  allowedValues:
                                                    c.properties.token
                                                      .properties.nft.properties
                                                      .capability.enum,
                                                },
                                                message:
                                                  "must be equal to one of the allowed values",
                                              },
                                            ]),
                                            !1
                                          );
                                        var h = i === A;
                                      } else h = !0;
                                      if (h)
                                        if (void 0 !== e.commitment) {
                                          const r = A;
                                          if ("string" != typeof e.commitment)
                                            return (
                                              (l.errors = [
                                                {
                                                  instancePath:
                                                    t + "/token/nft/commitment",
                                                  schemaPath:
                                                    "#/properties/token/properties/nft/properties/commitment/type",
                                                  keyword: "type",
                                                  params: { type: "string" },
                                                  message: "must be string",
                                                },
                                              ]),
                                              !1
                                            );
                                          h = r === A;
                                        } else h = !0;
                                    }
                                  }
                                }
                                u = i === A;
                              } else u = !0;
                          }
                        }
                      }
                    }
                    s = i === A;
                  } else s = !0;
                  if (s)
                    if (void 0 !== e.valueSatoshis) {
                      let r = e.valueSatoshis;
                      const i = A;
                      if (
                        ("number" != typeof r || !isFinite(r)) &&
                        "string" != typeof r
                      )
                        return (
                          (l.errors = [
                            {
                              instancePath: t + "/valueSatoshis",
                              schemaPath: "#/properties/valueSatoshis/type",
                              keyword: "type",
                              params: { type: c.properties.valueSatoshis.type },
                              message: "must be number,string",
                            },
                          ]),
                          !1
                        );
                      s = i === A;
                    } else s = !0;
                }
              }
            }
          }
          return (l.errors = o), 0 === A;
        }
        function u(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          if (0 === A) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (u.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              const r = A;
              for (const r in e)
                if (
                  "outpointIndex" !== r &&
                  "outpointTransactionHash" !== r &&
                  "sequenceNumber" !== r &&
                  "unlockingBytecode" !== r
                )
                  return (
                    (u.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (r === A) {
                if (void 0 !== e.outpointIndex) {
                  let r = e.outpointIndex;
                  const i = A;
                  if ("number" != typeof r || !isFinite(r))
                    return (
                      (u.errors = [
                        {
                          instancePath: t + "/outpointIndex",
                          schemaPath: "#/properties/outpointIndex/type",
                          keyword: "type",
                          params: { type: "number" },
                          message: "must be number",
                        },
                      ]),
                      !1
                    );
                  var a = i === A;
                } else a = !0;
                if (a) {
                  if (void 0 !== e.outpointTransactionHash) {
                    const r = A;
                    if ("string" != typeof e.outpointTransactionHash)
                      return (
                        (u.errors = [
                          {
                            instancePath: t + "/outpointTransactionHash",
                            schemaPath:
                              "#/properties/outpointTransactionHash/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          },
                        ]),
                        !1
                      );
                    a = r === A;
                  } else a = !0;
                  if (a) {
                    if (void 0 !== e.sequenceNumber) {
                      let r = e.sequenceNumber;
                      const i = A;
                      if ("number" != typeof r || !isFinite(r))
                        return (
                          (u.errors = [
                            {
                              instancePath: t + "/sequenceNumber",
                              schemaPath: "#/properties/sequenceNumber/type",
                              keyword: "type",
                              params: { type: "number" },
                              message: "must be number",
                            },
                          ]),
                          !1
                        );
                      a = i === A;
                    } else a = !0;
                    if (a)
                      if (void 0 !== e.unlockingBytecode) {
                        let r = e.unlockingBytecode;
                        const i = A,
                          c = A;
                        let l = !1;
                        const h = A;
                        g(r, {
                          instancePath: t + "/unlockingBytecode",
                          parentData: e,
                          parentDataProperty: "unlockingBytecode",
                          rootData: n,
                        }) ||
                          ((o = null === o ? g.errors : o.concat(g.errors)),
                          (A = o.length));
                        var s = h === A;
                        if (((l = l || s), !l)) {
                          const e = A;
                          if (A === e)
                            if (Array.isArray(r))
                              if (r.length > 1) {
                                const e = {
                                  instancePath: t + "/unlockingBytecode",
                                  schemaPath:
                                    "#/properties/unlockingBytecode/anyOf/1/maxItems",
                                  keyword: "maxItems",
                                  params: { limit: 1 },
                                  message: "must NOT have more than 1 items",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              } else if (r.length < 1) {
                                const e = {
                                  instancePath: t + "/unlockingBytecode",
                                  schemaPath:
                                    "#/properties/unlockingBytecode/anyOf/1/minItems",
                                  keyword: "minItems",
                                  params: { limit: 1 },
                                  message: "must NOT have fewer than 1 items",
                                };
                                null === o ? (o = [e]) : o.push(e), A++;
                              } else {
                                const e = r.length;
                                for (let i = 0; i < e; i++) {
                                  let e = r[i];
                                  const n = A;
                                  if ("string" != typeof e) {
                                    const e = {
                                      instancePath:
                                        t + "/unlockingBytecode/" + i,
                                      schemaPath:
                                        "#/properties/unlockingBytecode/anyOf/1/items/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    };
                                    null === o ? (o = [e]) : o.push(e), A++;
                                  }
                                  if ("slot" !== e) {
                                    const e = {
                                      instancePath:
                                        t + "/unlockingBytecode/" + i,
                                      schemaPath:
                                        "#/properties/unlockingBytecode/anyOf/1/items/const",
                                      keyword: "const",
                                      params: { allowedValue: "slot" },
                                      message: "must be equal to constant",
                                    };
                                    null === o ? (o = [e]) : o.push(e), A++;
                                  }
                                  if (n !== A) break;
                                }
                              }
                            else {
                              const e = {
                                instancePath: t + "/unlockingBytecode",
                                schemaPath:
                                  "#/properties/unlockingBytecode/anyOf/1/type",
                                keyword: "type",
                                params: { type: "array" },
                                message: "must be array",
                              };
                              null === o ? (o = [e]) : o.push(e), A++;
                            }
                          (s = e === A), (l = l || s);
                        }
                        if (!l) {
                          const e = {
                            instancePath: t + "/unlockingBytecode",
                            schemaPath: "#/properties/unlockingBytecode/anyOf",
                            keyword: "anyOf",
                            params: {},
                            message: "must match a schema in anyOf",
                          };
                          return (
                            null === o ? (o = [e]) : o.push(e),
                            A++,
                            (u.errors = o),
                            !1
                          );
                        }
                        (A = c),
                          null !== o && (c ? (o.length = c) : (o = null)),
                          (a = i === A);
                      } else a = !0;
                  }
                }
              }
            }
          }
          return (u.errors = o), 0 === A;
        }
        const h = {
          additionalProperties: !1,
          description:
            "An example output used to define a scenario for an authentication template.",
          properties: {
            lockingBytecode: {
              $ref: "#/definitions/AuthenticationTemplateScenarioBytecode",
              description:
                'The locking bytecode used to encumber this output.\n\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\n\nOnly source outputs may specify a `lockingBytecode` of `["slot"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',
            },
            token: {
              additionalProperties: !1,
              description:
                "The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.",
              properties: {
                amount: {
                  description:
                    'The number of fungible tokens (of `category`) held in this output.\n\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `"9223372036854775807"`.\n\nIf undefined, this defaults to: `0`.',
                  type: ["number", "string"],
                },
                category: {
                  description:
                    "The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\n\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`",
                  type: "string",
                },
                nft: {
                  additionalProperties: !1,
                  description:
                    "If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.",
                  properties: {
                    capability: {
                      description:
                        "The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\n\nIf undefined, this defaults to: `none`.",
                      enum: ["minting", "mutable", "none"],
                      type: "string",
                    },
                    commitment: {
                      description:
                        'The hex-encoded commitment contents included in the non-fungible token held in this output.\n\nIf undefined, this defaults to: `""` (a zero-length commitment).',
                      type: "string",
                    },
                  },
                  type: "object",
                },
              },
              type: "object",
            },
            valueSatoshis: {
              description:
                'The value of the output in satoshis, the smallest unit of bitcoin.\n\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\n\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `"ffffffffffffffff"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\n\nIf undefined, this defaults to: `0`.',
              type: ["number", "string"],
            },
          },
          type: "object",
        };
        function I(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          if (0 === A) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (I.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              const r = A;
              for (const r in e)
                if (
                  "lockingBytecode" !== r &&
                  "token" !== r &&
                  "valueSatoshis" !== r
                )
                  return (
                    (I.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (r === A) {
                if (void 0 !== e.lockingBytecode) {
                  const r = A;
                  g(e.lockingBytecode, {
                    instancePath: t + "/lockingBytecode",
                    parentData: e,
                    parentDataProperty: "lockingBytecode",
                    rootData: n,
                  }) ||
                    ((o = null === o ? g.errors : o.concat(g.errors)),
                    (A = o.length));
                  var a = r === A;
                } else a = !0;
                if (a) {
                  if (void 0 !== e.token) {
                    let r = e.token;
                    const i = A;
                    if (A === i) {
                      if (!r || "object" != typeof r || Array.isArray(r))
                        return (
                          (I.errors = [
                            {
                              instancePath: t + "/token",
                              schemaPath: "#/properties/token/type",
                              keyword: "type",
                              params: { type: "object" },
                              message: "must be object",
                            },
                          ]),
                          !1
                        );
                      {
                        const e = A;
                        for (const e in r)
                          if ("amount" !== e && "category" !== e && "nft" !== e)
                            return (
                              (I.errors = [
                                {
                                  instancePath: t + "/token",
                                  schemaPath:
                                    "#/properties/token/additionalProperties",
                                  keyword: "additionalProperties",
                                  params: { additionalProperty: e },
                                  message:
                                    "must NOT have additional properties",
                                },
                              ]),
                              !1
                            );
                        if (e === A) {
                          if (void 0 !== r.amount) {
                            let e = r.amount;
                            const i = A;
                            if (
                              ("number" != typeof e || !isFinite(e)) &&
                              "string" != typeof e
                            )
                              return (
                                (I.errors = [
                                  {
                                    instancePath: t + "/token/amount",
                                    schemaPath:
                                      "#/properties/token/properties/amount/type",
                                    keyword: "type",
                                    params: {
                                      type: h.properties.token.properties.amount
                                        .type,
                                    },
                                    message: "must be number,string",
                                  },
                                ]),
                                !1
                              );
                            var s = i === A;
                          } else s = !0;
                          if (s) {
                            if (void 0 !== r.category) {
                              const e = A;
                              if ("string" != typeof r.category)
                                return (
                                  (I.errors = [
                                    {
                                      instancePath: t + "/token/category",
                                      schemaPath:
                                        "#/properties/token/properties/category/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    },
                                  ]),
                                  !1
                                );
                              s = e === A;
                            } else s = !0;
                            if (s)
                              if (void 0 !== r.nft) {
                                let e = r.nft;
                                const i = A;
                                if (A === i) {
                                  if (
                                    !e ||
                                    "object" != typeof e ||
                                    Array.isArray(e)
                                  )
                                    return (
                                      (I.errors = [
                                        {
                                          instancePath: t + "/token/nft",
                                          schemaPath:
                                            "#/properties/token/properties/nft/type",
                                          keyword: "type",
                                          params: { type: "object" },
                                          message: "must be object",
                                        },
                                      ]),
                                      !1
                                    );
                                  {
                                    const r = A;
                                    for (const r in e)
                                      if (
                                        "capability" !== r &&
                                        "commitment" !== r
                                      )
                                        return (
                                          (I.errors = [
                                            {
                                              instancePath: t + "/token/nft",
                                              schemaPath:
                                                "#/properties/token/properties/nft/additionalProperties",
                                              keyword: "additionalProperties",
                                              params: { additionalProperty: r },
                                              message:
                                                "must NOT have additional properties",
                                            },
                                          ]),
                                          !1
                                        );
                                    if (r === A) {
                                      if (void 0 !== e.capability) {
                                        let r = e.capability;
                                        const i = A;
                                        if ("string" != typeof r)
                                          return (
                                            (I.errors = [
                                              {
                                                instancePath:
                                                  t + "/token/nft/capability",
                                                schemaPath:
                                                  "#/properties/token/properties/nft/properties/capability/type",
                                                keyword: "type",
                                                params: { type: "string" },
                                                message: "must be string",
                                              },
                                            ]),
                                            !1
                                          );
                                        if (
                                          "minting" !== r &&
                                          "mutable" !== r &&
                                          "none" !== r
                                        )
                                          return (
                                            (I.errors = [
                                              {
                                                instancePath:
                                                  t + "/token/nft/capability",
                                                schemaPath:
                                                  "#/properties/token/properties/nft/properties/capability/enum",
                                                keyword: "enum",
                                                params: {
                                                  allowedValues:
                                                    h.properties.token
                                                      .properties.nft.properties
                                                      .capability.enum,
                                                },
                                                message:
                                                  "must be equal to one of the allowed values",
                                              },
                                            ]),
                                            !1
                                          );
                                        var c = i === A;
                                      } else c = !0;
                                      if (c)
                                        if (void 0 !== e.commitment) {
                                          const r = A;
                                          if ("string" != typeof e.commitment)
                                            return (
                                              (I.errors = [
                                                {
                                                  instancePath:
                                                    t + "/token/nft/commitment",
                                                  schemaPath:
                                                    "#/properties/token/properties/nft/properties/commitment/type",
                                                  keyword: "type",
                                                  params: { type: "string" },
                                                  message: "must be string",
                                                },
                                              ]),
                                              !1
                                            );
                                          c = r === A;
                                        } else c = !0;
                                    }
                                  }
                                }
                                s = i === A;
                              } else s = !0;
                          }
                        }
                      }
                    }
                    a = i === A;
                  } else a = !0;
                  if (a)
                    if (void 0 !== e.valueSatoshis) {
                      let r = e.valueSatoshis;
                      const i = A;
                      if (
                        ("number" != typeof r || !isFinite(r)) &&
                        "string" != typeof r
                      )
                        return (
                          (I.errors = [
                            {
                              instancePath: t + "/valueSatoshis",
                              schemaPath: "#/properties/valueSatoshis/type",
                              keyword: "type",
                              params: { type: h.properties.valueSatoshis.type },
                              message: "must be number,string",
                            },
                          ]),
                          !1
                        );
                      a = i === A;
                    } else a = !0;
                }
              }
            }
          }
          return (I.errors = o), 0 === A;
        }
        function p(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          let o = null,
            A = 0;
          if (0 === A) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (p.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              const r = A;
              for (const r in e)
                if (
                  "data" !== r &&
                  "description" !== r &&
                  "extends" !== r &&
                  "name" !== r &&
                  "sourceOutputs" !== r &&
                  "transaction" !== r
                )
                  return (
                    (p.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (r === A) {
                if (void 0 !== e.data) {
                  let r = e.data;
                  const i = A;
                  if (A == A) {
                    if (!r || "object" != typeof r || Array.isArray(r))
                      return (
                        (p.errors = [
                          {
                            instancePath: t + "/data",
                            schemaPath:
                              "#/definitions/AuthenticationTemplateScenarioData/type",
                            keyword: "type",
                            params: { type: "object" },
                            message: "must be object",
                          },
                        ]),
                        !1
                      );
                    {
                      const e = A;
                      for (const e in r)
                        if (
                          "bytecode" !== e &&
                          "currentBlockHeight" !== e &&
                          "currentBlockTime" !== e &&
                          "hdKeys" !== e &&
                          "keys" !== e
                        )
                          return (
                            (p.errors = [
                              {
                                instancePath: t + "/data",
                                schemaPath:
                                  "#/definitions/AuthenticationTemplateScenarioData/additionalProperties",
                                keyword: "additionalProperties",
                                params: { additionalProperty: e },
                                message: "must NOT have additional properties",
                              },
                            ]),
                            !1
                          );
                      if (e === A) {
                        if (void 0 !== r.bytecode) {
                          let e = r.bytecode;
                          const i = A;
                          if (A === i) {
                            if (!e || "object" != typeof e || Array.isArray(e))
                              return (
                                (p.errors = [
                                  {
                                    instancePath: t + "/data/bytecode",
                                    schemaPath:
                                      "#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/type",
                                    keyword: "type",
                                    params: { type: "object" },
                                    message: "must be object",
                                  },
                                ]),
                                !1
                              );
                            for (const r in e) {
                              const i = A;
                              if ("string" != typeof e[r])
                                return (
                                  (p.errors = [
                                    {
                                      instancePath:
                                        t +
                                        "/data/bytecode/" +
                                        r
                                          .replace(/~/g, "~0")
                                          .replace(/\//g, "~1"),
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateScenarioData/properties/bytecode/additionalProperties/type",
                                      keyword: "type",
                                      params: { type: "string" },
                                      message: "must be string",
                                    },
                                  ]),
                                  !1
                                );
                              if (i !== A) break;
                            }
                          }
                          var a = i === A;
                        } else a = !0;
                        if (a) {
                          if (void 0 !== r.currentBlockHeight) {
                            let e = r.currentBlockHeight;
                            const i = A;
                            if ("number" != typeof e || !isFinite(e))
                              return (
                                (p.errors = [
                                  {
                                    instancePath:
                                      t + "/data/currentBlockHeight",
                                    schemaPath:
                                      "#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockHeight/type",
                                    keyword: "type",
                                    params: { type: "number" },
                                    message: "must be number",
                                  },
                                ]),
                                !1
                              );
                            a = i === A;
                          } else a = !0;
                          if (a) {
                            if (void 0 !== r.currentBlockTime) {
                              let e = r.currentBlockTime;
                              const i = A;
                              if ("number" != typeof e || !isFinite(e))
                                return (
                                  (p.errors = [
                                    {
                                      instancePath:
                                        t + "/data/currentBlockTime",
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateScenarioData/properties/currentBlockTime/type",
                                      keyword: "type",
                                      params: { type: "number" },
                                      message: "must be number",
                                    },
                                  ]),
                                  !1
                                );
                              a = i === A;
                            } else a = !0;
                            if (a) {
                              if (void 0 !== r.hdKeys) {
                                let e = r.hdKeys;
                                const i = A;
                                if (A === i) {
                                  if (
                                    !e ||
                                    "object" != typeof e ||
                                    Array.isArray(e)
                                  )
                                    return (
                                      (p.errors = [
                                        {
                                          instancePath: t + "/data/hdKeys",
                                          schemaPath:
                                            "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/type",
                                          keyword: "type",
                                          params: { type: "object" },
                                          message: "must be object",
                                        },
                                      ]),
                                      !1
                                    );
                                  {
                                    const r = A;
                                    for (const r in e)
                                      if (
                                        "addressIndex" !== r &&
                                        "hdPrivateKeys" !== r &&
                                        "hdPublicKeys" !== r
                                      )
                                        return (
                                          (p.errors = [
                                            {
                                              instancePath: t + "/data/hdKeys",
                                              schemaPath:
                                                "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/additionalProperties",
                                              keyword: "additionalProperties",
                                              params: { additionalProperty: r },
                                              message:
                                                "must NOT have additional properties",
                                            },
                                          ]),
                                          !1
                                        );
                                    if (r === A) {
                                      if (void 0 !== e.addressIndex) {
                                        let r = e.addressIndex;
                                        const i = A;
                                        if (
                                          "number" != typeof r ||
                                          !isFinite(r)
                                        )
                                          return (
                                            (p.errors = [
                                              {
                                                instancePath:
                                                  t +
                                                  "/data/hdKeys/addressIndex",
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/addressIndex/type",
                                                keyword: "type",
                                                params: { type: "number" },
                                                message: "must be number",
                                              },
                                            ]),
                                            !1
                                          );
                                        var s = i === A;
                                      } else s = !0;
                                      if (s) {
                                        if (void 0 !== e.hdPrivateKeys) {
                                          let r = e.hdPrivateKeys;
                                          const i = A;
                                          if (A === i) {
                                            if (
                                              !r ||
                                              "object" != typeof r ||
                                              Array.isArray(r)
                                            )
                                              return (
                                                (p.errors = [
                                                  {
                                                    instancePath:
                                                      t +
                                                      "/data/hdKeys/hdPrivateKeys",
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type",
                                                    keyword: "type",
                                                    params: { type: "object" },
                                                    message: "must be object",
                                                  },
                                                ]),
                                                !1
                                              );
                                            for (const e in r) {
                                              const i = A;
                                              if ("string" != typeof r[e])
                                                return (
                                                  (p.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        "/data/hdKeys/hdPrivateKeys/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(/\//g, "~1"),
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    },
                                                  ]),
                                                  !1
                                                );
                                              if (i !== A) break;
                                            }
                                          }
                                          s = i === A;
                                        } else s = !0;
                                        if (s)
                                          if (void 0 !== e.hdPublicKeys) {
                                            let r = e.hdPublicKeys;
                                            const i = A;
                                            if (A === i) {
                                              if (
                                                !r ||
                                                "object" != typeof r ||
                                                Array.isArray(r)
                                              )
                                                return (
                                                  (p.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        "/data/hdKeys/hdPublicKeys",
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "object",
                                                      },
                                                      message: "must be object",
                                                    },
                                                  ]),
                                                  !1
                                                );
                                              for (const e in r) {
                                                const i = A;
                                                if ("string" != typeof r[e])
                                                  return (
                                                    (p.errors = [
                                                      {
                                                        instancePath:
                                                          t +
                                                          "/data/hdKeys/hdPublicKeys/" +
                                                          e
                                                            .replace(/~/g, "~0")
                                                            .replace(
                                                              /\//g,
                                                              "~1"
                                                            ),
                                                        schemaPath:
                                                          "#/definitions/AuthenticationTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type",
                                                        keyword: "type",
                                                        params: {
                                                          type: "string",
                                                        },
                                                        message:
                                                          "must be string",
                                                      },
                                                    ]),
                                                    !1
                                                  );
                                                if (i !== A) break;
                                              }
                                            }
                                            s = i === A;
                                          } else s = !0;
                                      }
                                    }
                                  }
                                }
                                a = i === A;
                              } else a = !0;
                              if (a)
                                if (void 0 !== r.keys) {
                                  let e = r.keys;
                                  const i = A;
                                  if (A === i) {
                                    if (
                                      !e ||
                                      "object" != typeof e ||
                                      Array.isArray(e)
                                    )
                                      return (
                                        (p.errors = [
                                          {
                                            instancePath: t + "/data/keys",
                                            schemaPath:
                                              "#/definitions/AuthenticationTemplateScenarioData/properties/keys/type",
                                            keyword: "type",
                                            params: { type: "object" },
                                            message: "must be object",
                                          },
                                        ]),
                                        !1
                                      );
                                    {
                                      const r = A;
                                      for (const r in e)
                                        if ("privateKeys" !== r)
                                          return (
                                            (p.errors = [
                                              {
                                                instancePath: t + "/data/keys",
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScenarioData/properties/keys/additionalProperties",
                                                keyword: "additionalProperties",
                                                params: {
                                                  additionalProperty: r,
                                                },
                                                message:
                                                  "must NOT have additional properties",
                                              },
                                            ]),
                                            !1
                                          );
                                      if (r === A && void 0 !== e.privateKeys) {
                                        let r = e.privateKeys;
                                        if (A == A) {
                                          if (
                                            !r ||
                                            "object" != typeof r ||
                                            Array.isArray(r)
                                          )
                                            return (
                                              (p.errors = [
                                                {
                                                  instancePath:
                                                    t +
                                                    "/data/keys/privateKeys",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/type",
                                                  keyword: "type",
                                                  params: { type: "object" },
                                                  message: "must be object",
                                                },
                                              ]),
                                              !1
                                            );
                                          for (const e in r) {
                                            const i = A;
                                            if ("string" != typeof r[e])
                                              return (
                                                (p.errors = [
                                                  {
                                                    instancePath:
                                                      t +
                                                      "/data/keys/privateKeys/" +
                                                      e
                                                        .replace(/~/g, "~0")
                                                        .replace(/\//g, "~1"),
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type",
                                                    keyword: "type",
                                                    params: { type: "string" },
                                                    message: "must be string",
                                                  },
                                                ]),
                                                !1
                                              );
                                            if (i !== A) break;
                                          }
                                        }
                                      }
                                    }
                                  }
                                  a = i === A;
                                } else a = !0;
                            }
                          }
                        }
                      }
                    }
                  }
                  var c = i === A;
                } else c = !0;
                if (c) {
                  if (void 0 !== e.description) {
                    const r = A;
                    if ("string" != typeof e.description)
                      return (
                        (p.errors = [
                          {
                            instancePath: t + "/description",
                            schemaPath: "#/properties/description/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          },
                        ]),
                        !1
                      );
                    c = r === A;
                  } else c = !0;
                  if (c) {
                    if (void 0 !== e.extends) {
                      const r = A;
                      if ("string" != typeof e.extends)
                        return (
                          (p.errors = [
                            {
                              instancePath: t + "/extends",
                              schemaPath: "#/properties/extends/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            },
                          ]),
                          !1
                        );
                      c = r === A;
                    } else c = !0;
                    if (c) {
                      if (void 0 !== e.name) {
                        const r = A;
                        if ("string" != typeof e.name)
                          return (
                            (p.errors = [
                              {
                                instancePath: t + "/name",
                                schemaPath: "#/properties/name/type",
                                keyword: "type",
                                params: { type: "string" },
                                message: "must be string",
                              },
                            ]),
                            !1
                          );
                        c = r === A;
                      } else c = !0;
                      if (c) {
                        if (void 0 !== e.sourceOutputs) {
                          let r = e.sourceOutputs;
                          const i = A;
                          if (A === i) {
                            if (!Array.isArray(r))
                              return (
                                (p.errors = [
                                  {
                                    instancePath: t + "/sourceOutputs",
                                    schemaPath:
                                      "#/properties/sourceOutputs/type",
                                    keyword: "type",
                                    params: { type: "array" },
                                    message: "must be array",
                                  },
                                ]),
                                !1
                              );
                            {
                              const e = r.length;
                              for (let i = 0; i < e; i++) {
                                const e = A;
                                if (
                                  (l(r[i], {
                                    instancePath: t + "/sourceOutputs/" + i,
                                    parentData: r,
                                    parentDataProperty: i,
                                    rootData: n,
                                  }) ||
                                    ((o =
                                      null === o
                                        ? l.errors
                                        : o.concat(l.errors)),
                                    (A = o.length)),
                                  e !== A)
                                )
                                  break;
                              }
                            }
                          }
                          c = i === A;
                        } else c = !0;
                        if (c)
                          if (void 0 !== e.transaction) {
                            let r = e.transaction;
                            const i = A;
                            if (A === i) {
                              if (
                                !r ||
                                "object" != typeof r ||
                                Array.isArray(r)
                              )
                                return (
                                  (p.errors = [
                                    {
                                      instancePath: t + "/transaction",
                                      schemaPath:
                                        "#/properties/transaction/type",
                                      keyword: "type",
                                      params: { type: "object" },
                                      message: "must be object",
                                    },
                                  ]),
                                  !1
                                );
                              {
                                const e = A;
                                for (const e in r)
                                  if (
                                    "inputs" !== e &&
                                    "locktime" !== e &&
                                    "outputs" !== e &&
                                    "version" !== e
                                  )
                                    return (
                                      (p.errors = [
                                        {
                                          instancePath: t + "/transaction",
                                          schemaPath:
                                            "#/properties/transaction/additionalProperties",
                                          keyword: "additionalProperties",
                                          params: { additionalProperty: e },
                                          message:
                                            "must NOT have additional properties",
                                        },
                                      ]),
                                      !1
                                    );
                                if (e === A) {
                                  if (void 0 !== r.inputs) {
                                    let e = r.inputs;
                                    const i = A;
                                    if (A === i) {
                                      if (!Array.isArray(e))
                                        return (
                                          (p.errors = [
                                            {
                                              instancePath:
                                                t + "/transaction/inputs",
                                              schemaPath:
                                                "#/properties/transaction/properties/inputs/type",
                                              keyword: "type",
                                              params: { type: "array" },
                                              message: "must be array",
                                            },
                                          ]),
                                          !1
                                        );
                                      {
                                        const r = e.length;
                                        for (let i = 0; i < r; i++) {
                                          const r = A;
                                          if (
                                            (u(e[i], {
                                              instancePath:
                                                t + "/transaction/inputs/" + i,
                                              parentData: e,
                                              parentDataProperty: i,
                                              rootData: n,
                                            }) ||
                                              ((o =
                                                null === o
                                                  ? u.errors
                                                  : o.concat(u.errors)),
                                              (A = o.length)),
                                            r !== A)
                                          )
                                            break;
                                        }
                                      }
                                    }
                                    var g = i === A;
                                  } else g = !0;
                                  if (g) {
                                    if (void 0 !== r.locktime) {
                                      let e = r.locktime;
                                      const i = A;
                                      if ("number" != typeof e || !isFinite(e))
                                        return (
                                          (p.errors = [
                                            {
                                              instancePath:
                                                t + "/transaction/locktime",
                                              schemaPath:
                                                "#/properties/transaction/properties/locktime/type",
                                              keyword: "type",
                                              params: { type: "number" },
                                              message: "must be number",
                                            },
                                          ]),
                                          !1
                                        );
                                      g = i === A;
                                    } else g = !0;
                                    if (g) {
                                      if (void 0 !== r.outputs) {
                                        let e = r.outputs;
                                        const i = A;
                                        if (A === i) {
                                          if (!Array.isArray(e))
                                            return (
                                              (p.errors = [
                                                {
                                                  instancePath:
                                                    t + "/transaction/outputs",
                                                  schemaPath:
                                                    "#/properties/transaction/properties/outputs/type",
                                                  keyword: "type",
                                                  params: { type: "array" },
                                                  message: "must be array",
                                                },
                                              ]),
                                              !1
                                            );
                                          {
                                            const r = e.length;
                                            for (let i = 0; i < r; i++) {
                                              const r = A;
                                              if (
                                                (I(e[i], {
                                                  instancePath:
                                                    t +
                                                    "/transaction/outputs/" +
                                                    i,
                                                  parentData: e,
                                                  parentDataProperty: i,
                                                  rootData: n,
                                                }) ||
                                                  ((o =
                                                    null === o
                                                      ? I.errors
                                                      : o.concat(I.errors)),
                                                  (A = o.length)),
                                                r !== A)
                                              )
                                                break;
                                            }
                                          }
                                        }
                                        g = i === A;
                                      } else g = !0;
                                      if (g)
                                        if (void 0 !== r.version) {
                                          let e = r.version;
                                          const i = A;
                                          if (
                                            "number" != typeof e ||
                                            !isFinite(e)
                                          )
                                            return (
                                              (p.errors = [
                                                {
                                                  instancePath:
                                                    t + "/transaction/version",
                                                  schemaPath:
                                                    "#/properties/transaction/properties/version/type",
                                                  keyword: "type",
                                                  params: { type: "number" },
                                                  message: "must be number",
                                                },
                                              ]),
                                              !1
                                            );
                                          g = i === A;
                                        } else g = !0;
                                    }
                                  }
                                }
                              }
                            }
                            c = i === A;
                          } else c = !0;
                      }
                    }
                  }
                }
              }
            }
          }
          return (p.errors = o), 0 === A;
        }
        function d(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: n = e,
          } = {}
        ) {
          if (!e || "object" != typeof e || Array.isArray(e))
            return (
              (d.errors = [
                {
                  instancePath: t,
                  schemaPath: "#/type",
                  keyword: "type",
                  params: { type: "object" },
                  message: "must be object",
                },
              ]),
              !1
            );
          {
            let r;
            if (
              (void 0 === e.script && (r = "script")) ||
              (void 0 === e.tests && (r = "tests"))
            )
              return (
                (d.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/required",
                    keyword: "required",
                    params: { missingProperty: r },
                    message: "must have required property '" + r + "'",
                  },
                ]),
                !1
              );
            {
              const r = 0;
              for (const r in e)
                if (
                  "name" !== r &&
                  "pushed" !== r &&
                  "script" !== r &&
                  "tests" !== r
                )
                  return (
                    (d.errors = [
                      {
                        instancePath: t,
                        schemaPath: "#/additionalProperties",
                        keyword: "additionalProperties",
                        params: { additionalProperty: r },
                        message: "must NOT have additional properties",
                      },
                    ]),
                    !1
                  );
              if (0 === r) {
                if (void 0 !== e.name) {
                  const r = 0;
                  if ("string" != typeof e.name)
                    return (
                      (d.errors = [
                        {
                          instancePath: t + "/name",
                          schemaPath: "#/properties/name/type",
                          keyword: "type",
                          params: { type: "string" },
                          message: "must be string",
                        },
                      ]),
                      !1
                    );
                  var o = 0 === r;
                } else o = !0;
                if (o) {
                  if (void 0 !== e.pushed) {
                    const r = 0;
                    if ("boolean" != typeof e.pushed)
                      return (
                        (d.errors = [
                          {
                            instancePath: t + "/pushed",
                            schemaPath: "#/properties/pushed/type",
                            keyword: "type",
                            params: { type: "boolean" },
                            message: "must be boolean",
                          },
                        ]),
                        !1
                      );
                    o = 0 === r;
                  } else o = !0;
                  if (o) {
                    if (void 0 !== e.script) {
                      const r = 0;
                      if ("string" != typeof e.script)
                        return (
                          (d.errors = [
                            {
                              instancePath: t + "/script",
                              schemaPath: "#/properties/script/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            },
                          ]),
                          !1
                        );
                      o = 0 === r;
                    } else o = !0;
                    if (o)
                      if (void 0 !== e.tests) {
                        let r = e.tests;
                        const i = 0;
                        if (0 === i) {
                          if (!r || "object" != typeof r || Array.isArray(r))
                            return (
                              (d.errors = [
                                {
                                  instancePath: t + "/tests",
                                  schemaPath: "#/properties/tests/type",
                                  keyword: "type",
                                  params: { type: "object" },
                                  message: "must be object",
                                },
                              ]),
                              !1
                            );
                          for (const e in r) {
                            let i = r[e];
                            const n = 0;
                            if (!i || "object" != typeof i || Array.isArray(i))
                              return (
                                (d.errors = [
                                  {
                                    instancePath:
                                      t +
                                      "/tests/" +
                                      e
                                        .replace(/~/g, "~0")
                                        .replace(/\//g, "~1"),
                                    schemaPath:
                                      "#/definitions/AuthenticationTemplateScriptTest/type",
                                    keyword: "type",
                                    params: { type: "object" },
                                    message: "must be object",
                                  },
                                ]),
                                !1
                              );
                            {
                              let r;
                              if (void 0 === i.check && (r = "check"))
                                return (
                                  (d.errors = [
                                    {
                                      instancePath:
                                        t +
                                        "/tests/" +
                                        e
                                          .replace(/~/g, "~0")
                                          .replace(/\//g, "~1"),
                                      schemaPath:
                                        "#/definitions/AuthenticationTemplateScriptTest/required",
                                      keyword: "required",
                                      params: { missingProperty: r },
                                      message:
                                        "must have required property '" +
                                        r +
                                        "'",
                                    },
                                  ]),
                                  !1
                                );
                              {
                                const r = 0;
                                for (const r in i)
                                  if (
                                    "check" !== r &&
                                    "fails" !== r &&
                                    "invalid" !== r &&
                                    "name" !== r &&
                                    "passes" !== r &&
                                    "setup" !== r
                                  )
                                    return (
                                      (d.errors = [
                                        {
                                          instancePath:
                                            t +
                                            "/tests/" +
                                            e
                                              .replace(/~/g, "~0")
                                              .replace(/\//g, "~1"),
                                          schemaPath:
                                            "#/definitions/AuthenticationTemplateScriptTest/additionalProperties",
                                          keyword: "additionalProperties",
                                          params: { additionalProperty: r },
                                          message:
                                            "must NOT have additional properties",
                                        },
                                      ]),
                                      !1
                                    );
                                if (0 === r) {
                                  if (void 0 !== i.check) {
                                    const r = 0;
                                    if ("string" != typeof i.check)
                                      return (
                                        (d.errors = [
                                          {
                                            instancePath:
                                              t +
                                              "/tests/" +
                                              e
                                                .replace(/~/g, "~0")
                                                .replace(/\//g, "~1") +
                                              "/check",
                                            schemaPath:
                                              "#/definitions/AuthenticationTemplateScriptTest/properties/check/type",
                                            keyword: "type",
                                            params: { type: "string" },
                                            message: "must be string",
                                          },
                                        ]),
                                        !1
                                      );
                                    var A = 0 === r;
                                  } else A = !0;
                                  if (A) {
                                    if (void 0 !== i.fails) {
                                      let r = i.fails;
                                      const n = 0;
                                      if (0 === n) {
                                        if (!Array.isArray(r))
                                          return (
                                            (d.errors = [
                                              {
                                                instancePath:
                                                  t +
                                                  "/tests/" +
                                                  e
                                                    .replace(/~/g, "~0")
                                                    .replace(/\//g, "~1") +
                                                  "/fails",
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScriptTest/properties/fails/type",
                                                keyword: "type",
                                                params: { type: "array" },
                                                message: "must be array",
                                              },
                                            ]),
                                            !1
                                          );
                                        {
                                          const i = r.length;
                                          for (let n = 0; n < i; n++) {
                                            const i = 0;
                                            if ("string" != typeof r[n])
                                              return (
                                                (d.errors = [
                                                  {
                                                    instancePath:
                                                      t +
                                                      "/tests/" +
                                                      e
                                                        .replace(/~/g, "~0")
                                                        .replace(/\//g, "~1") +
                                                      "/fails/" +
                                                      n,
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScriptTest/properties/fails/items/type",
                                                    keyword: "type",
                                                    params: { type: "string" },
                                                    message: "must be string",
                                                  },
                                                ]),
                                                !1
                                              );
                                            if (0 !== i) break;
                                          }
                                        }
                                      }
                                      A = 0 === n;
                                    } else A = !0;
                                    if (A) {
                                      if (void 0 !== i.invalid) {
                                        let r = i.invalid;
                                        const n = 0;
                                        if (0 === n) {
                                          if (!Array.isArray(r))
                                            return (
                                              (d.errors = [
                                                {
                                                  instancePath:
                                                    t +
                                                    "/tests/" +
                                                    e
                                                      .replace(/~/g, "~0")
                                                      .replace(/\//g, "~1") +
                                                    "/invalid",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScriptTest/properties/invalid/type",
                                                  keyword: "type",
                                                  params: { type: "array" },
                                                  message: "must be array",
                                                },
                                              ]),
                                              !1
                                            );
                                          {
                                            const i = r.length;
                                            for (let n = 0; n < i; n++) {
                                              const i = 0;
                                              if ("string" != typeof r[n])
                                                return (
                                                  (d.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        "/tests/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(
                                                            /\//g,
                                                            "~1"
                                                          ) +
                                                        "/invalid/" +
                                                        n,
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScriptTest/properties/invalid/items/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    },
                                                  ]),
                                                  !1
                                                );
                                              if (0 !== i) break;
                                            }
                                          }
                                        }
                                        A = 0 === n;
                                      } else A = !0;
                                      if (A) {
                                        if (void 0 !== i.name) {
                                          const r = 0;
                                          if ("string" != typeof i.name)
                                            return (
                                              (d.errors = [
                                                {
                                                  instancePath:
                                                    t +
                                                    "/tests/" +
                                                    e
                                                      .replace(/~/g, "~0")
                                                      .replace(/\//g, "~1") +
                                                    "/name",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScriptTest/properties/name/type",
                                                  keyword: "type",
                                                  params: { type: "string" },
                                                  message: "must be string",
                                                },
                                              ]),
                                              !1
                                            );
                                          A = 0 === r;
                                        } else A = !0;
                                        if (A) {
                                          if (void 0 !== i.passes) {
                                            let r = i.passes;
                                            const n = 0;
                                            if (0 === n) {
                                              if (!Array.isArray(r))
                                                return (
                                                  (d.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        "/tests/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(
                                                            /\//g,
                                                            "~1"
                                                          ) +
                                                        "/passes",
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScriptTest/properties/passes/type",
                                                      keyword: "type",
                                                      params: { type: "array" },
                                                      message: "must be array",
                                                    },
                                                  ]),
                                                  !1
                                                );
                                              {
                                                const i = r.length;
                                                for (let n = 0; n < i; n++) {
                                                  const i = 0;
                                                  if ("string" != typeof r[n])
                                                    return (
                                                      (d.errors = [
                                                        {
                                                          instancePath:
                                                            t +
                                                            "/tests/" +
                                                            e
                                                              .replace(
                                                                /~/g,
                                                                "~0"
                                                              )
                                                              .replace(
                                                                /\//g,
                                                                "~1"
                                                              ) +
                                                            "/passes/" +
                                                            n,
                                                          schemaPath:
                                                            "#/definitions/AuthenticationTemplateScriptTest/properties/passes/items/type",
                                                          keyword: "type",
                                                          params: {
                                                            type: "string",
                                                          },
                                                          message:
                                                            "must be string",
                                                        },
                                                      ]),
                                                      !1
                                                    );
                                                  if (0 !== i) break;
                                                }
                                              }
                                            }
                                            A = 0 === n;
                                          } else A = !0;
                                          if (A)
                                            if (void 0 !== i.setup) {
                                              const r = 0;
                                              if ("string" != typeof i.setup)
                                                return (
                                                  (d.errors = [
                                                    {
                                                      instancePath:
                                                        t +
                                                        "/tests/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(
                                                            /\//g,
                                                            "~1"
                                                          ) +
                                                        "/setup",
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScriptTest/properties/setup/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    },
                                                  ]),
                                                  !1
                                                );
                                              A = 0 === r;
                                            } else A = !0;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            if (0 !== n) break;
                          }
                        }
                        o = 0 === i;
                      } else o = !0;
                  }
                }
              }
            }
          }
          return (d.errors = null), !0;
        }
        const f = Object.prototype.hasOwnProperty;
        function C(
          e,
          {
            instancePath: t = "",
            parentData: r,
            parentDataProperty: i,
            rootData: a = e,
          } = {}
        ) {
          let c = null,
            g = 0;
          if (0 === g) {
            if (!e || "object" != typeof e || Array.isArray(e))
              return (
                (C.errors = [
                  {
                    instancePath: t,
                    schemaPath: "#/type",
                    keyword: "type",
                    params: { type: "object" },
                    message: "must be object",
                  },
                ]),
                !1
              );
            {
              let r;
              if (
                (void 0 === e.entities && (r = "entities")) ||
                (void 0 === e.scripts && (r = "scripts")) ||
                (void 0 === e.supported && (r = "supported")) ||
                (void 0 === e.version && (r = "version"))
              )
                return (
                  (C.errors = [
                    {
                      instancePath: t,
                      schemaPath: "#/required",
                      keyword: "required",
                      params: { missingProperty: r },
                      message: "must have required property '" + r + "'",
                    },
                  ]),
                  !1
                );
              {
                const r = g;
                for (const r in e)
                  if (
                    "$schema" !== r &&
                    "description" !== r &&
                    "entities" !== r &&
                    "name" !== r &&
                    "scenarios" !== r &&
                    "scripts" !== r &&
                    "supported" !== r &&
                    "version" !== r
                  )
                    return (
                      (C.errors = [
                        {
                          instancePath: t,
                          schemaPath: "#/additionalProperties",
                          keyword: "additionalProperties",
                          params: { additionalProperty: r },
                          message: "must NOT have additional properties",
                        },
                      ]),
                      !1
                    );
                if (r === g) {
                  if (void 0 !== e.$schema) {
                    const r = g;
                    if ("string" != typeof e.$schema)
                      return (
                        (C.errors = [
                          {
                            instancePath: t + "/$schema",
                            schemaPath: "#/properties/%24schema/type",
                            keyword: "type",
                            params: { type: "string" },
                            message: "must be string",
                          },
                        ]),
                        !1
                      );
                    var l = r === g;
                  } else l = !0;
                  if (l) {
                    if (void 0 !== e.description) {
                      const r = g;
                      if ("string" != typeof e.description)
                        return (
                          (C.errors = [
                            {
                              instancePath: t + "/description",
                              schemaPath: "#/properties/description/type",
                              keyword: "type",
                              params: { type: "string" },
                              message: "must be string",
                            },
                          ]),
                          !1
                        );
                      l = r === g;
                    } else l = !0;
                    if (l) {
                      if (void 0 !== e.entities) {
                        let r = e.entities;
                        const i = g;
                        if (g === i) {
                          if (!r || "object" != typeof r || Array.isArray(r))
                            return (
                              (C.errors = [
                                {
                                  instancePath: t + "/entities",
                                  schemaPath: "#/properties/entities/type",
                                  keyword: "type",
                                  params: { type: "object" },
                                  message: "must be object",
                                },
                              ]),
                              !1
                            );
                          for (const e in r) {
                            const i = g;
                            if (
                              (s(r[e], {
                                instancePath:
                                  t +
                                  "/entities/" +
                                  e.replace(/~/g, "~0").replace(/\//g, "~1"),
                                parentData: r,
                                parentDataProperty: e,
                                rootData: a,
                              }) ||
                                ((c =
                                  null === c ? s.errors : c.concat(s.errors)),
                                (g = c.length)),
                              i !== g)
                            )
                              break;
                          }
                        }
                        l = i === g;
                      } else l = !0;
                      if (l) {
                        if (void 0 !== e.name) {
                          const r = g;
                          if ("string" != typeof e.name)
                            return (
                              (C.errors = [
                                {
                                  instancePath: t + "/name",
                                  schemaPath: "#/properties/name/type",
                                  keyword: "type",
                                  params: { type: "string" },
                                  message: "must be string",
                                },
                              ]),
                              !1
                            );
                          l = r === g;
                        } else l = !0;
                        if (l) {
                          if (void 0 !== e.scenarios) {
                            let r = e.scenarios;
                            const i = g;
                            if (g === i) {
                              if (
                                !r ||
                                "object" != typeof r ||
                                Array.isArray(r)
                              )
                                return (
                                  (C.errors = [
                                    {
                                      instancePath: t + "/scenarios",
                                      schemaPath: "#/properties/scenarios/type",
                                      keyword: "type",
                                      params: { type: "object" },
                                      message: "must be object",
                                    },
                                  ]),
                                  !1
                                );
                              for (const e in r) {
                                const i = g;
                                if (
                                  (p(r[e], {
                                    instancePath:
                                      t +
                                      "/scenarios/" +
                                      e
                                        .replace(/~/g, "~0")
                                        .replace(/\//g, "~1"),
                                    parentData: r,
                                    parentDataProperty: e,
                                    rootData: a,
                                  }) ||
                                    ((c =
                                      null === c
                                        ? p.errors
                                        : c.concat(p.errors)),
                                    (g = c.length)),
                                  i !== g)
                                )
                                  break;
                              }
                            }
                            l = i === g;
                          } else l = !0;
                          if (l) {
                            if (void 0 !== e.scripts) {
                              let r = e.scripts;
                              const i = g;
                              if (g === i) {
                                if (
                                  !r ||
                                  "object" != typeof r ||
                                  Array.isArray(r)
                                )
                                  return (
                                    (C.errors = [
                                      {
                                        instancePath: t + "/scripts",
                                        schemaPath: "#/properties/scripts/type",
                                        keyword: "type",
                                        params: { type: "object" },
                                        message: "must be object",
                                      },
                                    ]),
                                    !1
                                  );
                                for (const e in r) {
                                  let i = r[e];
                                  const A = g,
                                    s = g;
                                  let l = !1;
                                  const p = g;
                                  if (g == g)
                                    if (
                                      i &&
                                      "object" == typeof i &&
                                      !Array.isArray(i)
                                    ) {
                                      let r;
                                      if (
                                        void 0 === i.script &&
                                        (r = "script")
                                      ) {
                                        const i = {
                                          instancePath:
                                            t +
                                            "/scripts/" +
                                            e
                                              .replace(/~/g, "~0")
                                              .replace(/\//g, "~1"),
                                          schemaPath:
                                            "#/definitions/AuthenticationTemplateScript/required",
                                          keyword: "required",
                                          params: { missingProperty: r },
                                          message:
                                            "must have required property '" +
                                            r +
                                            "'",
                                        };
                                        null === c ? (c = [i]) : c.push(i), g++;
                                      } else {
                                        const r = g;
                                        for (const r in i)
                                          if ("name" !== r && "script" !== r) {
                                            const i = {
                                              instancePath:
                                                t +
                                                "/scripts/" +
                                                e
                                                  .replace(/~/g, "~0")
                                                  .replace(/\//g, "~1"),
                                              schemaPath:
                                                "#/definitions/AuthenticationTemplateScript/additionalProperties",
                                              keyword: "additionalProperties",
                                              params: { additionalProperty: r },
                                              message:
                                                "must NOT have additional properties",
                                            };
                                            null === c ? (c = [i]) : c.push(i),
                                              g++;
                                            break;
                                          }
                                        if (r === g) {
                                          if (void 0 !== i.name) {
                                            const r = g;
                                            if ("string" != typeof i.name) {
                                              const r = {
                                                instancePath:
                                                  t +
                                                  "/scripts/" +
                                                  e
                                                    .replace(/~/g, "~0")
                                                    .replace(/\//g, "~1") +
                                                  "/name",
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScript/properties/name/type",
                                                keyword: "type",
                                                params: { type: "string" },
                                                message: "must be string",
                                              };
                                              null === c
                                                ? (c = [r])
                                                : c.push(r),
                                                g++;
                                            }
                                            var u = r === g;
                                          } else u = !0;
                                          if (u)
                                            if (void 0 !== i.script) {
                                              const r = g;
                                              if ("string" != typeof i.script) {
                                                const r = {
                                                  instancePath:
                                                    t +
                                                    "/scripts/" +
                                                    e
                                                      .replace(/~/g, "~0")
                                                      .replace(/\//g, "~1") +
                                                    "/script",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScript/properties/script/type",
                                                  keyword: "type",
                                                  params: { type: "string" },
                                                  message: "must be string",
                                                };
                                                null === c
                                                  ? (c = [r])
                                                  : c.push(r),
                                                  g++;
                                              }
                                              u = r === g;
                                            } else u = !0;
                                        }
                                      }
                                    } else {
                                      const r = {
                                        instancePath:
                                          t +
                                          "/scripts/" +
                                          e
                                            .replace(/~/g, "~0")
                                            .replace(/\//g, "~1"),
                                        schemaPath:
                                          "#/definitions/AuthenticationTemplateScript/type",
                                        keyword: "type",
                                        params: { type: "object" },
                                        message: "must be object",
                                      };
                                      null === c ? (c = [r]) : c.push(r), g++;
                                    }
                                  var h = p === g;
                                  if (((l = l || h), !l)) {
                                    const A = g;
                                    if (g == g)
                                      if (
                                        i &&
                                        "object" == typeof i &&
                                        !Array.isArray(i)
                                      ) {
                                        let r;
                                        if (
                                          (void 0 === i.lockingType &&
                                            (r = "lockingType")) ||
                                          (void 0 === i.script &&
                                            (r = "script"))
                                        ) {
                                          const i = {
                                            instancePath:
                                              t +
                                              "/scripts/" +
                                              e
                                                .replace(/~/g, "~0")
                                                .replace(/\//g, "~1"),
                                            schemaPath:
                                              "#/definitions/AuthenticationTemplateScriptLocking/required",
                                            keyword: "required",
                                            params: { missingProperty: r },
                                            message:
                                              "must have required property '" +
                                              r +
                                              "'",
                                          };
                                          null === c ? (c = [i]) : c.push(i),
                                            g++;
                                        } else {
                                          const r = g;
                                          for (const r in i)
                                            if (
                                              "lockingType" !== r &&
                                              "name" !== r &&
                                              "script" !== r
                                            ) {
                                              const i = {
                                                instancePath:
                                                  t +
                                                  "/scripts/" +
                                                  e
                                                    .replace(/~/g, "~0")
                                                    .replace(/\//g, "~1"),
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScriptLocking/additionalProperties",
                                                keyword: "additionalProperties",
                                                params: {
                                                  additionalProperty: r,
                                                },
                                                message:
                                                  "must NOT have additional properties",
                                              };
                                              null === c
                                                ? (c = [i])
                                                : c.push(i),
                                                g++;
                                              break;
                                            }
                                          if (r === g) {
                                            if (void 0 !== i.lockingType) {
                                              let r = i.lockingType;
                                              const o = g;
                                              if ("string" != typeof r) {
                                                const r = {
                                                  instancePath:
                                                    t +
                                                    "/scripts/" +
                                                    e
                                                      .replace(/~/g, "~0")
                                                      .replace(/\//g, "~1") +
                                                    "/lockingType",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScriptLocking/properties/lockingType/type",
                                                  keyword: "type",
                                                  params: { type: "string" },
                                                  message: "must be string",
                                                };
                                                null === c
                                                  ? (c = [r])
                                                  : c.push(r),
                                                  g++;
                                              }
                                              if (
                                                "p2sh20" !== r &&
                                                "p2sh32" !== r &&
                                                "standard" !== r
                                              ) {
                                                const r = {
                                                  instancePath:
                                                    t +
                                                    "/scripts/" +
                                                    e
                                                      .replace(/~/g, "~0")
                                                      .replace(/\//g, "~1") +
                                                    "/lockingType",
                                                  schemaPath:
                                                    "#/definitions/AuthenticationTemplateScriptLocking/properties/lockingType/enum",
                                                  keyword: "enum",
                                                  params: {
                                                    allowedValues:
                                                      n.properties.lockingType
                                                        .enum,
                                                  },
                                                  message:
                                                    "must be equal to one of the allowed values",
                                                };
                                                null === c
                                                  ? (c = [r])
                                                  : c.push(r),
                                                  g++;
                                              }
                                              var I = o === g;
                                            } else I = !0;
                                            if (I) {
                                              if (void 0 !== i.name) {
                                                const r = g;
                                                if ("string" != typeof i.name) {
                                                  const r = {
                                                    instancePath:
                                                      t +
                                                      "/scripts/" +
                                                      e
                                                        .replace(/~/g, "~0")
                                                        .replace(/\//g, "~1") +
                                                      "/name",
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScriptLocking/properties/name/type",
                                                    keyword: "type",
                                                    params: { type: "string" },
                                                    message: "must be string",
                                                  };
                                                  null === c
                                                    ? (c = [r])
                                                    : c.push(r),
                                                    g++;
                                                }
                                                I = r === g;
                                              } else I = !0;
                                              if (I)
                                                if (void 0 !== i.script) {
                                                  const r = g;
                                                  if (
                                                    "string" != typeof i.script
                                                  ) {
                                                    const r = {
                                                      instancePath:
                                                        t +
                                                        "/scripts/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(
                                                            /\//g,
                                                            "~1"
                                                          ) +
                                                        "/script",
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScriptLocking/properties/script/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    };
                                                    null === c
                                                      ? (c = [r])
                                                      : c.push(r),
                                                      g++;
                                                  }
                                                  I = r === g;
                                                } else I = !0;
                                            }
                                          }
                                        }
                                      } else {
                                        const r = {
                                          instancePath:
                                            t +
                                            "/scripts/" +
                                            e
                                              .replace(/~/g, "~0")
                                              .replace(/\//g, "~1"),
                                          schemaPath:
                                            "#/definitions/AuthenticationTemplateScriptLocking/type",
                                          keyword: "type",
                                          params: { type: "object" },
                                          message: "must be object",
                                        };
                                        null === c ? (c = [r]) : c.push(r), g++;
                                      }
                                    if (((h = A === g), (l = l || h), !l)) {
                                      const n = g;
                                      if (
                                        (d(i, {
                                          instancePath:
                                            t +
                                            "/scripts/" +
                                            e
                                              .replace(/~/g, "~0")
                                              .replace(/\//g, "~1"),
                                          parentData: r,
                                          parentDataProperty: e,
                                          rootData: a,
                                        }) ||
                                          ((c =
                                            null === c
                                              ? d.errors
                                              : c.concat(d.errors)),
                                          (g = c.length)),
                                        (h = n === g),
                                        (l = l || h),
                                        !l)
                                      ) {
                                        const r = g;
                                        if (g == g)
                                          if (
                                            i &&
                                            "object" == typeof i &&
                                            !Array.isArray(i)
                                          ) {
                                            let r;
                                            if (
                                              (void 0 === i.script &&
                                                (r = "script")) ||
                                              (void 0 === i.unlocks &&
                                                (r = "unlocks"))
                                            ) {
                                              const i = {
                                                instancePath:
                                                  t +
                                                  "/scripts/" +
                                                  e
                                                    .replace(/~/g, "~0")
                                                    .replace(/\//g, "~1"),
                                                schemaPath:
                                                  "#/definitions/AuthenticationTemplateScriptUnlocking/required",
                                                keyword: "required",
                                                params: { missingProperty: r },
                                                message:
                                                  "must have required property '" +
                                                  r +
                                                  "'",
                                              };
                                              null === c
                                                ? (c = [i])
                                                : c.push(i),
                                                g++;
                                            } else {
                                              const r = g;
                                              for (const r in i)
                                                if (!f.call(o.properties, r)) {
                                                  const i = {
                                                    instancePath:
                                                      t +
                                                      "/scripts/" +
                                                      e
                                                        .replace(/~/g, "~0")
                                                        .replace(/\//g, "~1"),
                                                    schemaPath:
                                                      "#/definitions/AuthenticationTemplateScriptUnlocking/additionalProperties",
                                                    keyword:
                                                      "additionalProperties",
                                                    params: {
                                                      additionalProperty: r,
                                                    },
                                                    message:
                                                      "must NOT have additional properties",
                                                  };
                                                  null === c
                                                    ? (c = [i])
                                                    : c.push(i),
                                                    g++;
                                                  break;
                                                }
                                              if (r === g) {
                                                if (void 0 !== i.ageLock) {
                                                  const r = g;
                                                  if (
                                                    "string" != typeof i.ageLock
                                                  ) {
                                                    const r = {
                                                      instancePath:
                                                        t +
                                                        "/scripts/" +
                                                        e
                                                          .replace(/~/g, "~0")
                                                          .replace(
                                                            /\//g,
                                                            "~1"
                                                          ) +
                                                        "/ageLock",
                                                      schemaPath:
                                                        "#/definitions/AuthenticationTemplateScriptUnlocking/properties/ageLock/type",
                                                      keyword: "type",
                                                      params: {
                                                        type: "string",
                                                      },
                                                      message: "must be string",
                                                    };
                                                    null === c
                                                      ? (c = [r])
                                                      : c.push(r),
                                                      g++;
                                                  }
                                                  var B = r === g;
                                                } else B = !0;
                                                if (B) {
                                                  if (void 0 !== i.estimate) {
                                                    const r = g;
                                                    if (
                                                      "string" !=
                                                      typeof i.estimate
                                                    ) {
                                                      const r = {
                                                        instancePath:
                                                          t +
                                                          "/scripts/" +
                                                          e
                                                            .replace(/~/g, "~0")
                                                            .replace(
                                                              /\//g,
                                                              "~1"
                                                            ) +
                                                          "/estimate",
                                                        schemaPath:
                                                          "#/definitions/AuthenticationTemplateScriptUnlocking/properties/estimate/type",
                                                        keyword: "type",
                                                        params: {
                                                          type: "string",
                                                        },
                                                        message:
                                                          "must be string",
                                                      };
                                                      null === c
                                                        ? (c = [r])
                                                        : c.push(r),
                                                        g++;
                                                    }
                                                    B = r === g;
                                                  } else B = !0;
                                                  if (B) {
                                                    if (void 0 !== i.fails) {
                                                      let r = i.fails;
                                                      const n = g;
                                                      if (g === n)
                                                        if (Array.isArray(r)) {
                                                          const i = r.length;
                                                          for (
                                                            let n = 0;
                                                            n < i;
                                                            n++
                                                          ) {
                                                            const i = g;
                                                            if (
                                                              "string" !=
                                                              typeof r[n]
                                                            ) {
                                                              const r = {
                                                                instancePath:
                                                                  t +
                                                                  "/scripts/" +
                                                                  e
                                                                    .replace(
                                                                      /~/g,
                                                                      "~0"
                                                                    )
                                                                    .replace(
                                                                      /\//g,
                                                                      "~1"
                                                                    ) +
                                                                  "/fails/" +
                                                                  n,
                                                                schemaPath:
                                                                  "#/definitions/AuthenticationTemplateScriptUnlocking/properties/fails/items/type",
                                                                keyword: "type",
                                                                params: {
                                                                  type: "string",
                                                                },
                                                                message:
                                                                  "must be string",
                                                              };
                                                              null === c
                                                                ? (c = [r])
                                                                : c.push(r),
                                                                g++;
                                                            }
                                                            if (i !== g) break;
                                                          }
                                                        } else {
                                                          const r = {
                                                            instancePath:
                                                              t +
                                                              "/scripts/" +
                                                              e
                                                                .replace(
                                                                  /~/g,
                                                                  "~0"
                                                                )
                                                                .replace(
                                                                  /\//g,
                                                                  "~1"
                                                                ) +
                                                              "/fails",
                                                            schemaPath:
                                                              "#/definitions/AuthenticationTemplateScriptUnlocking/properties/fails/type",
                                                            keyword: "type",
                                                            params: {
                                                              type: "array",
                                                            },
                                                            message:
                                                              "must be array",
                                                          };
                                                          null === c
                                                            ? (c = [r])
                                                            : c.push(r),
                                                            g++;
                                                        }
                                                      B = n === g;
                                                    } else B = !0;
                                                    if (B) {
                                                      if (
                                                        void 0 !== i.invalid
                                                      ) {
                                                        let r = i.invalid;
                                                        const n = g;
                                                        if (g === n)
                                                          if (
                                                            Array.isArray(r)
                                                          ) {
                                                            const i = r.length;
                                                            for (
                                                              let n = 0;
                                                              n < i;
                                                              n++
                                                            ) {
                                                              const i = g;
                                                              if (
                                                                "string" !=
                                                                typeof r[n]
                                                              ) {
                                                                const r = {
                                                                  instancePath:
                                                                    t +
                                                                    "/scripts/" +
                                                                    e
                                                                      .replace(
                                                                        /~/g,
                                                                        "~0"
                                                                      )
                                                                      .replace(
                                                                        /\//g,
                                                                        "~1"
                                                                      ) +
                                                                    "/invalid/" +
                                                                    n,
                                                                  schemaPath:
                                                                    "#/definitions/AuthenticationTemplateScriptUnlocking/properties/invalid/items/type",
                                                                  keyword:
                                                                    "type",
                                                                  params: {
                                                                    type: "string",
                                                                  },
                                                                  message:
                                                                    "must be string",
                                                                };
                                                                null === c
                                                                  ? (c = [r])
                                                                  : c.push(r),
                                                                  g++;
                                                              }
                                                              if (i !== g)
                                                                break;
                                                            }
                                                          } else {
                                                            const r = {
                                                              instancePath:
                                                                t +
                                                                "/scripts/" +
                                                                e
                                                                  .replace(
                                                                    /~/g,
                                                                    "~0"
                                                                  )
                                                                  .replace(
                                                                    /\//g,
                                                                    "~1"
                                                                  ) +
                                                                "/invalid",
                                                              schemaPath:
                                                                "#/definitions/AuthenticationTemplateScriptUnlocking/properties/invalid/type",
                                                              keyword: "type",
                                                              params: {
                                                                type: "array",
                                                              },
                                                              message:
                                                                "must be array",
                                                            };
                                                            null === c
                                                              ? (c = [r])
                                                              : c.push(r),
                                                              g++;
                                                          }
                                                        B = n === g;
                                                      } else B = !0;
                                                      if (B) {
                                                        if (void 0 !== i.name) {
                                                          const r = g;
                                                          if (
                                                            "string" !=
                                                            typeof i.name
                                                          ) {
                                                            const r = {
                                                              instancePath:
                                                                t +
                                                                "/scripts/" +
                                                                e
                                                                  .replace(
                                                                    /~/g,
                                                                    "~0"
                                                                  )
                                                                  .replace(
                                                                    /\//g,
                                                                    "~1"
                                                                  ) +
                                                                "/name",
                                                              schemaPath:
                                                                "#/definitions/AuthenticationTemplateScriptUnlocking/properties/name/type",
                                                              keyword: "type",
                                                              params: {
                                                                type: "string",
                                                              },
                                                              message:
                                                                "must be string",
                                                            };
                                                            null === c
                                                              ? (c = [r])
                                                              : c.push(r),
                                                              g++;
                                                          }
                                                          B = r === g;
                                                        } else B = !0;
                                                        if (B) {
                                                          if (
                                                            void 0 !== i.passes
                                                          ) {
                                                            let r = i.passes;
                                                            const n = g;
                                                            if (g === n)
                                                              if (
                                                                Array.isArray(r)
                                                              ) {
                                                                const i =
                                                                  r.length;
                                                                for (
                                                                  let n = 0;
                                                                  n < i;
                                                                  n++
                                                                ) {
                                                                  const i = g;
                                                                  if (
                                                                    "string" !=
                                                                    typeof r[n]
                                                                  ) {
                                                                    const r = {
                                                                      instancePath:
                                                                        t +
                                                                        "/scripts/" +
                                                                        e
                                                                          .replace(
                                                                            /~/g,
                                                                            "~0"
                                                                          )
                                                                          .replace(
                                                                            /\//g,
                                                                            "~1"
                                                                          ) +
                                                                        "/passes/" +
                                                                        n,
                                                                      schemaPath:
                                                                        "#/definitions/AuthenticationTemplateScriptUnlocking/properties/passes/items/type",
                                                                      keyword:
                                                                        "type",
                                                                      params: {
                                                                        type: "string",
                                                                      },
                                                                      message:
                                                                        "must be string",
                                                                    };
                                                                    null === c
                                                                      ? (c = [
                                                                          r,
                                                                        ])
                                                                      : c.push(
                                                                          r
                                                                        ),
                                                                      g++;
                                                                  }
                                                                  if (i !== g)
                                                                    break;
                                                                }
                                                              } else {
                                                                const r = {
                                                                  instancePath:
                                                                    t +
                                                                    "/scripts/" +
                                                                    e
                                                                      .replace(
                                                                        /~/g,
                                                                        "~0"
                                                                      )
                                                                      .replace(
                                                                        /\//g,
                                                                        "~1"
                                                                      ) +
                                                                    "/passes",
                                                                  schemaPath:
                                                                    "#/definitions/AuthenticationTemplateScriptUnlocking/properties/passes/type",
                                                                  keyword:
                                                                    "type",
                                                                  params: {
                                                                    type: "array",
                                                                  },
                                                                  message:
                                                                    "must be array",
                                                                };
                                                                null === c
                                                                  ? (c = [r])
                                                                  : c.push(r),
                                                                  g++;
                                                              }
                                                            B = n === g;
                                                          } else B = !0;
                                                          if (B) {
                                                            if (
                                                              void 0 !==
                                                              i.script
                                                            ) {
                                                              const r = g;
                                                              if (
                                                                "string" !=
                                                                typeof i.script
                                                              ) {
                                                                const r = {
                                                                  instancePath:
                                                                    t +
                                                                    "/scripts/" +
                                                                    e
                                                                      .replace(
                                                                        /~/g,
                                                                        "~0"
                                                                      )
                                                                      .replace(
                                                                        /\//g,
                                                                        "~1"
                                                                      ) +
                                                                    "/script",
                                                                  schemaPath:
                                                                    "#/definitions/AuthenticationTemplateScriptUnlocking/properties/script/type",
                                                                  keyword:
                                                                    "type",
                                                                  params: {
                                                                    type: "string",
                                                                  },
                                                                  message:
                                                                    "must be string",
                                                                };
                                                                null === c
                                                                  ? (c = [r])
                                                                  : c.push(r),
                                                                  g++;
                                                              }
                                                              B = r === g;
                                                            } else B = !0;
                                                            if (B) {
                                                              if (
                                                                void 0 !==
                                                                i.timeLockType
                                                              ) {
                                                                let r =
                                                                  i.timeLockType;
                                                                const n = g;
                                                                if (
                                                                  "string" !=
                                                                  typeof r
                                                                ) {
                                                                  const r = {
                                                                    instancePath:
                                                                      t +
                                                                      "/scripts/" +
                                                                      e
                                                                        .replace(
                                                                          /~/g,
                                                                          "~0"
                                                                        )
                                                                        .replace(
                                                                          /\//g,
                                                                          "~1"
                                                                        ) +
                                                                      "/timeLockType",
                                                                    schemaPath:
                                                                      "#/definitions/AuthenticationTemplateScriptUnlocking/properties/timeLockType/type",
                                                                    keyword:
                                                                      "type",
                                                                    params: {
                                                                      type: "string",
                                                                    },
                                                                    message:
                                                                      "must be string",
                                                                  };
                                                                  null === c
                                                                    ? (c = [r])
                                                                    : c.push(r),
                                                                    g++;
                                                                }
                                                                if (
                                                                  "height" !==
                                                                    r &&
                                                                  "timestamp" !==
                                                                    r
                                                                ) {
                                                                  const r = {
                                                                    instancePath:
                                                                      t +
                                                                      "/scripts/" +
                                                                      e
                                                                        .replace(
                                                                          /~/g,
                                                                          "~0"
                                                                        )
                                                                        .replace(
                                                                          /\//g,
                                                                          "~1"
                                                                        ) +
                                                                      "/timeLockType",
                                                                    schemaPath:
                                                                      "#/definitions/AuthenticationTemplateScriptUnlocking/properties/timeLockType/enum",
                                                                    keyword:
                                                                      "enum",
                                                                    params: {
                                                                      allowedValues:
                                                                        o
                                                                          .properties
                                                                          .timeLockType
                                                                          .enum,
                                                                    },
                                                                    message:
                                                                      "must be equal to one of the allowed values",
                                                                  };
                                                                  null === c
                                                                    ? (c = [r])
                                                                    : c.push(r),
                                                                    g++;
                                                                }
                                                                B = n === g;
                                                              } else B = !0;
                                                              if (B)
                                                                if (
                                                                  void 0 !==
                                                                  i.unlocks
                                                                ) {
                                                                  const r = g;
                                                                  if (
                                                                    "string" !=
                                                                    typeof i.unlocks
                                                                  ) {
                                                                    const r = {
                                                                      instancePath:
                                                                        t +
                                                                        "/scripts/" +
                                                                        e
                                                                          .replace(
                                                                            /~/g,
                                                                            "~0"
                                                                          )
                                                                          .replace(
                                                                            /\//g,
                                                                            "~1"
                                                                          ) +
                                                                        "/unlocks",
                                                                      schemaPath:
                                                                        "#/definitions/AuthenticationTemplateScriptUnlocking/properties/unlocks/type",
                                                                      keyword:
                                                                        "type",
                                                                      params: {
                                                                        type: "string",
                                                                      },
                                                                      message:
                                                                        "must be string",
                                                                    };
                                                                    null === c
                                                                      ? (c = [
                                                                          r,
                                                                        ])
                                                                      : c.push(
                                                                          r
                                                                        ),
                                                                      g++;
                                                                  }
                                                                  B = r === g;
                                                                } else B = !0;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          } else {
                                            const r = {
                                              instancePath:
                                                t +
                                                "/scripts/" +
                                                e
                                                  .replace(/~/g, "~0")
                                                  .replace(/\//g, "~1"),
                                              schemaPath:
                                                "#/definitions/AuthenticationTemplateScriptUnlocking/type",
                                              keyword: "type",
                                              params: { type: "object" },
                                              message: "must be object",
                                            };
                                            null === c ? (c = [r]) : c.push(r),
                                              g++;
                                          }
                                        (h = r === g), (l = l || h);
                                      }
                                    }
                                  }
                                  if (!l) {
                                    const r = {
                                      instancePath:
                                        t +
                                        "/scripts/" +
                                        e
                                          .replace(/~/g, "~0")
                                          .replace(/\//g, "~1"),
                                      schemaPath:
                                        "#/properties/scripts/additionalProperties/anyOf",
                                      keyword: "anyOf",
                                      params: {},
                                      message: "must match a schema in anyOf",
                                    };
                                    return (
                                      null === c ? (c = [r]) : c.push(r),
                                      g++,
                                      (C.errors = c),
                                      !1
                                    );
                                  }
                                  if (
                                    ((g = s),
                                    null !== c &&
                                      (s ? (c.length = s) : (c = null)),
                                    A !== g)
                                  )
                                    break;
                                }
                              }
                              l = i === g;
                            } else l = !0;
                            if (l) {
                              if (void 0 !== e.supported) {
                                let r = e.supported;
                                const i = g;
                                if (g === i) {
                                  if (!Array.isArray(r))
                                    return (
                                      (C.errors = [
                                        {
                                          instancePath: t + "/supported",
                                          schemaPath:
                                            "#/properties/supported/type",
                                          keyword: "type",
                                          params: { type: "array" },
                                          message: "must be array",
                                        },
                                      ]),
                                      !1
                                    );
                                  {
                                    const e = r.length;
                                    for (let i = 0; i < e; i++) {
                                      let e = r[i];
                                      const n = g;
                                      if ("string" != typeof e)
                                        return (
                                          (C.errors = [
                                            {
                                              instancePath:
                                                t + "/supported/" + i,
                                              schemaPath:
                                                "#/definitions/AuthenticationVirtualMachineIdentifier/type",
                                              keyword: "type",
                                              params: { type: "string" },
                                              message: "must be string",
                                            },
                                          ]),
                                          !1
                                        );
                                      if (
                                        "BCH_2020_05" !== e &&
                                        "BCH_2021_05" !== e &&
                                        "BCH_2022_05" !== e &&
                                        "BCH_2023_05" !== e &&
                                        "BCH_SPEC" !== e &&
                                        "BSV_2020_02" !== e &&
                                        "BSV_SPEC" !== e &&
                                        "BTC_2017_08" !== e &&
                                        "BTC_SPEC" !== e &&
                                        "XEC_2020_05" !== e &&
                                        "XEC_SPEC" !== e
                                      )
                                        return (
                                          (C.errors = [
                                            {
                                              instancePath:
                                                t + "/supported/" + i,
                                              schemaPath:
                                                "#/definitions/AuthenticationVirtualMachineIdentifier/enum",
                                              keyword: "enum",
                                              params: { allowedValues: A.enum },
                                              message:
                                                "must be equal to one of the allowed values",
                                            },
                                          ]),
                                          !1
                                        );
                                      if (n !== g) break;
                                    }
                                  }
                                }
                                l = i === g;
                              } else l = !0;
                              if (l)
                                if (void 0 !== e.version) {
                                  let r = e.version;
                                  const i = g;
                                  if ("number" != typeof r || !isFinite(r))
                                    return (
                                      (C.errors = [
                                        {
                                          instancePath: t + "/version",
                                          schemaPath:
                                            "#/properties/version/type",
                                          keyword: "type",
                                          params: { type: "number" },
                                          message: "must be number",
                                        },
                                      ]),
                                      !1
                                    );
                                  if (0 !== r)
                                    return (
                                      (C.errors = [
                                        {
                                          instancePath: t + "/version",
                                          schemaPath:
                                            "#/properties/version/const",
                                          keyword: "const",
                                          params: { allowedValue: 0 },
                                          message: "must be equal to constant",
                                        },
                                      ]),
                                      !1
                                    );
                                  l = i === g;
                                } else l = !0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          return (C.errors = c), 0 === g;
        }
        const B = (e) => {
          const t = ((e, t) => {
            try {
              const r = "string" == typeof e ? JSON.parse(e) : e;
              return t(r)
                ? r
                : i.errors
                    .map((e) => `${e.instancePath}: ${e.message}`)
                    .join(",");
            } catch (e) {
              return `Invalid JSON. ${String(e)}`;
            }
          })(e, i);
          return "string" == typeof t
            ? `Authentication template import failed:${t}`
            : t;
        };
      },
      51183: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { y4: () => A });
            const e = ({ index: e, result: t, type: r }) => ({
                errors: t.errors.map((t) => ({
                  ...t,
                  error: `Failed compilation of ${r} directive at index "${e}": ${t.error}`,
                })),
                index: e,
                ...("parse" === t.errorType ? {} : { resolved: t.resolve }),
                type: r,
              }),
              n = ({ outputTemplate: t, index: r }) => {
                if ("script" in t.lockingBytecode) {
                  const i = t.lockingBytecode,
                    n = void 0 === i.data ? {} : i.data,
                    o = i.compiler.generateBytecode({
                      data: n,
                      debug: !0,
                      scriptId: i.script,
                    });
                  return o.success
                    ? {
                        lockingBytecode: o.bytecode,
                        ...(void 0 === t.token ? {} : { token: t.token }),
                        valueSatoshis: t.valueSatoshis,
                      }
                    : e({ index: r, result: o, type: "locking" });
                }
                return {
                  lockingBytecode: t.lockingBytecode.slice(),
                  ...(void 0 === t.token ? {} : { token: t.token }),
                  valueSatoshis: t.valueSatoshis,
                };
              },
              o = ({ inputTemplate: t, index: r, template: i, outputs: n }) => {
                if ("script" in t.unlockingBytecode) {
                  const o = t.unlockingBytecode,
                    A = [];
                  A[r] = {
                    lockingBytecode: Uint8Array.of(),
                    ...(void 0 === t.unlockingBytecode.token
                      ? {}
                      : { token: t.unlockingBytecode.token }),
                    valueSatoshis: t.unlockingBytecode.valueSatoshis,
                  };
                  const a = o.compiler.generateBytecode({
                    data: {
                      ...o.data,
                      compilationContext: {
                        inputIndex: r,
                        sourceOutputs: A,
                        transaction: {
                          inputs: i.inputs,
                          locktime: i.locktime,
                          outputs: n,
                          version: i.version,
                        },
                      },
                    },
                    debug: !0,
                    scriptId: o.script,
                  });
                  return a.success
                    ? {
                        outpointIndex: t.outpointIndex,
                        outpointTransactionHash:
                          t.outpointTransactionHash.slice(),
                        sequenceNumber: t.sequenceNumber,
                        unlockingBytecode: a.bytecode,
                      }
                    : e({ index: r, result: a, type: "unlocking" });
                }
                return {
                  outpointIndex: t.outpointIndex,
                  outpointTransactionHash: t.outpointTransactionHash.slice(),
                  sequenceNumber: t.sequenceNumber,
                  unlockingBytecode: t.unlockingBytecode.slice(),
                };
              },
              A = (e) => {
                const t = e.outputs.map((e, t) =>
                    n({ index: t, outputTemplate: e })
                  ),
                  r = t.filter((e) => "errors" in e);
                if (r.length > 0)
                  return {
                    completions: t
                      .map((e, t) =>
                        "lockingBytecode" in e
                          ? { index: t, output: e, type: "output" }
                          : e
                      )
                      .filter((e) => "output" in e),
                    errors: r,
                    stage: "outputs",
                    success: !1,
                  };
                const i = t,
                  A = e.inputs.map((t, r) =>
                    o({ index: r, inputTemplate: t, outputs: i, template: e })
                  ),
                  a = A.filter((e) => "errors" in e);
                return a.length > 0
                  ? {
                      completions: A.map((e, t) =>
                        "unlockingBytecode" in e
                          ? { index: t, input: e, type: "input" }
                          : e
                      ).filter((e) => "input" in e),
                      errors: a,
                      stage: "inputs",
                      success: !1,
                    }
                  : {
                      success: !0,
                      transaction: {
                        inputs: A,
                        locktime: e.locktime,
                        outputs: i,
                        version: e.version,
                      },
                    };
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      36974: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { b: () => n, n: () => s });
            var n,
              o = r(25121),
              A = r(44115),
              a = e([o, A]);
            ([o, A] = a.then ? (await a)() : a),
              (function (e) {
                (e[(e.maximumBytecodeLength = 1e4)] = "maximumBytecodeLength"),
                  (e[(e.maximumDataCarrierBytes = 223)] =
                    "maximumDataCarrierBytes"),
                  (e[(e.maximumOperationCount = 201)] =
                    "maximumOperationCount"),
                  (e[(e.maximumStackDepth = 1e3)] = "maximumStackDepth"),
                  (e[(e.maximumStackItemLength = 520)] =
                    "maximumStackItemLength"),
                  (e[(e.maximumStandardVersion = 2)] =
                    "maximumStandardVersion"),
                  (e[(e.maximumStandardUnlockingBytecodeLength = 1650)] =
                    "maximumStandardUnlockingBytecodeLength"),
                  (e[(e.minimumTransactionSize = 65)] =
                    "minimumTransactionSize"),
                  (e[(e.maximumStandardTransactionSize = 1e5)] =
                    "maximumStandardTransactionSize"),
                  (e[(e.maximumTransactionSize = 1e6)] =
                    "maximumTransactionSize"),
                  (e[(e.maximumVmNumberLength = 8)] = "maximumVmNumberLength"),
                  (e.minVmNumber = "-9223372036854775807"),
                  (e.maxVmNumber = "9223372036854775807"),
                  (e[(e.schnorrSignatureLength = 64)] =
                    "schnorrSignatureLength"),
                  (e[(e.maximumCommitmentLength = 40)] =
                    "maximumCommitmentLength");
              })(n || (n = {}));
            const s = [
              ...o.GA,
              A.BU.allOutputsAllUtxos,
              A.BU.correspondingOutputAllUtxos,
              A.BU.noOutputsAllUtxos,
            ];
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      5846: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { IT: () => B, S8: () => C, hd: () => f, rB: () => d });
            var n = r(12909),
              o = r(47726),
              A = r(34684),
              a = r(78417),
              s = r(85671),
              c = r(69362),
              g = r(10648),
              l = r(44115),
              u = r(25121),
              h = r(27021),
              I = r(36974),
              p = e([n, a, s, g, I, l, o, u, h]);
            [n, a, s, g, I, l, o, u, h] = p.then ? (await p)() : p;
            const d =
                (
                  { secp256k1: e, sha256: t } = {
                    secp256k1: n.kA,
                    sha256: n.JQ,
                  }
                ) =>
                (r) =>
                  (0, a.iD)(r, (r, [i, n]) => {
                    if (!(0, s.GH)(n))
                      return (0, c.O)(r, c.a.invalidPublicKeyEncoding);
                    if (!(0, g.Xj)(i, I.n))
                      return (0, c.O)(
                        r,
                        c.a.invalidSignatureEncoding,
                        `Transaction signature (including signing serialization): ${(0,
                        A.UM)(i)}`
                      );
                    const h = (0, s.V6)(r.instructions).subarray(
                        r.lastCodeSeparator + 1
                      ),
                      { signingSerializationType: p, signature: d } = (0, g.pL)(
                        i
                      ),
                      f = (0, l.Y8)(
                        r.program,
                        { coveredBytecode: h, signingSerializationType: p },
                        t
                      ),
                      C = (0, o.W)(f, t);
                    r.signedMessages.push({ digest: C, serialization: f });
                    const B =
                      d.length === u.gk.schnorrSignatureLength
                        ? e.verifySignatureSchnorr(d, n, C)
                        : e.verifySignatureDERLowS(d, n, C);
                    return B || 0 === d.length
                      ? (0, a.t0)(r, (0, s.z0)(B))
                      : (0, c.O)(r, c.a.nonNullSignatureFailure);
                  }),
              f =
                (
                  { secp256k1: e, sha256: t } = {
                    secp256k1: n.kA,
                    sha256: n.JQ,
                  }
                ) =>
                (r) =>
                  (0, a.ff)(r, (r, i) => {
                    const n = Number(i);
                    if (n < 0) return (0, c.O)(r, c.a.invalidNaturalNumber);
                    if (n > 20)
                      return (0, c.O)(
                        r,
                        c.a.exceedsMaximumMultisigPublicKeyCount
                      );
                    const h = n > 0 ? r.stack.splice(-n) : [];
                    return (
                      (r.operationCount += n),
                      r.operationCount > u.gk.maximumOperationCount
                        ? (0, c.O)(r, c.a.exceededMaximumOperationCount)
                        : (0, a.ff)(r, (i, p) => {
                            const d = Number(p);
                            if (d < 0)
                              return (0, c.O)(i, c.a.invalidNaturalNumber);
                            if (d > n)
                              return (0, c.O)(i, c.a.insufficientPublicKeys);
                            const f = d > 0 ? i.stack.splice(-d) : [];
                            return (0, a.t9)(i, (i, [n]) => {
                              if (0 !== n.length)
                                return (0, c.O)(i, c.a.invalidProtocolBugValue);
                              const p = (0, s.V6)(i.instructions).subarray(
                                i.lastCodeSeparator + 1
                              );
                              let C = 0,
                                B = f.length,
                                E = h.length;
                              for (
                                ;
                                B > 0 && E > 0 && C + E >= B && C !== d;

                              ) {
                                const n = h[E - 1],
                                  a = f[B - 1];
                                if (!(0, s.GH)(n))
                                  return (0, c.O)(
                                    i,
                                    c.a.invalidPublicKeyEncoding
                                  );
                                if (!(0, g.Xj)(a, I.n))
                                  return (0, c.O)(
                                    i,
                                    c.a.invalidSignatureEncoding,
                                    `Transaction signature (including signing serialization type): ${(0,
                                    A.UM)(a)}`
                                  );
                                const {
                                    signingSerializationType: d,
                                    signature: y,
                                  } = (0, g.pL)(a),
                                  m = (0, l.Y8)(
                                    r.program,
                                    {
                                      coveredBytecode: p,
                                      signingSerializationType: d,
                                    },
                                    t
                                  ),
                                  Q = (0, o.W)(m, t);
                                if (
                                  (i.signedMessages.push({
                                    digest: Q,
                                    serialization: m,
                                  }),
                                  y.length === u.gk.schnorrSignatureLength)
                                )
                                  return (0, c.O)(
                                    i,
                                    c.a.schnorrSizedSignatureInCheckMultiSig
                                  );
                                e.verifySignatureDERLowS(y, n, Q) &&
                                  ((C += 1), (B -= 1)),
                                  (E -= 1);
                              }
                              const y = C === d;
                              return y || f.every((e) => 0 === e.length)
                                ? (0, a.t0)(i, (0, s.z0)(y))
                                : (0, c.O)(i, c.a.nonNullSignatureFailure);
                            });
                          })
                    );
                  }),
              C = (
                { secp256k1: e, sha256: t } = { secp256k1: n.kA, sha256: n.JQ }
              ) => (0, a.yJ)(d({ secp256k1: e, sha256: t }), h.AG),
              B = ({ secp256k1: e, sha256: t }) =>
                (0, a.yJ)(f({ secp256k1: e, sha256: t }), h.AG);
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      38175: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { J: () => b });
            var n = r(11779),
              o = r(12909),
              A = r(34684),
              a = r(30861),
              s = r(67289),
              c = r(59136),
              g = r(85671),
              l = r(69362),
              u = r(78417),
              h = r(27021),
              I = r(23036),
              p = r(81011),
              d = r(86852),
              f = r(19354),
              C = r(92922),
              B = r(45127),
              E = r(3202),
              y = r(43272),
              m = r(36974),
              Q = r(5846),
              v = r(16043),
              S = r(17720),
              w = e([o, s, c, g, m, n, u, h, p, d, f, C, B, Q, E, y, S, a]);
            [o, s, c, g, m, n, u, h, p, d, f, C, B, Q, E, y, S, a] = w.then
              ? (await w)()
              : w;
            const b = (
              e = !0,
              { ripemd160: t, secp256k1: r, sha1: i, sha256: w } = {
                ripemd160: o.bP,
                secp256k1: o.kA,
                sha1: o.q4,
                sha256: o.JQ,
              }
            ) => {
              const b = (0, s.fk)();
              return {
                clone: c.w3,
                continue: (e) =>
                  void 0 === e.error && e.ip < e.instructions.length,
                evaluate: (e, t) => {
                  const { unlockingBytecode: r } =
                      e.transaction.inputs[e.inputIndex],
                    { lockingBytecode: i } = e.sourceOutputs[e.inputIndex],
                    o = (0, g.og)(r),
                    A = (0, g.og)(i),
                    a = (0, c.Rd)({ instructions: o, program: e, stack: [] });
                  if (r.length > m.b.maximumBytecodeLength)
                    return (0, l.O)(
                      a,
                      `The provided unlocking bytecode (${r.length} bytes) exceeds the maximum bytecode length (${m.b.maximumBytecodeLength} bytes).`
                    );
                  if ((0, g.Tz)(o))
                    return (0, l.O)(a, l.a.malformedUnlockingBytecode);
                  if (!(0, g.Au)(r)) return (0, l.O)(a, l.a.requiresPushOnly);
                  if (i.length > m.b.maximumBytecodeLength)
                    return (0, l.O)(
                      a,
                      l.a.exceededMaximumBytecodeLengthLocking
                    );
                  if ((0, g.Tz)(A))
                    return (0, l.O)(a, l.a.malformedLockingBytecode);
                  const s = t(a);
                  if (void 0 !== s.error) return s;
                  if (0 !== s.controlStack.length)
                    return (0, l.O)(a, l.a.nonEmptyControlStack);
                  const u = t(
                      (0, c.Rd)({ instructions: A, program: e, stack: s.stack })
                    ),
                    h = (0, n.m1)(i),
                    I = (0, n.pI)(i);
                  if (!h && !I) return u;
                  const p = (0, c.U)(s.stack),
                    d = p.pop() ?? Uint8Array.of();
                  if (h && 0 === p.length && (0, g.yC)(d)) return u;
                  const f = (0, g.og)(d);
                  return (0, g.Tz)(f)
                    ? { ...u, error: l.a.malformedP2shBytecode }
                    : t((0, c.Rd)({ instructions: f, program: e, stack: p }));
                },
                every: (e) =>
                  e.stack.length + e.alternateStack.length >
                  m.b.maximumStackDepth
                    ? (0, l.O)(e, l.a.exceededMaximumStackDepth)
                    : e.operationCount > m.b.maximumOperationCount
                    ? (0, l.O)(e, l.a.exceededMaximumOperationCount)
                    : e,
                operations: {
                  [v.Vv.OP_0]: b,
                  [v.Vv.OP_PUSHBYTES_1]: b,
                  [v.Vv.OP_PUSHBYTES_2]: b,
                  [v.Vv.OP_PUSHBYTES_3]: b,
                  [v.Vv.OP_PUSHBYTES_4]: b,
                  [v.Vv.OP_PUSHBYTES_5]: b,
                  [v.Vv.OP_PUSHBYTES_6]: b,
                  [v.Vv.OP_PUSHBYTES_7]: b,
                  [v.Vv.OP_PUSHBYTES_8]: b,
                  [v.Vv.OP_PUSHBYTES_9]: b,
                  [v.Vv.OP_PUSHBYTES_10]: b,
                  [v.Vv.OP_PUSHBYTES_11]: b,
                  [v.Vv.OP_PUSHBYTES_12]: b,
                  [v.Vv.OP_PUSHBYTES_13]: b,
                  [v.Vv.OP_PUSHBYTES_14]: b,
                  [v.Vv.OP_PUSHBYTES_15]: b,
                  [v.Vv.OP_PUSHBYTES_16]: b,
                  [v.Vv.OP_PUSHBYTES_17]: b,
                  [v.Vv.OP_PUSHBYTES_18]: b,
                  [v.Vv.OP_PUSHBYTES_19]: b,
                  [v.Vv.OP_PUSHBYTES_20]: b,
                  [v.Vv.OP_PUSHBYTES_21]: b,
                  [v.Vv.OP_PUSHBYTES_22]: b,
                  [v.Vv.OP_PUSHBYTES_23]: b,
                  [v.Vv.OP_PUSHBYTES_24]: b,
                  [v.Vv.OP_PUSHBYTES_25]: b,
                  [v.Vv.OP_PUSHBYTES_26]: b,
                  [v.Vv.OP_PUSHBYTES_27]: b,
                  [v.Vv.OP_PUSHBYTES_28]: b,
                  [v.Vv.OP_PUSHBYTES_29]: b,
                  [v.Vv.OP_PUSHBYTES_30]: b,
                  [v.Vv.OP_PUSHBYTES_31]: b,
                  [v.Vv.OP_PUSHBYTES_32]: b,
                  [v.Vv.OP_PUSHBYTES_33]: b,
                  [v.Vv.OP_PUSHBYTES_34]: b,
                  [v.Vv.OP_PUSHBYTES_35]: b,
                  [v.Vv.OP_PUSHBYTES_36]: b,
                  [v.Vv.OP_PUSHBYTES_37]: b,
                  [v.Vv.OP_PUSHBYTES_38]: b,
                  [v.Vv.OP_PUSHBYTES_39]: b,
                  [v.Vv.OP_PUSHBYTES_40]: b,
                  [v.Vv.OP_PUSHBYTES_41]: b,
                  [v.Vv.OP_PUSHBYTES_42]: b,
                  [v.Vv.OP_PUSHBYTES_43]: b,
                  [v.Vv.OP_PUSHBYTES_44]: b,
                  [v.Vv.OP_PUSHBYTES_45]: b,
                  [v.Vv.OP_PUSHBYTES_46]: b,
                  [v.Vv.OP_PUSHBYTES_47]: b,
                  [v.Vv.OP_PUSHBYTES_48]: b,
                  [v.Vv.OP_PUSHBYTES_49]: b,
                  [v.Vv.OP_PUSHBYTES_50]: b,
                  [v.Vv.OP_PUSHBYTES_51]: b,
                  [v.Vv.OP_PUSHBYTES_52]: b,
                  [v.Vv.OP_PUSHBYTES_53]: b,
                  [v.Vv.OP_PUSHBYTES_54]: b,
                  [v.Vv.OP_PUSHBYTES_55]: b,
                  [v.Vv.OP_PUSHBYTES_56]: b,
                  [v.Vv.OP_PUSHBYTES_57]: b,
                  [v.Vv.OP_PUSHBYTES_58]: b,
                  [v.Vv.OP_PUSHBYTES_59]: b,
                  [v.Vv.OP_PUSHBYTES_60]: b,
                  [v.Vv.OP_PUSHBYTES_61]: b,
                  [v.Vv.OP_PUSHBYTES_62]: b,
                  [v.Vv.OP_PUSHBYTES_63]: b,
                  [v.Vv.OP_PUSHBYTES_64]: b,
                  [v.Vv.OP_PUSHBYTES_65]: b,
                  [v.Vv.OP_PUSHBYTES_66]: b,
                  [v.Vv.OP_PUSHBYTES_67]: b,
                  [v.Vv.OP_PUSHBYTES_68]: b,
                  [v.Vv.OP_PUSHBYTES_69]: b,
                  [v.Vv.OP_PUSHBYTES_70]: b,
                  [v.Vv.OP_PUSHBYTES_71]: b,
                  [v.Vv.OP_PUSHBYTES_72]: b,
                  [v.Vv.OP_PUSHBYTES_73]: b,
                  [v.Vv.OP_PUSHBYTES_74]: b,
                  [v.Vv.OP_PUSHBYTES_75]: b,
                  [v.Vv.OP_PUSHDATA_1]: b,
                  [v.Vv.OP_PUSHDATA_2]: b,
                  [v.Vv.OP_PUSHDATA_4]: b,
                  [v.Vv.OP_1NEGATE]: (0, u.h6)((0, s.sx)(-1)),
                  [v.Vv.OP_RESERVED]: (0, u.h6)(h.w4),
                  [v.Vv.OP_1]: (0, u.h6)((0, s.sx)(1)),
                  [v.Vv.OP_2]: (0, u.h6)((0, s.sx)(2)),
                  [v.Vv.OP_3]: (0, u.h6)((0, s.sx)(3)),
                  [v.Vv.OP_4]: (0, u.h6)((0, s.sx)(4)),
                  [v.Vv.OP_5]: (0, u.h6)((0, s.sx)(5)),
                  [v.Vv.OP_6]: (0, u.h6)((0, s.sx)(6)),
                  [v.Vv.OP_7]: (0, u.h6)((0, s.sx)(7)),
                  [v.Vv.OP_8]: (0, u.h6)((0, s.sx)(8)),
                  [v.Vv.OP_9]: (0, u.h6)((0, s.sx)(9)),
                  [v.Vv.OP_10]: (0, u.h6)((0, s.sx)(10)),
                  [v.Vv.OP_11]: (0, u.h6)((0, s.sx)(11)),
                  [v.Vv.OP_12]: (0, u.h6)((0, s.sx)(12)),
                  [v.Vv.OP_13]: (0, u.h6)((0, s.sx)(13)),
                  [v.Vv.OP_14]: (0, u.h6)((0, s.sx)(14)),
                  [v.Vv.OP_15]: (0, u.h6)((0, s.sx)(15)),
                  [v.Vv.OP_16]: (0, u.h6)((0, s.sx)(16)),
                  ...(0, u.lK)([u.wD], {
                    [v.Vv.OP_NOP]: (0, u.h6)(I.mE),
                    [v.Vv.OP_VER]: (0, u.h6)(h.w4),
                    [v.Vv.OP_IF]: h.nK,
                    [v.Vv.OP_NOTIF]: h.h2,
                    [v.Vv.OP_VERIF]: h.w4,
                    [v.Vv.OP_VERNOTIF]: h.w4,
                    [v.Vv.OP_ELSE]: h.SG,
                    [v.Vv.OP_ENDIF]: h.bN,
                    [v.Vv.OP_VERIFY]: (0, u.h6)(h.AG),
                    [v.Vv.OP_RETURN]: (0, u.h6)(h.e2),
                    [v.Vv.OP_TOALTSTACK]: (0, u.h6)(p.nK),
                    [v.Vv.OP_FROMALTSTACK]: (0, u.h6)(p.nn),
                    [v.Vv.OP_2DROP]: (0, u.h6)(p.xQ),
                    [v.Vv.OP_2DUP]: (0, u.h6)(p.me),
                    [v.Vv.OP_3DUP]: (0, u.h6)(p.Mu),
                    [v.Vv.OP_2OVER]: (0, u.h6)(p.WH),
                    [v.Vv.OP_2ROT]: (0, u.h6)(p.FG),
                    [v.Vv.OP_2SWAP]: (0, u.h6)(p.y3),
                    [v.Vv.OP_IFDUP]: (0, u.h6)(p.sy),
                    [v.Vv.OP_DEPTH]: (0, u.h6)(p.lZ),
                    [v.Vv.OP_DROP]: (0, u.h6)(p.o_),
                    [v.Vv.OP_DUP]: (0, u.h6)(p.cs),
                    [v.Vv.OP_NIP]: (0, u.h6)(p.Ic),
                    [v.Vv.OP_OVER]: (0, u.h6)(p.bE),
                    [v.Vv.OP_PICK]: (0, u.h6)(p.pE),
                    [v.Vv.OP_ROLL]: (0, u.h6)(p.Kb),
                    [v.Vv.OP_ROT]: (0, u.h6)(p.Qq),
                    [v.Vv.OP_SWAP]: (0, u.h6)(p.qH),
                    [v.Vv.OP_TUCK]: (0, u.h6)(p.hW),
                    [v.Vv.OP_CAT]: (0, u.h6)(d.PV),
                    [v.Vv.OP_SPLIT]: (0, u.h6)(d.Aj),
                    [v.Vv.OP_NUM2BIN]: (0, u.h6)(d.pf),
                    [v.Vv.OP_BIN2NUM]: (0, u.h6)(d.UN),
                    [v.Vv.OP_SIZE]: (0, u.h6)(p.XK),
                    [v.Vv.OP_INVERT]: I.$6,
                    [v.Vv.OP_AND]: (0, u.h6)(f.DC),
                    [v.Vv.OP_OR]: (0, u.h6)(f.gg),
                    [v.Vv.OP_XOR]: (0, u.h6)(f.e),
                    [v.Vv.OP_EQUAL]: (0, u.h6)(f.Lw),
                    [v.Vv.OP_EQUALVERIFY]: (0, u.h6)(f.ys),
                    [v.Vv.OP_RESERVED1]: (0, u.h6)(h.w4),
                    [v.Vv.OP_RESERVED2]: (0, u.h6)(h.w4),
                    [v.Vv.OP_1ADD]: (0, u.h6)(C.vp),
                    [v.Vv.OP_1SUB]: (0, u.h6)(C.Pq),
                    [v.Vv.OP_2MUL]: I.$6,
                    [v.Vv.OP_2DIV]: I.$6,
                    [v.Vv.OP_NEGATE]: (0, u.h6)(C.$Q),
                    [v.Vv.OP_ABS]: (0, u.h6)(C.xR),
                    [v.Vv.OP_NOT]: (0, u.h6)(C.a6),
                    [v.Vv.OP_0NOTEQUAL]: (0, u.h6)(C.ZF),
                    [v.Vv.OP_ADD]: (0, u.h6)(C.z1),
                    [v.Vv.OP_SUB]: (0, u.h6)(C.qh),
                    [v.Vv.OP_MUL]: (0, u.h6)(C.ut),
                    [v.Vv.OP_DIV]: (0, u.h6)(C.kF),
                    [v.Vv.OP_MOD]: (0, u.h6)(C.KQ),
                    [v.Vv.OP_LSHIFT]: I.$6,
                    [v.Vv.OP_RSHIFT]: I.$6,
                    [v.Vv.OP_BOOLAND]: (0, u.h6)(C.Y8),
                    [v.Vv.OP_BOOLOR]: (0, u.h6)(C.No),
                    [v.Vv.OP_NUMEQUAL]: (0, u.h6)(C.Rb),
                    [v.Vv.OP_NUMEQUALVERIFY]: (0, u.h6)(C.y),
                    [v.Vv.OP_NUMNOTEQUAL]: (0, u.h6)(C.Hi),
                    [v.Vv.OP_LESSTHAN]: (0, u.h6)(C.BZ),
                    [v.Vv.OP_GREATERTHAN]: (0, u.h6)(C.Ls),
                    [v.Vv.OP_LESSTHANOREQUAL]: (0, u.h6)(C.n5),
                    [v.Vv.OP_GREATERTHANOREQUAL]: (0, u.h6)(C.mZ),
                    [v.Vv.OP_MIN]: (0, u.h6)(C.Es),
                    [v.Vv.OP_MAX]: (0, u.h6)(C.gm),
                    [v.Vv.OP_WITHIN]: (0, u.h6)(C.Qn),
                    [v.Vv.OP_RIPEMD160]: (0, u.h6)((0, B.N$)({ ripemd160: t })),
                    [v.Vv.OP_SHA1]: (0, u.h6)((0, B.LF)({ sha1: i })),
                    [v.Vv.OP_SHA256]: (0, u.h6)((0, B.Zy)({ sha256: w })),
                    [v.Vv.OP_HASH160]: (0, u.h6)(
                      (0, B.vU)({ ripemd160: t, sha256: w })
                    ),
                    [v.Vv.OP_HASH256]: (0, u.h6)((0, B.SZ)({ sha256: w })),
                    [v.Vv.OP_CODESEPARATOR]: (0, u.h6)(B.Wd),
                    [v.Vv.OP_CHECKSIG]: (0, u.h6)(
                      (0, Q.rB)({ secp256k1: r, sha256: w })
                    ),
                    [v.Vv.OP_CHECKSIGVERIFY]: (0, u.h6)(
                      (0, Q.S8)({ secp256k1: r, sha256: w })
                    ),
                    [v.Vv.OP_CHECKMULTISIG]: (0, u.h6)(
                      (0, Q.hd)({ secp256k1: r, sha256: w })
                    ),
                    [v.Vv.OP_CHECKMULTISIGVERIFY]: (0, u.h6)(
                      (0, Q.IT)({ secp256k1: r, sha256: w })
                    ),
                    ...(e
                      ? {
                          [v.Vv.OP_NOP1]: (0, u.h6)(I.o0),
                          [v.Vv.OP_CHECKLOCKTIMEVERIFY]: (0, u.h6)(E.WV),
                          [v.Vv.OP_CHECKSEQUENCEVERIFY]: (0, u.h6)(E.RT),
                          [v.Vv.OP_NOP4]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP5]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP6]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP7]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP8]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP9]: (0, u.h6)(I.o0),
                          [v.Vv.OP_NOP10]: (0, u.h6)(I.o0),
                        }
                      : {
                          [v.Vv.OP_NOP1]: (0, u.h6)(I.mE),
                          [v.Vv.OP_CHECKLOCKTIMEVERIFY]: (0, u.h6)(E.WV),
                          [v.Vv.OP_CHECKSEQUENCEVERIFY]: (0, u.h6)(E.RT),
                          [v.Vv.OP_NOP4]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP5]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP6]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP7]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP8]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP9]: (0, u.h6)(I.mE),
                          [v.Vv.OP_NOP10]: (0, u.h6)(I.mE),
                        }),
                    [v.Vv.OP_CHECKDATASIG]: (0, u.h6)(
                      (0, B.W0)({ secp256k1: r, sha256: w })
                    ),
                    [v.Vv.OP_CHECKDATASIGVERIFY]: (0, u.h6)(
                      (0, B.kI)({ secp256k1: r, sha256: w })
                    ),
                    [v.Vv.OP_REVERSEBYTES]: (0, u.h6)(B.kF),
                    [v.Vv.OP_INPUTINDEX]: (0, u.h6)(y.y3),
                    [v.Vv.OP_ACTIVEBYTECODE]: (0, u.h6)(y.ty),
                    [v.Vv.OP_TXVERSION]: (0, u.h6)(y.Mb),
                    [v.Vv.OP_TXINPUTCOUNT]: (0, u.h6)(y.VO),
                    [v.Vv.OP_TXOUTPUTCOUNT]: (0, u.h6)(y.Ah),
                    [v.Vv.OP_TXLOCKTIME]: (0, u.h6)(y.uk),
                    [v.Vv.OP_UTXOVALUE]: (0, u.h6)(y.mw),
                    [v.Vv.OP_UTXOBYTECODE]: (0, u.h6)(y.ev),
                    [v.Vv.OP_OUTPOINTTXHASH]: (0, u.h6)(y.CY),
                    [v.Vv.OP_OUTPOINTINDEX]: (0, u.h6)(y.qu),
                    [v.Vv.OP_INPUTBYTECODE]: (0, u.h6)(y.fS),
                    [v.Vv.OP_INPUTSEQUENCENUMBER]: (0, u.h6)(y.mW),
                    [v.Vv.OP_OUTPUTVALUE]: (0, u.h6)(y.ER),
                    [v.Vv.OP_OUTPUTBYTECODE]: (0, u.h6)(y.nc),
                    [v.Vv.OP_UTXOTOKENCATEGORY]: (0, u.h6)(S.y),
                    [v.Vv.OP_UTXOTOKENCOMMITMENT]: (0, u.h6)(S.yp),
                    [v.Vv.OP_UTXOTOKENAMOUNT]: (0, u.h6)(S.GG),
                    [v.Vv.OP_OUTPUTTOKENCATEGORY]: (0, u.h6)(S.y8),
                    [v.Vv.OP_OUTPUTTOKENCOMMITMENT]: (0, u.h6)(S.rQ),
                    [v.Vv.OP_OUTPUTTOKENAMOUNT]: (0, u.h6)(S.LJ),
                  }),
                },
                success: (e) =>
                  void 0 !== e.error
                    ? e.error
                    : 0 !== e.controlStack.length
                    ? l.a.nonEmptyControlStack
                    : 1 !== e.stack.length
                    ? l.a.requiresCleanStack
                    : !!(0, g.XS)(e.stack[0]) || l.a.unsuccessfulEvaluation,
                undefined: c.bg,
                verify: ({ sourceOutputs: t, transaction: r }, i, n) => {
                  if (0 === r.inputs.length)
                    return "Transactions must have at least one input.";
                  if (0 === r.outputs.length)
                    return "Transactions must have at least one output.";
                  if (r.inputs.length !== t.length)
                    return "Unable to verify transaction: a single spent output must be provided for each transaction input.";
                  const o = (0, a.Mz)(r).length;
                  if (o < m.b.minimumTransactionSize)
                    return `Invalid transaction size: the transaction is ${o} bytes, but transactions must be no smaller than ${m.b.minimumTransactionSize} bytes to prevent an exploit of the transaction Merkle tree design.`;
                  if (o > m.b.maximumTransactionSize)
                    return `Transaction exceeds maximum size: the transaction is ${o} bytes, but the maximum transaction size is ${m.b.maximumTransactionSize} bytes.`;
                  const s = t.reduce((e, t) => e + t.valueSatoshis, 0n),
                    c = r.outputs.reduce((e, t) => e + t.valueSatoshis, 0n);
                  if (c > s)
                    return `Unable to verify transaction: the sum of transaction outputs exceeds the sum of transaction inputs. Input value: ${s}, output value: ${c}`;
                  const l = r.inputs.map(
                      (e) =>
                        `outpointTransactionHash: ${(0, A.UM)(
                          e.outpointTransactionHash
                        )}, outpointIndex: ${e.outpointIndex}`
                    ),
                    u = l.find((e, t) => l.lastIndexOf(e) !== t);
                  if (void 0 !== u)
                    return `Unable to verify transaction: the transaction attempts to spend the same outpoint in multiple inputs. ${u}`;
                  if (e) {
                    if (r.version < 1 || r.version > m.b.maximumStandardVersion)
                      return `Standard transactions must have a version no less than 1 and no greater than ${m.b.maximumStandardVersion}.`;
                    if (o > m.b.maximumStandardTransactionSize)
                      return `Transaction exceeds maximum standard size: this transaction is ${o} bytes, but the maximum standard transaction size is ${m.b.maximumStandardTransactionSize} bytes.`;
                    for (const [e, r] of t.entries())
                      if (!(0, g.ft)(r.lockingBytecode))
                        return `Standard transactions may only spend standard output types, but source output ${e} is non-standard.`;
                    let e = 0;
                    for (const [t, i] of r.outputs.entries()) {
                      if (!(0, g.ft)(i.lockingBytecode))
                        return `Standard transactions may only create standard output types, but transaction output ${t} is non-standard.`;
                      if (
                        ((0, g.rV)(i.lockingBytecode) &&
                          (e += i.lockingBytecode.length + 1),
                        (0, g.Ff)(i))
                      )
                        return `Standard transactions may not have dust outputs, but transaction output ${t} is a dust output. Output ${t} must have a value of at least ${(0,
                        g.ii)(i)} satoshis. Current value: ${i.valueSatoshis}`;
                    }
                    if (e > m.b.maximumDataCarrierBytes)
                      return `Standard transactions may carry no more than ${m.b.maximumDataCarrierBytes} bytes in arbitrary data outputs; this transaction includes ${e} bytes of arbitrary data.`;
                    for (const [e, t] of r.inputs.entries()) {
                      if (
                        t.unlockingBytecode.length >
                        m.b.maximumStandardUnlockingBytecodeLength
                      )
                        return `Input index ${e} is non-standard: the unlocking bytecode (${t.unlockingBytecode.length} bytes) exceeds the maximum standard unlocking bytecode length (${m.b.maximumStandardUnlockingBytecodeLength} bytes).`;
                      if (!(0, g.Au)(t.unlockingBytecode))
                        return `Input index ${e} is non-standard: unlocking bytecode may contain only push operations.`;
                    }
                  }
                  const h = (0, S.xW)(r, t);
                  if (!0 !== h) return h;
                  for (const e of r.inputs.keys()) {
                    const o = n(
                      i({ inputIndex: e, sourceOutputs: t, transaction: r })
                    );
                    if ("string" == typeof o)
                      return `Error in evaluating input index ${e}: ${o}`;
                  }
                  return !0;
                },
              };
            };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      16043: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { Vv: () => i, oM: () => n }),
          (function (e) {
            (e[(e.OP_0 = 0)] = "OP_0"),
              (e[(e.OP_PUSHBYTES_1 = 1)] = "OP_PUSHBYTES_1"),
              (e[(e.OP_PUSHBYTES_2 = 2)] = "OP_PUSHBYTES_2"),
              (e[(e.OP_PUSHBYTES_3 = 3)] = "OP_PUSHBYTES_3"),
              (e[(e.OP_PUSHBYTES_4 = 4)] = "OP_PUSHBYTES_4"),
              (e[(e.OP_PUSHBYTES_5 = 5)] = "OP_PUSHBYTES_5"),
              (e[(e.OP_PUSHBYTES_6 = 6)] = "OP_PUSHBYTES_6"),
              (e[(e.OP_PUSHBYTES_7 = 7)] = "OP_PUSHBYTES_7"),
              (e[(e.OP_PUSHBYTES_8 = 8)] = "OP_PUSHBYTES_8"),
              (e[(e.OP_PUSHBYTES_9 = 9)] = "OP_PUSHBYTES_9"),
              (e[(e.OP_PUSHBYTES_10 = 10)] = "OP_PUSHBYTES_10"),
              (e[(e.OP_PUSHBYTES_11 = 11)] = "OP_PUSHBYTES_11"),
              (e[(e.OP_PUSHBYTES_12 = 12)] = "OP_PUSHBYTES_12"),
              (e[(e.OP_PUSHBYTES_13 = 13)] = "OP_PUSHBYTES_13"),
              (e[(e.OP_PUSHBYTES_14 = 14)] = "OP_PUSHBYTES_14"),
              (e[(e.OP_PUSHBYTES_15 = 15)] = "OP_PUSHBYTES_15"),
              (e[(e.OP_PUSHBYTES_16 = 16)] = "OP_PUSHBYTES_16"),
              (e[(e.OP_PUSHBYTES_17 = 17)] = "OP_PUSHBYTES_17"),
              (e[(e.OP_PUSHBYTES_18 = 18)] = "OP_PUSHBYTES_18"),
              (e[(e.OP_PUSHBYTES_19 = 19)] = "OP_PUSHBYTES_19"),
              (e[(e.OP_PUSHBYTES_20 = 20)] = "OP_PUSHBYTES_20"),
              (e[(e.OP_PUSHBYTES_21 = 21)] = "OP_PUSHBYTES_21"),
              (e[(e.OP_PUSHBYTES_22 = 22)] = "OP_PUSHBYTES_22"),
              (e[(e.OP_PUSHBYTES_23 = 23)] = "OP_PUSHBYTES_23"),
              (e[(e.OP_PUSHBYTES_24 = 24)] = "OP_PUSHBYTES_24"),
              (e[(e.OP_PUSHBYTES_25 = 25)] = "OP_PUSHBYTES_25"),
              (e[(e.OP_PUSHBYTES_26 = 26)] = "OP_PUSHBYTES_26"),
              (e[(e.OP_PUSHBYTES_27 = 27)] = "OP_PUSHBYTES_27"),
              (e[(e.OP_PUSHBYTES_28 = 28)] = "OP_PUSHBYTES_28"),
              (e[(e.OP_PUSHBYTES_29 = 29)] = "OP_PUSHBYTES_29"),
              (e[(e.OP_PUSHBYTES_30 = 30)] = "OP_PUSHBYTES_30"),
              (e[(e.OP_PUSHBYTES_31 = 31)] = "OP_PUSHBYTES_31"),
              (e[(e.OP_PUSHBYTES_32 = 32)] = "OP_PUSHBYTES_32"),
              (e[(e.OP_PUSHBYTES_33 = 33)] = "OP_PUSHBYTES_33"),
              (e[(e.OP_PUSHBYTES_34 = 34)] = "OP_PUSHBYTES_34"),
              (e[(e.OP_PUSHBYTES_35 = 35)] = "OP_PUSHBYTES_35"),
              (e[(e.OP_PUSHBYTES_36 = 36)] = "OP_PUSHBYTES_36"),
              (e[(e.OP_PUSHBYTES_37 = 37)] = "OP_PUSHBYTES_37"),
              (e[(e.OP_PUSHBYTES_38 = 38)] = "OP_PUSHBYTES_38"),
              (e[(e.OP_PUSHBYTES_39 = 39)] = "OP_PUSHBYTES_39"),
              (e[(e.OP_PUSHBYTES_40 = 40)] = "OP_PUSHBYTES_40"),
              (e[(e.OP_PUSHBYTES_41 = 41)] = "OP_PUSHBYTES_41"),
              (e[(e.OP_PUSHBYTES_42 = 42)] = "OP_PUSHBYTES_42"),
              (e[(e.OP_PUSHBYTES_43 = 43)] = "OP_PUSHBYTES_43"),
              (e[(e.OP_PUSHBYTES_44 = 44)] = "OP_PUSHBYTES_44"),
              (e[(e.OP_PUSHBYTES_45 = 45)] = "OP_PUSHBYTES_45"),
              (e[(e.OP_PUSHBYTES_46 = 46)] = "OP_PUSHBYTES_46"),
              (e[(e.OP_PUSHBYTES_47 = 47)] = "OP_PUSHBYTES_47"),
              (e[(e.OP_PUSHBYTES_48 = 48)] = "OP_PUSHBYTES_48"),
              (e[(e.OP_PUSHBYTES_49 = 49)] = "OP_PUSHBYTES_49"),
              (e[(e.OP_PUSHBYTES_50 = 50)] = "OP_PUSHBYTES_50"),
              (e[(e.OP_PUSHBYTES_51 = 51)] = "OP_PUSHBYTES_51"),
              (e[(e.OP_PUSHBYTES_52 = 52)] = "OP_PUSHBYTES_52"),
              (e[(e.OP_PUSHBYTES_53 = 53)] = "OP_PUSHBYTES_53"),
              (e[(e.OP_PUSHBYTES_54 = 54)] = "OP_PUSHBYTES_54"),
              (e[(e.OP_PUSHBYTES_55 = 55)] = "OP_PUSHBYTES_55"),
              (e[(e.OP_PUSHBYTES_56 = 56)] = "OP_PUSHBYTES_56"),
              (e[(e.OP_PUSHBYTES_57 = 57)] = "OP_PUSHBYTES_57"),
              (e[(e.OP_PUSHBYTES_58 = 58)] = "OP_PUSHBYTES_58"),
              (e[(e.OP_PUSHBYTES_59 = 59)] = "OP_PUSHBYTES_59"),
              (e[(e.OP_PUSHBYTES_60 = 60)] = "OP_PUSHBYTES_60"),
              (e[(e.OP_PUSHBYTES_61 = 61)] = "OP_PUSHBYTES_61"),
              (e[(e.OP_PUSHBYTES_62 = 62)] = "OP_PUSHBYTES_62"),
              (e[(e.OP_PUSHBYTES_63 = 63)] = "OP_PUSHBYTES_63"),
              (e[(e.OP_PUSHBYTES_64 = 64)] = "OP_PUSHBYTES_64"),
              (e[(e.OP_PUSHBYTES_65 = 65)] = "OP_PUSHBYTES_65"),
              (e[(e.OP_PUSHBYTES_66 = 66)] = "OP_PUSHBYTES_66"),
              (e[(e.OP_PUSHBYTES_67 = 67)] = "OP_PUSHBYTES_67"),
              (e[(e.OP_PUSHBYTES_68 = 68)] = "OP_PUSHBYTES_68"),
              (e[(e.OP_PUSHBYTES_69 = 69)] = "OP_PUSHBYTES_69"),
              (e[(e.OP_PUSHBYTES_70 = 70)] = "OP_PUSHBYTES_70"),
              (e[(e.OP_PUSHBYTES_71 = 71)] = "OP_PUSHBYTES_71"),
              (e[(e.OP_PUSHBYTES_72 = 72)] = "OP_PUSHBYTES_72"),
              (e[(e.OP_PUSHBYTES_73 = 73)] = "OP_PUSHBYTES_73"),
              (e[(e.OP_PUSHBYTES_74 = 74)] = "OP_PUSHBYTES_74"),
              (e[(e.OP_PUSHBYTES_75 = 75)] = "OP_PUSHBYTES_75"),
              (e[(e.OP_PUSHDATA_1 = 76)] = "OP_PUSHDATA_1"),
              (e[(e.OP_PUSHDATA_2 = 77)] = "OP_PUSHDATA_2"),
              (e[(e.OP_PUSHDATA_4 = 78)] = "OP_PUSHDATA_4"),
              (e[(e.OP_1NEGATE = 79)] = "OP_1NEGATE"),
              (e[(e.OP_RESERVED = 80)] = "OP_RESERVED"),
              (e[(e.OP_1 = 81)] = "OP_1"),
              (e[(e.OP_2 = 82)] = "OP_2"),
              (e[(e.OP_3 = 83)] = "OP_3"),
              (e[(e.OP_4 = 84)] = "OP_4"),
              (e[(e.OP_5 = 85)] = "OP_5"),
              (e[(e.OP_6 = 86)] = "OP_6"),
              (e[(e.OP_7 = 87)] = "OP_7"),
              (e[(e.OP_8 = 88)] = "OP_8"),
              (e[(e.OP_9 = 89)] = "OP_9"),
              (e[(e.OP_10 = 90)] = "OP_10"),
              (e[(e.OP_11 = 91)] = "OP_11"),
              (e[(e.OP_12 = 92)] = "OP_12"),
              (e[(e.OP_13 = 93)] = "OP_13"),
              (e[(e.OP_14 = 94)] = "OP_14"),
              (e[(e.OP_15 = 95)] = "OP_15"),
              (e[(e.OP_16 = 96)] = "OP_16"),
              (e[(e.OP_NOP = 97)] = "OP_NOP"),
              (e[(e.OP_VER = 98)] = "OP_VER"),
              (e[(e.OP_IF = 99)] = "OP_IF"),
              (e[(e.OP_NOTIF = 100)] = "OP_NOTIF"),
              (e[(e.OP_VERIF = 101)] = "OP_VERIF"),
              (e[(e.OP_VERNOTIF = 102)] = "OP_VERNOTIF"),
              (e[(e.OP_ELSE = 103)] = "OP_ELSE"),
              (e[(e.OP_ENDIF = 104)] = "OP_ENDIF"),
              (e[(e.OP_VERIFY = 105)] = "OP_VERIFY"),
              (e[(e.OP_RETURN = 106)] = "OP_RETURN"),
              (e[(e.OP_TOALTSTACK = 107)] = "OP_TOALTSTACK"),
              (e[(e.OP_FROMALTSTACK = 108)] = "OP_FROMALTSTACK"),
              (e[(e.OP_2DROP = 109)] = "OP_2DROP"),
              (e[(e.OP_2DUP = 110)] = "OP_2DUP"),
              (e[(e.OP_3DUP = 111)] = "OP_3DUP"),
              (e[(e.OP_2OVER = 112)] = "OP_2OVER"),
              (e[(e.OP_2ROT = 113)] = "OP_2ROT"),
              (e[(e.OP_2SWAP = 114)] = "OP_2SWAP"),
              (e[(e.OP_IFDUP = 115)] = "OP_IFDUP"),
              (e[(e.OP_DEPTH = 116)] = "OP_DEPTH"),
              (e[(e.OP_DROP = 117)] = "OP_DROP"),
              (e[(e.OP_DUP = 118)] = "OP_DUP"),
              (e[(e.OP_NIP = 119)] = "OP_NIP"),
              (e[(e.OP_OVER = 120)] = "OP_OVER"),
              (e[(e.OP_PICK = 121)] = "OP_PICK"),
              (e[(e.OP_ROLL = 122)] = "OP_ROLL"),
              (e[(e.OP_ROT = 123)] = "OP_ROT"),
              (e[(e.OP_SWAP = 124)] = "OP_SWAP"),
              (e[(e.OP_TUCK = 125)] = "OP_TUCK"),
              (e[(e.OP_CAT = 126)] = "OP_CAT"),
              (e[(e.OP_SPLIT = 127)] = "OP_SPLIT"),
              (e[(e.OP_NUM2BIN = 128)] = "OP_NUM2BIN"),
              (e[(e.OP_BIN2NUM = 129)] = "OP_BIN2NUM"),
              (e[(e.OP_SIZE = 130)] = "OP_SIZE"),
              (e[(e.OP_INVERT = 131)] = "OP_INVERT"),
              (e[(e.OP_AND = 132)] = "OP_AND"),
              (e[(e.OP_OR = 133)] = "OP_OR"),
              (e[(e.OP_XOR = 134)] = "OP_XOR"),
              (e[(e.OP_EQUAL = 135)] = "OP_EQUAL"),
              (e[(e.OP_EQUALVERIFY = 136)] = "OP_EQUALVERIFY"),
              (e[(e.OP_RESERVED1 = 137)] = "OP_RESERVED1"),
              (e[(e.OP_RESERVED2 = 138)] = "OP_RESERVED2"),
              (e[(e.OP_1ADD = 139)] = "OP_1ADD"),
              (e[(e.OP_1SUB = 140)] = "OP_1SUB"),
              (e[(e.OP_2MUL = 141)] = "OP_2MUL"),
              (e[(e.OP_2DIV = 142)] = "OP_2DIV"),
              (e[(e.OP_NEGATE = 143)] = "OP_NEGATE"),
              (e[(e.OP_ABS = 144)] = "OP_ABS"),
              (e[(e.OP_NOT = 145)] = "OP_NOT"),
              (e[(e.OP_0NOTEQUAL = 146)] = "OP_0NOTEQUAL"),
              (e[(e.OP_ADD = 147)] = "OP_ADD"),
              (e[(e.OP_SUB = 148)] = "OP_SUB"),
              (e[(e.OP_MUL = 149)] = "OP_MUL"),
              (e[(e.OP_DIV = 150)] = "OP_DIV"),
              (e[(e.OP_MOD = 151)] = "OP_MOD"),
              (e[(e.OP_LSHIFT = 152)] = "OP_LSHIFT"),
              (e[(e.OP_RSHIFT = 153)] = "OP_RSHIFT"),
              (e[(e.OP_BOOLAND = 154)] = "OP_BOOLAND"),
              (e[(e.OP_BOOLOR = 155)] = "OP_BOOLOR"),
              (e[(e.OP_NUMEQUAL = 156)] = "OP_NUMEQUAL"),
              (e[(e.OP_NUMEQUALVERIFY = 157)] = "OP_NUMEQUALVERIFY"),
              (e[(e.OP_NUMNOTEQUAL = 158)] = "OP_NUMNOTEQUAL"),
              (e[(e.OP_LESSTHAN = 159)] = "OP_LESSTHAN"),
              (e[(e.OP_GREATERTHAN = 160)] = "OP_GREATERTHAN"),
              (e[(e.OP_LESSTHANOREQUAL = 161)] = "OP_LESSTHANOREQUAL"),
              (e[(e.OP_GREATERTHANOREQUAL = 162)] = "OP_GREATERTHANOREQUAL"),
              (e[(e.OP_MIN = 163)] = "OP_MIN"),
              (e[(e.OP_MAX = 164)] = "OP_MAX"),
              (e[(e.OP_WITHIN = 165)] = "OP_WITHIN"),
              (e[(e.OP_RIPEMD160 = 166)] = "OP_RIPEMD160"),
              (e[(e.OP_SHA1 = 167)] = "OP_SHA1"),
              (e[(e.OP_SHA256 = 168)] = "OP_SHA256"),
              (e[(e.OP_HASH160 = 169)] = "OP_HASH160"),
              (e[(e.OP_HASH256 = 170)] = "OP_HASH256"),
              (e[(e.OP_CODESEPARATOR = 171)] = "OP_CODESEPARATOR"),
              (e[(e.OP_CHECKSIG = 172)] = "OP_CHECKSIG"),
              (e[(e.OP_CHECKSIGVERIFY = 173)] = "OP_CHECKSIGVERIFY"),
              (e[(e.OP_CHECKMULTISIG = 174)] = "OP_CHECKMULTISIG"),
              (e[(e.OP_CHECKMULTISIGVERIFY = 175)] = "OP_CHECKMULTISIGVERIFY"),
              (e[(e.OP_NOP1 = 176)] = "OP_NOP1"),
              (e[(e.OP_CHECKLOCKTIMEVERIFY = 177)] = "OP_CHECKLOCKTIMEVERIFY"),
              (e[(e.OP_CHECKSEQUENCEVERIFY = 178)] = "OP_CHECKSEQUENCEVERIFY"),
              (e[(e.OP_NOP4 = 179)] = "OP_NOP4"),
              (e[(e.OP_NOP5 = 180)] = "OP_NOP5"),
              (e[(e.OP_NOP6 = 181)] = "OP_NOP6"),
              (e[(e.OP_NOP7 = 182)] = "OP_NOP7"),
              (e[(e.OP_NOP8 = 183)] = "OP_NOP8"),
              (e[(e.OP_NOP9 = 184)] = "OP_NOP9"),
              (e[(e.OP_NOP10 = 185)] = "OP_NOP10"),
              (e[(e.OP_CHECKDATASIG = 186)] = "OP_CHECKDATASIG"),
              (e[(e.OP_CHECKDATASIGVERIFY = 187)] = "OP_CHECKDATASIGVERIFY"),
              (e[(e.OP_REVERSEBYTES = 188)] = "OP_REVERSEBYTES"),
              (e[(e.OP_UNKNOWN189 = 189)] = "OP_UNKNOWN189"),
              (e[(e.OP_UNKNOWN190 = 190)] = "OP_UNKNOWN190"),
              (e[(e.OP_UNKNOWN191 = 191)] = "OP_UNKNOWN191"),
              (e[(e.OP_INPUTINDEX = 192)] = "OP_INPUTINDEX"),
              (e[(e.OP_ACTIVEBYTECODE = 193)] = "OP_ACTIVEBYTECODE"),
              (e[(e.OP_TXVERSION = 194)] = "OP_TXVERSION"),
              (e[(e.OP_TXINPUTCOUNT = 195)] = "OP_TXINPUTCOUNT"),
              (e[(e.OP_TXOUTPUTCOUNT = 196)] = "OP_TXOUTPUTCOUNT"),
              (e[(e.OP_TXLOCKTIME = 197)] = "OP_TXLOCKTIME"),
              (e[(e.OP_UTXOVALUE = 198)] = "OP_UTXOVALUE"),
              (e[(e.OP_UTXOBYTECODE = 199)] = "OP_UTXOBYTECODE"),
              (e[(e.OP_OUTPOINTTXHASH = 200)] = "OP_OUTPOINTTXHASH"),
              (e[(e.OP_OUTPOINTINDEX = 201)] = "OP_OUTPOINTINDEX"),
              (e[(e.OP_INPUTBYTECODE = 202)] = "OP_INPUTBYTECODE"),
              (e[(e.OP_INPUTSEQUENCENUMBER = 203)] = "OP_INPUTSEQUENCENUMBER"),
              (e[(e.OP_OUTPUTVALUE = 204)] = "OP_OUTPUTVALUE"),
              (e[(e.OP_OUTPUTBYTECODE = 205)] = "OP_OUTPUTBYTECODE"),
              (e[(e.OP_UTXOTOKENCATEGORY = 206)] = "OP_UTXOTOKENCATEGORY"),
              (e[(e.OP_UTXOTOKENCOMMITMENT = 207)] = "OP_UTXOTOKENCOMMITMENT"),
              (e[(e.OP_UTXOTOKENAMOUNT = 208)] = "OP_UTXOTOKENAMOUNT"),
              (e[(e.OP_OUTPUTTOKENCATEGORY = 209)] = "OP_OUTPUTTOKENCATEGORY"),
              (e[(e.OP_OUTPUTTOKENCOMMITMENT = 210)] =
                "OP_OUTPUTTOKENCOMMITMENT"),
              (e[(e.OP_OUTPUTTOKENAMOUNT = 211)] = "OP_OUTPUTTOKENAMOUNT"),
              (e[(e.OP_UNKNOWN212 = 212)] = "OP_UNKNOWN212"),
              (e[(e.OP_UNKNOWN213 = 213)] = "OP_UNKNOWN213"),
              (e[(e.OP_UNKNOWN214 = 214)] = "OP_UNKNOWN214"),
              (e[(e.OP_UNKNOWN215 = 215)] = "OP_UNKNOWN215"),
              (e[(e.OP_UNKNOWN216 = 216)] = "OP_UNKNOWN216"),
              (e[(e.OP_UNKNOWN217 = 217)] = "OP_UNKNOWN217"),
              (e[(e.OP_UNKNOWN218 = 218)] = "OP_UNKNOWN218"),
              (e[(e.OP_UNKNOWN219 = 219)] = "OP_UNKNOWN219"),
              (e[(e.OP_UNKNOWN220 = 220)] = "OP_UNKNOWN220"),
              (e[(e.OP_UNKNOWN221 = 221)] = "OP_UNKNOWN221"),
              (e[(e.OP_UNKNOWN222 = 222)] = "OP_UNKNOWN222"),
              (e[(e.OP_UNKNOWN223 = 223)] = "OP_UNKNOWN223"),
              (e[(e.OP_UNKNOWN224 = 224)] = "OP_UNKNOWN224"),
              (e[(e.OP_UNKNOWN225 = 225)] = "OP_UNKNOWN225"),
              (e[(e.OP_UNKNOWN226 = 226)] = "OP_UNKNOWN226"),
              (e[(e.OP_UNKNOWN227 = 227)] = "OP_UNKNOWN227"),
              (e[(e.OP_UNKNOWN228 = 228)] = "OP_UNKNOWN228"),
              (e[(e.OP_UNKNOWN229 = 229)] = "OP_UNKNOWN229"),
              (e[(e.OP_UNKNOWN230 = 230)] = "OP_UNKNOWN230"),
              (e[(e.OP_UNKNOWN231 = 231)] = "OP_UNKNOWN231"),
              (e[(e.OP_UNKNOWN232 = 232)] = "OP_UNKNOWN232"),
              (e[(e.OP_UNKNOWN233 = 233)] = "OP_UNKNOWN233"),
              (e[(e.OP_UNKNOWN234 = 234)] = "OP_UNKNOWN234"),
              (e[(e.OP_UNKNOWN235 = 235)] = "OP_UNKNOWN235"),
              (e[(e.OP_UNKNOWN236 = 236)] = "OP_UNKNOWN236"),
              (e[(e.OP_UNKNOWN237 = 237)] = "OP_UNKNOWN237"),
              (e[(e.OP_UNKNOWN238 = 238)] = "OP_UNKNOWN238"),
              (e[(e.OP_UNKNOWN239 = 239)] = "OP_UNKNOWN239"),
              (e[(e.OP_UNKNOWN240 = 240)] = "OP_UNKNOWN240"),
              (e[(e.OP_UNKNOWN241 = 241)] = "OP_UNKNOWN241"),
              (e[(e.OP_UNKNOWN242 = 242)] = "OP_UNKNOWN242"),
              (e[(e.OP_UNKNOWN243 = 243)] = "OP_UNKNOWN243"),
              (e[(e.OP_UNKNOWN244 = 244)] = "OP_UNKNOWN244"),
              (e[(e.OP_UNKNOWN245 = 245)] = "OP_UNKNOWN245"),
              (e[(e.OP_UNKNOWN246 = 246)] = "OP_UNKNOWN246"),
              (e[(e.OP_UNKNOWN247 = 247)] = "OP_UNKNOWN247"),
              (e[(e.OP_UNKNOWN248 = 248)] = "OP_UNKNOWN248"),
              (e[(e.OP_UNKNOWN249 = 249)] = "OP_UNKNOWN249"),
              (e[(e.OP_UNKNOWN250 = 250)] = "OP_UNKNOWN250"),
              (e[(e.OP_UNKNOWN251 = 251)] = "OP_UNKNOWN251"),
              (e[(e.OP_UNKNOWN252 = 252)] = "OP_UNKNOWN252"),
              (e[(e.OP_UNKNOWN253 = 253)] = "OP_UNKNOWN253"),
              (e[(e.OP_UNKNOWN254 = 254)] = "OP_UNKNOWN254"),
              (e[(e.OP_UNKNOWN255 = 255)] = "OP_UNKNOWN255");
          })(i || (i = {}));
        const n = i;
      },
      17720: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              GG: () => C,
              LJ: () => y,
              rQ: () => E,
              xW: () => u,
              y: () => d,
              y8: () => B,
              yp: () => f,
            });
            var n = r(34684),
              o = r(78417),
              A = r(43272),
              a = r(36974),
              s = e([a, o, A]);
            [a, o, A] = s.then ? (await s)() : s;
            const c = (e) =>
                e.reduce(
                  (e, t) =>
                    0 === t.outpointIndex
                      ? [...e, (0, n.UM)(t.outpointTransactionHash)]
                      : e,
                  []
                ),
              g = (e) =>
                e.reduce(
                  (e, t) => {
                    if (void 0 === t.token) return e;
                    const r = (0, n.UM)(t.token.category);
                    return {
                      availableImmutableTokens: [
                        ...e.availableImmutableTokens,
                        ...("none" === t.token.nft?.capability
                          ? [
                              {
                                categoryHex: (0, n.UM)(t.token.category),
                                commitmentHex: (0, n.UM)(
                                  t.token.nft.commitment
                                ),
                              },
                            ]
                          : []),
                      ],
                      availableMutableTokensByCategory:
                        "mutable" === t.token.nft?.capability
                          ? {
                              ...e.availableMutableTokensByCategory,
                              [r]:
                                (e.availableMutableTokensByCategory[r] ?? 0) +
                                1,
                            }
                          : e.availableMutableTokensByCategory,
                      availableSumsByCategory: {
                        ...e.availableSumsByCategory,
                        [r]:
                          (e.availableSumsByCategory[r] ?? 0n) + t.token.amount,
                      },
                      inputMintingCategories: [
                        ...e.inputMintingCategories,
                        ...("minting" === t.token.nft?.capability
                          ? [(0, n.UM)(t.token.category)]
                          : []),
                      ],
                    };
                  },
                  {
                    availableImmutableTokens: [],
                    availableMutableTokensByCategory: {},
                    availableSumsByCategory: {},
                    inputMintingCategories: [],
                  }
                ),
              l = (e) =>
                e.reduce(
                  (e, t) => {
                    if (void 0 === t.token) return e;
                    const r = (0, n.UM)(t.token.category);
                    return {
                      outputImmutableTokens: [
                        ...e.outputImmutableTokens,
                        ...("none" === t.token.nft?.capability
                          ? [
                              {
                                categoryHex: (0, n.UM)(t.token.category),
                                commitmentHex: (0, n.UM)(
                                  t.token.nft.commitment
                                ),
                              },
                            ]
                          : []),
                      ],
                      outputMintingCategories: [
                        ...e.outputMintingCategories,
                        ...("minting" === t.token.nft?.capability
                          ? [(0, n.UM)(t.token.category)]
                          : []),
                      ],
                      outputMutableTokensByCategory:
                        "mutable" === t.token.nft?.capability
                          ? {
                              ...e.outputMutableTokensByCategory,
                              [r]:
                                (e.outputMutableTokensByCategory[r] ?? 0) + 1,
                            }
                          : e.outputMutableTokensByCategory,
                      outputSumsByCategory: {
                        ...e.outputSumsByCategory,
                        [r]: (e.outputSumsByCategory[r] ?? 0n) + t.token.amount,
                      },
                    };
                  },
                  {
                    outputImmutableTokens: [],
                    outputMintingCategories: [],
                    outputMutableTokensByCategory: {},
                    outputSumsByCategory: {},
                  }
                ),
              u = (e, t) => {
                const r = [...t, ...e.outputs].find(
                  (e) =>
                    void 0 !== e.token?.nft?.commitment &&
                    e.token.nft.commitment.length > a.b.maximumCommitmentLength
                );
                if (void 0 !== r)
                  return `Transaction violates token validation: a token commitment exceeds the consensus limit of ${a.b.maximumCommitmentLength} bytes. Excessive token commitment length: ${r.token.nft.commitment.length}`;
                const i = c(e.inputs),
                  {
                    availableSumsByCategory: n,
                    availableMutableTokensByCategory: o,
                    inputMintingCategories: A,
                    availableImmutableTokens: s,
                  } = g(t),
                  {
                    outputSumsByCategory: u,
                    outputMutableTokensByCategory: h,
                    outputMintingCategories: I,
                    outputImmutableTokens: p,
                  } = l(e.outputs),
                  d = [...i, ...A],
                  f = I.find((e) => !d.includes(e));
                if (void 0 !== f)
                  return `Transaction violates token validation: the transaction outputs include a minting token that is not substantiated by the transaction's inputs. Invalid output minting token category: ${f}`;
                for (const [e, t] of Object.entries(u)) {
                  if (t > BigInt(a.b.maxVmNumber))
                    return `Transaction violates token validation: the transaction outputs include a sum of fungible tokens for a category exceeding the maximum supply (${
                      a.b.maxVmNumber
                    }). Category: ${e}, total amount: ${t.toString()}.`;
                  const r = n[e];
                  if (void 0 === r && t > 0 && !i.includes(e))
                    return `Transaction violates token validation: the transaction creates new fungible tokens for a category without a matching genesis input. Category: ${e}, tokens created: ${t}`;
                  if (void 0 !== r && t > r)
                    return `Transaction violates token validation: the sum of fungible tokens in the transaction's outputs exceed that of the transactions inputs for a category. Category: ${e}, input amount: ${r}, output amount: ${t}`;
                }
                const C = Object.entries(h).reduce(
                  (e, [t, r]) =>
                    d.includes(t) ? e : { ...e, [t]: (e[t] ?? 0) - r },
                  o
                );
                for (const [e, t] of Object.entries(C))
                  if (t < 0)
                    return `Transaction violates token validation: the transaction creates more mutable tokens than are available for a category without a matching minting token. Category: ${e}, excess mutable tokens: ${
                      0 - t
                    }`;
                const { unmatchedImmutableTokens: B } = p.reduce(
                    (e, t) => {
                      const { categoryHex: r, commitmentHex: i } = t;
                      if (d.includes(r)) return e;
                      const n = s.findIndex(
                        (e) => e.categoryHex === r && e.commitmentHex === i
                      );
                      return -1 === n
                        ? {
                            availableImmutableTokens:
                              e.availableImmutableTokens,
                            unmatchedImmutableTokens: [
                              ...e.unmatchedImmutableTokens,
                              t,
                            ],
                          }
                        : (e.availableImmutableTokens.splice(n, 1), e);
                    },
                    {
                      availableImmutableTokens: s,
                      unmatchedImmutableTokens: [],
                    }
                  ),
                  E = B.reduce(
                    (e, t) => ({
                      ...e,
                      [t.categoryHex]: (e[t.categoryHex] ?? 0) + 1,
                    }),
                    {}
                  );
                for (const [e, t] of Object.entries(E)) {
                  const r = C[e] ?? 0;
                  if (r < t)
                    return `Transaction violates token validation: the transaction creates an immutable token for a category without a matching minting token or sufficient mutable tokens. Category ${e}, available mutable tokens: ${r}, new immutable tokens: ${t}`;
                }
                return !0;
              },
              h = (e, t) => {
                const { token: r } = t;
                if (void 0 === r) return (0, o.SV)(e, 0n);
                const i =
                    "minting" === r.nft?.capability
                      ? [2]
                      : "mutable" === r.nft?.capability
                      ? [1]
                      : [],
                  A = (0, n.kg)([
                    r.category.slice().reverse(),
                    Uint8Array.from(i),
                  ]);
                return (0, o.jd)(e, A);
              },
              I = (e, t) => {
                const { token: r } = t;
                return void 0 === r || void 0 === r.nft
                  ? (0, o.SV)(e, 0n)
                  : (0, o.jd)(e, r.nft.commitment);
              },
              p = (e, t) => {
                const { token: r } = t;
                return void 0 === r ? (0, o.SV)(e, 0n) : (0, o.fH)(e, r.amount);
              },
              d = (e) => (0, A.pJ)(e, (e, [t]) => h(e, t)),
              f = (e) => (0, A.pJ)(e, (e, [t]) => I(e, t)),
              C = (e) => (0, A.pJ)(e, (e, [t]) => p(e, t)),
              B = (e) => (0, A.az)(e, (e, [t]) => h(e, t)),
              E = (e) => (0, A.az)(e, (e, [t]) => I(e, t)),
              y = (e) => (0, A.az)(e, (e, [t]) => p(e, t));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      48945: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { j: () => a });
            var n = r(79116),
              o = r(38175),
              A = e([o]);
            o = (A.then ? (await A)() : A)[0];
            const a = (e = !0) => (0, n.A)((0, o.J)(e));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      83468: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { L: () => i }),
          (function (e) {
            (e[(e.OP_0 = 0)] = "OP_0"),
              (e[(e.OP_PUSHBYTES_1 = 1)] = "OP_PUSHBYTES_1"),
              (e[(e.OP_PUSHBYTES_2 = 2)] = "OP_PUSHBYTES_2"),
              (e[(e.OP_PUSHBYTES_3 = 3)] = "OP_PUSHBYTES_3"),
              (e[(e.OP_PUSHBYTES_4 = 4)] = "OP_PUSHBYTES_4"),
              (e[(e.OP_PUSHBYTES_5 = 5)] = "OP_PUSHBYTES_5"),
              (e[(e.OP_PUSHBYTES_6 = 6)] = "OP_PUSHBYTES_6"),
              (e[(e.OP_PUSHBYTES_7 = 7)] = "OP_PUSHBYTES_7"),
              (e[(e.OP_PUSHBYTES_8 = 8)] = "OP_PUSHBYTES_8"),
              (e[(e.OP_PUSHBYTES_9 = 9)] = "OP_PUSHBYTES_9"),
              (e[(e.OP_PUSHBYTES_10 = 10)] = "OP_PUSHBYTES_10"),
              (e[(e.OP_PUSHBYTES_11 = 11)] = "OP_PUSHBYTES_11"),
              (e[(e.OP_PUSHBYTES_12 = 12)] = "OP_PUSHBYTES_12"),
              (e[(e.OP_PUSHBYTES_13 = 13)] = "OP_PUSHBYTES_13"),
              (e[(e.OP_PUSHBYTES_14 = 14)] = "OP_PUSHBYTES_14"),
              (e[(e.OP_PUSHBYTES_15 = 15)] = "OP_PUSHBYTES_15"),
              (e[(e.OP_PUSHBYTES_16 = 16)] = "OP_PUSHBYTES_16"),
              (e[(e.OP_PUSHBYTES_17 = 17)] = "OP_PUSHBYTES_17"),
              (e[(e.OP_PUSHBYTES_18 = 18)] = "OP_PUSHBYTES_18"),
              (e[(e.OP_PUSHBYTES_19 = 19)] = "OP_PUSHBYTES_19"),
              (e[(e.OP_PUSHBYTES_20 = 20)] = "OP_PUSHBYTES_20"),
              (e[(e.OP_PUSHBYTES_21 = 21)] = "OP_PUSHBYTES_21"),
              (e[(e.OP_PUSHBYTES_22 = 22)] = "OP_PUSHBYTES_22"),
              (e[(e.OP_PUSHBYTES_23 = 23)] = "OP_PUSHBYTES_23"),
              (e[(e.OP_PUSHBYTES_24 = 24)] = "OP_PUSHBYTES_24"),
              (e[(e.OP_PUSHBYTES_25 = 25)] = "OP_PUSHBYTES_25"),
              (e[(e.OP_PUSHBYTES_26 = 26)] = "OP_PUSHBYTES_26"),
              (e[(e.OP_PUSHBYTES_27 = 27)] = "OP_PUSHBYTES_27"),
              (e[(e.OP_PUSHBYTES_28 = 28)] = "OP_PUSHBYTES_28"),
              (e[(e.OP_PUSHBYTES_29 = 29)] = "OP_PUSHBYTES_29"),
              (e[(e.OP_PUSHBYTES_30 = 30)] = "OP_PUSHBYTES_30"),
              (e[(e.OP_PUSHBYTES_31 = 31)] = "OP_PUSHBYTES_31"),
              (e[(e.OP_PUSHBYTES_32 = 32)] = "OP_PUSHBYTES_32"),
              (e[(e.OP_PUSHBYTES_33 = 33)] = "OP_PUSHBYTES_33"),
              (e[(e.OP_PUSHBYTES_34 = 34)] = "OP_PUSHBYTES_34"),
              (e[(e.OP_PUSHBYTES_35 = 35)] = "OP_PUSHBYTES_35"),
              (e[(e.OP_PUSHBYTES_36 = 36)] = "OP_PUSHBYTES_36"),
              (e[(e.OP_PUSHBYTES_37 = 37)] = "OP_PUSHBYTES_37"),
              (e[(e.OP_PUSHBYTES_38 = 38)] = "OP_PUSHBYTES_38"),
              (e[(e.OP_PUSHBYTES_39 = 39)] = "OP_PUSHBYTES_39"),
              (e[(e.OP_PUSHBYTES_40 = 40)] = "OP_PUSHBYTES_40"),
              (e[(e.OP_PUSHBYTES_41 = 41)] = "OP_PUSHBYTES_41"),
              (e[(e.OP_PUSHBYTES_42 = 42)] = "OP_PUSHBYTES_42"),
              (e[(e.OP_PUSHBYTES_43 = 43)] = "OP_PUSHBYTES_43"),
              (e[(e.OP_PUSHBYTES_44 = 44)] = "OP_PUSHBYTES_44"),
              (e[(e.OP_PUSHBYTES_45 = 45)] = "OP_PUSHBYTES_45"),
              (e[(e.OP_PUSHBYTES_46 = 46)] = "OP_PUSHBYTES_46"),
              (e[(e.OP_PUSHBYTES_47 = 47)] = "OP_PUSHBYTES_47"),
              (e[(e.OP_PUSHBYTES_48 = 48)] = "OP_PUSHBYTES_48"),
              (e[(e.OP_PUSHBYTES_49 = 49)] = "OP_PUSHBYTES_49"),
              (e[(e.OP_PUSHBYTES_50 = 50)] = "OP_PUSHBYTES_50"),
              (e[(e.OP_PUSHBYTES_51 = 51)] = "OP_PUSHBYTES_51"),
              (e[(e.OP_PUSHBYTES_52 = 52)] = "OP_PUSHBYTES_52"),
              (e[(e.OP_PUSHBYTES_53 = 53)] = "OP_PUSHBYTES_53"),
              (e[(e.OP_PUSHBYTES_54 = 54)] = "OP_PUSHBYTES_54"),
              (e[(e.OP_PUSHBYTES_55 = 55)] = "OP_PUSHBYTES_55"),
              (e[(e.OP_PUSHBYTES_56 = 56)] = "OP_PUSHBYTES_56"),
              (e[(e.OP_PUSHBYTES_57 = 57)] = "OP_PUSHBYTES_57"),
              (e[(e.OP_PUSHBYTES_58 = 58)] = "OP_PUSHBYTES_58"),
              (e[(e.OP_PUSHBYTES_59 = 59)] = "OP_PUSHBYTES_59"),
              (e[(e.OP_PUSHBYTES_60 = 60)] = "OP_PUSHBYTES_60"),
              (e[(e.OP_PUSHBYTES_61 = 61)] = "OP_PUSHBYTES_61"),
              (e[(e.OP_PUSHBYTES_62 = 62)] = "OP_PUSHBYTES_62"),
              (e[(e.OP_PUSHBYTES_63 = 63)] = "OP_PUSHBYTES_63"),
              (e[(e.OP_PUSHBYTES_64 = 64)] = "OP_PUSHBYTES_64"),
              (e[(e.OP_PUSHBYTES_65 = 65)] = "OP_PUSHBYTES_65"),
              (e[(e.OP_PUSHBYTES_66 = 66)] = "OP_PUSHBYTES_66"),
              (e[(e.OP_PUSHBYTES_67 = 67)] = "OP_PUSHBYTES_67"),
              (e[(e.OP_PUSHBYTES_68 = 68)] = "OP_PUSHBYTES_68"),
              (e[(e.OP_PUSHBYTES_69 = 69)] = "OP_PUSHBYTES_69"),
              (e[(e.OP_PUSHBYTES_70 = 70)] = "OP_PUSHBYTES_70"),
              (e[(e.OP_PUSHBYTES_71 = 71)] = "OP_PUSHBYTES_71"),
              (e[(e.OP_PUSHBYTES_72 = 72)] = "OP_PUSHBYTES_72"),
              (e[(e.OP_PUSHBYTES_73 = 73)] = "OP_PUSHBYTES_73"),
              (e[(e.OP_PUSHBYTES_74 = 74)] = "OP_PUSHBYTES_74"),
              (e[(e.OP_PUSHBYTES_75 = 75)] = "OP_PUSHBYTES_75"),
              (e[(e.OP_PUSHDATA_1 = 76)] = "OP_PUSHDATA_1"),
              (e[(e.OP_PUSHDATA_2 = 77)] = "OP_PUSHDATA_2"),
              (e[(e.OP_PUSHDATA_4 = 78)] = "OP_PUSHDATA_4"),
              (e[(e.OP_1NEGATE = 79)] = "OP_1NEGATE"),
              (e[(e.OP_RESERVED = 80)] = "OP_RESERVED"),
              (e[(e.OP_1 = 81)] = "OP_1"),
              (e[(e.OP_2 = 82)] = "OP_2"),
              (e[(e.OP_3 = 83)] = "OP_3"),
              (e[(e.OP_4 = 84)] = "OP_4"),
              (e[(e.OP_5 = 85)] = "OP_5"),
              (e[(e.OP_6 = 86)] = "OP_6"),
              (e[(e.OP_7 = 87)] = "OP_7"),
              (e[(e.OP_8 = 88)] = "OP_8"),
              (e[(e.OP_9 = 89)] = "OP_9"),
              (e[(e.OP_10 = 90)] = "OP_10"),
              (e[(e.OP_11 = 91)] = "OP_11"),
              (e[(e.OP_12 = 92)] = "OP_12"),
              (e[(e.OP_13 = 93)] = "OP_13"),
              (e[(e.OP_14 = 94)] = "OP_14"),
              (e[(e.OP_15 = 95)] = "OP_15"),
              (e[(e.OP_16 = 96)] = "OP_16"),
              (e[(e.OP_NOP = 97)] = "OP_NOP"),
              (e[(e.OP_VER = 98)] = "OP_VER"),
              (e[(e.OP_IF = 99)] = "OP_IF"),
              (e[(e.OP_NOTIF = 100)] = "OP_NOTIF"),
              (e[(e.OP_VERIF = 101)] = "OP_VERIF"),
              (e[(e.OP_BEGIN = 101)] = "OP_BEGIN"),
              (e[(e.OP_VERNOTIF = 102)] = "OP_VERNOTIF"),
              (e[(e.OP_UNTIL = 102)] = "OP_UNTIL"),
              (e[(e.OP_ELSE = 103)] = "OP_ELSE"),
              (e[(e.OP_ENDIF = 104)] = "OP_ENDIF"),
              (e[(e.OP_VERIFY = 105)] = "OP_VERIFY"),
              (e[(e.OP_RETURN = 106)] = "OP_RETURN"),
              (e[(e.OP_TOALTSTACK = 107)] = "OP_TOALTSTACK"),
              (e[(e.OP_FROMALTSTACK = 108)] = "OP_FROMALTSTACK"),
              (e[(e.OP_2DROP = 109)] = "OP_2DROP"),
              (e[(e.OP_2DUP = 110)] = "OP_2DUP"),
              (e[(e.OP_3DUP = 111)] = "OP_3DUP"),
              (e[(e.OP_2OVER = 112)] = "OP_2OVER"),
              (e[(e.OP_2ROT = 113)] = "OP_2ROT"),
              (e[(e.OP_2SWAP = 114)] = "OP_2SWAP"),
              (e[(e.OP_IFDUP = 115)] = "OP_IFDUP"),
              (e[(e.OP_DEPTH = 116)] = "OP_DEPTH"),
              (e[(e.OP_DROP = 117)] = "OP_DROP"),
              (e[(e.OP_DUP = 118)] = "OP_DUP"),
              (e[(e.OP_NIP = 119)] = "OP_NIP"),
              (e[(e.OP_OVER = 120)] = "OP_OVER"),
              (e[(e.OP_PICK = 121)] = "OP_PICK"),
              (e[(e.OP_ROLL = 122)] = "OP_ROLL"),
              (e[(e.OP_ROT = 123)] = "OP_ROT"),
              (e[(e.OP_SWAP = 124)] = "OP_SWAP"),
              (e[(e.OP_TUCK = 125)] = "OP_TUCK"),
              (e[(e.OP_CAT = 126)] = "OP_CAT"),
              (e[(e.OP_SPLIT = 127)] = "OP_SPLIT"),
              (e[(e.OP_NUM2BIN = 128)] = "OP_NUM2BIN"),
              (e[(e.OP_BIN2NUM = 129)] = "OP_BIN2NUM"),
              (e[(e.OP_SIZE = 130)] = "OP_SIZE"),
              (e[(e.OP_INVERT = 131)] = "OP_INVERT"),
              (e[(e.OP_AND = 132)] = "OP_AND"),
              (e[(e.OP_OR = 133)] = "OP_OR"),
              (e[(e.OP_XOR = 134)] = "OP_XOR"),
              (e[(e.OP_EQUAL = 135)] = "OP_EQUAL"),
              (e[(e.OP_EQUALVERIFY = 136)] = "OP_EQUALVERIFY"),
              (e[(e.OP_RESERVED1 = 137)] = "OP_RESERVED1"),
              (e[(e.OP_RESERVED2 = 138)] = "OP_RESERVED2"),
              (e[(e.OP_1ADD = 139)] = "OP_1ADD"),
              (e[(e.OP_1SUB = 140)] = "OP_1SUB"),
              (e[(e.OP_2MUL = 141)] = "OP_2MUL"),
              (e[(e.OP_2DIV = 142)] = "OP_2DIV"),
              (e[(e.OP_NEGATE = 143)] = "OP_NEGATE"),
              (e[(e.OP_ABS = 144)] = "OP_ABS"),
              (e[(e.OP_NOT = 145)] = "OP_NOT"),
              (e[(e.OP_0EQUAL = 145)] = "OP_0EQUAL"),
              (e[(e.OP_0NOTEQUAL = 146)] = "OP_0NOTEQUAL"),
              (e[(e.OP_ADD = 147)] = "OP_ADD"),
              (e[(e.OP_SUB = 148)] = "OP_SUB"),
              (e[(e.OP_MUL = 149)] = "OP_MUL"),
              (e[(e.OP_DIV = 150)] = "OP_DIV"),
              (e[(e.OP_MOD = 151)] = "OP_MOD"),
              (e[(e.OP_LSHIFT = 152)] = "OP_LSHIFT"),
              (e[(e.OP_RSHIFT = 153)] = "OP_RSHIFT"),
              (e[(e.OP_BOOLAND = 154)] = "OP_BOOLAND"),
              (e[(e.OP_BOOLOR = 155)] = "OP_BOOLOR"),
              (e[(e.OP_NUMEQUAL = 156)] = "OP_NUMEQUAL"),
              (e[(e.OP_NUMEQUALVERIFY = 157)] = "OP_NUMEQUALVERIFY"),
              (e[(e.OP_NUMNOTEQUAL = 158)] = "OP_NUMNOTEQUAL"),
              (e[(e.OP_LESSTHAN = 159)] = "OP_LESSTHAN"),
              (e[(e.OP_GREATERTHAN = 160)] = "OP_GREATERTHAN"),
              (e[(e.OP_LESSTHANOREQUAL = 161)] = "OP_LESSTHANOREQUAL"),
              (e[(e.OP_GREATERTHANOREQUAL = 162)] = "OP_GREATERTHANOREQUAL"),
              (e[(e.OP_MIN = 163)] = "OP_MIN"),
              (e[(e.OP_MAX = 164)] = "OP_MAX"),
              (e[(e.OP_WITHIN = 165)] = "OP_WITHIN"),
              (e[(e.OP_RIPEMD160 = 166)] = "OP_RIPEMD160"),
              (e[(e.OP_SHA1 = 167)] = "OP_SHA1"),
              (e[(e.OP_SHA256 = 168)] = "OP_SHA256"),
              (e[(e.OP_HASH160 = 169)] = "OP_HASH160"),
              (e[(e.OP_HASH256 = 170)] = "OP_HASH256"),
              (e[(e.OP_CODESEPARATOR = 171)] = "OP_CODESEPARATOR"),
              (e[(e.OP_CHECKSIG = 172)] = "OP_CHECKSIG"),
              (e[(e.OP_CHECKSIGVERIFY = 173)] = "OP_CHECKSIGVERIFY"),
              (e[(e.OP_CHECKMULTISIG = 174)] = "OP_CHECKMULTISIG"),
              (e[(e.OP_CHECKMULTISIGVERIFY = 175)] = "OP_CHECKMULTISIGVERIFY"),
              (e[(e.OP_NOP1 = 176)] = "OP_NOP1"),
              (e[(e.OP_CHECKLOCKTIMEVERIFY = 177)] = "OP_CHECKLOCKTIMEVERIFY"),
              (e[(e.OP_CHECKSEQUENCEVERIFY = 178)] = "OP_CHECKSEQUENCEVERIFY"),
              (e[(e.OP_NOP4 = 179)] = "OP_NOP4"),
              (e[(e.OP_NOP5 = 180)] = "OP_NOP5"),
              (e[(e.OP_NOP6 = 181)] = "OP_NOP6"),
              (e[(e.OP_NOP7 = 182)] = "OP_NOP7"),
              (e[(e.OP_NOP8 = 183)] = "OP_NOP8"),
              (e[(e.OP_NOP9 = 184)] = "OP_NOP9"),
              (e[(e.OP_NOP10 = 185)] = "OP_NOP10"),
              (e[(e.OP_CHECKDATASIG = 186)] = "OP_CHECKDATASIG"),
              (e[(e.OP_CHECKDATASIGVERIFY = 187)] = "OP_CHECKDATASIGVERIFY"),
              (e[(e.OP_REVERSEBYTES = 188)] = "OP_REVERSEBYTES"),
              (e[(e.OP_UNKNOWN189 = 189)] = "OP_UNKNOWN189"),
              (e[(e.OP_UNKNOWN190 = 190)] = "OP_UNKNOWN190"),
              (e[(e.OP_UNKNOWN191 = 191)] = "OP_UNKNOWN191"),
              (e[(e.OP_INPUTINDEX = 192)] = "OP_INPUTINDEX"),
              (e[(e.OP_ACTIVEBYTECODE = 193)] = "OP_ACTIVEBYTECODE"),
              (e[(e.OP_TXVERSION = 194)] = "OP_TXVERSION"),
              (e[(e.OP_TXINPUTCOUNT = 195)] = "OP_TXINPUTCOUNT"),
              (e[(e.OP_TXOUTPUTCOUNT = 196)] = "OP_TXOUTPUTCOUNT"),
              (e[(e.OP_TXLOCKTIME = 197)] = "OP_TXLOCKTIME"),
              (e[(e.OP_UTXOVALUE = 198)] = "OP_UTXOVALUE"),
              (e[(e.OP_UTXOBYTECODE = 199)] = "OP_UTXOBYTECODE"),
              (e[(e.OP_OUTPOINTTXHASH = 200)] = "OP_OUTPOINTTXHASH"),
              (e[(e.OP_OUTPOINTINDEX = 201)] = "OP_OUTPOINTINDEX"),
              (e[(e.OP_INPUTBYTECODE = 202)] = "OP_INPUTBYTECODE"),
              (e[(e.OP_INPUTSEQUENCENUMBER = 203)] = "OP_INPUTSEQUENCENUMBER"),
              (e[(e.OP_OUTPUTVALUE = 204)] = "OP_OUTPUTVALUE"),
              (e[(e.OP_OUTPUTBYTECODE = 205)] = "OP_OUTPUTBYTECODE"),
              (e[(e.OP_UTXOTOKENCATEGORY = 206)] = "OP_UTXOTOKENCATEGORY"),
              (e[(e.OP_UTXOTOKENCOMMITMENT = 207)] = "OP_UTXOTOKENCOMMITMENT"),
              (e[(e.OP_UTXOTOKENAMOUNT = 208)] = "OP_UTXOTOKENAMOUNT"),
              (e[(e.OP_OUTPUTTOKENCATEGORY = 209)] = "OP_OUTPUTTOKENCATEGORY"),
              (e[(e.OP_OUTPUTTOKENCOMMITMENT = 210)] =
                "OP_OUTPUTTOKENCOMMITMENT"),
              (e[(e.OP_OUTPUTTOKENAMOUNT = 211)] = "OP_OUTPUTTOKENAMOUNT"),
              (e[(e.OP_UNKNOWN212 = 212)] = "OP_UNKNOWN212"),
              (e[(e.OP_UNKNOWN213 = 213)] = "OP_UNKNOWN213"),
              (e[(e.OP_UNKNOWN214 = 214)] = "OP_UNKNOWN214"),
              (e[(e.OP_UNKNOWN215 = 215)] = "OP_UNKNOWN215"),
              (e[(e.OP_UNKNOWN216 = 216)] = "OP_UNKNOWN216"),
              (e[(e.OP_UNKNOWN217 = 217)] = "OP_UNKNOWN217"),
              (e[(e.OP_UNKNOWN218 = 218)] = "OP_UNKNOWN218"),
              (e[(e.OP_UNKNOWN219 = 219)] = "OP_UNKNOWN219"),
              (e[(e.OP_UNKNOWN220 = 220)] = "OP_UNKNOWN220"),
              (e[(e.OP_UNKNOWN221 = 221)] = "OP_UNKNOWN221"),
              (e[(e.OP_UNKNOWN222 = 222)] = "OP_UNKNOWN222"),
              (e[(e.OP_UNKNOWN223 = 223)] = "OP_UNKNOWN223"),
              (e[(e.OP_UNKNOWN224 = 224)] = "OP_UNKNOWN224"),
              (e[(e.OP_UNKNOWN225 = 225)] = "OP_UNKNOWN225"),
              (e[(e.OP_UNKNOWN226 = 226)] = "OP_UNKNOWN226"),
              (e[(e.OP_UNKNOWN227 = 227)] = "OP_UNKNOWN227"),
              (e[(e.OP_UNKNOWN228 = 228)] = "OP_UNKNOWN228"),
              (e[(e.OP_UNKNOWN229 = 229)] = "OP_UNKNOWN229"),
              (e[(e.OP_UNKNOWN230 = 230)] = "OP_UNKNOWN230"),
              (e[(e.OP_UNKNOWN231 = 231)] = "OP_UNKNOWN231"),
              (e[(e.OP_UNKNOWN232 = 232)] = "OP_UNKNOWN232"),
              (e[(e.OP_UNKNOWN233 = 233)] = "OP_UNKNOWN233"),
              (e[(e.OP_UNKNOWN234 = 234)] = "OP_UNKNOWN234"),
              (e[(e.OP_UNKNOWN235 = 235)] = "OP_UNKNOWN235"),
              (e[(e.OP_UNKNOWN236 = 236)] = "OP_UNKNOWN236"),
              (e[(e.OP_UNKNOWN237 = 237)] = "OP_UNKNOWN237"),
              (e[(e.OP_UNKNOWN238 = 238)] = "OP_UNKNOWN238"),
              (e[(e.OP_UNKNOWN239 = 239)] = "OP_UNKNOWN239"),
              (e[(e.OP_UNKNOWN240 = 240)] = "OP_UNKNOWN240"),
              (e[(e.OP_UNKNOWN241 = 241)] = "OP_UNKNOWN241"),
              (e[(e.OP_UNKNOWN242 = 242)] = "OP_UNKNOWN242"),
              (e[(e.OP_UNKNOWN243 = 243)] = "OP_UNKNOWN243"),
              (e[(e.OP_UNKNOWN244 = 244)] = "OP_UNKNOWN244"),
              (e[(e.OP_UNKNOWN245 = 245)] = "OP_UNKNOWN245"),
              (e[(e.OP_UNKNOWN246 = 246)] = "OP_UNKNOWN246"),
              (e[(e.OP_UNKNOWN247 = 247)] = "OP_UNKNOWN247"),
              (e[(e.OP_UNKNOWN248 = 248)] = "OP_UNKNOWN248"),
              (e[(e.OP_UNKNOWN249 = 249)] = "OP_UNKNOWN249"),
              (e[(e.OP_UNKNOWN250 = 250)] = "OP_UNKNOWN250"),
              (e[(e.OP_UNKNOWN251 = 251)] = "OP_UNKNOWN251"),
              (e[(e.OP_UNKNOWN252 = 252)] = "OP_UNKNOWN252"),
              (e[(e.OP_UNKNOWN253 = 253)] = "OP_UNKNOWN253"),
              (e[(e.OP_UNKNOWN254 = 254)] = "OP_UNKNOWN254"),
              (e[(e.OP_UNKNOWN255 = 255)] = "OP_UNKNOWN255");
          })(i || (i = {}));
      },
      92922: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $Q: () => l,
              BZ: () => m,
              Es: () => w,
              Hi: () => y,
              KQ: () => D,
              Ls: () => v,
              No: () => C,
              Pq: () => g,
              Qn: () => k,
              Rb: () => B,
              Y8: () => f,
              ZF: () => I,
              a6: () => h,
              gm: () => b,
              kF: () => _,
              mZ: () => S,
              n5: () => Q,
              qh: () => d,
              ut: () => N,
              vp: () => c,
              xR: () => u,
              y: () => E,
              z1: () => p,
            });
            var n = r(78417),
              o = r(69362),
              A = r(27021),
              a = r(85671),
              s = e([n, a, A]);
            [n, a, A] = s.then ? (await s)() : s;
            const c = (e) => (0, n.ff)(e, (e, [t]) => (0, n.fH)(e, t + 1n)),
              g = (e) =>
                (0, n.ff)(e, (e, [t]) => (0, n.t0)(e, (0, a.qR)(t - 1n))),
              l = (e) => (0, n.ff)(e, (e, [t]) => (0, n.t0)(e, (0, a.qR)(-t))),
              u = (e) =>
                (0, n.ff)(e, (e, [t]) =>
                  (0, n.t0)(e, (0, a.qR)(t < 0 ? -t : t))
                ),
              h = (e) =>
                (0, n.ff)(e, (e, [t]) =>
                  (0, n.t0)(e, 0n === t ? (0, a.qR)(1n) : (0, a.qR)(0n))
                ),
              I = (e) =>
                (0, n.ff)(e, (e, [t]) =>
                  (0, n.t0)(e, 0n === t ? (0, a.qR)(0n) : (0, a.qR)(1n))
                ),
              p = (e) => (0, n.$J)(e, (e, [t, r]) => (0, n.fH)(e, t + r)),
              d = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.qR)(t - r))),
              f = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  (0, n.t0)(e, (0, a.z0)(0n !== t && 0n !== r))
                ),
              C = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  (0, n.t0)(e, (0, a.z0)(0n !== t || 0n !== r))
                ),
              B = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t === r))),
              E = (0, n.yJ)(B, A.AG),
              y = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t !== r))),
              m = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t < r))),
              Q = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t <= r))),
              v = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t > r))),
              S = (e) =>
                (0, n.$J)(e, (e, [t, r]) => (0, n.t0)(e, (0, a.z0)(t >= r))),
              w = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  (0, n.t0)(e, (0, a.qR)(t < r ? t : r))
                ),
              b = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  (0, n.t0)(e, (0, a.qR)(t > r ? t : r))
                ),
              k = (e) =>
                (0, n.eY)(e, (e, [t, r, i]) =>
                  (0, n.t0)(e, (0, a.z0)(r <= t && t < i))
                ),
              N = (e) => (0, n.$J)(e, (e, [t, r]) => (0, n.fH)(e, t * r)),
              _ = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  0n === r
                    ? (0, o.O)(e, o.a.divisionByZero)
                    : (0, n.t0)(e, (0, a.qR)(t / r))
                ),
              D = (e) =>
                (0, n.$J)(e, (e, [t, r]) =>
                  0n === r
                    ? (0, o.O)(e, o.a.divisionByZero)
                    : (0, n.t0)(e, (0, a.qR)(t % r))
                );
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      19354: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              DC: () => h,
              Lw: () => g,
              e: () => p,
              gg: () => I,
              ys: () => l,
            });
            var n = r(34684),
              o = r(78417),
              A = r(69362),
              a = r(27021),
              s = r(85671),
              c = e([o, s, a]);
            [o, s, a] = c.then ? (await c)() : c;
            const g = (e) =>
                (0, o.iD)(e, (e, [t, r]) =>
                  (0, o.t0)(e, (0, s.z0)((0, n.sv)(t, r)))
                ),
              l = (0, o.yJ)(g, a.AG),
              u = (e) => (t) =>
                (0, o.iD)(t, (t, [r, i]) =>
                  r.length === i.length
                    ? (0, o.t0)(t, e(r, i))
                    : (0, A.O)(t, A.a.mismatchedBitwiseOperandLength)
                ),
              h = u((e, t) => e.map((e, r) => e & t[r])),
              I = u((e, t) => e.map((e, r) => e | t[r])),
              p = u((e, t) => e.map((e, r) => e ^ t[r]));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      78417: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $J: () => C,
              SV: () => m,
              eY: () => B,
              fH: () => Q,
              ff: () => f,
              h6: () => c,
              iD: () => u,
              iX: () => I,
              jd: () => y,
              lK: () => g,
              lg: () => p,
              mw: () => h,
              t0: () => E,
              t9: () => l,
              wD: () => s,
              yJ: () => v,
            });
            var n = r(25121),
              o = r(69362),
              A = r(85671),
              a = e([A, n]);
            [A, n] = a.then ? (await a)() : a;
            const s = (e) => (t) => {
                const r = e(t);
                return (r.operationCount += 1), r;
              },
              c = (e) => (t) => t.controlStack.every((e) => e) ? e(t) : t,
              g = (e, t) =>
                Object.keys(t).reduce(
                  (r, i) => ({
                    ...r,
                    [i]: e.reduce((e, t) => t(e), t[Number(i)]),
                  }),
                  {}
                ),
              l = (e, t) => {
                const r = e.stack.pop();
                return void 0 === r ? (0, o.O)(e, o.a.emptyStack) : t(e, [r]);
              },
              u = (e, t) => l(e, (e, [r]) => l(e, (e, [i]) => t(e, [i, r]))),
              h = (e, t) =>
                l(e, (e, [r]) => u(e, (e, [i, n]) => t(e, [i, n, r]))),
              I = (e, t) =>
                u(e, (e, [r, i]) => u(e, (e, [n, o]) => t(e, [n, o, r, i]))),
              p = (e, t) =>
                I(e, (e, [r, i, n, o]) =>
                  u(e, (e, [A, a]) => t(e, [A, a, r, i, n, o]))
                ),
              d = 8,
              f = (
                e,
                t,
                {
                  maximumVmNumberByteLength: r = d,
                  requireMinimalEncoding: i = !0,
                } = { maximumVmNumberByteLength: d, requireMinimalEncoding: !0 }
              ) =>
                l(e, (n, [a]) => {
                  const s = (0, A.X5)(a, {
                    maximumVmNumberByteLength: r,
                    requireMinimalEncoding: i,
                  });
                  return (0, A.oN)(s)
                    ? (0, o.O)(e, o.a.invalidVmNumber)
                    : t(n, [s]);
                }),
              C = (
                e,
                t,
                {
                  maximumVmNumberByteLength: r = d,
                  requireMinimalEncoding: i = !0,
                } = { maximumVmNumberByteLength: d, requireMinimalEncoding: !0 }
              ) =>
                f(
                  e,
                  (e, [n]) =>
                    f(e, (e, [r]) => t(e, [r, n]), {
                      maximumVmNumberByteLength: r,
                      requireMinimalEncoding: i,
                    }),
                  { maximumVmNumberByteLength: r, requireMinimalEncoding: i }
                ),
              B = (
                e,
                t,
                {
                  maximumVmNumberByteLength: r = d,
                  requireMinimalEncoding: i = !0,
                } = { maximumVmNumberByteLength: d, requireMinimalEncoding: !0 }
              ) =>
                C(
                  e,
                  (e, [n, o]) =>
                    f(e, (e, [r]) => t(e, [r, n, o]), {
                      maximumVmNumberByteLength: r,
                      requireMinimalEncoding: i,
                    }),
                  { maximumVmNumberByteLength: r, requireMinimalEncoding: i }
                ),
              E = (e, ...t) => (e.stack.push(...t), e),
              y = (e, t, r = n.gk.maximumStackItemLength) =>
                t.length > r
                  ? (0, o.O)(
                      e,
                      `${o.a.exceededMaximumStackItemLength} Item length: ${t.length} bytes.`
                    )
                  : (e.stack.push(t), e),
              m = (e, t) => E(e, (0, A.qR)(t)),
              Q = (
                e,
                t,
                r = BigInt(n.gk.minVmNumber),
                i = BigInt(n.gk.maxVmNumber)
              ) =>
                t > i || t < r
                  ? (0, o.O)(e, o.a.overflowsVmNumberRange)
                  : m(e, t),
              v = (e, t) => (r) => t(e(r));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      59136: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Rd: () => l, U: () => g, bg: () => c, w3: () => h });
            var n = r(30861),
              o = r(78417),
              A = r(69362),
              a = r(85671),
              s = e([o, n, a]);
            [o, n, a] = s.then ? (await s)() : s;
            const c = (0, o.h6)((e) => (0, A.O)(e, A.a.unknownOpcode)),
              g = (e) => e.map((e) => e.slice()),
              l = ({ program: e, instructions: t, stack: r }) => ({
                alternateStack: [],
                controlStack: [],
                instructions: t,
                ip: 0,
                lastCodeSeparator: -1,
                operationCount: 0,
                program: e,
                signatureOperationsCount: 0,
                signedMessages: [],
                stack: r,
              }),
              u = (e) => ({
                inputIndex: e.inputIndex,
                sourceOutputs: (0, n.jm)(e.sourceOutputs),
                transaction: (0, n.Hs)(e.transaction),
              }),
              h = (e) => ({
                ...(void 0 === e.error ? {} : { error: e.error }),
                alternateStack: g(e.alternateStack),
                controlStack: e.controlStack.slice(),
                instructions: e.instructions.map(a.hR),
                ip: e.ip,
                lastCodeSeparator: e.lastCodeSeparator,
                operationCount: e.operationCount,
                program: u(e.program),
                signatureOperationsCount: e.signatureOperationsCount,
                signedMessages: e.signedMessages.map((e) => ({
                  digest: e.digest.slice(),
                  ...("serialization" in e
                    ? { serialization: e.serialization.slice() }
                    : { message: e.message.slice() }),
                })),
                stack: g(e.stack),
              });
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      25121: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { GA: () => a, gk: () => n });
            var n,
              o = r(44115),
              A = e([o]);
            (o = (A.then ? (await A)() : A)[0]),
              (function (e) {
                (e[(e.maximumBytecodeLength = 1e4)] = "maximumBytecodeLength"),
                  (e[(e.maximumDataCarrierBytes = 223)] =
                    "maximumDataCarrierBytes"),
                  (e[(e.maximumOperationCount = 201)] =
                    "maximumOperationCount"),
                  (e[(e.maximumStackDepth = 1e3)] = "maximumStackDepth"),
                  (e[(e.maximumStackItemLength = 520)] =
                    "maximumStackItemLength"),
                  (e[(e.maximumStandardVersion = 2)] =
                    "maximumStandardVersion"),
                  (e[(e.maximumStandardUnlockingBytecodeLength = 1650)] =
                    "maximumStandardUnlockingBytecodeLength"),
                  (e[(e.minimumTransactionSize = 100)] =
                    "minimumTransactionSize"),
                  (e[(e.maximumStandardTransactionSize = 1e5)] =
                    "maximumStandardTransactionSize"),
                  (e[(e.maximumTransactionSize = 1e6)] =
                    "maximumTransactionSize"),
                  (e[(e.maximumVmNumberLength = 8)] = "maximumVmNumberLength"),
                  (e.minVmNumber = "-9223372036854775807"),
                  (e.maxVmNumber = "9223372036854775807"),
                  (e[(e.schnorrSignatureLength = 64)] =
                    "schnorrSignatureLength");
              })(n || (n = {}));
            const a = [
              o.BU.allOutputs,
              o.BU.allOutputsSingleInput,
              o.BU.correspondingOutput,
              o.BU.correspondingOutputSingleInput,
              o.BU.noOutputs,
              o.BU.noOutputsSingleInput,
            ];
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      45127: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              LF: () => p,
              N$: () => I,
              SZ: () => C,
              W0: () => y,
              Wd: () => B,
              Zy: () => d,
              kF: () => Q,
              kI: () => m,
              vU: () => f,
            });
            var n = r(12909),
              o = r(47726),
              A = r(34684),
              a = r(78417),
              s = r(25121),
              c = r(10648),
              g = r(69362),
              l = r(27021),
              u = r(85671),
              h = e([n, a, o, s, c, u, l]);
            [n, a, o, s, c, u, l] = h.then ? (await h)() : h;
            const I =
                ({ ripemd160: e } = { ripemd160: n.bP }) =>
                (t) =>
                  (0, a.t9)(t, (t, [r]) => (0, a.t0)(t, e.hash(r))),
              p =
                ({ sha1: e } = { sha1: n.q4 }) =>
                (t) =>
                  (0, a.t9)(t, (t, [r]) => (0, a.t0)(t, e.hash(r))),
              d =
                ({ sha256: e } = { sha256: n.JQ }) =>
                (t) =>
                  (0, a.t9)(t, (t, [r]) => (0, a.t0)(t, e.hash(r))),
              f =
                (
                  { ripemd160: e, sha256: t } = {
                    ripemd160: n.bP,
                    sha256: n.JQ,
                  }
                ) =>
                (r) =>
                  (0, a.t9)(r, (r, [i]) => (0, a.t0)(r, e.hash(t.hash(i)))),
              C =
                ({ sha256: e } = { sha256: n.JQ }) =>
                (t) =>
                  (0, a.t9)(t, (t, [r]) => (0, a.t0)(t, (0, o.W)(r, e))),
              B = (e) => ((e.lastCodeSeparator = e.ip), e),
              E = (e) =>
                0 === e.length ||
                e.length === s.gk.schnorrSignatureLength ||
                (0, c.Zo)(e),
              y =
                ({ secp256k1: e, sha256: t }) =>
                (r) =>
                  (0, a.mw)(r, (r, [i, n, o]) => {
                    if (!E(i))
                      return (0, g.O)(
                        r,
                        g.a.invalidSignatureEncoding,
                        `Data signature: ${(0, A.UM)(i)}`
                      );
                    if (!(0, u.GH)(o))
                      return (0, g.O)(r, g.a.invalidPublicKeyEncoding);
                    const c = t.hash(n);
                    r.signedMessages.push({ digest: c, message: n });
                    const l =
                      i.length === s.gk.schnorrSignatureLength
                        ? e.verifySignatureSchnorr(i, o, c)
                        : e.verifySignatureDERLowS(i, o, c);
                    return l || 0 === i.length
                      ? (0, a.t0)(r, (0, u.z0)(l))
                      : (0, g.O)(r, g.a.nonNullSignatureFailure);
                  }),
              m = (
                { secp256k1: e, sha256: t } = { secp256k1: n.kA, sha256: n.JQ }
              ) => (0, a.yJ)(y({ secp256k1: e, sha256: t }), l.AG),
              Q = (e) =>
                (0, a.t9)(e, (e, [t]) => (0, a.t0)(e, t.slice().reverse()));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      10648: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Xj: () => g, Zo: () => c, pL: () => l });
            var n = r(25121),
              o = e([n]);
            n = (o.then ? (await o)() : o)[0];
            const A = (e) => 0 != (128 & e),
              a = (e, t, r) => e > 1 && 0 === t && !A(r),
              s = (e, t, r, i) =>
                2 === e[t] && 0 !== r && !A(e[i]) && !a(r, e[i], e[i + 1]),
              c = (e) => {
                const t = e.length > 8 && e.length < 72,
                  r = 48 === e[0],
                  i = e[1] === e.length - 2,
                  n = e[3];
                if (void 0 === n) return !1;
                const o = n <= e.length - 7,
                  A = s(e, 2, n, 4),
                  a = 4 + n,
                  c = a + 1,
                  g = e[c];
                if (void 0 === g) return !1;
                const l = c + 1,
                  u = l + g === e.length,
                  h = s(e, a, g, l);
                return t && r && i && o && A && u && h;
              },
              g = (e, t) =>
                0 === e.length ||
                (t.includes(e[e.length - 1]) &&
                  (e.length === n.gk.schnorrSignatureLength + 1 ||
                    c(e.slice(0, e.length - 1)))),
              l = (e) => ({
                signature: e.slice(0, -1),
                signingSerializationType: e.slice(-1),
              });
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      69362: (e, t, r) => {
        "use strict";
        r.d(t, { O: () => o, a: () => i });
        var i,
          n = r(10377);
        !(function (e) {
          (e.calledReserved =
            "Program called an unassigned, reserved operation."),
            (e.calledReturn = "Program called an OP_RETURN operation."),
            (e.calledUpgradableNop =
              "Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10)."),
            (e.checkSequenceUnavailable =
              "Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher."),
            (e.disabledOpcode = "Program contains a disabled opcode."),
            (e.divisionByZero =
              "Program attempted to divide a number by zero."),
            (e.emptyAlternateStack =
              "Tried to read from an empty alternate stack."),
            (e.emptyStack = "Tried to read from an empty stack."),
            (e.exceededMaximumBytecodeLengthLocking =
              "The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes)."),
            (e.exceededMaximumBytecodeLengthUnlocking =
              "The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes)."),
            (e.exceededMaximumVmNumberLength =
              "Program attempted an OP_BIN2NUM operation on a byte sequence that cannot be encoded within the maximum VM Number length."),
            (e.exceededMaximumStackDepth =
              "Program exceeded the maximum stack depth (1,000 items)."),
            (e.exceededMaximumStackItemLength =
              "Program attempted to push a stack item that exceeded the maximum stack item length (520 bytes)."),
            (e.exceededMaximumOperationCount =
              "Program exceeded the maximum operation count (201 operations)."),
            (e.exceedsMaximumMultisigPublicKeyCount =
              "Program called an OP_CHECKMULTISIG that exceeds the maximum public key count (20 public keys)."),
            (e.failedVerify = "Program failed an OP_VERIFY operation."),
            (e.invalidStackIndex =
              "Tried to read from an invalid stack index."),
            (e.incompatibleLocktimeType =
              "Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time."),
            (e.incompatibleSequenceType =
              "Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type."),
            (e.insufficientLength =
              "Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number."),
            (e.insufficientPublicKeys =
              "Program called an OP_CHECKMULTISIG operation that requires signatures from more public keys than are provided."),
            (e.invalidNaturalNumber =
              "Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0)."),
            (e.invalidProtocolBugValue =
              'The OP_CHECKMULTISIG protocol bug value must be a VM Number 0 (to comply with the "NULLDUMMY" rule).'),
            (e.invalidPublicKeyEncoding =
              "Encountered an improperly encoded public key."),
            (e.invalidVmNumber =
              "Invalid input: this operation requires a valid VM Number."),
            (e.invalidSignatureEncoding =
              "Encountered an improperly encoded signature."),
            (e.invalidSplitIndex =
              "Program called an OP_SPLIT operation with an invalid index."),
            (e.invalidTransactionInputIndex =
              "Program attempted to read from an invalid transaction input index."),
            (e.invalidTransactionOutputIndex =
              "Program attempted to read from an invalid transaction output index."),
            (e.invalidTransactionUtxoIndex =
              "Program attempted to read from an invalid transaction UTXO index."),
            (e.locktimeDisabled =
              "Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction."),
            (e.mismatchedBitwiseOperandLength =
              "Program attempted a bitwise operation on operands of different lengths."),
            (e.malformedLockingBytecode =
              "The provided locking bytecode is malformed."),
            (e.malformedP2shBytecode =
              "Redeem bytecode was malformed prior to P2SH evaluation."),
            (e.malformedPush =
              "Program must be long enough to push the requested number of bytes."),
            (e.malformedUnlockingBytecode =
              "The provided unlocking bytecode is malformed."),
            (e.negativeLocktime =
              "Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime."),
            (e.nonEmptyControlStack =
              "The active bytecode completed with a non-empty control stack (missing `OP_ENDIF`)."),
            (e.nonMinimalPush =
              "Push operations must use the smallest possible encoding."),
            (e.nonNullSignatureFailure =
              'Program failed a signature verification with a non-null signature (violating the "NULLFAIL" rule).'),
            (e.overflowsVmNumberRange =
              "Program attempted an arithmetic operation which exceeds the range of VM Numbers."),
            (e.requiresCleanStack =
              "Program completed with an unexpected number of items on the stack (must be exactly 1)."),
            (e.requiresPushOnly =
              "Unlocking bytecode may contain only push operations."),
            (e.schnorrSizedSignatureInCheckMultiSig =
              "Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation."),
            (e.unexpectedElse =
              "Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block."),
            (e.unexpectedEndIf =
              "Encountered an OP_ENDIF that is not following a matching OP_IF."),
            (e.unknownOpcode = "Called an unknown opcode."),
            (e.unmatchedSequenceDisable =
              "Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag."),
            (e.unsatisfiedLocktime =
              "Program called an OP_CHECKLOCKTIMEVERIFY operation that requires a locktime greater than the transaction's locktime."),
            (e.unsatisfiedSequenceNumber =
              "Program called an OP_CHECKSEQUENCEVERIFY operation that requires a sequence number greater than the input's sequence number."),
            (e.unsuccessfulEvaluation =
              "Unsuccessful evaluation: completed with a non-truthy value on top of the stack.");
        })(i || (i = {}));
        const o = (e, t, r) => ({
          ...e,
          error: void 0 === e.error ? (0, n.Z)(t, r) : e.error,
        });
      },
      27021: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              AG: () => s,
              SG: () => I,
              bN: () => h,
              e2: () => g,
              h2: () => u,
              nK: () => l,
              w4: () => c,
            });
            var n = r(78417),
              o = r(69362),
              A = r(85671),
              a = e([n, A]);
            [n, A] = a.then ? (await a)() : a;
            const s = (e) =>
                (0, n.t9)(e, (e, [t]) =>
                  (0, A.XS)(t) ? e : (0, o.O)(e, o.a.failedVerify)
                ),
              c = (e) => (0, o.O)(e, o.a.calledReserved),
              g = (e) => (0, o.O)(e, o.a.calledReturn),
              l = (e) =>
                e.controlStack.every((e) => e)
                  ? (0, n.t9)(
                      e,
                      (t, [r]) => (t.controlStack.push((0, A.XS)(r)), e)
                    )
                  : (e.controlStack.push(!1), e),
              u = (e) =>
                e.controlStack.every((e) => e)
                  ? (0, n.t9)(
                      e,
                      (t, [r]) => (t.controlStack.push(!(0, A.XS)(r)), e)
                    )
                  : (e.controlStack.push(!1), e),
              h = (e) =>
                void 0 === e.controlStack.pop()
                  ? (0, o.O)(e, o.a.unexpectedEndIf)
                  : e,
              I = (e) => {
                const t = e.controlStack[e.controlStack.length - 1];
                return void 0 === t
                  ? (0, o.O)(e, o.a.unexpectedElse)
                  : ((e.controlStack[e.controlStack.length - 1] = !t), e);
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      86852: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Aj: () => l, PV: () => g, UN: () => I, pf: () => h });
            var n = r(34684),
              o = r(78417),
              A = r(25121),
              a = r(69362),
              s = r(85671),
              c = e([o, A, s]);
            [o, A, s] = c.then ? (await c)() : c;
            const g = (e) =>
                (0, o.iD)(e, (e, [t, r]) => (0, o.jd)(e, (0, n.kg)([t, r]))),
              l = (e) =>
                (0, o.ff)(e, (e, t) => {
                  const r = Number(t);
                  return (0, o.t9)(e, (e, [t]) =>
                    r < 0 || r > t.length
                      ? (0, a.O)(e, a.a.invalidSplitIndex)
                      : (0, o.t0)(e, t.slice(0, r), t.slice(r))
                  );
                }),
              u = (e, t) => {
                let r = 0;
                e.length > 0 &&
                  ((r = 128 & e[e.length - 1]), (e[e.length - 1] &= 127));
                const i = Array.from(e);
                for (; i.length < t - 1; ) i.push(0);
                return i.push(r), Uint8Array.from(i);
              },
              h = (e) =>
                (0, o.ff)(e, (e, t) => {
                  const r = Number(t);
                  return r > A.gk.maximumStackItemLength
                    ? (0, a.O)(
                        e,
                        `${a.a.exceededMaximumStackItemLength} Item length: ${r} bytes.`
                      )
                    : (0, o.ff)(
                        e,
                        (e, [t]) => {
                          const i = (0, s.qR)(t);
                          return i.length > r
                            ? (0, a.O)(e, a.a.insufficientLength)
                            : i.length === r
                            ? (0, o.t0)(e, i)
                            : (0, o.t0)(e, u(i, r));
                        },
                        {
                          maximumVmNumberByteLength:
                            A.gk.maximumStackItemLength,
                          requireMinimalEncoding: !1,
                        }
                      );
                }),
              I = (e) =>
                (0, o.ff)(
                  e,
                  (e, [t]) => {
                    const r = (0, s.qR)(t);
                    return r.length > A.gk.maximumVmNumberLength
                      ? (0, a.O)(e, a.a.exceededMaximumVmNumberLength)
                      : (0, o.t0)(e, r);
                  },
                  {
                    maximumVmNumberByteLength: A.gk.maximumStackItemLength,
                    requireMinimalEncoding: !1,
                  }
                );
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      43272: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              Ah: () => h,
              CY: () => B,
              ER: () => v,
              Mb: () => l,
              VO: () => u,
              az: () => Q,
              ev: () => f,
              fS: () => y,
              mW: () => m,
              mw: () => d,
              nc: () => S,
              pJ: () => p,
              qu: () => E,
              ty: () => g,
              uk: () => I,
              y3: () => c,
            });
            var n = r(78997),
              o = r(78417),
              A = r(69362),
              a = r(85671),
              s = e([o, a]);
            [o, a] = s.then ? (await s)() : s;
            const c = (e) => (0, o.fH)(e, BigInt(e.program.inputIndex)),
              g = (e) =>
                (0, o.jd)(
                  e,
                  (0, a.V6)(e.instructions.slice(e.lastCodeSeparator + 1))
                ),
              l = (e) =>
                (0, o.fH)(e, BigInt((0, n.rO)(e.program.transaction.version))),
              u = (e) =>
                (0, o.fH)(e, BigInt(e.program.transaction.inputs.length)),
              h = (e) =>
                (0, o.fH)(e, BigInt(e.program.transaction.outputs.length)),
              I = (e) => (0, o.fH)(e, BigInt(e.program.transaction.locktime)),
              p = (e, t) =>
                (0, o.ff)(e, (r, [i]) => {
                  const n = r.program.sourceOutputs[Number(i)];
                  return void 0 === n
                    ? (0, A.O)(r, A.a.invalidTransactionUtxoIndex)
                    : t(e, [n]);
                }),
              d = (e) => p(e, (e, [t]) => (0, o.fH)(e, t.valueSatoshis)),
              f = (e) =>
                p(e, (e, [t]) => (0, o.jd)(e, t.lockingBytecode.slice())),
              C = (e, t) =>
                (0, o.ff)(e, (r, [i]) => {
                  const n = r.program.transaction.inputs[Number(i)];
                  return void 0 === n
                    ? (0, A.O)(r, A.a.invalidTransactionInputIndex)
                    : t(e, [n]);
                }),
              B = (e) =>
                C(e, (e, [t]) =>
                  (0, o.jd)(e, t.outpointTransactionHash.slice().reverse())
                ),
              E = (e) =>
                C(e, (e, [t]) => (0, o.fH)(e, BigInt(t.outpointIndex))),
              y = (e) =>
                C(e, (e, [t]) => (0, o.jd)(e, t.unlockingBytecode.slice())),
              m = (e) =>
                C(e, (e, [t]) => (0, o.fH)(e, BigInt(t.sequenceNumber))),
              Q = (e, t) =>
                (0, o.ff)(e, (r, [i]) => {
                  const n = r.program.transaction.outputs[Number(i)];
                  return void 0 === n
                    ? (0, A.O)(r, A.a.invalidTransactionOutputIndex)
                    : t(e, [n]);
                }),
              v = (e) => Q(e, (e, [t]) => (0, o.fH)(e, t.valueSatoshis)),
              S = (e) =>
                Q(e, (e, [t]) => (0, o.jd)(e, t.lockingBytecode.slice()));
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      85671: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $n: () => D,
              Au: () => K,
              Ff: () => j,
              GH: () => W,
              Tz: () => u,
              V6: () => x,
              X5: () => F,
              XS: () => M,
              ft: () => ee,
              hR: () => E,
              ii: () => J,
              oC: () => O,
              oN: () => R,
              og: () => y,
              qR: () => H,
              rV: () => Y,
              yC: () => te,
              z0: () => G,
            });
            var n = r(11779),
              o = r(34684),
              A = r(78997),
              a = r(30861),
              s = r(16043),
              c = e([a, n]);
            [a, n] = c.then ? (await c)() : c;
            const l = (e) => "malformed" in e,
              u = (e) => e.length > 0 && l(e[e.length - 1]),
              h = (e) => e.every((e) => "data" in e),
              I = 1,
              p = 2,
              d = 4,
              f = (e, t, r) => {
                const i = new DataView(e.buffer, t, r);
                return r === I
                  ? i.getUint8(0)
                  : r === p
                  ? i.getUint16(0, !0)
                  : i.getUint32(0, !0);
              },
              C = (e) => ({ 76: I, 77: p, 78: d }[e] ?? 0),
              B = (e, t) => {
                const r = e[t];
                if (r > 78)
                  return { instruction: { opcode: r }, nextIndex: t + 1 };
                const i = C(r);
                if (0 !== i && t + i >= e.length) {
                  const n = t + 1,
                    o = n + i;
                  return {
                    instruction: {
                      expectedLengthBytes: i,
                      length: e.slice(n, o),
                      malformed: !0,
                      opcode: r,
                    },
                    nextIndex: o,
                  };
                }
                const n = t + 1 + i,
                  o = n + (0 === i ? r : f(e, t + 1, i));
                return {
                  instruction: {
                    data: e.slice(n, o),
                    ...(o > e.length
                      ? { expectedDataBytes: o - n, malformed: !0 }
                      : void 0),
                    opcode: r,
                  },
                  nextIndex: o,
                };
              },
              E = (e) => ({
                ...("data" in e ? { data: e.data } : {}),
                opcode: e.opcode,
              }),
              y = (e) => {
                const t = [];
                let r = 0;
                for (; r < e.length; ) {
                  const { instruction: i, nextIndex: n } = B(e, r);
                  (r = n), t.push(i);
                }
                return t;
              },
              m = (e) => 0 !== e,
              Q = (e) => (e.length > 0 ? `0x${(0, o.UM)(e)}` : ""),
              v = (e) => `[missing ${e} byte${1 === e ? "" : "s"}]`,
              S = (e) => "length" in e,
              w = (e) => e >= 76,
              b = (e, t) =>
                `${e[t.opcode] ?? "OP_UNKNOWN"} ${
                  S(t)
                    ? `${Q(t.length)}${v(
                        t.expectedLengthBytes - t.length.length
                      )}`
                    : `${w(t.opcode) ? `${t.expectedDataBytes} ` : ""}${Q(
                        t.data
                      )}${v(t.expectedDataBytes - t.data.length)}`
                }`,
              k = (e, t) =>
                `${e[t.opcode] ?? "OP_UNKNOWN"}${
                  "data" in t && m(t.opcode)
                    ? ` ${w(t.opcode) ? `${t.data.length} ` : ""}${Q(t.data)}`
                    : ""
                }`,
              N = (e, t) => (l(t) ? b(e, t) : k(e, t)),
              _ = (e, t) => t.map((t) => N(e, t)).join(" "),
              D = (e) => _(s.oM, y(e)),
              O = (e) =>
                Object.entries(e)
                  .filter((e) => "number" == typeof e[1])
                  .reduce(
                    (e, t) => ({ ...e, [t[0]]: Uint8Array.of(t[1]) }),
                    {}
                  ),
              T = (e) => {
                const { opcode: t } = e,
                  r = C(t);
                return r === I
                  ? Uint8Array.of(e.data.length)
                  : r === p
                  ? (0, A.l0)(e.data.length)
                  : (0, A.UC)(e.data.length);
              },
              P = (e) =>
                Uint8Array.from([
                  e.opcode,
                  ...("data" in e
                    ? [...(w(e.opcode) ? T(e) : []), ...e.data]
                    : []),
                ]),
              x = (e) => (0, o.kg)(e.map(P));
            var g;
            !(function (e) {
              (e.outOfRange =
                "Failed to decode VM Number: overflows VM Number range."),
                (e.requiresMinimal =
                  "Failed to decode VM Number: the number is not minimally-encoded.");
            })(g || (g = {}));
            const R = (e) => e === g.outOfRange || e === g.requiresMinimal,
              U = 8,
              F = (
                e,
                {
                  maximumVmNumberByteLength: t = U,
                  requireMinimalEncoding: r = !0,
                } = { maximumVmNumberByteLength: U, requireMinimalEncoding: !0 }
              ) => {
                if (0 === e.length) return 0n;
                if (e.length > t) return g.outOfRange;
                const i = e[e.length - 1],
                  n = e[e.length - 1 - 1];
                if (r && 0 == (127 & i) && (e.length <= 1 || 0 == (128 & n)))
                  return g.requiresMinimal;
                let o = 0n;
                for (let t = 0; t < e.length; t++)
                  o |= BigInt(e[t]) << BigInt(8 * t);
                return 0 != (128 & e[e.length - 1])
                  ? -(o & ~(BigInt(128) << BigInt(8 * (e.length - 1))))
                  : o;
              },
              H = (e) => {
                if (0n === e) return new Uint8Array();
                const t = [],
                  r = e < 0;
                let i = r ? -e : e;
                for (; i > 0; )
                  t.push(Number(i & BigInt(255))), (i >>= BigInt(8));
                return (
                  (128 & t[t.length - 1]) > 0
                    ? t.push(r ? 128 : 0)
                    : r && (t[t.length - 1] |= 128),
                  new Uint8Array(t)
                );
              },
              M = (e) => {
                for (let t = 0; t < e.length; t++)
                  if (0 !== e[t]) return t !== e.length - 1 || 128 !== e[t];
                return !1;
              },
              G = (e) => H(e ? 1n : 0n),
              L = (e) => e <= 96,
              K = (e) => y(e).every((e) => L(e.opcode)),
              Y = (e) => e.length >= 1 && 106 === e[0] && K(e.slice(1)),
              q = (e, t) => {
                if (e < 1n) return 0n;
                const r = (e * t) / BigInt(1e3);
                return 0n === r ? 1n : r;
              },
              J = (e, t = BigInt(1e3)) => {
                if (Y(e.lockingBytecode)) return 0n;
                const r = (0, a.vy)(e).length + 148;
                return BigInt(3) * q(BigInt(r), t);
              },
              j = (e, t = BigInt(1e3)) => e.valueSatoshis < J(e, t),
              z = (e) => 65 === e.length && 4 === e[0],
              V = (e) => 33 === e.length && (2 === e[0] || 3 === e[0]),
              W = (e) => V(e) || z(e),
              X = (e) =>
                0 === e
                  ? 0
                  : 79 === e
                  ? -1
                  : !(!Number.isInteger(e) || e < 81 || e > 96) && e - 80,
              Z = (e) => {
                const t = y(e);
                if (u(t)) return !1;
                const r = t.length - 1;
                if (t.length < 4 || 174 !== t[r].opcode) return !1;
                const i = X(t[0].opcode),
                  n = X(t[r - 1].opcode);
                if (!1 === n || !1 === i) return !1;
                const o = t.slice(1, -2);
                if (!h(o)) return !1;
                const A = o.map((e) => e.data);
                return !A.some((e) => !W(e)) && { m: i, n, publicKeys: A };
              },
              $ = (e) => {
                const t = Z(e);
                if (!1 === t) return !1;
                const { m: r, n: i } = t;
                return !(i < 1 || i > 3 || r < 1 || r > i);
              },
              ee = (e) =>
                (0, n.IW)(e) ||
                (0, n.m1)(e) ||
                (0, n.pI)(e) ||
                (0, n.mJ)(e) ||
                Y(e) ||
                $(e),
              te = (e) => {
                const t = e.length >= 4 && e.length <= 42,
                  r = 0 === e[0] || (e[0] >= 81 && e[0] <= 96),
                  i = e[1] + 2 === e.length;
                return t && r && i;
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      23036: (e, t, r) => {
        "use strict";
        r.d(t, { $6: () => A, mE: () => n, o0: () => o });
        var i = r(69362);
        const n = (e) => e,
          o = (e) => (0, i.O)(e, i.a.calledUpgradableNop),
          A = (e) => (0, i.O)(e, i.a.unknownOpcode);
      },
      67289: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { WV: () => g, fk: () => h, sx: () => I });
            var n = r(78997),
              o = r(78417),
              A = r(25121),
              a = r(69362),
              s = r(85671),
              c = e([A, o, s]);
            [A, o, s] = c.then ? (await c)() : c;
            const g = (e) =>
                e.length <= 75
                  ? 0 === e.length
                    ? Uint8Array.of(0)
                    : 1 === e.length
                    ? 0 !== e[0] && e[0] <= 16
                      ? Uint8Array.of(e[0] + 80)
                      : 129 === e[0]
                      ? Uint8Array.of(79)
                      : Uint8Array.from([1, ...e])
                    : Uint8Array.from([e.length, ...e])
                  : e.length <= 255
                  ? Uint8Array.from([76, e.length, ...e])
                  : e.length <= 65535
                  ? Uint8Array.from([77, ...(0, n.l0)(e.length), ...e])
                  : Uint8Array.from([78, ...(0, n.UC)(e.length), ...e]),
              l = (e, t) =>
                0 === t.length
                  ? 0 === e
                  : 1 === t.length
                  ? t[0] >= 1 && t[0] <= 16
                    ? e === t[0] + 80
                    : 129 !== t[0] || 79 === e
                  : t.length <= 75
                  ? e === t.length
                  : t.length <= 255
                  ? 76 === e
                  : t.length <= 65535
                  ? 77 === e
                  : t.length <= 4294967295 && 78 === e,
              u = (e) => e.controlStack.every((e) => e),
              h =
                (e = A.gk.maximumStackItemLength) =>
                (t) => {
                  const r = t.instructions[t.ip];
                  return r.data.length > e
                    ? (0, a.O)(
                        t,
                        `${a.a.exceededMaximumStackItemLength} Item length: ${r.data.length} bytes.`
                      )
                    : u(t)
                    ? l(r.opcode, r.data)
                      ? (0, o.t0)(t, r.data)
                      : (0, a.O)(t, a.a.nonMinimalPush)
                    : t;
                },
              I = (e) => {
                const t = (0, s.qR)(BigInt(e));
                return (e) => (0, o.t0)(e, t);
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      44115: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { BU: () => u, F_: () => S, IR: () => n, Y8: () => w });
            var n,
              o,
              A = r(12909),
              a = r(47726),
              s = r(34684),
              c = r(78997),
              g = r(30861),
              l = e([A, a, g]);
            ([A, a, g] = l.then ? (await l)() : l),
              (function (e) {
                (e[(e.allOutputs = 1)] = "allOutputs"),
                  (e[(e.noOutputs = 2)] = "noOutputs"),
                  (e[(e.correspondingOutput = 3)] = "correspondingOutput"),
                  (e[(e.utxos = 32)] = "utxos"),
                  (e[(e.forkId = 64)] = "forkId"),
                  (e[(e.singleInput = 128)] = "singleInput");
              })(n || (n = {})),
              (function (e) {
                (e[(e.allOutputs = 65)] = "allOutputs"),
                  (e[(e.allOutputsAllUtxos = 97)] = "allOutputsAllUtxos"),
                  (e[(e.allOutputsSingleInput = 193)] =
                    "allOutputsSingleInput"),
                  (e[(e.correspondingOutput = 67)] = "correspondingOutput"),
                  (e[(e.correspondingOutputAllUtxos = 99)] =
                    "correspondingOutputAllUtxos"),
                  (e[(e.correspondingOutputSingleInput = 195)] =
                    "correspondingOutputSingleInput"),
                  (e[(e.noOutputs = 66)] = "noOutputs"),
                  (e[(e.noOutputsAllUtxos = 98)] = "noOutputsAllUtxos"),
                  (e[(e.noOutputsSingleInput = 194)] = "noOutputsSingleInput");
              })(o || (o = {}));
            const u = o,
              h = (e, t) => 0 != (e[0] & t),
              I = (e, t) => (31 & e[0]) === t,
              p = (e) => h(e, n.singleInput),
              d = (e) => I(e, n.correspondingOutput),
              f = (e) => I(e, n.noOutputs),
              C = (e) => h(e, n.utxos),
              B = () => new Uint8Array(32).fill(0),
              E = (
                { signingSerializationType: e, transactionOutpoints: t },
                r = A.JQ
              ) => (p(e) ? B() : (0, a.W)(t, r)),
              y = (
                { signingSerializationType: e, transactionUtxos: t },
                r = A.JQ
              ) => (C(e) ? (0, a.W)(t, r) : Uint8Array.of()),
              m = (
                { signingSerializationType: e, transactionSequenceNumbers: t },
                r = A.JQ
              ) => (p(e) || d(e) || f(e) ? B() : (0, a.W)(t, r)),
              Q = (
                {
                  correspondingOutput: e,
                  signingSerializationType: t,
                  transactionOutputs: r,
                },
                i = A.JQ
              ) =>
                d(t) || f(t)
                  ? d(t)
                    ? void 0 === e
                      ? B()
                      : (0, a.W)(e, i)
                    : B()
                  : (0, a.W)(r, i),
              v = (
                {
                  correspondingOutput: e,
                  coveredBytecode: t,
                  forkId: r = new Uint8Array([0, 0, 0]),
                  locktime: i,
                  outpointIndex: n,
                  outpointTransactionHash: o,
                  outputTokenPrefix: a,
                  outputValue: g,
                  sequenceNumber: l,
                  signingSerializationType: u,
                  transactionOutpoints: h,
                  transactionOutputs: I,
                  transactionSequenceNumbers: p,
                  transactionUtxos: d,
                  version: f,
                },
                C = A.JQ
              ) =>
                (0, s.kg)([
                  (0, c.UC)(f),
                  E(
                    { signingSerializationType: u, transactionOutpoints: h },
                    C
                  ),
                  y({ signingSerializationType: u, transactionUtxos: d }, C),
                  m(
                    {
                      signingSerializationType: u,
                      transactionSequenceNumbers: p,
                    },
                    C
                  ),
                  o.slice().reverse(),
                  (0, c.UC)(n),
                  a,
                  (0, c.us)(BigInt(t.length)),
                  t,
                  g,
                  (0, c.UC)(l),
                  Q(
                    {
                      correspondingOutput: e,
                      signingSerializationType: u,
                      transactionOutputs: I,
                    },
                    C
                  ),
                  (0, c.UC)(i),
                  u,
                  r,
                ]),
              S = (e) => ({
                correspondingOutput:
                  e.inputIndex < e.transaction.outputs.length
                    ? (0, g.vy)(e.transaction.outputs[e.inputIndex])
                    : void 0,
                locktime: e.transaction.locktime,
                outpointIndex: e.transaction.inputs[e.inputIndex].outpointIndex,
                outpointTransactionHash:
                  e.transaction.inputs[e.inputIndex].outpointTransactionHash,
                outputTokenPrefix: (0, g._w)(
                  e.sourceOutputs[e.inputIndex].token
                ),
                outputValue: (0, c.dd)(
                  e.sourceOutputs[e.inputIndex].valueSatoshis
                ),
                sequenceNumber:
                  e.transaction.inputs[e.inputIndex].sequenceNumber,
                transactionOutpoints: (0, g.Sx)(e.transaction.inputs),
                transactionOutputs: (0, g.nY)(e.transaction.outputs),
                transactionSequenceNumbers: (0, g.Hg)(e.transaction.inputs),
                transactionUtxos: (0, g.nY)(e.sourceOutputs),
                version: e.transaction.version,
              }),
              w = (
                e,
                { coveredBytecode: t, signingSerializationType: r },
                i = A.JQ
              ) =>
                v(
                  { ...S(e), coveredBytecode: t, signingSerializationType: r },
                  i
                );
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      81011: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              FG: () => I,
              Ic: () => E,
              Kb: () => Q,
              Mu: () => u,
              Qq: () => v,
              WH: () => h,
              XK: () => b,
              bE: () => y,
              cs: () => B,
              hW: () => w,
              lZ: () => f,
              me: () => l,
              nK: () => s,
              nn: () => c,
              o_: () => C,
              pE: () => m,
              qH: () => S,
              sy: () => d,
              xQ: () => g,
              y3: () => p,
            });
            var n = r(78417),
              o = r(69362),
              A = r(85671),
              a = e([n, A]);
            [n, A] = a.then ? (await a)() : a;
            const s = (e) =>
                (0, n.t9)(e, (e, [t]) => (e.alternateStack.push(t), e)),
              c = (e) => {
                const t = e.alternateStack.pop();
                return void 0 === t
                  ? (0, o.O)(e, o.a.emptyAlternateStack)
                  : (0, n.t0)(e, t);
              },
              g = (e) => (0, n.iD)(e, (e) => e),
              l = (e) =>
                (0, n.iD)(e, (e, [t, r]) =>
                  (0, n.t0)(e, t, r, t.slice(), r.slice())
                ),
              u = (e) =>
                (0, n.mw)(e, (e, [t, r, i]) =>
                  (0, n.t0)(e, t, r, i, t.slice(), r.slice(), i.slice())
                ),
              h = (e) =>
                (0, n.iX)(e, (e, [t, r, i, o]) =>
                  (0, n.t0)(e, t, r, i, o, t.slice(), r.slice())
                ),
              I = (e) =>
                (0, n.lg)(e, (e, [t, r, i, o, A, a]) =>
                  (0, n.t0)(e, i, o, A, a, t, r)
                ),
              p = (e) =>
                (0, n.iX)(e, (e, [t, r, i, o]) => (0, n.t0)(e, i, o, t, r)),
              d = (e) =>
                (0, n.t9)(e, (e, [t]) =>
                  (0, n.t0)(e, ...((0, A.XS)(t) ? [t, t.slice()] : [t]))
                ),
              f = (e) => (0, n.t0)(e, (0, A.qR)(BigInt(e.stack.length))),
              C = (e) => (0, n.t9)(e, (e) => e),
              B = (e) => (0, n.t9)(e, (e, [t]) => (0, n.t0)(e, t, t.slice())),
              E = (e) => (0, n.iD)(e, (e, [, t]) => (0, n.t0)(e, t)),
              y = (e) =>
                (0, n.iD)(e, (e, [t, r]) => (0, n.t0)(e, t, r, t.slice())),
              m = (e) =>
                (0, n.ff)(e, (t, r) => {
                  const i = t.stack[t.stack.length - 1 - Number(r)];
                  return void 0 === i
                    ? (0, o.O)(e, o.a.invalidStackIndex)
                    : (0, n.t0)(t, i.slice());
                }),
              Q = (e) =>
                (0, n.ff)(e, (t, r) => {
                  const i = t.stack.length - 1 - Number(r);
                  return i < 0 || i > t.stack.length - 1
                    ? (0, o.O)(e, o.a.invalidStackIndex)
                    : (0, n.t0)(t, t.stack.splice(i, 1)[0]);
                }),
              v = (e) => (0, n.mw)(e, (e, [t, r, i]) => (0, n.t0)(e, r, i, t)),
              S = (e) => (0, n.iD)(e, (e, [t, r]) => (0, n.t0)(e, r, t)),
              w = (e) =>
                (0, n.iD)(e, (e, [t, r]) => (0, n.t0)(e, r.slice(), t, r)),
              b = (e) =>
                (0, n.t9)(e, (e, [t]) =>
                  (0, n.t0)(e, t, (0, A.qR)(BigInt(t.length)))
                );
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      3202: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { RT: () => l, WV: () => c });
            var n = r(69362),
              o = r(85671),
              A = e([o]);
            o = (A.then ? (await A)() : A)[0];
            const a = (e, t) => {
                const r = e.stack[e.stack.length - 1];
                if (void 0 === r) return (0, n.O)(e, n.a.emptyStack);
                const i = (0, o.X5)(r, {
                  maximumVmNumberByteLength: 5,
                  requireMinimalEncoding: !0,
                });
                if ((0, o.oN)(i)) return (0, n.O)(e, n.a.invalidVmNumber);
                const A = Number(i);
                return A < 0 ? (0, n.O)(e, n.a.negativeLocktime) : t(e, A);
              },
              s = (e, t) => (e < 5e8 && t < 5e8) || (e >= 5e8 && t >= 5e8),
              c = (e) =>
                a(e, (e, t) => {
                  if (!s(e.program.transaction.locktime, t))
                    return (0, n.O)(e, n.a.incompatibleLocktimeType);
                  if (t > e.program.transaction.locktime)
                    return (0, n.O)(e, n.a.unsatisfiedLocktime);
                  const { sequenceNumber: r } =
                    e.program.transaction.inputs[e.program.inputIndex];
                  return 4294967295 === r
                    ? (0, n.O)(e, n.a.locktimeDisabled)
                    : e;
                }),
              g = (e, t) => 0 != (e & t),
              l = (e) =>
                a(e, (e, t) => {
                  const { sequenceNumber: r } =
                    e.program.transaction.inputs[e.program.inputIndex];
                  return g(t, 2147483648)
                    ? e
                    : e.program.transaction.version < 2
                    ? (0, n.O)(e, n.a.checkSequenceUnavailable)
                    : g(r, 2147483648)
                    ? (0, n.O)(e, n.a.unmatchedSequenceDisable)
                    : g(t, 4194304) !== g(r, 4194304)
                    ? (0, n.O)(e, n.a.incompatibleSequenceType)
                    : (65535 & t) > (65535 & r)
                    ? (0, n.O)(e, n.a.unsatisfiedSequenceNumber)
                    : e;
                });
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      79116: (e, t, r) => {
        "use strict";
        r.d(t, { A: () => n });
        var i = r(34684);
        const n = (e) => {
          const t = (0, i.w6)(256).map((t) =>
              void 0 === e.operations[t] ? e.undefined : e.operations[t]
            ),
            r = (e) => ((e.ip += 1), e),
            n = (e) => t[((e) => e.instructions[e.ip])(e).opcode],
            o = e.every ?? ((e) => e),
            A = (e) => {
              const t = n(e);
              return r(o(t(e)));
            },
            a = e.continue,
            s = (e, t) => {
              for (; a(e); ) e = t(e);
              return e;
            },
            c = e.clone,
            { success: g } = e,
            l = (e) => s(c(e), A),
            u = (e) => {
              const t = [];
              return (
                t.push(e),
                s(e, (e) => {
                  const i = ((e) => {
                    const t = n(e);
                    return r(o(t(c(e))));
                  })(e);
                  return t.push(i), i;
                }),
                t
              );
            },
            h = (t) => e.evaluate(t, l);
          return {
            debug: (t) => {
              const r = [],
                i = e.evaluate(t, (e) => {
                  const t = u(e);
                  return r.push(...t), t[t.length - 1] ?? e;
                });
              return [...r, i];
            },
            evaluate: h,
            stateClone: c,
            stateContinue: a,
            stateDebug: u,
            stateEvaluate: l,
            stateStep: (e) => A(c(e)),
            stateStepMutate: A,
            stateSuccess: g,
            verify: (t) => e.verify(t, h, g),
          };
        };
      },
      39872: (e, t, r) => {
        "use strict";
        r.d(t, { WU: () => A }),
          new Error("timeout while waiting for mutex to become available"),
          new Error("mutex already locked");
        const i = new Error("request for lock canceled");
        var n = function (e, t, r, i) {
          return new (r || (r = Promise))(function (n, o) {
            function A(e) {
              try {
                s(i.next(e));
              } catch (e) {
                o(e);
              }
            }
            function a(e) {
              try {
                s(i.throw(e));
              } catch (e) {
                o(e);
              }
            }
            function s(e) {
              var t;
              e.done
                ? n(e.value)
                : ((t = e.value),
                  t instanceof r
                    ? t
                    : new r(function (e) {
                        e(t);
                      })).then(A, a);
            }
            s((i = i.apply(e, t || [])).next());
          });
        };
        class o {
          constructor(e, t = i) {
            if (
              ((this._maxConcurrency = e),
              (this._cancelError = t),
              (this._queue = []),
              (this._waiters = []),
              e <= 0)
            )
              throw new Error(
                "semaphore must be initialized to a positive value"
              );
            this._value = e;
          }
          acquire() {
            const e = this.isLocked(),
              t = new Promise((e, t) =>
                this._queue.push({ resolve: e, reject: t })
              );
            return e || this._dispatch(), t;
          }
          runExclusive(e) {
            return n(this, void 0, void 0, function* () {
              const [t, r] = yield this.acquire();
              try {
                return yield e(t);
              } finally {
                r();
              }
            });
          }
          waitForUnlock() {
            return n(this, void 0, void 0, function* () {
              return this.isLocked()
                ? new Promise((e) => this._waiters.push({ resolve: e }))
                : Promise.resolve();
            });
          }
          isLocked() {
            return this._value <= 0;
          }
          release() {
            if (this._maxConcurrency > 1)
              throw new Error(
                "this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead"
              );
            if (this._currentReleaser) {
              const e = this._currentReleaser;
              (this._currentReleaser = void 0), e();
            }
          }
          cancel() {
            this._queue.forEach((e) => e.reject(this._cancelError)),
              (this._queue = []);
          }
          _dispatch() {
            const e = this._queue.shift();
            if (!e) return;
            let t = !1;
            (this._currentReleaser = () => {
              t ||
                ((t = !0),
                this._value++,
                this._resolveWaiters(),
                this._dispatch());
            }),
              e.resolve([this._value--, this._currentReleaser]);
          }
          _resolveWaiters() {
            this._waiters.forEach((e) => e.resolve()), (this._waiters = []);
          }
        }
        class A {
          constructor(e) {
            this._semaphore = new o(1, e);
          }
          acquire() {
            return (
              (e = this),
              (t = void 0),
              (i = function* () {
                const [, e] = yield this._semaphore.acquire();
                return e;
              }),
              new ((r = void 0) || (r = Promise))(function (n, o) {
                function A(e) {
                  try {
                    s(i.next(e));
                  } catch (e) {
                    o(e);
                  }
                }
                function a(e) {
                  try {
                    s(i.throw(e));
                  } catch (e) {
                    o(e);
                  }
                }
                function s(e) {
                  var t;
                  e.done
                    ? n(e.value)
                    : ((t = e.value),
                      t instanceof r
                        ? t
                        : new r(function (e) {
                            e(t);
                          })).then(A, a);
                }
                s((i = i.apply(e, t || [])).next());
              })
            );
            var e, t, r, i;
          }
          runExclusive(e) {
            return this._semaphore.runExclusive(() => e());
          }
          isLocked() {
            return this._semaphore.isLocked();
          }
          waitForUnlock() {
            return this._semaphore.waitForUnlock();
          }
          release() {
            this._semaphore.release();
          }
          cancel() {
            return this._semaphore.cancel();
          }
        }
      },
      59085: (e, t, r) => {
        "use strict";
        r.d(t, { ZP: () => Gr });
        const i =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : global,
          n = Object.keys,
          o = Array.isArray;
        function A(e, t) {
          return (
            "object" != typeof t ||
              n(t).forEach(function (r) {
                e[r] = t[r];
              }),
            e
          );
        }
        "undefined" == typeof Promise || i.Promise || (i.Promise = Promise);
        const a = Object.getPrototypeOf,
          s = {}.hasOwnProperty;
        function c(e, t) {
          return s.call(e, t);
        }
        function g(e, t) {
          "function" == typeof t && (t = t(a(e))),
            ("undefined" == typeof Reflect ? n : Reflect.ownKeys)(t).forEach(
              (r) => {
                u(e, r, t[r]);
              }
            );
        }
        const l = Object.defineProperty;
        function u(e, t, r, i) {
          l(
            e,
            t,
            A(
              r && c(r, "get") && "function" == typeof r.get
                ? { get: r.get, set: r.set, configurable: !0 }
                : { value: r, configurable: !0, writable: !0 },
              i
            )
          );
        }
        function h(e) {
          return {
            from: function (t) {
              return (
                (e.prototype = Object.create(t.prototype)),
                u(e.prototype, "constructor", e),
                { extend: g.bind(null, e.prototype) }
              );
            },
          };
        }
        const I = Object.getOwnPropertyDescriptor;
        function p(e, t) {
          let r;
          return I(e, t) || ((r = a(e)) && p(r, t));
        }
        const d = [].slice;
        function f(e, t, r) {
          return d.call(e, t, r);
        }
        function C(e, t) {
          return t(e);
        }
        function B(e) {
          if (!e) throw new Error("Assertion Failed");
        }
        function E(e) {
          i.setImmediate ? setImmediate(e) : setTimeout(e, 0);
        }
        function y(e, t) {
          return e.reduce((e, r, i) => {
            var n = t(r, i);
            return n && (e[n[0]] = n[1]), e;
          }, {});
        }
        function m(e, t) {
          if (c(e, t)) return e[t];
          if (!t) return e;
          if ("string" != typeof t) {
            for (var r = [], i = 0, n = t.length; i < n; ++i) {
              var o = m(e, t[i]);
              r.push(o);
            }
            return r;
          }
          var A = t.indexOf(".");
          if (-1 !== A) {
            var a = e[t.substr(0, A)];
            return void 0 === a ? void 0 : m(a, t.substr(A + 1));
          }
        }
        function Q(e, t, r) {
          if (
            e &&
            void 0 !== t &&
            (!("isFrozen" in Object) || !Object.isFrozen(e))
          )
            if ("string" != typeof t && "length" in t) {
              B("string" != typeof r && "length" in r);
              for (var i = 0, n = t.length; i < n; ++i) Q(e, t[i], r[i]);
            } else {
              var A = t.indexOf(".");
              if (-1 !== A) {
                var a = t.substr(0, A),
                  s = t.substr(A + 1);
                if ("" === s)
                  void 0 === r
                    ? o(e) && !isNaN(parseInt(a))
                      ? e.splice(a, 1)
                      : delete e[a]
                    : (e[a] = r);
                else {
                  var g = e[a];
                  (g && c(e, a)) || (g = e[a] = {}), Q(g, s, r);
                }
              } else
                void 0 === r
                  ? o(e) && !isNaN(parseInt(t))
                    ? e.splice(t, 1)
                    : delete e[t]
                  : (e[t] = r);
            }
        }
        function v(e) {
          var t = {};
          for (var r in e) c(e, r) && (t[r] = e[r]);
          return t;
        }
        const S = [].concat;
        function w(e) {
          return S.apply([], e);
        }
        const b =
            "Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey"
              .split(",")
              .concat(
                w(
                  [8, 16, 32, 64].map((e) =>
                    ["Int", "Uint", "Float"].map((t) => t + e + "Array")
                  )
                )
              )
              .filter((e) => i[e]),
          k = b.map((e) => i[e]);
        y(b, (e) => [e, !0]);
        let N = null;
        function _(e) {
          N = "undefined" != typeof WeakMap && new WeakMap();
          const t = D(e);
          return (N = null), t;
        }
        function D(e) {
          if (!e || "object" != typeof e) return e;
          let t = N && N.get(e);
          if (t) return t;
          if (o(e)) {
            (t = []), N && N.set(e, t);
            for (var r = 0, i = e.length; r < i; ++r) t.push(D(e[r]));
          } else if (k.indexOf(e.constructor) >= 0) t = e;
          else {
            const r = a(e);
            for (var n in ((t = r === Object.prototype ? {} : Object.create(r)),
            N && N.set(e, t),
            e))
              c(e, n) && (t[n] = D(e[n]));
          }
          return t;
        }
        const { toString: O } = {};
        function T(e) {
          return O.call(e).slice(8, -1);
        }
        const P = "undefined" != typeof Symbol ? Symbol.iterator : "@@iterator",
          x =
            "symbol" == typeof P
              ? function (e) {
                  var t;
                  return null != e && (t = e[P]) && t.apply(e);
                }
              : function () {
                  return null;
                },
          R = {};
        function U(e) {
          var t, r, i, n;
          if (1 === arguments.length) {
            if (o(e)) return e.slice();
            if (this === R && "string" == typeof e) return [e];
            if ((n = x(e))) {
              for (r = []; !(i = n.next()).done; ) r.push(i.value);
              return r;
            }
            if (null == e) return [e];
            if ("number" == typeof (t = e.length)) {
              for (r = new Array(t); t--; ) r[t] = e[t];
              return r;
            }
            return [e];
          }
          for (t = arguments.length, r = new Array(t); t--; )
            r[t] = arguments[t];
          return r;
        }
        const F =
          "undefined" != typeof Symbol
            ? (e) => "AsyncFunction" === e[Symbol.toStringTag]
            : () => !1;
        var H =
          "undefined" != typeof location &&
          /^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);
        function M(e, t) {
          (H = e), (G = t);
        }
        var G = () => !0;
        const L = !new Error("").stack;
        function K() {
          if (L)
            try {
              throw (K.arguments, new Error());
            } catch (e) {
              return e;
            }
          return new Error();
        }
        function Y(e, t) {
          var r = e.stack;
          return r
            ? ((t = t || 0),
              0 === r.indexOf(e.name) &&
                (t += (e.name + e.message).split("\n").length),
              r
                .split("\n")
                .slice(t)
                .filter(G)
                .map((e) => "\n" + e)
                .join(""))
            : "";
        }
        var q = [
            "Unknown",
            "Constraint",
            "Data",
            "TransactionInactive",
            "ReadOnly",
            "Version",
            "NotFound",
            "InvalidState",
            "InvalidAccess",
            "Abort",
            "Timeout",
            "QuotaExceeded",
            "Syntax",
            "DataClone",
          ],
          J = [
            "Modify",
            "Bulk",
            "OpenFailed",
            "VersionChange",
            "Schema",
            "Upgrade",
            "InvalidTable",
            "MissingAPI",
            "NoSuchDatabase",
            "InvalidArgument",
            "SubTransaction",
            "Unsupported",
            "Internal",
            "DatabaseClosed",
            "PrematureCommit",
            "ForeignAwait",
          ].concat(q),
          j = {
            VersionChanged:
              "Database version changed by other database connection",
            DatabaseClosed: "Database has been closed",
            Abort: "Transaction aborted",
            TransactionInactive: "Transaction has already completed or failed",
            MissingAPI:
              "IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb",
          };
        function z(e, t) {
          (this._e = K()), (this.name = e), (this.message = t);
        }
        function V(e, t) {
          return (
            e +
            ". Errors: " +
            Object.keys(t)
              .map((e) => t[e].toString())
              .filter((e, t, r) => r.indexOf(e) === t)
              .join("\n")
          );
        }
        function W(e, t, r, i) {
          (this._e = K()),
            (this.failures = t),
            (this.failedKeys = i),
            (this.successCount = r),
            (this.message = V(e, t));
        }
        function X(e, t) {
          (this._e = K()),
            (this.name = "BulkError"),
            (this.failures = Object.keys(t).map((e) => t[e])),
            (this.failuresByPos = t),
            (this.message = V(e, t));
        }
        h(z)
          .from(Error)
          .extend({
            stack: {
              get: function () {
                return (
                  this._stack ||
                  (this._stack =
                    this.name + ": " + this.message + Y(this._e, 2))
                );
              },
            },
            toString: function () {
              return this.name + ": " + this.message;
            },
          }),
          h(W).from(z),
          h(X).from(z);
        var Z = J.reduce((e, t) => ((e[t] = t + "Error"), e), {});
        const $ = z;
        var ee = J.reduce((e, t) => {
          var r = t + "Error";
          function i(e, i) {
            (this._e = K()),
              (this.name = r),
              e
                ? "string" == typeof e
                  ? ((this.message = `${e}${i ? "\n " + i : ""}`),
                    (this.inner = i || null))
                  : "object" == typeof e &&
                    ((this.message = `${e.name} ${e.message}`),
                    (this.inner = e))
                : ((this.message = j[t] || r), (this.inner = null));
          }
          return h(i).from($), (e[t] = i), e;
        }, {});
        (ee.Syntax = SyntaxError),
          (ee.Type = TypeError),
          (ee.Range = RangeError);
        var te = q.reduce((e, t) => ((e[t + "Error"] = ee[t]), e), {}),
          re = J.reduce(
            (e, t) => (
              -1 === ["Syntax", "Type", "Range"].indexOf(t) &&
                (e[t + "Error"] = ee[t]),
              e
            ),
            {}
          );
        function ie() {}
        function ne(e) {
          return e;
        }
        function oe(e, t) {
          return null == e || e === ne
            ? t
            : function (r) {
                return t(e(r));
              };
        }
        function Ae(e, t) {
          return function () {
            e.apply(this, arguments), t.apply(this, arguments);
          };
        }
        function ae(e, t) {
          return e === ie
            ? t
            : function () {
                var r = e.apply(this, arguments);
                void 0 !== r && (arguments[0] = r);
                var i = this.onsuccess,
                  n = this.onerror;
                (this.onsuccess = null), (this.onerror = null);
                var o = t.apply(this, arguments);
                return (
                  i &&
                    (this.onsuccess = this.onsuccess
                      ? Ae(i, this.onsuccess)
                      : i),
                  n && (this.onerror = this.onerror ? Ae(n, this.onerror) : n),
                  void 0 !== o ? o : r
                );
              };
        }
        function se(e, t) {
          return e === ie
            ? t
            : function () {
                e.apply(this, arguments);
                var r = this.onsuccess,
                  i = this.onerror;
                (this.onsuccess = this.onerror = null),
                  t.apply(this, arguments),
                  r &&
                    (this.onsuccess = this.onsuccess
                      ? Ae(r, this.onsuccess)
                      : r),
                  i && (this.onerror = this.onerror ? Ae(i, this.onerror) : i);
              };
        }
        function ce(e, t) {
          return e === ie
            ? t
            : function (r) {
                var i = e.apply(this, arguments);
                A(r, i);
                var n = this.onsuccess,
                  o = this.onerror;
                (this.onsuccess = null), (this.onerror = null);
                var a = t.apply(this, arguments);
                return (
                  n &&
                    (this.onsuccess = this.onsuccess
                      ? Ae(n, this.onsuccess)
                      : n),
                  o && (this.onerror = this.onerror ? Ae(o, this.onerror) : o),
                  void 0 === i ? (void 0 === a ? void 0 : a) : A(i, a)
                );
              };
        }
        function ge(e, t) {
          return e === ie
            ? t
            : function () {
                return (
                  !1 !== t.apply(this, arguments) && e.apply(this, arguments)
                );
              };
        }
        function le(e, t) {
          return e === ie
            ? t
            : function () {
                var r = e.apply(this, arguments);
                if (r && "function" == typeof r.then) {
                  for (
                    var i = this, n = arguments.length, o = new Array(n);
                    n--;

                  )
                    o[n] = arguments[n];
                  return r.then(function () {
                    return t.apply(i, o);
                  });
                }
                return t.apply(this, arguments);
              };
        }
        (re.ModifyError = W), (re.DexieError = z), (re.BulkError = X);
        var ue = {};
        const [he, Ie, pe] =
            "undefined" == typeof Promise
              ? []
              : (() => {
                  let e = Promise.resolve();
                  if ("undefined" == typeof crypto || !crypto.subtle)
                    return [e, a(e), e];
                  const t = crypto.subtle.digest(
                    "SHA-512",
                    new Uint8Array([0])
                  );
                  return [t, a(t), e];
                })(),
          de = Ie && Ie.then,
          fe = he && he.constructor,
          Ce = !!pe;
        var Be = !1,
          Ee = pe
            ? () => {
                pe.then(Ke);
              }
            : i.setImmediate
            ? setImmediate.bind(null, Ke)
            : i.MutationObserver
            ? () => {
                var e = document.createElement("div");
                new MutationObserver(() => {
                  Ke(), (e = null);
                }).observe(e, { attributes: !0 }),
                  e.setAttribute("i", "1");
              }
            : () => {
                setTimeout(Ke, 0);
              },
          ye = function (e, t) {
            _e.push([e, t]), Qe && (Ee(), (Qe = !1));
          },
          me = !0,
          Qe = !0,
          ve = [],
          Se = [],
          we = null,
          be = ne,
          ke = {
            id: "global",
            global: !0,
            ref: 0,
            unhandleds: [],
            onunhandled: ht,
            pgp: !1,
            env: {},
            finalize: function () {
              this.unhandleds.forEach((e) => {
                try {
                  ht(e[0], e[1]);
                } catch (e) {}
              });
            },
          },
          Ne = ke,
          _e = [],
          De = 0,
          Oe = [];
        function Te(e) {
          if ("object" != typeof this)
            throw new TypeError("Promises must be constructed via new");
          (this._listeners = []), (this.onuncatched = ie), (this._lib = !1);
          var t = (this._PSD = Ne);
          if (
            (H &&
              ((this._stackHolder = K()),
              (this._prev = null),
              (this._numPrev = 0)),
            "function" != typeof e)
          ) {
            if (e !== ue) throw new TypeError("Not a function");
            return (
              (this._state = arguments[1]),
              (this._value = arguments[2]),
              void (!1 === this._state && Ue(this, this._value))
            );
          }
          (this._state = null), (this._value = null), ++t.ref, Re(this, e);
        }
        const Pe = {
          get: function () {
            var e = Ne,
              t = $e;
            function r(r, i) {
              var n = !e.global && (e !== Ne || t !== $e);
              const o = n && !it();
              var A = new Te((t, A) => {
                He(this, new xe(lt(r, e, n, o), lt(i, e, n, o), t, A, e));
              });
              return H && Le(A, this), A;
            }
            return (r.prototype = ue), r;
          },
          set: function (e) {
            u(
              this,
              "then",
              e && e.prototype === ue
                ? Pe
                : {
                    get: function () {
                      return e;
                    },
                    set: Pe.set,
                  }
            );
          },
        };
        function xe(e, t, r, i, n) {
          (this.onFulfilled = "function" == typeof e ? e : null),
            (this.onRejected = "function" == typeof t ? t : null),
            (this.resolve = r),
            (this.reject = i),
            (this.psd = n);
        }
        function Re(e, t) {
          try {
            t((t) => {
              if (null === e._state) {
                if (t === e)
                  throw new TypeError(
                    "A promise cannot be resolved with itself."
                  );
                var r = e._lib && Ye();
                t && "function" == typeof t.then
                  ? Re(e, (e, r) => {
                      t instanceof Te ? t._then(e, r) : t.then(e, r);
                    })
                  : ((e._state = !0), (e._value = t), Fe(e)),
                  r && qe();
              }
            }, Ue.bind(null, e));
          } catch (t) {
            Ue(e, t);
          }
        }
        function Ue(e, t) {
          if ((Se.push(t), null === e._state)) {
            var r = e._lib && Ye();
            (t = be(t)),
              (e._state = !1),
              (e._value = t),
              H &&
                null !== t &&
                "object" == typeof t &&
                !t._promise &&
                (function (e, t, r) {
                  try {
                    e.apply(null, void 0);
                  } catch (e) {}
                })(() => {
                  var r = p(t, "stack");
                  (t._promise = e),
                    u(t, "stack", {
                      get: () =>
                        Be ? r && (r.get ? r.get.apply(t) : r.value) : e.stack,
                    });
                }),
              (function (e) {
                ve.some((t) => t._value === e._value) || ve.push(e);
              })(e),
              Fe(e),
              r && qe();
          }
        }
        function Fe(e) {
          var t = e._listeners;
          e._listeners = [];
          for (var r = 0, i = t.length; r < i; ++r) He(e, t[r]);
          var n = e._PSD;
          --n.ref || n.finalize(),
            0 === De &&
              (++De,
              ye(() => {
                0 == --De && Je();
              }, []));
        }
        function He(e, t) {
          if (null !== e._state) {
            var r = e._state ? t.onFulfilled : t.onRejected;
            if (null === r) return (e._state ? t.resolve : t.reject)(e._value);
            ++t.psd.ref, ++De, ye(Me, [r, e, t]);
          } else e._listeners.push(t);
        }
        function Me(e, t, r) {
          try {
            we = t;
            var i,
              n = t._value;
            t._state
              ? (i = e(n))
              : (Se.length && (Se = []),
                (i = e(n)),
                -1 === Se.indexOf(n) &&
                  (function (e) {
                    for (var t = ve.length; t; )
                      if (ve[--t]._value === e._value)
                        return void ve.splice(t, 1);
                  })(t)),
              r.resolve(i);
          } catch (e) {
            r.reject(e);
          } finally {
            (we = null), 0 == --De && Je(), --r.psd.ref || r.psd.finalize();
          }
        }
        function Ge(e, t, r) {
          if (t.length === r) return t;
          var i = "";
          if (!1 === e._state) {
            var n,
              o,
              A = e._value;
            null != A
              ? ((n = A.name || "Error"), (o = A.message || A), (i = Y(A, 0)))
              : ((n = A), (o = "")),
              t.push(n + (o ? ": " + o : "") + i);
          }
          return (
            H &&
              ((i = Y(e._stackHolder, 2)) && -1 === t.indexOf(i) && t.push(i),
              e._prev && Ge(e._prev, t, r)),
            t
          );
        }
        function Le(e, t) {
          var r = t ? t._numPrev + 1 : 0;
          r < 100 && ((e._prev = t), (e._numPrev = r));
        }
        function Ke() {
          Ye() && qe();
        }
        function Ye() {
          var e = me;
          return (me = !1), (Qe = !1), e;
        }
        function qe() {
          var e, t, r;
          do {
            for (; _e.length > 0; )
              for (e = _e, _e = [], r = e.length, t = 0; t < r; ++t) {
                var i = e[t];
                i[0].apply(null, i[1]);
              }
          } while (_e.length > 0);
          (me = !0), (Qe = !0);
        }
        function Je() {
          var e = ve;
          (ve = []),
            e.forEach((e) => {
              e._PSD.onunhandled.call(null, e._value, e);
            });
          for (var t = Oe.slice(0), r = t.length; r; ) t[--r]();
        }
        function je(e) {
          return new Te(ue, !1, e);
        }
        function ze(e, t) {
          var r = Ne;
          return function () {
            var i = Ye(),
              n = Ne;
            try {
              return at(r, !0), e.apply(this, arguments);
            } catch (e) {
              t && t(e);
            } finally {
              at(n, !1), i && qe();
            }
          };
        }
        g(Te.prototype, {
          then: Pe,
          _then: function (e, t) {
            He(this, new xe(null, null, e, t, Ne));
          },
          catch: function (e) {
            if (1 === arguments.length) return this.then(null, e);
            var t = arguments[0],
              r = arguments[1];
            return "function" == typeof t
              ? this.then(null, (e) => (e instanceof t ? r(e) : je(e)))
              : this.then(null, (e) => (e && e.name === t ? r(e) : je(e)));
          },
          finally: function (e) {
            return this.then(
              (t) => (e(), t),
              (t) => (e(), je(t))
            );
          },
          stack: {
            get: function () {
              if (this._stack) return this._stack;
              try {
                Be = !0;
                var e = Ge(this, [], 20).join("\nFrom previous: ");
                return null !== this._state && (this._stack = e), e;
              } finally {
                Be = !1;
              }
            },
          },
          timeout: function (e, t) {
            return e < 1 / 0
              ? new Te((r, i) => {
                  var n = setTimeout(() => i(new ee.Timeout(t)), e);
                  this.then(r, i).finally(clearTimeout.bind(null, n));
                })
              : this;
          },
        }),
          "undefined" != typeof Symbol &&
            Symbol.toStringTag &&
            u(Te.prototype, Symbol.toStringTag, "Dexie.Promise"),
          (ke.env = st()),
          g(Te, {
            all: function () {
              var e = U.apply(null, arguments).map(nt);
              return new Te(function (t, r) {
                0 === e.length && t([]);
                var i = e.length;
                e.forEach((n, o) =>
                  Te.resolve(n).then((r) => {
                    (e[o] = r), --i || t(e);
                  }, r)
                );
              });
            },
            resolve: (e) => {
              if (e instanceof Te) return e;
              if (e && "function" == typeof e.then)
                return new Te((t, r) => {
                  e.then(t, r);
                });
              var t = new Te(ue, !0, e);
              return Le(t, we), t;
            },
            reject: je,
            race: function () {
              var e = U.apply(null, arguments).map(nt);
              return new Te((t, r) => {
                e.map((e) => Te.resolve(e).then(t, r));
              });
            },
            PSD: { get: () => Ne, set: (e) => (Ne = e) },
            totalEchoes: { get: () => $e },
            newPSD: tt,
            usePSD: ct,
            scheduler: {
              get: () => ye,
              set: (e) => {
                ye = e;
              },
            },
            rejectionMapper: {
              get: () => be,
              set: (e) => {
                be = e;
              },
            },
            follow: (e, t) =>
              new Te((r, i) =>
                tt(
                  (t, r) => {
                    var i = Ne;
                    (i.unhandleds = []),
                      (i.onunhandled = r),
                      (i.finalize = Ae(function () {
                        !(function (e) {
                          Oe.push(function t() {
                            e(), Oe.splice(Oe.indexOf(t), 1);
                          }),
                            ++De,
                            ye(() => {
                              0 == --De && Je();
                            }, []);
                        })(() => {
                          0 === this.unhandleds.length
                            ? t()
                            : r(this.unhandleds[0]);
                        });
                      }, i.finalize)),
                      e();
                  },
                  t,
                  r,
                  i
                )
              ),
          }),
          fe &&
            (fe.allSettled &&
              u(Te, "allSettled", function () {
                const e = U.apply(null, arguments).map(nt);
                return new Te((t) => {
                  0 === e.length && t([]);
                  let r = e.length;
                  const i = new Array(r);
                  e.forEach((e, n) =>
                    Te.resolve(e)
                      .then(
                        (e) => (i[n] = { status: "fulfilled", value: e }),
                        (e) => (i[n] = { status: "rejected", reason: e })
                      )
                      .then(() => --r || t(i))
                  );
                });
              }),
            fe.any &&
              "undefined" != typeof AggregateError &&
              u(Te, "any", function () {
                const e = U.apply(null, arguments).map(nt);
                return new Te((t, r) => {
                  0 === e.length && r(new AggregateError([]));
                  let i = e.length;
                  const n = new Array(i);
                  e.forEach((e, o) =>
                    Te.resolve(e).then(
                      (e) => t(e),
                      (e) => {
                        (n[o] = e), --i || r(new AggregateError(n));
                      }
                    )
                  );
                });
              }));
        const Ve = { awaits: 0, echoes: 0, id: 0 };
        var We = 0,
          Xe = [],
          Ze = 0,
          $e = 0,
          et = 0;
        function tt(e, t, r, i) {
          var n = Ne,
            o = Object.create(n);
          (o.parent = n), (o.ref = 0), (o.global = !1), (o.id = ++et);
          var a = ke.env;
          (o.env = Ce
            ? {
                Promise: Te,
                PromiseProp: { value: Te, configurable: !0, writable: !0 },
                all: Te.all,
                race: Te.race,
                allSettled: Te.allSettled,
                any: Te.any,
                resolve: Te.resolve,
                reject: Te.reject,
                nthen: ut(a.nthen, o),
                gthen: ut(a.gthen, o),
              }
            : {}),
            t && A(o, t),
            ++n.ref,
            (o.finalize = function () {
              --this.parent.ref || this.parent.finalize();
            });
          var s = ct(o, e, r, i);
          return 0 === o.ref && o.finalize(), s;
        }
        function rt() {
          return (
            Ve.id || (Ve.id = ++We), ++Ve.awaits, (Ve.echoes += 100), Ve.id
          );
        }
        function it() {
          return (
            !!Ve.awaits &&
            (0 == --Ve.awaits && (Ve.id = 0), (Ve.echoes = 100 * Ve.awaits), !0)
          );
        }
        function nt(e) {
          return Ve.echoes && e && e.constructor === fe
            ? (rt(),
              e.then(
                (e) => (it(), e),
                (e) => (it(), It(e))
              ))
            : e;
        }
        function ot(e) {
          ++$e,
            (Ve.echoes && 0 != --Ve.echoes) || (Ve.echoes = Ve.id = 0),
            Xe.push(Ne),
            at(e, !0);
        }
        function At() {
          var e = Xe[Xe.length - 1];
          Xe.pop(), at(e, !1);
        }
        function at(e, t) {
          var r = Ne;
          if (
            ((t
              ? !Ve.echoes || (Ze++ && e === Ne)
              : !Ze || (--Ze && e === Ne)) || gt(t ? ot.bind(null, e) : At),
            e !== Ne && ((Ne = e), r === ke && (ke.env = st()), Ce))
          ) {
            var n = ke.env.Promise,
              o = e.env;
            (Ie.then = o.nthen),
              (n.prototype.then = o.gthen),
              (r.global || e.global) &&
                (Object.defineProperty(i, "Promise", o.PromiseProp),
                (n.all = o.all),
                (n.race = o.race),
                (n.resolve = o.resolve),
                (n.reject = o.reject),
                o.allSettled && (n.allSettled = o.allSettled),
                o.any && (n.any = o.any));
          }
        }
        function st() {
          var e = i.Promise;
          return Ce
            ? {
                Promise: e,
                PromiseProp: Object.getOwnPropertyDescriptor(i, "Promise"),
                all: e.all,
                race: e.race,
                allSettled: e.allSettled,
                any: e.any,
                resolve: e.resolve,
                reject: e.reject,
                nthen: Ie.then,
                gthen: e.prototype.then,
              }
            : {};
        }
        function ct(e, t, r, i, n) {
          var o = Ne;
          try {
            return at(e, !0), t(r, i, n);
          } finally {
            at(o, !1);
          }
        }
        function gt(e) {
          de.call(he, e);
        }
        function lt(e, t, r, i) {
          return "function" != typeof e
            ? e
            : function () {
                var n = Ne;
                r && rt(), at(t, !0);
                try {
                  return e.apply(this, arguments);
                } finally {
                  at(n, !1), i && gt(it);
                }
              };
        }
        function ut(e, t) {
          return function (r, i) {
            return e.call(this, lt(r, t), lt(i, t));
          };
        }
        function ht(e, t) {
          var r;
          try {
            r = t.onuncatched(e);
          } catch (e) {}
          if (!1 !== r)
            try {
              var n,
                o = { promise: t, reason: e };
              if (
                (i.document && document.createEvent
                  ? ((n = document.createEvent("Event")).initEvent(
                      "unhandledrejection",
                      !0,
                      !0
                    ),
                    A(n, o))
                  : i.CustomEvent &&
                    A(
                      (n = new CustomEvent("unhandledrejection", {
                        detail: o,
                      })),
                      o
                    ),
                n &&
                  i.dispatchEvent &&
                  (dispatchEvent(n),
                  !i.PromiseRejectionEvent && i.onunhandledrejection))
              )
                try {
                  i.onunhandledrejection(n);
                } catch (e) {}
              H &&
                n &&
                !n.defaultPrevented &&
                console.warn(`Unhandled rejection: ${e.stack || e}`);
            } catch (e) {}
        }
        -1 === ("" + de).indexOf("[native code]") && (rt = it = ie);
        var It = Te.reject;
        function pt(e, t, r, i) {
          if (e.idbdb && (e._state.openComplete || Ne.letThrough || e._vip)) {
            var n = e._createTransaction(t, r, e._dbSchema);
            try {
              n.create(), (e._state.PR1398_maxLoop = 3);
            } catch (n) {
              return n.name === Z.InvalidState &&
                e.isOpen() &&
                --e._state.PR1398_maxLoop > 0
                ? (console.warn("Dexie: Need to reopen db"),
                  e._close(),
                  e.open().then(() => pt(e, t, r, i)))
                : It(n);
            }
            return n
              ._promise(t, (e, t) => tt(() => ((Ne.trans = n), i(e, t, n))))
              .then((e) => n._completion.then(() => e));
          }
          if (e._state.openComplete)
            return It(new ee.DatabaseClosed(e._state.dbOpenError));
          if (!e._state.isBeingOpened) {
            if (!e._options.autoOpen) return It(new ee.DatabaseClosed());
            e.open().catch(ie);
          }
          return e._state.dbReadyPromise.then(() => pt(e, t, r, i));
        }
        const dt = String.fromCharCode(65535),
          ft =
            "Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",
          Ct = [],
          Bt =
            "undefined" != typeof navigator &&
            /(MSIE|Trident|Edge)/.test(navigator.userAgent),
          Et = Bt,
          yt = Bt,
          mt = (e) => !/(dexie\.js|dexie\.min\.js)/.test(e);
        function Qt(e, t) {
          return e
            ? t
              ? function () {
                  return e.apply(this, arguments) && t.apply(this, arguments);
                }
              : e
            : t;
        }
        const vt = {
          type: 3,
          lower: -1 / 0,
          lowerOpen: !1,
          upper: [[]],
          upperOpen: !1,
        };
        function St(e) {
          return "string" != typeof e || /\./.test(e)
            ? (e) => e
            : (t) => (void 0 === t[e] && e in t && delete (t = _(t))[e], t);
        }
        class wt {
          _trans(e, t, r) {
            const i = this._tx || Ne.trans,
              n = this.name;
            function o(e, r, i) {
              if (!i.schema[n])
                throw new ee.NotFound(
                  "Table " + n + " not part of transaction"
                );
              return t(i.idbtrans, i);
            }
            const A = Ye();
            try {
              return i && i.db === this.db
                ? i === Ne.trans
                  ? i._promise(e, o, r)
                  : tt(() => i._promise(e, o, r), {
                      trans: i,
                      transless: Ne.transless || Ne,
                    })
                : pt(this.db, e, [this.name], o);
            } finally {
              A && qe();
            }
          }
          get(e, t) {
            return e && e.constructor === Object
              ? this.where(e).first(t)
              : this._trans("readonly", (t) =>
                  this.core
                    .get({ trans: t, key: e })
                    .then((e) => this.hook.reading.fire(e))
                ).then(t);
          }
          where(e) {
            if ("string" == typeof e) return new this.db.WhereClause(this, e);
            if (o(e)) return new this.db.WhereClause(this, `[${e.join("+")}]`);
            const t = n(e);
            if (1 === t.length) return this.where(t[0]).equals(e[t[0]]);
            const r = this.schema.indexes
              .concat(this.schema.primKey)
              .filter(
                (e) =>
                  e.compound &&
                  t.every((t) => e.keyPath.indexOf(t) >= 0) &&
                  e.keyPath.every((e) => t.indexOf(e) >= 0)
              )[0];
            if (r && this.db._maxKey !== dt)
              return this.where(r.name).equals(r.keyPath.map((t) => e[t]));
            !r &&
              H &&
              console.warn(
                `The query ${JSON.stringify(e)} on ${
                  this.name
                } would benefit of a compound index [${t.join("+")}]`
              );
            const { idxByName: i } = this.schema,
              A = this.db._deps.indexedDB;
            function a(e, t) {
              try {
                return 0 === A.cmp(e, t);
              } catch (e) {
                return !1;
              }
            }
            const [s, c] = t.reduce(
              ([t, r], n) => {
                const A = i[n],
                  s = e[n];
                return [
                  t || A,
                  t || !A
                    ? Qt(
                        r,
                        A && A.multi
                          ? (e) => {
                              const t = m(e, n);
                              return o(t) && t.some((e) => a(s, e));
                            }
                          : (e) => a(s, m(e, n))
                      )
                    : r,
                ];
              },
              [null, null]
            );
            return s
              ? this.where(s.name).equals(e[s.keyPath]).filter(c)
              : r
              ? this.filter(c)
              : this.where(t).equals("");
          }
          filter(e) {
            return this.toCollection().and(e);
          }
          count(e) {
            return this.toCollection().count(e);
          }
          offset(e) {
            return this.toCollection().offset(e);
          }
          limit(e) {
            return this.toCollection().limit(e);
          }
          each(e) {
            return this.toCollection().each(e);
          }
          toArray(e) {
            return this.toCollection().toArray(e);
          }
          toCollection() {
            return new this.db.Collection(new this.db.WhereClause(this));
          }
          orderBy(e) {
            return new this.db.Collection(
              new this.db.WhereClause(this, o(e) ? `[${e.join("+")}]` : e)
            );
          }
          reverse() {
            return this.toCollection().reverse();
          }
          mapToClass(e) {
            this.schema.mappedClass = e;
            const t = (t) => {
              if (!t) return t;
              const r = Object.create(e.prototype);
              for (var i in t)
                if (c(t, i))
                  try {
                    r[i] = t[i];
                  } catch (e) {}
              return r;
            };
            return (
              this.schema.readHook &&
                this.hook.reading.unsubscribe(this.schema.readHook),
              (this.schema.readHook = t),
              this.hook("reading", t),
              e
            );
          }
          defineClass() {
            return this.mapToClass(function (e) {
              A(this, e);
            });
          }
          add(e, t) {
            const { auto: r, keyPath: i } = this.schema.primKey;
            let n = e;
            return (
              i && r && (n = St(i)(e)),
              this._trans("readwrite", (e) =>
                this.core.mutate({
                  trans: e,
                  type: "add",
                  keys: null != t ? [t] : null,
                  values: [n],
                })
              )
                .then((e) =>
                  e.numFailures ? Te.reject(e.failures[0]) : e.lastResult
                )
                .then((t) => {
                  if (i)
                    try {
                      Q(e, i, t);
                    } catch (e) {}
                  return t;
                })
            );
          }
          update(e, t) {
            if ("object" != typeof e || o(e))
              return this.where(":id").equals(e).modify(t);
            {
              const r = m(e, this.schema.primKey.keyPath);
              if (void 0 === r)
                return It(
                  new ee.InvalidArgument(
                    "Given object does not contain its primary key"
                  )
                );
              try {
                "function" != typeof t
                  ? n(t).forEach((r) => {
                      Q(e, r, t[r]);
                    })
                  : t(e, { value: e, primKey: r });
              } catch (e) {}
              return this.where(":id").equals(r).modify(t);
            }
          }
          put(e, t) {
            const { auto: r, keyPath: i } = this.schema.primKey;
            let n = e;
            return (
              i && r && (n = St(i)(e)),
              this._trans("readwrite", (e) =>
                this.core.mutate({
                  trans: e,
                  type: "put",
                  values: [n],
                  keys: null != t ? [t] : null,
                })
              )
                .then((e) =>
                  e.numFailures ? Te.reject(e.failures[0]) : e.lastResult
                )
                .then((t) => {
                  if (i)
                    try {
                      Q(e, i, t);
                    } catch (e) {}
                  return t;
                })
            );
          }
          delete(e) {
            return this._trans("readwrite", (t) =>
              this.core.mutate({ trans: t, type: "delete", keys: [e] })
            ).then((e) => (e.numFailures ? Te.reject(e.failures[0]) : void 0));
          }
          clear() {
            return this._trans("readwrite", (e) =>
              this.core.mutate({ trans: e, type: "deleteRange", range: vt })
            ).then((e) => (e.numFailures ? Te.reject(e.failures[0]) : void 0));
          }
          bulkGet(e) {
            return this._trans("readonly", (t) =>
              this.core
                .getMany({ keys: e, trans: t })
                .then((e) => e.map((e) => this.hook.reading.fire(e)))
            );
          }
          bulkAdd(e, t, r) {
            const i = Array.isArray(t) ? t : void 0,
              n = (r = r || (i ? void 0 : t)) ? r.allKeys : void 0;
            return this._trans("readwrite", (t) => {
              const { auto: r, keyPath: o } = this.schema.primKey;
              if (o && i)
                throw new ee.InvalidArgument(
                  "bulkAdd(): keys argument invalid on tables with inbound keys"
                );
              if (i && i.length !== e.length)
                throw new ee.InvalidArgument(
                  "Arguments objects and keys must have the same length"
                );
              const A = e.length;
              let a = o && r ? e.map(St(o)) : e;
              return this.core
                .mutate({
                  trans: t,
                  type: "add",
                  keys: i,
                  values: a,
                  wantResults: n,
                })
                .then(
                  ({
                    numFailures: e,
                    results: t,
                    lastResult: r,
                    failures: i,
                  }) => {
                    if (0 === e) return n ? t : r;
                    throw new X(
                      `${this.name}.bulkAdd(): ${e} of ${A} operations failed`,
                      i
                    );
                  }
                );
            });
          }
          bulkPut(e, t, r) {
            const i = Array.isArray(t) ? t : void 0,
              n = (r = r || (i ? void 0 : t)) ? r.allKeys : void 0;
            return this._trans("readwrite", (t) => {
              const { auto: r, keyPath: o } = this.schema.primKey;
              if (o && i)
                throw new ee.InvalidArgument(
                  "bulkPut(): keys argument invalid on tables with inbound keys"
                );
              if (i && i.length !== e.length)
                throw new ee.InvalidArgument(
                  "Arguments objects and keys must have the same length"
                );
              const A = e.length;
              let a = o && r ? e.map(St(o)) : e;
              return this.core
                .mutate({
                  trans: t,
                  type: "put",
                  keys: i,
                  values: a,
                  wantResults: n,
                })
                .then(
                  ({
                    numFailures: e,
                    results: t,
                    lastResult: r,
                    failures: i,
                  }) => {
                    if (0 === e) return n ? t : r;
                    throw new X(
                      `${this.name}.bulkPut(): ${e} of ${A} operations failed`,
                      i
                    );
                  }
                );
            });
          }
          bulkDelete(e) {
            const t = e.length;
            return this._trans("readwrite", (t) =>
              this.core.mutate({ trans: t, type: "delete", keys: e })
            ).then(({ numFailures: e, lastResult: r, failures: i }) => {
              if (0 === e) return r;
              throw new X(
                `${this.name}.bulkDelete(): ${e} of ${t} operations failed`,
                i
              );
            });
          }
        }
        function bt(e) {
          var t = {},
            r = function (r, i) {
              if (i) {
                for (var n = arguments.length, o = new Array(n - 1); --n; )
                  o[n - 1] = arguments[n];
                return t[r].subscribe.apply(null, o), e;
              }
              if ("string" == typeof r) return t[r];
            };
          r.addEventType = a;
          for (var i = 1, A = arguments.length; i < A; ++i) a(arguments[i]);
          return r;
          function a(e, i, n) {
            if ("object" == typeof e) return s(e);
            i || (i = ge), n || (n = ie);
            var o = {
              subscribers: [],
              fire: n,
              subscribe: function (e) {
                -1 === o.subscribers.indexOf(e) &&
                  (o.subscribers.push(e), (o.fire = i(o.fire, e)));
              },
              unsubscribe: function (e) {
                (o.subscribers = o.subscribers.filter(function (t) {
                  return t !== e;
                })),
                  (o.fire = o.subscribers.reduce(i, n));
              },
            };
            return (t[e] = r[e] = o), o;
          }
          function s(e) {
            n(e).forEach(function (t) {
              var r = e[t];
              if (o(r)) a(t, e[t][0], e[t][1]);
              else {
                if ("asap" !== r)
                  throw new ee.InvalidArgument("Invalid event config");
                var i = a(t, ne, function () {
                  for (var e = arguments.length, t = new Array(e); e--; )
                    t[e] = arguments[e];
                  i.subscribers.forEach(function (e) {
                    E(function () {
                      e.apply(null, t);
                    });
                  });
                });
              }
            });
          }
        }
        function kt(e, t) {
          return h(t).from({ prototype: e }), t;
        }
        function Nt(e, t) {
          return (
            !(e.filter || e.algorithm || e.or) &&
            (t ? e.justLimit : !e.replayFilter)
          );
        }
        function _t(e, t) {
          e.filter = Qt(e.filter, t);
        }
        function Dt(e, t, r) {
          var i = e.replayFilter;
          (e.replayFilter = i ? () => Qt(i(), t()) : t),
            (e.justLimit = r && !i);
        }
        function Ot(e, t) {
          if (e.isPrimKey) return t.primaryKey;
          const r = t.getIndexByKeyPath(e.index);
          if (!r)
            throw new ee.Schema(
              "KeyPath " +
                e.index +
                " on object store " +
                t.name +
                " is not indexed"
            );
          return r;
        }
        function Tt(e, t, r) {
          const i = Ot(e, t.schema);
          return t.openCursor({
            trans: r,
            values: !e.keysOnly,
            reverse: "prev" === e.dir,
            unique: !!e.unique,
            query: { index: i, range: e.range },
          });
        }
        function Pt(e, t, r, i) {
          const n = e.replayFilter ? Qt(e.filter, e.replayFilter()) : e.filter;
          if (e.or) {
            const o = {},
              A = (e, r, i) => {
                if (
                  !n ||
                  n(
                    r,
                    i,
                    (e) => r.stop(e),
                    (e) => r.fail(e)
                  )
                ) {
                  var A = r.primaryKey,
                    a = "" + A;
                  "[object ArrayBuffer]" === a && (a = "" + new Uint8Array(A)),
                    c(o, a) || ((o[a] = !0), t(e, r, i));
                }
              };
            return Promise.all([
              e.or._iterate(A, r),
              xt(Tt(e, i, r), e.algorithm, A, !e.keysOnly && e.valueMapper),
            ]);
          }
          return xt(
            Tt(e, i, r),
            Qt(e.algorithm, n),
            t,
            !e.keysOnly && e.valueMapper
          );
        }
        function xt(e, t, r, i) {
          var n = ze(i ? (e, t, n) => r(i(e), t, n) : r);
          return e.then((e) => {
            if (e)
              return e.start(() => {
                var r = () => e.continue();
                (t &&
                  !t(
                    e,
                    (e) => (r = e),
                    (t) => {
                      e.stop(t), (r = ie);
                    },
                    (t) => {
                      e.fail(t), (r = ie);
                    }
                  )) ||
                  n(e.value, e, (e) => (r = e)),
                  r();
              });
          });
        }
        function Rt(e, t) {
          try {
            const r = Ut(e),
              i = Ut(t);
            if (r !== i)
              return "Array" === r
                ? 1
                : "Array" === i
                ? -1
                : "binary" === r
                ? 1
                : "binary" === i
                ? -1
                : "string" === r
                ? 1
                : "string" === i
                ? -1
                : "Date" === r
                ? 1
                : "Date" !== i
                ? NaN
                : -1;
            switch (r) {
              case "number":
              case "Date":
              case "string":
                return e > t ? 1 : e < t ? -1 : 0;
              case "binary":
                return (function (e, t) {
                  const r = e.length,
                    i = t.length,
                    n = r < i ? r : i;
                  for (let r = 0; r < n; ++r)
                    if (e[r] !== t[r]) return e[r] < t[r] ? -1 : 1;
                  return r === i ? 0 : r < i ? -1 : 1;
                })(Ft(e), Ft(t));
              case "Array":
                return (function (e, t) {
                  const r = e.length,
                    i = t.length,
                    n = r < i ? r : i;
                  for (let r = 0; r < n; ++r) {
                    const i = Rt(e[r], t[r]);
                    if (0 !== i) return i;
                  }
                  return r === i ? 0 : r < i ? -1 : 1;
                })(e, t);
            }
          } catch (e) {}
          return NaN;
        }
        function Ut(e) {
          const t = typeof e;
          if ("object" !== t) return t;
          if (ArrayBuffer.isView(e)) return "binary";
          const r = T(e);
          return "ArrayBuffer" === r ? "binary" : r;
        }
        function Ft(e) {
          return e instanceof Uint8Array
            ? e
            : ArrayBuffer.isView(e)
            ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength)
            : new Uint8Array(e);
        }
        class Ht {
          _read(e, t) {
            var r = this._ctx;
            return r.error
              ? r.table._trans(null, It.bind(null, r.error))
              : r.table._trans("readonly", e).then(t);
          }
          _write(e) {
            var t = this._ctx;
            return t.error
              ? t.table._trans(null, It.bind(null, t.error))
              : t.table._trans("readwrite", e, "locked");
          }
          _addAlgorithm(e) {
            var t = this._ctx;
            t.algorithm = Qt(t.algorithm, e);
          }
          _iterate(e, t) {
            return Pt(this._ctx, e, t, this._ctx.table.core);
          }
          clone(e) {
            var t = Object.create(this.constructor.prototype),
              r = Object.create(this._ctx);
            return e && A(r, e), (t._ctx = r), t;
          }
          raw() {
            return (this._ctx.valueMapper = null), this;
          }
          each(e) {
            var t = this._ctx;
            return this._read((r) => Pt(t, e, r, t.table.core));
          }
          count(e) {
            return this._read((e) => {
              const t = this._ctx,
                r = t.table.core;
              if (Nt(t, !0))
                return r
                  .count({
                    trans: e,
                    query: { index: Ot(t, r.schema), range: t.range },
                  })
                  .then((e) => Math.min(e, t.limit));
              var i = 0;
              return Pt(t, () => (++i, !1), e, r).then(() => i);
            }).then(e);
          }
          sortBy(e, t) {
            const r = e.split(".").reverse(),
              i = r[0],
              n = r.length - 1;
            function o(e, t) {
              return t ? o(e[r[t]], t - 1) : e[i];
            }
            var A = "next" === this._ctx.dir ? 1 : -1;
            function a(e, t) {
              var r = o(e, n),
                i = o(t, n);
              return r < i ? -A : r > i ? A : 0;
            }
            return this.toArray(function (e) {
              return e.sort(a);
            }).then(t);
          }
          toArray(e) {
            return this._read((e) => {
              var t = this._ctx;
              if ("next" === t.dir && Nt(t, !0) && t.limit > 0) {
                const { valueMapper: r } = t,
                  i = Ot(t, t.table.core.schema);
                return t.table.core
                  .query({
                    trans: e,
                    limit: t.limit,
                    values: !0,
                    query: { index: i, range: t.range },
                  })
                  .then(({ result: e }) => (r ? e.map(r) : e));
              }
              {
                const r = [];
                return Pt(t, (e) => r.push(e), e, t.table.core).then(() => r);
              }
            }, e);
          }
          offset(e) {
            var t = this._ctx;
            return (
              e <= 0 ||
                ((t.offset += e),
                Nt(t)
                  ? Dt(t, () => {
                      var t = e;
                      return (e, r) =>
                        0 === t ||
                        (1 === t
                          ? (--t, !1)
                          : (r(() => {
                              e.advance(t), (t = 0);
                            }),
                            !1));
                    })
                  : Dt(t, () => {
                      var t = e;
                      return () => --t < 0;
                    })),
              this
            );
          }
          limit(e) {
            return (
              (this._ctx.limit = Math.min(this._ctx.limit, e)),
              Dt(
                this._ctx,
                () => {
                  var t = e;
                  return function (e, r, i) {
                    return --t <= 0 && r(i), t >= 0;
                  };
                },
                !0
              ),
              this
            );
          }
          until(e, t) {
            return (
              _t(this._ctx, function (r, i, n) {
                return !e(r.value) || (i(n), t);
              }),
              this
            );
          }
          first(e) {
            return this.limit(1)
              .toArray(function (e) {
                return e[0];
              })
              .then(e);
          }
          last(e) {
            return this.reverse().first(e);
          }
          filter(e) {
            var t, r;
            return (
              _t(this._ctx, function (t) {
                return e(t.value);
              }),
              (t = this._ctx),
              (r = e),
              (t.isMatch = Qt(t.isMatch, r)),
              this
            );
          }
          and(e) {
            return this.filter(e);
          }
          or(e) {
            return new this.db.WhereClause(this._ctx.table, e, this);
          }
          reverse() {
            return (
              (this._ctx.dir = "prev" === this._ctx.dir ? "next" : "prev"),
              this._ondirectionchange && this._ondirectionchange(this._ctx.dir),
              this
            );
          }
          desc() {
            return this.reverse();
          }
          eachKey(e) {
            var t = this._ctx;
            return (
              (t.keysOnly = !t.isMatch),
              this.each(function (t, r) {
                e(r.key, r);
              })
            );
          }
          eachUniqueKey(e) {
            return (this._ctx.unique = "unique"), this.eachKey(e);
          }
          eachPrimaryKey(e) {
            var t = this._ctx;
            return (
              (t.keysOnly = !t.isMatch),
              this.each(function (t, r) {
                e(r.primaryKey, r);
              })
            );
          }
          keys(e) {
            var t = this._ctx;
            t.keysOnly = !t.isMatch;
            var r = [];
            return this.each(function (e, t) {
              r.push(t.key);
            })
              .then(function () {
                return r;
              })
              .then(e);
          }
          primaryKeys(e) {
            var t = this._ctx;
            if ("next" === t.dir && Nt(t, !0) && t.limit > 0)
              return this._read((e) => {
                var r = Ot(t, t.table.core.schema);
                return t.table.core.query({
                  trans: e,
                  values: !1,
                  limit: t.limit,
                  query: { index: r, range: t.range },
                });
              })
                .then(({ result: e }) => e)
                .then(e);
            t.keysOnly = !t.isMatch;
            var r = [];
            return this.each(function (e, t) {
              r.push(t.primaryKey);
            })
              .then(function () {
                return r;
              })
              .then(e);
          }
          uniqueKeys(e) {
            return (this._ctx.unique = "unique"), this.keys(e);
          }
          firstKey(e) {
            return this.limit(1)
              .keys(function (e) {
                return e[0];
              })
              .then(e);
          }
          lastKey(e) {
            return this.reverse().firstKey(e);
          }
          distinct() {
            var e = this._ctx,
              t = e.index && e.table.schema.idxByName[e.index];
            if (!t || !t.multi) return this;
            var r = {};
            return (
              _t(this._ctx, function (e) {
                var t = e.primaryKey.toString(),
                  i = c(r, t);
                return (r[t] = !0), !i;
              }),
              this
            );
          }
          modify(e) {
            var t = this._ctx;
            return this._write((r) => {
              var i;
              if ("function" == typeof e) i = e;
              else {
                var o = n(e),
                  A = o.length;
                i = function (t) {
                  for (var r = !1, i = 0; i < A; ++i) {
                    var n = o[i],
                      a = e[n];
                    m(t, n) !== a && (Q(t, n, a), (r = !0));
                  }
                  return r;
                };
              }
              const a = t.table.core,
                { outbound: s, extractKey: c } = a.schema.primaryKey,
                g = this.db._options.modifyChunkSize || 200,
                l = [];
              let u = 0;
              const h = [],
                I = (e, t) => {
                  const { failures: r, numFailures: i } = t;
                  u += e - i;
                  for (let e of n(r)) l.push(r[e]);
                };
              return this.clone()
                .primaryKeys()
                .then((n) => {
                  const o = (A) => {
                    const l = Math.min(g, n.length - A);
                    return a
                      .getMany({
                        trans: r,
                        keys: n.slice(A, A + l),
                        cache: "immutable",
                      })
                      .then((u) => {
                        const h = [],
                          p = [],
                          d = s ? [] : null,
                          f = [];
                        for (let e = 0; e < l; ++e) {
                          const t = u[e],
                            r = { value: _(t), primKey: n[A + e] };
                          !1 !== i.call(r, r.value, r) &&
                            (null == r.value
                              ? f.push(n[A + e])
                              : s || 0 === Rt(c(t), c(r.value))
                              ? (p.push(r.value), s && d.push(n[A + e]))
                              : (f.push(n[A + e]), h.push(r.value)));
                        }
                        const C = Nt(t) &&
                          t.limit === 1 / 0 &&
                          ("function" != typeof e || e === Mt) && {
                            index: t.index,
                            range: t.range,
                          };
                        return Promise.resolve(
                          h.length > 0 &&
                            a
                              .mutate({ trans: r, type: "add", values: h })
                              .then((e) => {
                                for (let t in e.failures)
                                  f.splice(parseInt(t), 1);
                                I(h.length, e);
                              })
                        )
                          .then(
                            () =>
                              (p.length > 0 || (C && "object" == typeof e)) &&
                              a
                                .mutate({
                                  trans: r,
                                  type: "put",
                                  keys: d,
                                  values: p,
                                  criteria: C,
                                  changeSpec: "function" != typeof e && e,
                                })
                                .then((e) => I(p.length, e))
                          )
                          .then(
                            () =>
                              (f.length > 0 || (C && e === Mt)) &&
                              a
                                .mutate({
                                  trans: r,
                                  type: "delete",
                                  keys: f,
                                  criteria: C,
                                })
                                .then((e) => I(f.length, e))
                          )
                          .then(() => n.length > A + l && o(A + g));
                      });
                  };
                  return o(0).then(() => {
                    if (l.length > 0)
                      throw new W(
                        "Error modifying one or more objects",
                        l,
                        u,
                        h
                      );
                    return n.length;
                  });
                });
            });
          }
          delete() {
            var e = this._ctx,
              t = e.range;
            return Nt(e) && ((e.isPrimKey && !yt) || 3 === t.type)
              ? this._write((r) => {
                  const { primaryKey: i } = e.table.core.schema,
                    n = t;
                  return e.table.core
                    .count({ trans: r, query: { index: i, range: n } })
                    .then((t) =>
                      e.table.core
                        .mutate({ trans: r, type: "deleteRange", range: n })
                        .then(
                          ({
                            failures: e,
                            lastResult: r,
                            results: i,
                            numFailures: n,
                          }) => {
                            if (n)
                              throw new W(
                                "Could not delete some values",
                                Object.keys(e).map((t) => e[t]),
                                t - n
                              );
                            return t - n;
                          }
                        )
                    );
                })
              : this.modify(Mt);
          }
        }
        const Mt = (e, t) => (t.value = null);
        function Gt(e, t) {
          return e < t ? -1 : e === t ? 0 : 1;
        }
        function Lt(e, t) {
          return e > t ? -1 : e === t ? 0 : 1;
        }
        function Kt(e, t, r) {
          var i = e instanceof Vt ? new e.Collection(e) : e;
          return (i._ctx.error = r ? new r(t) : new TypeError(t)), i;
        }
        function Yt(e) {
          return new e.Collection(e, () => zt("")).limit(0);
        }
        function qt(e, t, r, i, n, o) {
          for (
            var A = Math.min(e.length, i.length), a = -1, s = 0;
            s < A;
            ++s
          ) {
            var c = t[s];
            if (c !== i[s])
              return n(e[s], r[s]) < 0
                ? e.substr(0, s) + r[s] + r.substr(s + 1)
                : n(e[s], i[s]) < 0
                ? e.substr(0, s) + i[s] + r.substr(s + 1)
                : a >= 0
                ? e.substr(0, a) + t[a] + r.substr(a + 1)
                : null;
            n(e[s], c) < 0 && (a = s);
          }
          return A < i.length && "next" === o
            ? e + r.substr(e.length)
            : A < e.length && "prev" === o
            ? e.substr(0, r.length)
            : a < 0
            ? null
            : e.substr(0, a) + i[a] + r.substr(a + 1);
        }
        function Jt(e, t, r, i) {
          var n,
            o,
            A,
            a,
            s,
            c,
            g,
            l = r.length;
          if (!r.every((e) => "string" == typeof e))
            return Kt(e, "String expected.");
          function u(e) {
            (n = (function (e) {
              return "next" === e
                ? (e) => e.toUpperCase()
                : (e) => e.toLowerCase();
            })(e)),
              (o = (function (e) {
                return "next" === e
                  ? (e) => e.toLowerCase()
                  : (e) => e.toUpperCase();
              })(e)),
              (A = "next" === e ? Gt : Lt);
            var t = r
              .map(function (e) {
                return { lower: o(e), upper: n(e) };
              })
              .sort(function (e, t) {
                return A(e.lower, t.lower);
              });
            (a = t.map(function (e) {
              return e.upper;
            })),
              (s = t.map(function (e) {
                return e.lower;
              })),
              (c = e),
              (g = "next" === e ? "" : i);
          }
          u("next");
          var h = new e.Collection(e, () => jt(a[0], s[l - 1] + i));
          h._ondirectionchange = function (e) {
            u(e);
          };
          var I = 0;
          return (
            h._addAlgorithm(function (e, r, i) {
              var n = e.key;
              if ("string" != typeof n) return !1;
              var u = o(n);
              if (t(u, s, I)) return !0;
              for (var h = null, p = I; p < l; ++p) {
                var d = qt(n, u, a[p], s[p], A, c);
                null === d && null === h
                  ? (I = p + 1)
                  : (null === h || A(h, d) > 0) && (h = d);
              }
              return (
                r(
                  null !== h
                    ? function () {
                        e.continue(h + g);
                      }
                    : i
                ),
                !1
              );
            }),
            h
          );
        }
        function jt(e, t, r, i) {
          return { type: 2, lower: e, upper: t, lowerOpen: r, upperOpen: i };
        }
        function zt(e) {
          return { type: 1, lower: e, upper: e };
        }
        class Vt {
          get Collection() {
            return this._ctx.table.db.Collection;
          }
          between(e, t, r, i) {
            (r = !1 !== r), (i = !0 === i);
            try {
              return this._cmp(e, t) > 0 ||
                (0 === this._cmp(e, t) && (r || i) && (!r || !i))
                ? Yt(this)
                : new this.Collection(this, () => jt(e, t, !r, !i));
            } catch (e) {
              return Kt(this, ft);
            }
          }
          equals(e) {
            return null == e
              ? Kt(this, ft)
              : new this.Collection(this, () => zt(e));
          }
          above(e) {
            return null == e
              ? Kt(this, ft)
              : new this.Collection(this, () => jt(e, void 0, !0));
          }
          aboveOrEqual(e) {
            return null == e
              ? Kt(this, ft)
              : new this.Collection(this, () => jt(e, void 0, !1));
          }
          below(e) {
            return null == e
              ? Kt(this, ft)
              : new this.Collection(this, () => jt(void 0, e, !1, !0));
          }
          belowOrEqual(e) {
            return null == e
              ? Kt(this, ft)
              : new this.Collection(this, () => jt(void 0, e));
          }
          startsWith(e) {
            return "string" != typeof e
              ? Kt(this, "String expected.")
              : this.between(e, e + dt, !0, !0);
          }
          startsWithIgnoreCase(e) {
            return "" === e
              ? this.startsWith(e)
              : Jt(this, (e, t) => 0 === e.indexOf(t[0]), [e], dt);
          }
          equalsIgnoreCase(e) {
            return Jt(this, (e, t) => e === t[0], [e], "");
          }
          anyOfIgnoreCase() {
            var e = U.apply(R, arguments);
            return 0 === e.length
              ? Yt(this)
              : Jt(this, (e, t) => -1 !== t.indexOf(e), e, "");
          }
          startsWithAnyOfIgnoreCase() {
            var e = U.apply(R, arguments);
            return 0 === e.length
              ? Yt(this)
              : Jt(this, (e, t) => t.some((t) => 0 === e.indexOf(t)), e, dt);
          }
          anyOf() {
            const e = U.apply(R, arguments);
            let t = this._cmp;
            try {
              e.sort(t);
            } catch (e) {
              return Kt(this, ft);
            }
            if (0 === e.length) return Yt(this);
            const r = new this.Collection(this, () =>
              jt(e[0], e[e.length - 1])
            );
            r._ondirectionchange = (r) => {
              (t = "next" === r ? this._ascending : this._descending),
                e.sort(t);
            };
            let i = 0;
            return (
              r._addAlgorithm((r, n, o) => {
                const A = r.key;
                for (; t(A, e[i]) > 0; )
                  if ((++i, i === e.length)) return n(o), !1;
                return (
                  0 === t(A, e[i]) ||
                  (n(() => {
                    r.continue(e[i]);
                  }),
                  !1)
                );
              }),
              r
            );
          }
          notEqual(e) {
            return this.inAnyRange(
              [
                [-1 / 0, e],
                [e, this.db._maxKey],
              ],
              { includeLowers: !1, includeUppers: !1 }
            );
          }
          noneOf() {
            const e = U.apply(R, arguments);
            if (0 === e.length) return new this.Collection(this);
            try {
              e.sort(this._ascending);
            } catch (e) {
              return Kt(this, ft);
            }
            const t = e.reduce(
              (e, t) =>
                e ? e.concat([[e[e.length - 1][1], t]]) : [[-1 / 0, t]],
              null
            );
            return (
              t.push([e[e.length - 1], this.db._maxKey]),
              this.inAnyRange(t, { includeLowers: !1, includeUppers: !1 })
            );
          }
          inAnyRange(e, t) {
            const r = this._cmp,
              i = this._ascending,
              n = this._descending,
              o = this._min,
              A = this._max;
            if (0 === e.length) return Yt(this);
            if (
              !e.every(
                (e) => void 0 !== e[0] && void 0 !== e[1] && i(e[0], e[1]) <= 0
              )
            )
              return Kt(
                this,
                "First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",
                ee.InvalidArgument
              );
            const a = !t || !1 !== t.includeLowers,
              s = t && !0 === t.includeUppers;
            let c,
              g = i;
            function l(e, t) {
              return g(e[0], t[0]);
            }
            try {
              (c = e.reduce(function (e, t) {
                let i = 0,
                  n = e.length;
                for (; i < n; ++i) {
                  const n = e[i];
                  if (r(t[0], n[1]) < 0 && r(t[1], n[0]) > 0) {
                    (n[0] = o(n[0], t[0])), (n[1] = A(n[1], t[1]));
                    break;
                  }
                }
                return i === n && e.push(t), e;
              }, [])),
                c.sort(l);
            } catch (e) {
              return Kt(this, ft);
            }
            let u = 0;
            const h = s ? (e) => i(e, c[u][1]) > 0 : (e) => i(e, c[u][1]) >= 0,
              I = a ? (e) => n(e, c[u][0]) > 0 : (e) => n(e, c[u][0]) >= 0;
            let p = h;
            const d = new this.Collection(this, () =>
              jt(c[0][0], c[c.length - 1][1], !a, !s)
            );
            return (
              (d._ondirectionchange = (e) => {
                "next" === e ? ((p = h), (g = i)) : ((p = I), (g = n)),
                  c.sort(l);
              }),
              d._addAlgorithm((e, t, r) => {
                for (var n = e.key; p(n); )
                  if ((++u, u === c.length)) return t(r), !1;
                return (
                  !!(function (e) {
                    return !h(e) && !I(e);
                  })(n) ||
                  (0 === this._cmp(n, c[u][1]) ||
                    0 === this._cmp(n, c[u][0]) ||
                    t(() => {
                      g === i ? e.continue(c[u][0]) : e.continue(c[u][1]);
                    }),
                  !1)
                );
              }),
              d
            );
          }
          startsWithAnyOf() {
            const e = U.apply(R, arguments);
            return e.every((e) => "string" == typeof e)
              ? 0 === e.length
                ? Yt(this)
                : this.inAnyRange(e.map((e) => [e, e + dt]))
              : Kt(this, "startsWithAnyOf() only works with strings");
          }
        }
        function Wt(e) {
          return ze(function (t) {
            return Xt(t), e(t.target.error), !1;
          });
        }
        function Xt(e) {
          e.stopPropagation && e.stopPropagation(),
            e.preventDefault && e.preventDefault();
        }
        const Zt = bt(null, "storagemutated");
        class $t {
          _lock() {
            return (
              B(!Ne.global),
              ++this._reculock,
              1 !== this._reculock || Ne.global || (Ne.lockOwnerFor = this),
              this
            );
          }
          _unlock() {
            if ((B(!Ne.global), 0 == --this._reculock))
              for (
                Ne.global || (Ne.lockOwnerFor = null);
                this._blockedFuncs.length > 0 && !this._locked();

              ) {
                var e = this._blockedFuncs.shift();
                try {
                  ct(e[1], e[0]);
                } catch (e) {}
              }
            return this;
          }
          _locked() {
            return this._reculock && Ne.lockOwnerFor !== this;
          }
          create(e) {
            if (!this.mode) return this;
            const t = this.db.idbdb,
              r = this.db._state.dbOpenError;
            if ((B(!this.idbtrans), !e && !t))
              switch (r && r.name) {
                case "DatabaseClosedError":
                  throw new ee.DatabaseClosed(r);
                case "MissingAPIError":
                  throw new ee.MissingAPI(r.message, r);
                default:
                  throw new ee.OpenFailed(r);
              }
            if (!this.active) throw new ee.TransactionInactive();
            return (
              B(null === this._completion._state),
              ((e = this.idbtrans =
                e ||
                (this.db.core
                  ? this.db.core.transaction(this.storeNames, this.mode, {
                      durability: this.chromeTransactionDurability,
                    })
                  : t.transaction(this.storeNames, this.mode, {
                      durability: this.chromeTransactionDurability,
                    }))).onerror = ze((t) => {
                Xt(t), this._reject(e.error);
              })),
              (e.onabort = ze((t) => {
                Xt(t),
                  this.active && this._reject(new ee.Abort(e.error)),
                  (this.active = !1),
                  this.on("abort").fire(t);
              })),
              (e.oncomplete = ze(() => {
                (this.active = !1),
                  this._resolve(),
                  "mutatedParts" in e && Zt.storagemutated.fire(e.mutatedParts);
              })),
              this
            );
          }
          _promise(e, t, r) {
            if ("readwrite" === e && "readwrite" !== this.mode)
              return It(new ee.ReadOnly("Transaction is readonly"));
            if (!this.active) return It(new ee.TransactionInactive());
            if (this._locked())
              return new Te((i, n) => {
                this._blockedFuncs.push([
                  () => {
                    this._promise(e, t, r).then(i, n);
                  },
                  Ne,
                ]);
              });
            if (r)
              return tt(() => {
                var e = new Te((e, r) => {
                  this._lock();
                  const i = t(e, r, this);
                  i && i.then && i.then(e, r);
                });
                return e.finally(() => this._unlock()), (e._lib = !0), e;
              });
            var i = new Te((e, r) => {
              var i = t(e, r, this);
              i && i.then && i.then(e, r);
            });
            return (i._lib = !0), i;
          }
          _root() {
            return this.parent ? this.parent._root() : this;
          }
          waitFor(e) {
            var t = this._root();
            const r = Te.resolve(e);
            if (t._waitingFor) t._waitingFor = t._waitingFor.then(() => r);
            else {
              (t._waitingFor = r), (t._waitingQueue = []);
              var i = t.idbtrans.objectStore(t.storeNames[0]);
              !(function e() {
                for (++t._spinCount; t._waitingQueue.length; )
                  t._waitingQueue.shift()();
                t._waitingFor && (i.get(-1 / 0).onsuccess = e);
              })();
            }
            var n = t._waitingFor;
            return new Te((e, i) => {
              r.then(
                (r) => t._waitingQueue.push(ze(e.bind(null, r))),
                (e) => t._waitingQueue.push(ze(i.bind(null, e)))
              ).finally(() => {
                t._waitingFor === n && (t._waitingFor = null);
              });
            });
          }
          abort() {
            this.active &&
              ((this.active = !1),
              this.idbtrans && this.idbtrans.abort(),
              this._reject(new ee.Abort()));
          }
          table(e) {
            const t = this._memoizedTables || (this._memoizedTables = {});
            if (c(t, e)) return t[e];
            const r = this.schema[e];
            if (!r)
              throw new ee.NotFound("Table " + e + " not part of transaction");
            const i = new this.db.Table(e, r, this);
            return (i.core = this.db.core.table(e)), (t[e] = i), i;
          }
        }
        function er(e, t, r, i, n, o, A) {
          return {
            name: e,
            keyPath: t,
            unique: r,
            multi: i,
            auto: n,
            compound: o,
            src:
              (r && !A ? "&" : "") + (i ? "*" : "") + (n ? "++" : "") + tr(t),
          };
        }
        function tr(e) {
          return "string" == typeof e
            ? e
            : e
            ? "[" + [].join.call(e, "+") + "]"
            : "";
        }
        function rr(e, t, r) {
          return {
            name: e,
            primKey: t,
            indexes: r,
            mappedClass: null,
            idxByName: y(r, (e) => [e.name, e]),
          };
        }
        let ir = (e) => {
          try {
            return e.only([[]]), (ir = () => [[]]), [[]];
          } catch (e) {
            return (ir = () => dt), dt;
          }
        };
        function nr(e) {
          return null == e
            ? () => {}
            : "string" == typeof e
            ? (function (e) {
                return 1 === e.split(".").length ? (t) => t[e] : (t) => m(t, e);
              })(e)
            : (t) => m(t, e);
        }
        function or(e) {
          return [].slice.call(e);
        }
        let Ar = 0;
        function ar(e) {
          return null == e
            ? ":id"
            : "string" == typeof e
            ? e
            : `[${e.join("+")}]`;
        }
        function sr(e, t, r) {
          function i(e) {
            if (3 === e.type) return null;
            if (4 === e.type)
              throw new Error("Cannot convert never type to IDBKeyRange");
            const { lower: r, upper: i, lowerOpen: n, upperOpen: o } = e;
            return void 0 === r
              ? void 0 === i
                ? null
                : t.upperBound(i, !!o)
              : void 0 === i
              ? t.lowerBound(r, !!n)
              : t.bound(r, i, !!n, !!o);
          }
          const { schema: n, hasGetAll: A } = (function (e, t) {
              const r = or(e.objectStoreNames);
              return {
                schema: {
                  name: e.name,
                  tables: r
                    .map((e) => t.objectStore(e))
                    .map((e) => {
                      const { keyPath: t, autoIncrement: r } = e,
                        i = o(t),
                        n = null == t,
                        A = {},
                        a = {
                          name: e.name,
                          primaryKey: {
                            name: null,
                            isPrimaryKey: !0,
                            outbound: n,
                            compound: i,
                            keyPath: t,
                            autoIncrement: r,
                            unique: !0,
                            extractKey: nr(t),
                          },
                          indexes: or(e.indexNames)
                            .map((t) => e.index(t))
                            .map((e) => {
                              const {
                                  name: t,
                                  unique: r,
                                  multiEntry: i,
                                  keyPath: n,
                                } = e,
                                a = {
                                  name: t,
                                  compound: o(n),
                                  keyPath: n,
                                  unique: r,
                                  multiEntry: i,
                                  extractKey: nr(n),
                                };
                              return (A[ar(n)] = a), a;
                            }),
                          getIndexByKeyPath: (e) => A[ar(e)],
                        };
                      return (
                        (A[":id"] = a.primaryKey),
                        null != t && (A[ar(t)] = a.primaryKey),
                        a
                      );
                    }),
                },
                hasGetAll:
                  r.length > 0 &&
                  "getAll" in t.objectStore(r[0]) &&
                  !(
                    "undefined" != typeof navigator &&
                    /Safari/.test(navigator.userAgent) &&
                    !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
                    [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] <
                      604
                  ),
              };
            })(e, r),
            a = n.tables.map((e) =>
              (function (e) {
                const t = e.name;
                return {
                  name: t,
                  schema: e,
                  mutate: function ({
                    trans: e,
                    type: r,
                    keys: n,
                    values: o,
                    range: A,
                  }) {
                    return new Promise((a, s) => {
                      a = ze(a);
                      const c = e.objectStore(t),
                        g = null == c.keyPath,
                        l = "put" === r || "add" === r;
                      if (!l && "delete" !== r && "deleteRange" !== r)
                        throw new Error("Invalid operation type: " + r);
                      const { length: u } = n || o || { length: 1 };
                      if (n && o && n.length !== o.length)
                        throw new Error(
                          "Given keys array must have same length as given values array."
                        );
                      if (0 === u)
                        return a({
                          numFailures: 0,
                          failures: {},
                          results: [],
                          lastResult: void 0,
                        });
                      let h;
                      const I = [],
                        p = [];
                      let d = 0;
                      const f = (e) => {
                        ++d, Xt(e);
                      };
                      if ("deleteRange" === r) {
                        if (4 === A.type)
                          return a({
                            numFailures: d,
                            failures: p,
                            results: [],
                            lastResult: void 0,
                          });
                        3 === A.type
                          ? I.push((h = c.clear()))
                          : I.push((h = c.delete(i(A))));
                      } else {
                        const [e, t] = l ? (g ? [o, n] : [o, null]) : [n, null];
                        if (l)
                          for (let i = 0; i < u; ++i)
                            I.push(
                              (h =
                                t && void 0 !== t[i]
                                  ? c[r](e[i], t[i])
                                  : c[r](e[i]))
                            ),
                              (h.onerror = f);
                        else
                          for (let t = 0; t < u; ++t)
                            I.push((h = c[r](e[t]))), (h.onerror = f);
                      }
                      const C = (e) => {
                        const t = e.target.result;
                        I.forEach(
                          (e, t) => null != e.error && (p[t] = e.error)
                        ),
                          a({
                            numFailures: d,
                            failures: p,
                            results:
                              "delete" === r ? n : I.map((e) => e.result),
                            lastResult: t,
                          });
                      };
                      (h.onerror = (e) => {
                        f(e), C(e);
                      }),
                        (h.onsuccess = C);
                    });
                  },
                  getMany: ({ trans: e, keys: r }) =>
                    new Promise((i, n) => {
                      i = ze(i);
                      const o = e.objectStore(t),
                        A = r.length,
                        a = new Array(A);
                      let s,
                        c = 0,
                        g = 0;
                      const l = (e) => {
                          const t = e.target;
                          (a[t._pos] = t.result), ++g === c && i(a);
                        },
                        u = Wt(n);
                      for (let e = 0; e < A; ++e)
                        null != r[e] &&
                          ((s = o.get(r[e])),
                          (s._pos = e),
                          (s.onsuccess = l),
                          (s.onerror = u),
                          ++c);
                      0 === c && i(a);
                    }),
                  get: ({ trans: e, key: r }) =>
                    new Promise((i, n) => {
                      i = ze(i);
                      const o = e.objectStore(t).get(r);
                      (o.onsuccess = (e) => i(e.target.result)),
                        (o.onerror = Wt(n));
                    }),
                  query: (function (e) {
                    return (r) =>
                      new Promise((n, o) => {
                        n = ze(n);
                        const { trans: A, values: a, limit: s, query: c } = r,
                          g = s === 1 / 0 ? void 0 : s,
                          { index: l, range: u } = c,
                          h = A.objectStore(t),
                          I = l.isPrimaryKey ? h : h.index(l.name),
                          p = i(u);
                        if (0 === s) return n({ result: [] });
                        if (e) {
                          const e = a ? I.getAll(p, g) : I.getAllKeys(p, g);
                          (e.onsuccess = (e) => n({ result: e.target.result })),
                            (e.onerror = Wt(o));
                        } else {
                          let e = 0;
                          const t =
                              a || !("openKeyCursor" in I)
                                ? I.openCursor(p)
                                : I.openKeyCursor(p),
                            r = [];
                          (t.onsuccess = (i) => {
                            const o = t.result;
                            return o
                              ? (r.push(a ? o.value : o.primaryKey),
                                ++e === s
                                  ? n({ result: r })
                                  : void o.continue())
                              : n({ result: r });
                          }),
                            (t.onerror = Wt(o));
                        }
                      });
                  })(A),
                  openCursor: function ({
                    trans: e,
                    values: r,
                    query: n,
                    reverse: o,
                    unique: A,
                  }) {
                    return new Promise((a, s) => {
                      a = ze(a);
                      const { index: c, range: g } = n,
                        l = e.objectStore(t),
                        u = c.isPrimaryKey ? l : l.index(c.name),
                        h = o
                          ? A
                            ? "prevunique"
                            : "prev"
                          : A
                          ? "nextunique"
                          : "next",
                        I =
                          r || !("openKeyCursor" in u)
                            ? u.openCursor(i(g), h)
                            : u.openKeyCursor(i(g), h);
                      (I.onerror = Wt(s)),
                        (I.onsuccess = ze((t) => {
                          const r = I.result;
                          if (!r) return void a(null);
                          (r.___id = ++Ar), (r.done = !1);
                          const i = r.continue.bind(r);
                          let n = r.continuePrimaryKey;
                          n && (n = n.bind(r));
                          const o = r.advance.bind(r),
                            A = () => {
                              throw new Error("Cursor not stopped");
                            };
                          (r.trans = e),
                            (r.stop =
                              r.continue =
                              r.continuePrimaryKey =
                              r.advance =
                                () => {
                                  throw new Error("Cursor not started");
                                }),
                            (r.fail = ze(s)),
                            (r.next = function () {
                              let e = 1;
                              return this.start(() =>
                                e-- ? this.continue() : this.stop()
                              ).then(() => this);
                            }),
                            (r.start = (e) => {
                              const t = new Promise((e, t) => {
                                  (e = ze(e)),
                                    (I.onerror = Wt(t)),
                                    (r.fail = t),
                                    (r.stop = (t) => {
                                      (r.stop =
                                        r.continue =
                                        r.continuePrimaryKey =
                                        r.advance =
                                          A),
                                        e(t);
                                    });
                                }),
                                a = () => {
                                  if (I.result)
                                    try {
                                      e();
                                    } catch (e) {
                                      r.fail(e);
                                    }
                                  else
                                    (r.done = !0),
                                      (r.start = () => {
                                        throw new Error(
                                          "Cursor behind last entry"
                                        );
                                      }),
                                      r.stop();
                                };
                              return (
                                (I.onsuccess = ze((e) => {
                                  (I.onsuccess = a), a();
                                })),
                                (r.continue = i),
                                (r.continuePrimaryKey = n),
                                (r.advance = o),
                                a(),
                                t
                              );
                            }),
                            a(r);
                        }, s));
                    });
                  },
                  count({ query: e, trans: r }) {
                    const { index: n, range: o } = e;
                    return new Promise((e, A) => {
                      const a = r.objectStore(t),
                        s = n.isPrimaryKey ? a : a.index(n.name),
                        c = i(o),
                        g = c ? s.count(c) : s.count();
                      (g.onsuccess = ze((t) => e(t.target.result))),
                        (g.onerror = Wt(A));
                    });
                  },
                };
              })(e)
            ),
            s = {};
          return (
            a.forEach((e) => (s[e.name] = e)),
            {
              stack: "dbcore",
              transaction: e.transaction.bind(e),
              table(e) {
                if (!s[e]) throw new Error(`Table '${e}' not found`);
                return s[e];
              },
              MIN_KEY: -1 / 0,
              MAX_KEY: ir(t),
              schema: n,
            }
          );
        }
        function cr({ _novip: e }, t) {
          const r = t.db,
            i = (function (e, t, { IDBKeyRange: r, indexedDB: i }, n) {
              const o = (function (e, t) {
                return t.reduce((e, { create: t }) => ({ ...e, ...t(e) }), e);
              })(sr(t, r, n), e.dbcore);
              return { dbcore: o };
            })(e._middlewares, r, e._deps, t);
          (e.core = i.dbcore),
            e.tables.forEach((t) => {
              const r = t.name;
              e.core.schema.tables.some((e) => e.name === r) &&
                ((t.core = e.core.table(r)),
                e[r] instanceof e.Table && (e[r].core = t.core));
            });
        }
        function gr({ _novip: e }, t, r, i) {
          r.forEach((r) => {
            const n = i[r];
            t.forEach((t) => {
              const i = p(t, r);
              (!i || ("value" in i && void 0 === i.value)) &&
                (t === e.Transaction.prototype || t instanceof e.Transaction
                  ? u(t, r, {
                      get() {
                        return this.table(r);
                      },
                      set(e) {
                        l(this, r, {
                          value: e,
                          writable: !0,
                          configurable: !0,
                          enumerable: !0,
                        });
                      },
                    })
                  : (t[r] = new e.Table(r, n)));
            });
          });
        }
        function lr({ _novip: e }, t) {
          t.forEach((t) => {
            for (let r in t) t[r] instanceof e.Table && delete t[r];
          });
        }
        function ur(e, t) {
          return e._cfg.version - t._cfg.version;
        }
        function hr(e, t, r, i) {
          const o = e._dbSchema,
            A = e._createTransaction("readwrite", e._storeNames, o);
          A.create(r), A._completion.catch(i);
          const a = A._reject.bind(A),
            s = Ne.transless || Ne;
          tt(() => {
            (Ne.trans = A),
              (Ne.transless = s),
              0 === t
                ? (n(o).forEach((e) => {
                    pr(r, e, o[e].primKey, o[e].indexes);
                  }),
                  cr(e, r),
                  Te.follow(() => e.on.populate.fire(A)).catch(a))
                : (function ({ _novip: e }, t, r, i) {
                    const o = [],
                      A = e._versions;
                    let a = (e._dbSchema = fr(0, e.idbdb, i)),
                      s = !1;
                    return (
                      A.filter((e) => e._cfg.version >= t).forEach((A) => {
                        o.push(() => {
                          const o = a,
                            c = A._cfg.dbschema;
                          Cr(e, o, i), Cr(e, c, i), (a = e._dbSchema = c);
                          const g = Ir(o, c);
                          g.add.forEach((e) => {
                            pr(i, e[0], e[1].primKey, e[1].indexes);
                          }),
                            g.change.forEach((e) => {
                              if (e.recreate)
                                throw new ee.Upgrade(
                                  "Not yet support for changing primary key"
                                );
                              {
                                const t = i.objectStore(e.name);
                                e.add.forEach((e) => dr(t, e)),
                                  e.change.forEach((e) => {
                                    t.deleteIndex(e.name), dr(t, e);
                                  }),
                                  e.del.forEach((e) => t.deleteIndex(e));
                              }
                            });
                          const l = A._cfg.contentUpgrade;
                          if (l && A._cfg.version > t) {
                            cr(e, i), (r._memoizedTables = {}), (s = !0);
                            let t = v(c);
                            g.del.forEach((e) => {
                              t[e] = o[e];
                            }),
                              lr(e, [e.Transaction.prototype]),
                              gr(e, [e.Transaction.prototype], n(t), t),
                              (r.schema = t);
                            const A = F(l);
                            let a;
                            A && rt();
                            const u = Te.follow(() => {
                              if (((a = l(r)), a && A)) {
                                var e = it.bind(null, null);
                                a.then(e, e);
                              }
                            });
                            return a && "function" == typeof a.then
                              ? Te.resolve(a)
                              : u.then(() => a);
                          }
                        }),
                          o.push((t) => {
                            (s && Et) ||
                              (function (e, t) {
                                [].slice
                                  .call(t.db.objectStoreNames)
                                  .forEach(
                                    (r) =>
                                      null == e[r] && t.db.deleteObjectStore(r)
                                  );
                              })(A._cfg.dbschema, t),
                              lr(e, [e.Transaction.prototype]),
                              gr(
                                e,
                                [e.Transaction.prototype],
                                e._storeNames,
                                e._dbSchema
                              ),
                              (r.schema = e._dbSchema);
                          });
                      }),
                      (function e() {
                        return o.length
                          ? Te.resolve(o.shift()(r.idbtrans)).then(e)
                          : Te.resolve();
                      })().then(() => {
                        var e, t;
                        (t = i),
                          n((e = a)).forEach((r) => {
                            t.db.objectStoreNames.contains(r) ||
                              pr(t, r, e[r].primKey, e[r].indexes);
                          });
                      })
                    );
                  })(e, t, A, r).catch(a);
          });
        }
        function Ir(e, t) {
          const r = { del: [], add: [], change: [] };
          let i;
          for (i in e) t[i] || r.del.push(i);
          for (i in t) {
            const n = e[i],
              o = t[i];
            if (n) {
              const e = {
                name: i,
                def: o,
                recreate: !1,
                del: [],
                add: [],
                change: [],
              };
              if (
                "" + (n.primKey.keyPath || "") !=
                  "" + (o.primKey.keyPath || "") ||
                (n.primKey.auto !== o.primKey.auto && !Bt)
              )
                (e.recreate = !0), r.change.push(e);
              else {
                const t = n.idxByName,
                  i = o.idxByName;
                let A;
                for (A in t) i[A] || e.del.push(A);
                for (A in i) {
                  const r = t[A],
                    n = i[A];
                  r ? r.src !== n.src && e.change.push(n) : e.add.push(n);
                }
                (e.del.length > 0 || e.add.length > 0 || e.change.length > 0) &&
                  r.change.push(e);
              }
            } else r.add.push([i, o]);
          }
          return r;
        }
        function pr(e, t, r, i) {
          const n = e.db.createObjectStore(
            t,
            r.keyPath
              ? { keyPath: r.keyPath, autoIncrement: r.auto }
              : { autoIncrement: r.auto }
          );
          return i.forEach((e) => dr(n, e)), n;
        }
        function dr(e, t) {
          e.createIndex(t.name, t.keyPath, {
            unique: t.unique,
            multiEntry: t.multi,
          });
        }
        function fr(e, t, r) {
          const i = {};
          return (
            f(t.objectStoreNames, 0).forEach((e) => {
              const t = r.objectStore(e);
              let n = t.keyPath;
              const o = er(
                  tr(n),
                  n || "",
                  !1,
                  !1,
                  !!t.autoIncrement,
                  n && "string" != typeof n,
                  !0
                ),
                A = [];
              for (let e = 0; e < t.indexNames.length; ++e) {
                const r = t.index(t.indexNames[e]);
                n = r.keyPath;
                var a = er(
                  r.name,
                  n,
                  !!r.unique,
                  !!r.multiEntry,
                  !1,
                  n && "string" != typeof n,
                  !1
                );
                A.push(a);
              }
              i[e] = rr(e, o, A);
            }),
            i
          );
        }
        function Cr({ _novip: e }, t, r) {
          const n = r.db.objectStoreNames;
          for (let i = 0; i < n.length; ++i) {
            const o = n[i],
              A = r.objectStore(o);
            e._hasGetAll = "getAll" in A;
            for (let e = 0; e < A.indexNames.length; ++e) {
              const r = A.indexNames[e],
                i = A.index(r).keyPath,
                n = "string" == typeof i ? i : "[" + f(i).join("+") + "]";
              if (t[o]) {
                const e = t[o].idxByName[n];
                e &&
                  ((e.name = r),
                  delete t[o].idxByName[n],
                  (t[o].idxByName[r] = e));
              }
            }
          }
          "undefined" != typeof navigator &&
            /Safari/.test(navigator.userAgent) &&
            !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
            i.WorkerGlobalScope &&
            i instanceof i.WorkerGlobalScope &&
            [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604 &&
            (e._hasGetAll = !1);
        }
        class Br {
          _parseStoresSpec(e, t) {
            n(e).forEach((r) => {
              if (null !== e[r]) {
                var i = e[r].split(",").map((e, t) => {
                    const r = (e = e.trim()).replace(/([&*]|\+\+)/g, ""),
                      i = /^\[/.test(r)
                        ? r.match(/^\[(.*)\]$/)[1].split("+")
                        : r;
                    return er(
                      r,
                      i || null,
                      /\&/.test(e),
                      /\*/.test(e),
                      /\+\+/.test(e),
                      o(i),
                      0 === t
                    );
                  }),
                  n = i.shift();
                if (n.multi)
                  throw new ee.Schema("Primary key cannot be multi-valued");
                i.forEach((e) => {
                  if (e.auto)
                    throw new ee.Schema(
                      "Only primary key can be marked as autoIncrement (++)"
                    );
                  if (!e.keyPath)
                    throw new ee.Schema(
                      "Index must have a name and cannot be an empty string"
                    );
                }),
                  (t[r] = rr(r, n, i));
              }
            });
          }
          stores(e) {
            const t = this.db;
            this._cfg.storesSource = this._cfg.storesSource
              ? A(this._cfg.storesSource, e)
              : e;
            const r = t._versions,
              i = {};
            let o = {};
            return (
              r.forEach((e) => {
                A(i, e._cfg.storesSource),
                  (o = e._cfg.dbschema = {}),
                  e._parseStoresSpec(i, o);
              }),
              (t._dbSchema = o),
              lr(t, [t._allTables, t, t.Transaction.prototype]),
              gr(
                t,
                [t._allTables, t, t.Transaction.prototype, this._cfg.tables],
                n(o),
                o
              ),
              (t._storeNames = n(o)),
              this
            );
          }
          upgrade(e) {
            return (
              (this._cfg.contentUpgrade = le(
                this._cfg.contentUpgrade || ie,
                e
              )),
              this
            );
          }
        }
        function Er(e, t) {
          let r = e._dbNamesDB;
          return (
            r ||
              ((r = e._dbNamesDB =
                new Gr("__dbnames", {
                  addons: [],
                  indexedDB: e,
                  IDBKeyRange: t,
                })),
              r.version(1).stores({ dbnames: "name" })),
            r.table("dbnames")
          );
        }
        function yr(e) {
          return e && "function" == typeof e.databases;
        }
        function mr(e) {
          return tt(function () {
            return (Ne.letThrough = !0), e();
          });
        }
        function Qr() {
          var e;
          return !navigator.userAgentData &&
            /Safari\//.test(navigator.userAgent) &&
            !/Chrom(e|ium)\//.test(navigator.userAgent) &&
            indexedDB.databases
            ? new Promise(function (t) {
                var r = function () {
                  return indexedDB.databases().finally(t);
                };
                (e = setInterval(r, 100)), r();
              }).finally(function () {
                return clearInterval(e);
              })
            : Promise.resolve();
        }
        function vr(e) {
          var t = (t) => e.next(t),
            r = n(t),
            i = n((t) => e.throw(t));
          function n(e) {
            return (t) => {
              var n = e(t),
                A = n.value;
              return n.done
                ? A
                : A && "function" == typeof A.then
                ? A.then(r, i)
                : o(A)
                ? Promise.all(A).then(r, i)
                : r(A);
            };
          }
          return n(t)();
        }
        function Sr(e, t, r) {
          var i = arguments.length;
          if (i < 2) throw new ee.InvalidArgument("Too few arguments");
          for (var n = new Array(i - 1); --i; ) n[i - 1] = arguments[i];
          r = n.pop();
          var o = w(n);
          return [e, o, r];
        }
        function wr(e, t, r, i, n) {
          return Te.resolve().then(() => {
            const o = Ne.transless || Ne,
              A = e._createTransaction(t, r, e._dbSchema, i),
              a = { trans: A, transless: o };
            if (i) A.idbtrans = i.idbtrans;
            else
              try {
                A.create(), (e._state.PR1398_maxLoop = 3);
              } catch (i) {
                return i.name === Z.InvalidState &&
                  e.isOpen() &&
                  --e._state.PR1398_maxLoop > 0
                  ? (console.warn("Dexie: Need to reopen db"),
                    e._close(),
                    e.open().then(() => wr(e, t, r, null, n)))
                  : It(i);
              }
            const s = F(n);
            let c;
            s && rt();
            const g = Te.follow(() => {
              if (((c = n.call(A, A)), c))
                if (s) {
                  var e = it.bind(null, null);
                  c.then(e, e);
                } else
                  "function" == typeof c.next &&
                    "function" == typeof c.throw &&
                    (c = vr(c));
            }, a);
            return (
              c && "function" == typeof c.then
                ? Te.resolve(c).then((e) =>
                    A.active
                      ? e
                      : It(
                          new ee.PrematureCommit(
                            "Transaction committed too early. See http://bit.ly/2kdckMn"
                          )
                        )
                  )
                : g.then(() => c)
            )
              .then((e) => (i && A._resolve(), A._completion.then(() => e)))
              .catch((e) => (A._reject(e), It(e)));
          });
        }
        function br(e, t, r) {
          const i = o(e) ? e.slice() : [e];
          for (let e = 0; e < r; ++e) i.push(t);
          return i;
        }
        const kr = {
          stack: "dbcore",
          name: "VirtualIndexMiddleware",
          level: 1,
          create: function (e) {
            return {
              ...e,
              table(t) {
                const r = e.table(t),
                  { schema: i } = r,
                  n = {},
                  o = [];
                function A(e, t, r) {
                  const i = ar(e),
                    a = (n[i] = n[i] || []),
                    s = null == e ? 0 : "string" == typeof e ? 1 : e.length,
                    c = t > 0,
                    g = {
                      ...r,
                      isVirtual: c,
                      keyTail: t,
                      keyLength: s,
                      extractKey: nr(e),
                      unique: !c && r.unique,
                    };
                  return (
                    a.push(g),
                    g.isPrimaryKey || o.push(g),
                    s > 1 && A(2 === s ? e[0] : e.slice(0, s - 1), t + 1, r),
                    a.sort((e, t) => e.keyTail - t.keyTail),
                    g
                  );
                }
                const a = A(i.primaryKey.keyPath, 0, i.primaryKey);
                n[":id"] = [a];
                for (const e of i.indexes) A(e.keyPath, 0, e);
                function s(t) {
                  const r = t.query.index;
                  return r.isVirtual
                    ? {
                        ...t,
                        query: {
                          index: r,
                          range:
                            ((i = t.query.range),
                            (n = r.keyTail),
                            {
                              type: 1 === i.type ? 2 : i.type,
                              lower: br(
                                i.lower,
                                i.lowerOpen ? e.MAX_KEY : e.MIN_KEY,
                                n
                              ),
                              lowerOpen: !0,
                              upper: br(
                                i.upper,
                                i.upperOpen ? e.MIN_KEY : e.MAX_KEY,
                                n
                              ),
                              upperOpen: !0,
                            }),
                        },
                      }
                    : t;
                  var i, n;
                }
                const c = {
                  ...r,
                  schema: {
                    ...i,
                    primaryKey: a,
                    indexes: o,
                    getIndexByKeyPath: function (e) {
                      const t = n[ar(e)];
                      return t && t[0];
                    },
                  },
                  count: (e) => r.count(s(e)),
                  query: (e) => r.query(s(e)),
                  openCursor(t) {
                    const {
                      keyTail: i,
                      isVirtual: n,
                      keyLength: o,
                    } = t.query.index;
                    return n
                      ? r.openCursor(s(t)).then(
                          (r) =>
                            r &&
                            (function (r) {
                              const n = Object.create(r, {
                                continue: {
                                  value: function (n) {
                                    null != n
                                      ? r.continue(
                                          br(
                                            n,
                                            t.reverse ? e.MAX_KEY : e.MIN_KEY,
                                            i
                                          )
                                        )
                                      : t.unique
                                      ? r.continue(
                                          r.key
                                            .slice(0, o)
                                            .concat(
                                              t.reverse ? e.MIN_KEY : e.MAX_KEY,
                                              i
                                            )
                                        )
                                      : r.continue();
                                  },
                                },
                                continuePrimaryKey: {
                                  value(t, n) {
                                    r.continuePrimaryKey(
                                      br(t, e.MAX_KEY, i),
                                      n
                                    );
                                  },
                                },
                                primaryKey: { get: () => r.primaryKey },
                                key: {
                                  get() {
                                    const e = r.key;
                                    return 1 === o ? e[0] : e.slice(0, o);
                                  },
                                },
                                value: { get: () => r.value },
                              });
                              return n;
                            })(r)
                        )
                      : r.openCursor(t);
                  },
                };
                return c;
              },
            };
          },
        };
        function Nr(e, t, r, i) {
          return (
            (r = r || {}),
            (i = i || ""),
            n(e).forEach((n) => {
              if (c(t, n)) {
                var o = e[n],
                  A = t[n];
                if ("object" == typeof o && "object" == typeof A && o && A) {
                  const e = T(o);
                  e !== T(A)
                    ? (r[i + n] = t[n])
                    : "Object" === e
                    ? Nr(o, A, r, i + n + ".")
                    : o !== A && (r[i + n] = t[n]);
                } else o !== A && (r[i + n] = t[n]);
              } else r[i + n] = void 0;
            }),
            n(t).forEach((n) => {
              c(e, n) || (r[i + n] = t[n]);
            }),
            r
          );
        }
        const _r = {
          stack: "dbcore",
          name: "HooksMiddleware",
          level: 2,
          create: (e) => ({
            ...e,
            table(t) {
              const r = e.table(t),
                { primaryKey: i } = r.schema,
                n = {
                  ...r,
                  mutate(e) {
                    const n = Ne.trans,
                      {
                        deleting: o,
                        creating: A,
                        updating: a,
                      } = n.table(t).hook;
                    switch (e.type) {
                      case "add":
                        if (A.fire === ie) break;
                        return n._promise("readwrite", () => s(e), !0);
                      case "put":
                        if (A.fire === ie && a.fire === ie) break;
                        return n._promise("readwrite", () => s(e), !0);
                      case "delete":
                        if (o.fire === ie) break;
                        return n._promise("readwrite", () => s(e), !0);
                      case "deleteRange":
                        if (o.fire === ie) break;
                        return n._promise(
                          "readwrite",
                          () =>
                            (function (e) {
                              return g(e.trans, e.range, 1e4);
                            })(e),
                          !0
                        );
                    }
                    return r.mutate(e);
                    function s(e) {
                      const t = Ne.trans,
                        n =
                          e.keys ||
                          (function (e, t) {
                            return "delete" === t.type
                              ? t.keys
                              : t.keys || t.values.map(e.extractKey);
                          })(i, e);
                      if (!n) throw new Error("Keys missing");
                      return (
                        "delete" !==
                          (e =
                            "add" === e.type || "put" === e.type
                              ? { ...e, keys: n }
                              : { ...e }).type && (e.values = [...e.values]),
                        e.keys && (e.keys = [...e.keys]),
                        (function (e, t, r) {
                          return "add" === t.type
                            ? Promise.resolve([])
                            : e.getMany({
                                trans: t.trans,
                                keys: r,
                                cache: "immutable",
                              });
                        })(r, e, n).then((s) => {
                          const g = n.map((r, n) => {
                            const g = s[n],
                              l = { onerror: null, onsuccess: null };
                            if ("delete" === e.type) o.fire.call(l, r, g, t);
                            else if ("add" === e.type || void 0 === g) {
                              const o = A.fire.call(l, r, e.values[n], t);
                              null == r &&
                                null != o &&
                                ((r = o),
                                (e.keys[n] = r),
                                i.outbound || Q(e.values[n], i.keyPath, r));
                            } else {
                              const i = Nr(g, e.values[n]),
                                o = a.fire.call(l, i, r, g, t);
                              if (o) {
                                const t = e.values[n];
                                Object.keys(o).forEach((e) => {
                                  c(t, e) ? (t[e] = o[e]) : Q(t, e, o[e]);
                                });
                              }
                            }
                            return l;
                          });
                          return r
                            .mutate(e)
                            .then(
                              ({
                                failures: t,
                                results: r,
                                numFailures: i,
                                lastResult: o,
                              }) => {
                                for (let i = 0; i < n.length; ++i) {
                                  const o = r ? r[i] : n[i],
                                    A = g[i];
                                  null == o
                                    ? A.onerror && A.onerror(t[i])
                                    : A.onsuccess &&
                                      A.onsuccess(
                                        "put" === e.type && s[i]
                                          ? e.values[i]
                                          : o
                                      );
                                }
                                return {
                                  failures: t,
                                  results: r,
                                  numFailures: i,
                                  lastResult: o,
                                };
                              }
                            )
                            .catch(
                              (e) => (
                                g.forEach((t) => t.onerror && t.onerror(e)),
                                Promise.reject(e)
                              )
                            );
                        })
                      );
                    }
                    function g(e, t, n) {
                      return r
                        .query({
                          trans: e,
                          values: !1,
                          query: { index: i, range: t },
                          limit: n,
                        })
                        .then(({ result: r }) =>
                          s({ type: "delete", keys: r, trans: e }).then((i) =>
                            i.numFailures > 0
                              ? Promise.reject(i.failures[0])
                              : r.length < n
                              ? {
                                  failures: [],
                                  numFailures: 0,
                                  lastResult: void 0,
                                }
                              : g(
                                  e,
                                  {
                                    ...t,
                                    lower: r[r.length - 1],
                                    lowerOpen: !0,
                                  },
                                  n
                                )
                          )
                        );
                    }
                  },
                };
              return n;
            },
          }),
        };
        function Dr(e, t, r) {
          try {
            if (!t) return null;
            if (t.keys.length < e.length) return null;
            const i = [];
            for (let n = 0, o = 0; n < t.keys.length && o < e.length; ++n)
              0 === Rt(t.keys[n], e[o]) &&
                (i.push(r ? _(t.values[n]) : t.values[n]), ++o);
            return i.length === e.length ? i : null;
          } catch (e) {
            return null;
          }
        }
        const Or = {
          stack: "dbcore",
          level: -1,
          create: (e) => ({
            table: (t) => {
              const r = e.table(t);
              return {
                ...r,
                getMany: (e) => {
                  if (!e.cache) return r.getMany(e);
                  const t = Dr(e.keys, e.trans._cache, "clone" === e.cache);
                  return t
                    ? Te.resolve(t)
                    : r
                        .getMany(e)
                        .then(
                          (t) => (
                            (e.trans._cache = {
                              keys: e.keys,
                              values: "clone" === e.cache ? _(t) : t,
                            }),
                            t
                          )
                        );
                },
                mutate: (e) => (
                  "add" !== e.type && (e.trans._cache = null), r.mutate(e)
                ),
              };
            },
          }),
        };
        function Tr(e) {
          return !("from" in e);
        }
        const Pr = function (e, t) {
          if (!this) {
            const t = new Pr();
            return e && "d" in e && A(t, e), t;
          }
          A(
            this,
            arguments.length
              ? { d: 1, from: e, to: arguments.length > 1 ? t : e }
              : { d: 0 }
          );
        };
        function xr(e, t, r) {
          const i = Rt(t, r);
          if (isNaN(i)) return;
          if (i > 0) throw RangeError();
          if (Tr(e)) return A(e, { from: t, to: r, d: 1 });
          const n = e.l,
            o = e.r;
          if (Rt(r, e.from) < 0)
            return (
              n
                ? xr(n, t, r)
                : (e.l = { from: t, to: r, d: 1, l: null, r: null }),
              Fr(e)
            );
          if (Rt(t, e.to) > 0)
            return (
              o
                ? xr(o, t, r)
                : (e.r = { from: t, to: r, d: 1, l: null, r: null }),
              Fr(e)
            );
          Rt(t, e.from) < 0 &&
            ((e.from = t), (e.l = null), (e.d = o ? o.d + 1 : 1)),
            Rt(r, e.to) > 0 &&
              ((e.to = r), (e.r = null), (e.d = e.l ? e.l.d + 1 : 1));
          const a = !e.r;
          n && !e.l && Rr(e, n), o && a && Rr(e, o);
        }
        function Rr(e, t) {
          Tr(t) ||
            (function e(t, { from: r, to: i, l: n, r: o }) {
              xr(t, r, i), n && e(t, n), o && e(t, o);
            })(e, t);
        }
        function Ur(e) {
          let t = Tr(e) ? null : { s: 0, n: e };
          return {
            next(e) {
              const r = arguments.length > 0;
              for (; t; )
                switch (t.s) {
                  case 0:
                    if (((t.s = 1), r))
                      for (; t.n.l && Rt(e, t.n.from) < 0; )
                        t = { up: t, n: t.n.l, s: 1 };
                    else for (; t.n.l; ) t = { up: t, n: t.n.l, s: 1 };
                  case 1:
                    if (((t.s = 2), !r || Rt(e, t.n.to) <= 0))
                      return { value: t.n, done: !1 };
                  case 2:
                    if (t.n.r) {
                      (t.s = 3), (t = { up: t, n: t.n.r, s: 0 });
                      continue;
                    }
                  case 3:
                    t = t.up;
                }
              return { done: !0 };
            },
          };
        }
        function Fr(e) {
          var t, r;
          const i =
              ((null === (t = e.r) || void 0 === t ? void 0 : t.d) || 0) -
              ((null === (r = e.l) || void 0 === r ? void 0 : r.d) || 0),
            n = i > 1 ? "r" : i < -1 ? "l" : "";
          if (n) {
            const t = "r" === n ? "l" : "r",
              r = { ...e },
              i = e[n];
            (e.from = i.from),
              (e.to = i.to),
              (e[n] = i[n]),
              (r[n] = i[t]),
              (e[t] = r),
              (r.d = Hr(r));
          }
          e.d = Hr(e);
        }
        function Hr({ r: e, l: t }) {
          return (e ? (t ? Math.max(e.d, t.d) : e.d) : t ? t.d : 0) + 1;
        }
        g(Pr.prototype, {
          add(e) {
            return Rr(this, e), this;
          },
          addKey(e) {
            return xr(this, e, e), this;
          },
          addKeys(e) {
            return e.forEach((e) => xr(this, e, e)), this;
          },
          [P]() {
            return Ur(this);
          },
        });
        const Mr = {
          stack: "dbcore",
          level: 0,
          create: (e) => {
            const t = e.schema.name,
              r = new Pr(e.MIN_KEY, e.MAX_KEY);
            return {
              ...e,
              table: (i) => {
                const A = e.table(i),
                  { schema: a } = A,
                  { primaryKey: s } = a,
                  { extractKey: c, outbound: g } = s,
                  l = {
                    ...A,
                    mutate: (e) => {
                      const n = e.trans,
                        s = n.mutatedParts || (n.mutatedParts = {}),
                        c = (e) => {
                          const r = `idb://${t}/${i}/${e}`;
                          return s[r] || (s[r] = new Pr());
                        },
                        g = c(""),
                        l = c(":dels"),
                        { type: u } = e;
                      let [h, I] =
                        "deleteRange" === e.type
                          ? [e.range]
                          : "delete" === e.type
                          ? [e.keys]
                          : e.values.length < 50
                          ? [[], e.values]
                          : [];
                      const p = e.trans._cache;
                      return A.mutate(e).then((e) => {
                        if (o(h)) {
                          "delete" !== u && (h = e.results), g.addKeys(h);
                          const t = Dr(h, p);
                          t || "add" === u || l.addKeys(h),
                            (t || I) &&
                              (function (e, t, r, i) {
                                t.indexes.forEach(function (t) {
                                  const n = e(t.name || "");
                                  function A(e) {
                                    return null != e ? t.extractKey(e) : null;
                                  }
                                  const a = (e) =>
                                    t.multiEntry && o(e)
                                      ? e.forEach((e) => n.addKey(e))
                                      : n.addKey(e);
                                  (r || i).forEach((e, t) => {
                                    const n = r && A(r[t]),
                                      o = i && A(i[t]);
                                    0 !== Rt(n, o) &&
                                      (null != n && a(n), null != o && a(o));
                                  });
                                });
                              })(c, a, t, I);
                        } else if (h) {
                          const e = { from: h.lower, to: h.upper };
                          l.add(e), g.add(e);
                        } else
                          g.add(r),
                            l.add(r),
                            a.indexes.forEach((e) => c(e.name).add(r));
                        return e;
                      });
                    },
                  },
                  u = ({ query: { index: t, range: r } }) => {
                    var i, n;
                    return [
                      t,
                      new Pr(
                        null !== (i = r.lower) && void 0 !== i ? i : e.MIN_KEY,
                        null !== (n = r.upper) && void 0 !== n ? n : e.MAX_KEY
                      ),
                    ];
                  },
                  h = {
                    get: (e) => [s, new Pr(e.key)],
                    getMany: (e) => [s, new Pr().addKeys(e.keys)],
                    count: u,
                    query: u,
                    openCursor: u,
                  };
                return (
                  n(h).forEach((e) => {
                    l[e] = function (n) {
                      const { subscr: o } = Ne;
                      if (o) {
                        const a = (e) => {
                            const r = `idb://${t}/${i}/${e}`;
                            return o[r] || (o[r] = new Pr());
                          },
                          s = a(""),
                          l = a(":dels"),
                          [u, I] = h[e](n);
                        if ((a(u.name || "").add(I), !u.isPrimaryKey)) {
                          if ("count" !== e) {
                            const t =
                              "query" === e &&
                              g &&
                              n.values &&
                              A.query({ ...n, values: !1 });
                            return A[e].apply(this, arguments).then((r) => {
                              if ("query" === e) {
                                if (g && n.values)
                                  return t.then(
                                    ({ result: e }) => (s.addKeys(e), r)
                                  );
                                const e = n.values ? r.result.map(c) : r.result;
                                n.values ? s.addKeys(e) : l.addKeys(e);
                              } else if ("openCursor" === e) {
                                const e = r,
                                  t = n.values;
                                return (
                                  e &&
                                  Object.create(e, {
                                    key: {
                                      get: () => (
                                        l.addKey(e.primaryKey), e.key
                                      ),
                                    },
                                    primaryKey: {
                                      get() {
                                        const t = e.primaryKey;
                                        return l.addKey(t), t;
                                      },
                                    },
                                    value: {
                                      get: () => (
                                        t && s.addKey(e.primaryKey), e.value
                                      ),
                                    },
                                  })
                                );
                              }
                              return r;
                            });
                          }
                          l.add(r);
                        }
                      }
                      return A[e].apply(this, arguments);
                    };
                  }),
                  l
                );
              },
            };
          },
        };
        class Gr {
          constructor(e, t) {
            (this._middlewares = {}), (this.verno = 0);
            const r = Gr.dependencies;
            (this._options = t =
              {
                addons: Gr.addons,
                autoOpen: !0,
                indexedDB: r.indexedDB,
                IDBKeyRange: r.IDBKeyRange,
                ...t,
              }),
              (this._deps = {
                indexedDB: t.indexedDB,
                IDBKeyRange: t.IDBKeyRange,
              });
            const { addons: i } = t;
            (this._dbSchema = {}),
              (this._versions = []),
              (this._storeNames = []),
              (this._allTables = {}),
              (this.idbdb = null),
              (this._novip = this);
            const n = {
              dbOpenError: null,
              isBeingOpened: !1,
              onReadyBeingFired: null,
              openComplete: !1,
              dbReadyResolve: ie,
              dbReadyPromise: null,
              cancelOpen: ie,
              openCanceller: null,
              autoSchema: !0,
              PR1398_maxLoop: 3,
            };
            var o;
            (n.dbReadyPromise = new Te((e) => {
              n.dbReadyResolve = e;
            })),
              (n.openCanceller = new Te((e, t) => {
                n.cancelOpen = t;
              })),
              (this._state = n),
              (this.name = e),
              (this.on = bt(
                this,
                "populate",
                "blocked",
                "versionchange",
                "close",
                { ready: [le, ie] }
              )),
              (this.on.ready.subscribe = C(
                this.on.ready.subscribe,
                (e) => (t, r) => {
                  Gr.vip(() => {
                    const i = this._state;
                    if (i.openComplete)
                      i.dbOpenError || Te.resolve().then(t), r && e(t);
                    else if (i.onReadyBeingFired)
                      i.onReadyBeingFired.push(t), r && e(t);
                    else {
                      e(t);
                      const i = this;
                      r ||
                        e(function e() {
                          i.on.ready.unsubscribe(t), i.on.ready.unsubscribe(e);
                        });
                    }
                  });
                }
              )),
              (this.Collection =
                ((o = this),
                kt(Ht.prototype, function (e, t) {
                  this.db = o;
                  let r = vt,
                    i = null;
                  if (t)
                    try {
                      r = t();
                    } catch (e) {
                      i = e;
                    }
                  const n = e._ctx,
                    A = n.table,
                    a = A.hook.reading.fire;
                  this._ctx = {
                    table: A,
                    index: n.index,
                    isPrimKey:
                      !n.index ||
                      (A.schema.primKey.keyPath &&
                        n.index === A.schema.primKey.name),
                    range: r,
                    keysOnly: !1,
                    dir: "next",
                    unique: "",
                    algorithm: null,
                    filter: null,
                    replayFilter: null,
                    justLimit: !0,
                    isMatch: null,
                    offset: 0,
                    limit: 1 / 0,
                    error: i,
                    or: n.or,
                    valueMapper: a !== ne ? a : null,
                  };
                }))),
              (this.Table = (function (e) {
                return kt(wt.prototype, function (t, r, i) {
                  (this.db = e),
                    (this._tx = i),
                    (this.name = t),
                    (this.schema = r),
                    (this.hook = e._allTables[t]
                      ? e._allTables[t].hook
                      : bt(null, {
                          creating: [ae, ie],
                          reading: [oe, ne],
                          updating: [ce, ie],
                          deleting: [se, ie],
                        }));
                });
              })(this)),
              (this.Transaction = (function (e) {
                return kt($t.prototype, function (t, r, i, n, o) {
                  (this.db = e),
                    (this.mode = t),
                    (this.storeNames = r),
                    (this.schema = i),
                    (this.chromeTransactionDurability = n),
                    (this.idbtrans = null),
                    (this.on = bt(this, "complete", "error", "abort")),
                    (this.parent = o || null),
                    (this.active = !0),
                    (this._reculock = 0),
                    (this._blockedFuncs = []),
                    (this._resolve = null),
                    (this._reject = null),
                    (this._waitingFor = null),
                    (this._waitingQueue = null),
                    (this._spinCount = 0),
                    (this._completion = new Te((e, t) => {
                      (this._resolve = e), (this._reject = t);
                    })),
                    this._completion.then(
                      () => {
                        (this.active = !1), this.on.complete.fire();
                      },
                      (e) => {
                        var t = this.active;
                        return (
                          (this.active = !1),
                          this.on.error.fire(e),
                          this.parent
                            ? this.parent._reject(e)
                            : t && this.idbtrans && this.idbtrans.abort(),
                          It(e)
                        );
                      }
                    );
                });
              })(this)),
              (this.Version = (function (e) {
                return kt(Br.prototype, function (t) {
                  (this.db = e),
                    (this._cfg = {
                      version: t,
                      storesSource: null,
                      dbschema: {},
                      tables: {},
                      contentUpgrade: null,
                    });
                });
              })(this)),
              (this.WhereClause = (function (e) {
                return kt(Vt.prototype, function (t, r, i) {
                  (this.db = e),
                    (this._ctx = {
                      table: t,
                      index: ":id" === r ? null : r,
                      or: i,
                    });
                  const n = e._deps.indexedDB;
                  if (!n) throw new ee.MissingAPI();
                  (this._cmp = this._ascending = n.cmp.bind(n)),
                    (this._descending = (e, t) => n.cmp(t, e)),
                    (this._max = (e, t) => (n.cmp(e, t) > 0 ? e : t)),
                    (this._min = (e, t) => (n.cmp(e, t) < 0 ? e : t)),
                    (this._IDBKeyRange = e._deps.IDBKeyRange);
                });
              })(this)),
              this.on("versionchange", (e) => {
                e.newVersion > 0
                  ? console.warn(
                      `Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`
                    )
                  : console.warn(
                      `Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`
                    ),
                  this.close();
              }),
              this.on("blocked", (e) => {
                !e.newVersion || e.newVersion < e.oldVersion
                  ? console.warn(`Dexie.delete('${this.name}') was blocked`)
                  : console.warn(
                      `Upgrade '${
                        this.name
                      }' blocked by other connection holding version ${
                        e.oldVersion / 10
                      }`
                    );
              }),
              (this._maxKey = ir(t.IDBKeyRange)),
              (this._createTransaction = (e, t, r, i) =>
                new this.Transaction(
                  e,
                  t,
                  r,
                  this._options.chromeTransactionDurability,
                  i
                )),
              (this._fireOnBlocked = (e) => {
                this.on("blocked").fire(e),
                  Ct.filter(
                    (e) =>
                      e.name === this.name && e !== this && !e._state.vcFired
                  ).map((t) => t.on("versionchange").fire(e));
              }),
              this.use(kr),
              this.use(_r),
              this.use(Mr),
              this.use(Or),
              (this.vip = Object.create(this, { _vip: { value: !0 } })),
              i.forEach((e) => e(this));
          }
          version(e) {
            if (isNaN(e) || e < 0.1)
              throw new ee.Type("Given version is not a positive number");
            if (
              ((e = Math.round(10 * e) / 10),
              this.idbdb || this._state.isBeingOpened)
            )
              throw new ee.Schema("Cannot add version when database is open");
            this.verno = Math.max(this.verno, e);
            const t = this._versions;
            var r = t.filter((t) => t._cfg.version === e)[0];
            return (
              r ||
              ((r = new this.Version(e)),
              t.push(r),
              t.sort(ur),
              r.stores({}),
              (this._state.autoSchema = !1),
              r)
            );
          }
          _whenReady(e) {
            return this.idbdb &&
              (this._state.openComplete || Ne.letThrough || this._vip)
              ? e()
              : new Te((e, t) => {
                  if (this._state.openComplete)
                    return t(new ee.DatabaseClosed(this._state.dbOpenError));
                  if (!this._state.isBeingOpened) {
                    if (!this._options.autoOpen)
                      return void t(new ee.DatabaseClosed());
                    this.open().catch(ie);
                  }
                  this._state.dbReadyPromise.then(e, t);
                }).then(e);
          }
          use({ stack: e, create: t, level: r, name: i }) {
            i && this.unuse({ stack: e, name: i });
            const n = this._middlewares[e] || (this._middlewares[e] = []);
            return (
              n.push({
                stack: e,
                create: t,
                level: null == r ? 10 : r,
                name: i,
              }),
              n.sort((e, t) => e.level - t.level),
              this
            );
          }
          unuse({ stack: e, name: t, create: r }) {
            return (
              e &&
                this._middlewares[e] &&
                (this._middlewares[e] = this._middlewares[e].filter((e) =>
                  r ? e.create !== r : !!t && e.name !== t
                )),
              this
            );
          }
          open() {
            return (function (e) {
              const t = e._state,
                { indexedDB: r } = e._deps;
              if (t.isBeingOpened || e.idbdb)
                return t.dbReadyPromise.then(() =>
                  t.dbOpenError ? It(t.dbOpenError) : e
                );
              H && (t.openCanceller._stackHolder = K()),
                (t.isBeingOpened = !0),
                (t.dbOpenError = null),
                (t.openComplete = !1);
              const i = t.openCanceller;
              function o() {
                if (t.openCanceller !== i)
                  throw new ee.DatabaseClosed("db.open() was cancelled");
              }
              let A = t.dbReadyResolve,
                a = null,
                s = !1;
              return Te.race([
                i,
                ("undefined" == typeof navigator ? Te.resolve() : Qr()).then(
                  () =>
                    new Te((i, A) => {
                      if ((o(), !r)) throw new ee.MissingAPI();
                      const c = e.name,
                        g = t.autoSchema
                          ? r.open(c)
                          : r.open(c, Math.round(10 * e.verno));
                      if (!g) throw new ee.MissingAPI();
                      (g.onerror = Wt(A)),
                        (g.onblocked = ze(e._fireOnBlocked)),
                        (g.onupgradeneeded = ze((i) => {
                          if (
                            ((a = g.transaction),
                            t.autoSchema && !e._options.allowEmptyDB)
                          ) {
                            (g.onerror = Xt), a.abort(), g.result.close();
                            const e = r.deleteDatabase(c);
                            e.onsuccess = e.onerror = ze(() => {
                              A(
                                new ee.NoSuchDatabase(
                                  `Database ${c} doesnt exist`
                                )
                              );
                            });
                          } else {
                            a.onerror = Wt(A);
                            var n =
                              i.oldVersion > Math.pow(2, 62) ? 0 : i.oldVersion;
                            (s = n < 1),
                              (e._novip.idbdb = g.result),
                              hr(e, n / 10, a, A);
                          }
                        }, A)),
                        (g.onsuccess = ze(() => {
                          a = null;
                          const r = (e._novip.idbdb = g.result),
                            o = f(r.objectStoreNames);
                          if (o.length > 0)
                            try {
                              const i = r.transaction(
                                1 === (A = o).length ? A[0] : A,
                                "readonly"
                              );
                              t.autoSchema
                                ? (function ({ _novip: e }, t, r) {
                                    e.verno = t.version / 10;
                                    const i = (e._dbSchema = fr(0, t, r));
                                    (e._storeNames = f(t.objectStoreNames, 0)),
                                      gr(e, [e._allTables], n(i), i);
                                  })(e, r, i)
                                : (Cr(e, e._dbSchema, i),
                                  (function (e, t) {
                                    const r = Ir(
                                      fr(0, e.idbdb, t),
                                      e._dbSchema
                                    );
                                    return !(
                                      r.add.length ||
                                      r.change.some(
                                        (e) => e.add.length || e.change.length
                                      )
                                    );
                                  })(e, i) ||
                                    console.warn(
                                      "Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail."
                                    )),
                                cr(e, i);
                            } catch (e) {}
                          var A;
                          Ct.push(e),
                            (r.onversionchange = ze((r) => {
                              (t.vcFired = !0), e.on("versionchange").fire(r);
                            })),
                            (r.onclose = ze((t) => {
                              e.on("close").fire(t);
                            })),
                            s &&
                              (function ({ indexedDB: e, IDBKeyRange: t }, r) {
                                !yr(e) &&
                                  "__dbnames" !== r &&
                                  Er(e, t).put({ name: r }).catch(ie);
                              })(e._deps, c),
                            i();
                        }, A));
                    })
                ),
              ])
                .then(
                  () => (
                    o(),
                    (t.onReadyBeingFired = []),
                    Te.resolve(mr(() => e.on.ready.fire(e.vip))).then(
                      function r() {
                        if (t.onReadyBeingFired.length > 0) {
                          let i = t.onReadyBeingFired.reduce(le, ie);
                          return (
                            (t.onReadyBeingFired = []),
                            Te.resolve(mr(() => i(e.vip))).then(r)
                          );
                        }
                      }
                    )
                  )
                )
                .finally(() => {
                  (t.onReadyBeingFired = null), (t.isBeingOpened = !1);
                })
                .then(() => e)
                .catch((r) => {
                  t.dbOpenError = r;
                  try {
                    a && a.abort();
                  } catch (e) {}
                  return i === t.openCanceller && e._close(), It(r);
                })
                .finally(() => {
                  (t.openComplete = !0), A();
                });
            })(this);
          }
          _close() {
            const e = this._state,
              t = Ct.indexOf(this);
            if ((t >= 0 && Ct.splice(t, 1), this.idbdb)) {
              try {
                this.idbdb.close();
              } catch (e) {}
              this._novip.idbdb = null;
            }
            (e.dbReadyPromise = new Te((t) => {
              e.dbReadyResolve = t;
            })),
              (e.openCanceller = new Te((t, r) => {
                e.cancelOpen = r;
              }));
          }
          close() {
            this._close();
            const e = this._state;
            (this._options.autoOpen = !1),
              (e.dbOpenError = new ee.DatabaseClosed()),
              e.isBeingOpened && e.cancelOpen(e.dbOpenError);
          }
          delete() {
            const e = arguments.length > 0,
              t = this._state;
            return new Te((r, i) => {
              const n = () => {
                this.close();
                var e = this._deps.indexedDB.deleteDatabase(this.name);
                (e.onsuccess = ze(() => {
                  !(function ({ indexedDB: e, IDBKeyRange: t }, r) {
                    !yr(e) && "__dbnames" !== r && Er(e, t).delete(r).catch(ie);
                  })(this._deps, this.name),
                    r();
                })),
                  (e.onerror = Wt(i)),
                  (e.onblocked = this._fireOnBlocked);
              };
              if (e)
                throw new ee.InvalidArgument(
                  "Arguments not allowed in db.delete()"
                );
              t.isBeingOpened ? t.dbReadyPromise.then(n) : n();
            });
          }
          backendDB() {
            return this.idbdb;
          }
          isOpen() {
            return null !== this.idbdb;
          }
          hasBeenClosed() {
            const e = this._state.dbOpenError;
            return e && "DatabaseClosed" === e.name;
          }
          hasFailed() {
            return null !== this._state.dbOpenError;
          }
          dynamicallyOpened() {
            return this._state.autoSchema;
          }
          get tables() {
            return n(this._allTables).map((e) => this._allTables[e]);
          }
          transaction() {
            const e = Sr.apply(this, arguments);
            return this._transaction.apply(this, e);
          }
          _transaction(e, t, r) {
            let i = Ne.trans;
            (i && i.db === this && -1 === e.indexOf("!")) || (i = null);
            const n = -1 !== e.indexOf("?");
            let o, A;
            e = e.replace("!", "").replace("?", "");
            try {
              if (
                ((A = t.map((e) => {
                  var t = e instanceof this.Table ? e.name : e;
                  if ("string" != typeof t)
                    throw new TypeError(
                      "Invalid table argument to Dexie.transaction(). Only Table or String are allowed"
                    );
                  return t;
                })),
                "r" == e || "readonly" === e)
              )
                o = "readonly";
              else {
                if ("rw" != e && "readwrite" != e)
                  throw new ee.InvalidArgument(
                    "Invalid transaction mode: " + e
                  );
                o = "readwrite";
              }
              if (i) {
                if ("readonly" === i.mode && "readwrite" === o) {
                  if (!n)
                    throw new ee.SubTransaction(
                      "Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY"
                    );
                  i = null;
                }
                i &&
                  A.forEach((e) => {
                    if (i && -1 === i.storeNames.indexOf(e)) {
                      if (!n)
                        throw new ee.SubTransaction(
                          "Table " + e + " not included in parent transaction."
                        );
                      i = null;
                    }
                  }),
                  n && i && !i.active && (i = null);
              }
            } catch (e) {
              return i
                ? i._promise(null, (t, r) => {
                    r(e);
                  })
                : It(e);
            }
            const a = wr.bind(null, this, o, A, i, r);
            return i
              ? i._promise(o, a, "lock")
              : Ne.trans
              ? ct(Ne.transless, () => this._whenReady(a))
              : this._whenReady(a);
          }
          table(e) {
            if (!c(this._allTables, e))
              throw new ee.InvalidTable(`Table ${e} does not exist`);
            return this._allTables[e];
          }
        }
        const Lr =
          "undefined" != typeof Symbol && "observable" in Symbol
            ? Symbol.observable
            : "@@observable";
        class Kr {
          constructor(e) {
            this._subscribe = e;
          }
          subscribe(e, t, r) {
            return this._subscribe(
              e && "function" != typeof e
                ? e
                : { next: e, error: t, complete: r }
            );
          }
          [Lr]() {
            return this;
          }
        }
        function Yr(e, t) {
          return (
            n(t).forEach((r) => {
              Rr(e[r] || (e[r] = new Pr()), t[r]);
            }),
            e
          );
        }
        let qr;
        try {
          qr = {
            indexedDB:
              i.indexedDB ||
              i.mozIndexedDB ||
              i.webkitIndexedDB ||
              i.msIndexedDB,
            IDBKeyRange: i.IDBKeyRange || i.webkitIDBKeyRange,
          };
        } catch (i) {
          qr = { indexedDB: null, IDBKeyRange: null };
        }
        const Jr = Gr;
        function jr(e) {
          let t = zr;
          try {
            (zr = !0), Zt.storagemutated.fire(e);
          } finally {
            zr = t;
          }
        }
        g(Jr, {
          ...re,
          delete: (e) => new Jr(e, { addons: [] }).delete(),
          exists: (e) =>
            new Jr(e, { addons: [] })
              .open()
              .then((e) => (e.close(), !0))
              .catch("NoSuchDatabaseError", () => !1),
          getDatabaseNames(e) {
            try {
              return (function ({ indexedDB: e, IDBKeyRange: t }) {
                return yr(e)
                  ? Promise.resolve(e.databases()).then((e) =>
                      e.map((e) => e.name).filter((e) => "__dbnames" !== e)
                    )
                  : Er(e, t).toCollection().primaryKeys();
              })(Jr.dependencies).then(e);
            } catch (e) {
              return It(new ee.MissingAPI());
            }
          },
          defineClass: () =>
            function (e) {
              A(this, e);
            },
          ignoreTransaction: (e) => (Ne.trans ? ct(Ne.transless, e) : e()),
          vip: mr,
          async: function (e) {
            return function () {
              try {
                var t = vr(e.apply(this, arguments));
                return t && "function" == typeof t.then ? t : Te.resolve(t);
              } catch (e) {
                return It(e);
              }
            };
          },
          spawn: function (e, t, r) {
            try {
              var i = vr(e.apply(r, t || []));
              return i && "function" == typeof i.then ? i : Te.resolve(i);
            } catch (e) {
              return It(e);
            }
          },
          currentTransaction: { get: () => Ne.trans || null },
          waitFor: function (e, t) {
            const r = Te.resolve(
              "function" == typeof e ? Jr.ignoreTransaction(e) : e
            ).timeout(t || 6e4);
            return Ne.trans ? Ne.trans.waitFor(r) : r;
          },
          Promise: Te,
          debug: {
            get: () => H,
            set: (e) => {
              M(e, "dexie" === e ? () => !0 : mt);
            },
          },
          derive: h,
          extend: A,
          props: g,
          override: C,
          Events: bt,
          on: Zt,
          liveQuery: function (e) {
            return new Kr((t) => {
              const r = F(e);
              let i = !1,
                o = {},
                A = {};
              const a = {
                get closed() {
                  return i;
                },
                unsubscribe: () => {
                  (i = !0), Zt.storagemutated.unsubscribe(l);
                },
              };
              t.start && t.start(a);
              let s = !1,
                c = !1;
              function g() {
                return n(A).some(
                  (e) =>
                    o[e] &&
                    (function (e, t) {
                      const r = Ur(t);
                      let i = r.next();
                      if (i.done) return !1;
                      let n = i.value;
                      const o = Ur(e);
                      let A = o.next(n.from),
                        a = A.value;
                      for (; !i.done && !A.done; ) {
                        if (Rt(a.from, n.to) <= 0 && Rt(a.to, n.from) >= 0)
                          return !0;
                        Rt(n.from, a.from) < 0
                          ? (n = (i = r.next(a.from)).value)
                          : (a = (A = o.next(n.from)).value);
                      }
                      return !1;
                    })(o[e], A[e])
                );
              }
              const l = (e) => {
                  Yr(o, e), g() && u();
                },
                u = () => {
                  if (s || i) return;
                  o = {};
                  const n = {},
                    h = (function (t) {
                      r && rt();
                      const i = () => tt(e, { subscr: t, trans: null }),
                        n = Ne.trans ? ct(Ne.transless, i) : i();
                      return r && n.then(it, it), n;
                    })(n);
                  c || (Zt("storagemutated", l), (c = !0)),
                    (s = !0),
                    Promise.resolve(h).then(
                      (e) => {
                        (s = !1),
                          i ||
                            (g()
                              ? u()
                              : ((o = {}), (A = n), t.next && t.next(e)));
                      },
                      (e) => {
                        (s = !1), t.error && t.error(e), a.unsubscribe();
                      }
                    );
                };
              return u(), a;
            });
          },
          extendObservabilitySet: Yr,
          getByKeyPath: m,
          setByKeyPath: Q,
          delByKeyPath: function (e, t) {
            "string" == typeof t
              ? Q(e, t, void 0)
              : "length" in t &&
                [].map.call(t, function (t) {
                  Q(e, t, void 0);
                });
          },
          shallowClone: v,
          deepClone: _,
          getObjectDiff: Nr,
          cmp: Rt,
          asap: E,
          minKey: -1 / 0,
          addons: [],
          connections: Ct,
          errnames: Z,
          dependencies: qr,
          semVer: "3.2.2",
          version: "3.2.2"
            .split(".")
            .map((e) => parseInt(e))
            .reduce((e, t, r) => e + t / Math.pow(10, 2 * r)),
        }),
          (Jr.maxKey = ir(Jr.dependencies.IDBKeyRange)),
          "undefined" != typeof dispatchEvent &&
            "undefined" != typeof addEventListener &&
            (Zt("storagemutated", (e) => {
              if (!zr) {
                let t;
                Bt
                  ? ((t = document.createEvent("CustomEvent")),
                    t.initCustomEvent("x-storagemutated-1", !0, !0, e))
                  : (t = new CustomEvent("x-storagemutated-1", { detail: e })),
                  (zr = !0),
                  dispatchEvent(t),
                  (zr = !1);
              }
            }),
            addEventListener("x-storagemutated-1", ({ detail: e }) => {
              zr || jr(e);
            }));
        let zr = !1;
        if ("undefined" != typeof BroadcastChannel) {
          const e = new BroadcastChannel("x-storagemutated-1");
          Zt("storagemutated", (t) => {
            zr || e.postMessage(t);
          }),
            (e.onmessage = (e) => {
              e.data && jr(e.data);
            });
        } else if (
          "undefined" != typeof self &&
          "undefined" != typeof navigator
        ) {
          Zt("storagemutated", (e) => {
            try {
              zr ||
                ("undefined" != typeof localStorage &&
                  localStorage.setItem(
                    "x-storagemutated-1",
                    JSON.stringify({ trig: Math.random(), changedParts: e })
                  ),
                "object" == typeof self.clients &&
                  [
                    ...self.clients.matchAll({ includeUncontrolled: !0 }),
                  ].forEach((t) =>
                    t.postMessage({
                      type: "x-storagemutated-1",
                      changedParts: e,
                    })
                  ));
            } catch (e) {}
          }),
            "undefined" != typeof addEventListener &&
              addEventListener("storage", (e) => {
                if ("x-storagemutated-1" === e.key) {
                  const t = JSON.parse(e.newValue);
                  t && jr(t.changedParts);
                }
              });
          const e = self.document && navigator.serviceWorker;
          e &&
            e.addEventListener("message", function ({ data: e }) {
              e && "x-storagemutated-1" === e.type && jr(e.changedParts);
            });
        }
        (Te.rejectionMapper = function (e, t) {
          if (
            !e ||
            e instanceof z ||
            e instanceof TypeError ||
            e instanceof SyntaxError ||
            !e.name ||
            !te[e.name]
          )
            return e;
          var r = new te[e.name](t || e.message, e);
          return (
            "stack" in e &&
              u(r, "stack", {
                get: function () {
                  return this.inner.stack;
                },
              }),
            r
          );
        }),
          M(H, mt);
      },
      33654: (e, t, r) => {
        "use strict";
        function i(e) {
          let t = e.length;
          for (; --t >= 0; ) e[t] = 0;
        }
        r.d(t, { Wt: () => mr });
        const n = new Uint8Array([
            0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,
            4, 5, 5, 5, 5, 0,
          ]),
          o = new Uint8Array([
            0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
            10, 10, 11, 11, 12, 12, 13, 13,
          ]),
          A = new Uint8Array([
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7,
          ]),
          a = new Uint8Array([
            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
          ]),
          s = new Array(576);
        i(s);
        const c = new Array(60);
        i(c);
        const g = new Array(512);
        i(g);
        const l = new Array(256);
        i(l);
        const u = new Array(29);
        i(u);
        const h = new Array(30);
        function I(e, t, r, i, n) {
          (this.static_tree = e),
            (this.extra_bits = t),
            (this.extra_base = r),
            (this.elems = i),
            (this.max_length = n),
            (this.has_stree = e && e.length);
        }
        let p, d, f;
        function C(e, t) {
          (this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t);
        }
        i(h);
        const B = (e) => (e < 256 ? g[e] : g[256 + (e >>> 7)]),
          E = (e, t) => {
            (e.pending_buf[e.pending++] = 255 & t),
              (e.pending_buf[e.pending++] = (t >>> 8) & 255);
          },
          y = (e, t, r) => {
            e.bi_valid > 16 - r
              ? ((e.bi_buf |= (t << e.bi_valid) & 65535),
                E(e, e.bi_buf),
                (e.bi_buf = t >> (16 - e.bi_valid)),
                (e.bi_valid += r - 16))
              : ((e.bi_buf |= (t << e.bi_valid) & 65535), (e.bi_valid += r));
          },
          m = (e, t, r) => {
            y(e, r[2 * t], r[2 * t + 1]);
          },
          Q = (e, t) => {
            let r = 0;
            do {
              (r |= 1 & e), (e >>>= 1), (r <<= 1);
            } while (--t > 0);
            return r >>> 1;
          },
          v = (e, t, r) => {
            const i = new Array(16);
            let n,
              o,
              A = 0;
            for (n = 1; n <= 15; n++) (A = (A + r[n - 1]) << 1), (i[n] = A);
            for (o = 0; o <= t; o++) {
              let t = e[2 * o + 1];
              0 !== t && (e[2 * o] = Q(i[t]++, t));
            }
          },
          S = (e) => {
            let t;
            for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
            for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
            for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
            (e.dyn_ltree[512] = 1),
              (e.opt_len = e.static_len = 0),
              (e.sym_next = e.matches = 0);
          },
          w = (e) => {
            e.bi_valid > 8
              ? E(e, e.bi_buf)
              : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf),
              (e.bi_buf = 0),
              (e.bi_valid = 0);
          },
          b = (e, t, r, i) => {
            const n = 2 * t,
              o = 2 * r;
            return e[n] < e[o] || (e[n] === e[o] && i[t] <= i[r]);
          },
          k = (e, t, r) => {
            const i = e.heap[r];
            let n = r << 1;
            for (
              ;
              n <= e.heap_len &&
              (n < e.heap_len && b(t, e.heap[n + 1], e.heap[n], e.depth) && n++,
              !b(t, i, e.heap[n], e.depth));

            )
              (e.heap[r] = e.heap[n]), (r = n), (n <<= 1);
            e.heap[r] = i;
          },
          N = (e, t, r) => {
            let i,
              A,
              a,
              s,
              c = 0;
            if (0 !== e.sym_next)
              do {
                (i = 255 & e.pending_buf[e.sym_buf + c++]),
                  (i += (255 & e.pending_buf[e.sym_buf + c++]) << 8),
                  (A = e.pending_buf[e.sym_buf + c++]),
                  0 === i
                    ? m(e, A, t)
                    : ((a = l[A]),
                      m(e, a + 256 + 1, t),
                      (s = n[a]),
                      0 !== s && ((A -= u[a]), y(e, A, s)),
                      i--,
                      (a = B(i)),
                      m(e, a, r),
                      (s = o[a]),
                      0 !== s && ((i -= h[a]), y(e, i, s)));
              } while (c < e.sym_next);
            m(e, 256, t);
          },
          _ = (e, t) => {
            const r = t.dyn_tree,
              i = t.stat_desc.static_tree,
              n = t.stat_desc.has_stree,
              o = t.stat_desc.elems;
            let A,
              a,
              s,
              c = -1;
            for (e.heap_len = 0, e.heap_max = 573, A = 0; A < o; A++)
              0 !== r[2 * A]
                ? ((e.heap[++e.heap_len] = c = A), (e.depth[A] = 0))
                : (r[2 * A + 1] = 0);
            for (; e.heap_len < 2; )
              (s = e.heap[++e.heap_len] = c < 2 ? ++c : 0),
                (r[2 * s] = 1),
                (e.depth[s] = 0),
                e.opt_len--,
                n && (e.static_len -= i[2 * s + 1]);
            for (t.max_code = c, A = e.heap_len >> 1; A >= 1; A--) k(e, r, A);
            s = o;
            do {
              (A = e.heap[1]),
                (e.heap[1] = e.heap[e.heap_len--]),
                k(e, r, 1),
                (a = e.heap[1]),
                (e.heap[--e.heap_max] = A),
                (e.heap[--e.heap_max] = a),
                (r[2 * s] = r[2 * A] + r[2 * a]),
                (e.depth[s] =
                  (e.depth[A] >= e.depth[a] ? e.depth[A] : e.depth[a]) + 1),
                (r[2 * A + 1] = r[2 * a + 1] = s),
                (e.heap[1] = s++),
                k(e, r, 1);
            } while (e.heap_len >= 2);
            (e.heap[--e.heap_max] = e.heap[1]),
              ((e, t) => {
                const r = t.dyn_tree,
                  i = t.max_code,
                  n = t.stat_desc.static_tree,
                  o = t.stat_desc.has_stree,
                  A = t.stat_desc.extra_bits,
                  a = t.stat_desc.extra_base,
                  s = t.stat_desc.max_length;
                let c,
                  g,
                  l,
                  u,
                  h,
                  I,
                  p = 0;
                for (u = 0; u <= 15; u++) e.bl_count[u] = 0;
                for (
                  r[2 * e.heap[e.heap_max] + 1] = 0, c = e.heap_max + 1;
                  c < 573;
                  c++
                )
                  (g = e.heap[c]),
                    (u = r[2 * r[2 * g + 1] + 1] + 1),
                    u > s && ((u = s), p++),
                    (r[2 * g + 1] = u),
                    g > i ||
                      (e.bl_count[u]++,
                      (h = 0),
                      g >= a && (h = A[g - a]),
                      (I = r[2 * g]),
                      (e.opt_len += I * (u + h)),
                      o && (e.static_len += I * (n[2 * g + 1] + h)));
                if (0 !== p) {
                  do {
                    for (u = s - 1; 0 === e.bl_count[u]; ) u--;
                    e.bl_count[u]--,
                      (e.bl_count[u + 1] += 2),
                      e.bl_count[s]--,
                      (p -= 2);
                  } while (p > 0);
                  for (u = s; 0 !== u; u--)
                    for (g = e.bl_count[u]; 0 !== g; )
                      (l = e.heap[--c]),
                        l > i ||
                          (r[2 * l + 1] !== u &&
                            ((e.opt_len += (u - r[2 * l + 1]) * r[2 * l]),
                            (r[2 * l + 1] = u)),
                          g--);
                }
              })(e, t),
              v(r, c, e.bl_count);
          },
          D = (e, t, r) => {
            let i,
              n,
              o = -1,
              A = t[1],
              a = 0,
              s = 7,
              c = 4;
            for (
              0 === A && ((s = 138), (c = 3)),
                t[2 * (r + 1) + 1] = 65535,
                i = 0;
              i <= r;
              i++
            )
              (n = A),
                (A = t[2 * (i + 1) + 1]),
                (++a < s && n === A) ||
                  (a < c
                    ? (e.bl_tree[2 * n] += a)
                    : 0 !== n
                    ? (n !== o && e.bl_tree[2 * n]++, e.bl_tree[32]++)
                    : a <= 10
                    ? e.bl_tree[34]++
                    : e.bl_tree[36]++,
                  (a = 0),
                  (o = n),
                  0 === A
                    ? ((s = 138), (c = 3))
                    : n === A
                    ? ((s = 6), (c = 3))
                    : ((s = 7), (c = 4)));
          },
          O = (e, t, r) => {
            let i,
              n,
              o = -1,
              A = t[1],
              a = 0,
              s = 7,
              c = 4;
            for (0 === A && ((s = 138), (c = 3)), i = 0; i <= r; i++)
              if (((n = A), (A = t[2 * (i + 1) + 1]), !(++a < s && n === A))) {
                if (a < c)
                  do {
                    m(e, n, e.bl_tree);
                  } while (0 != --a);
                else
                  0 !== n
                    ? (n !== o && (m(e, n, e.bl_tree), a--),
                      m(e, 16, e.bl_tree),
                      y(e, a - 3, 2))
                    : a <= 10
                    ? (m(e, 17, e.bl_tree), y(e, a - 3, 3))
                    : (m(e, 18, e.bl_tree), y(e, a - 11, 7));
                (a = 0),
                  (o = n),
                  0 === A
                    ? ((s = 138), (c = 3))
                    : n === A
                    ? ((s = 6), (c = 3))
                    : ((s = 7), (c = 4));
              }
          };
        let T = !1;
        const P = (e, t, r, i) => {
          y(e, 0 + (i ? 1 : 0), 3),
            w(e),
            E(e, r),
            E(e, ~r),
            r && e.pending_buf.set(e.window.subarray(t, t + r), e.pending),
            (e.pending += r);
        };
        var x = {
            _tr_init: (e) => {
              T ||
                ((() => {
                  let e, t, r, i, a;
                  const C = new Array(16);
                  for (r = 0, i = 0; i < 28; i++)
                    for (u[i] = r, e = 0; e < 1 << n[i]; e++) l[r++] = i;
                  for (l[r - 1] = i, a = 0, i = 0; i < 16; i++)
                    for (h[i] = a, e = 0; e < 1 << o[i]; e++) g[a++] = i;
                  for (a >>= 7; i < 30; i++)
                    for (h[i] = a << 7, e = 0; e < 1 << (o[i] - 7); e++)
                      g[256 + a++] = i;
                  for (t = 0; t <= 15; t++) C[t] = 0;
                  for (e = 0; e <= 143; ) (s[2 * e + 1] = 8), e++, C[8]++;
                  for (; e <= 255; ) (s[2 * e + 1] = 9), e++, C[9]++;
                  for (; e <= 279; ) (s[2 * e + 1] = 7), e++, C[7]++;
                  for (; e <= 287; ) (s[2 * e + 1] = 8), e++, C[8]++;
                  for (v(s, 287, C), e = 0; e < 30; e++)
                    (c[2 * e + 1] = 5), (c[2 * e] = Q(e, 5));
                  (p = new I(s, n, 257, 286, 15)),
                    (d = new I(c, o, 0, 30, 15)),
                    (f = new I(new Array(0), A, 0, 19, 7));
                })(),
                (T = !0)),
                (e.l_desc = new C(e.dyn_ltree, p)),
                (e.d_desc = new C(e.dyn_dtree, d)),
                (e.bl_desc = new C(e.bl_tree, f)),
                (e.bi_buf = 0),
                (e.bi_valid = 0),
                S(e);
            },
            _tr_stored_block: P,
            _tr_flush_block: (e, t, r, i) => {
              let n,
                o,
                A = 0;
              e.level > 0
                ? (2 === e.strm.data_type &&
                    (e.strm.data_type = ((e) => {
                      let t,
                        r = 4093624447;
                      for (t = 0; t <= 31; t++, r >>>= 1)
                        if (1 & r && 0 !== e.dyn_ltree[2 * t]) return 0;
                      if (
                        0 !== e.dyn_ltree[18] ||
                        0 !== e.dyn_ltree[20] ||
                        0 !== e.dyn_ltree[26]
                      )
                        return 1;
                      for (t = 32; t < 256; t++)
                        if (0 !== e.dyn_ltree[2 * t]) return 1;
                      return 0;
                    })(e)),
                  _(e, e.l_desc),
                  _(e, e.d_desc),
                  (A = ((e) => {
                    let t;
                    for (
                      D(e, e.dyn_ltree, e.l_desc.max_code),
                        D(e, e.dyn_dtree, e.d_desc.max_code),
                        _(e, e.bl_desc),
                        t = 18;
                      t >= 3 && 0 === e.bl_tree[2 * a[t] + 1];
                      t--
                    );
                    return (e.opt_len += 3 * (t + 1) + 5 + 5 + 4), t;
                  })(e)),
                  (n = (e.opt_len + 3 + 7) >>> 3),
                  (o = (e.static_len + 3 + 7) >>> 3),
                  o <= n && (n = o))
                : (n = o = r + 5),
                r + 4 <= n && -1 !== t
                  ? P(e, t, r, i)
                  : 4 === e.strategy || o === n
                  ? (y(e, 2 + (i ? 1 : 0), 3), N(e, s, c))
                  : (y(e, 4 + (i ? 1 : 0), 3),
                    ((e, t, r, i) => {
                      let n;
                      for (
                        y(e, t - 257, 5), y(e, r - 1, 5), y(e, i - 4, 4), n = 0;
                        n < i;
                        n++
                      )
                        y(e, e.bl_tree[2 * a[n] + 1], 3);
                      O(e, e.dyn_ltree, t - 1), O(e, e.dyn_dtree, r - 1);
                    })(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, A + 1),
                    N(e, e.dyn_ltree, e.dyn_dtree)),
                S(e),
                i && w(e);
            },
            _tr_tally: (e, t, r) => (
              (e.pending_buf[e.sym_buf + e.sym_next++] = t),
              (e.pending_buf[e.sym_buf + e.sym_next++] = t >> 8),
              (e.pending_buf[e.sym_buf + e.sym_next++] = r),
              0 === t
                ? e.dyn_ltree[2 * r]++
                : (e.matches++,
                  t--,
                  e.dyn_ltree[2 * (l[r] + 256 + 1)]++,
                  e.dyn_dtree[2 * B(t)]++),
              e.sym_next === e.sym_end
            ),
            _tr_align: (e) => {
              y(e, 2, 3),
                m(e, 256, s),
                ((e) => {
                  16 === e.bi_valid
                    ? (E(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
                    : e.bi_valid >= 8 &&
                      ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
                      (e.bi_buf >>= 8),
                      (e.bi_valid -= 8));
                })(e);
            },
          },
          R = (e, t, r, i) => {
            let n = (65535 & e) | 0,
              o = ((e >>> 16) & 65535) | 0,
              A = 0;
            for (; 0 !== r; ) {
              (A = r > 2e3 ? 2e3 : r), (r -= A);
              do {
                (n = (n + t[i++]) | 0), (o = (o + n) | 0);
              } while (--A);
              (n %= 65521), (o %= 65521);
            }
            return n | (o << 16) | 0;
          };
        const U = new Uint32Array(
          (() => {
            let e,
              t = [];
            for (var r = 0; r < 256; r++) {
              e = r;
              for (var i = 0; i < 8; i++)
                e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
              t[r] = e;
            }
            return t;
          })()
        );
        var F = (e, t, r, i) => {
            const n = U,
              o = i + r;
            e ^= -1;
            for (let r = i; r < o; r++) e = (e >>> 8) ^ n[255 & (e ^ t[r])];
            return -1 ^ e;
          },
          H = {
            2: "need dictionary",
            1: "stream end",
            0: "",
            "-1": "file error",
            "-2": "stream error",
            "-3": "data error",
            "-4": "insufficient memory",
            "-5": "buffer error",
            "-6": "incompatible version",
          },
          M = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_MEM_ERROR: -4,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        const {
            _tr_init: G,
            _tr_stored_block: L,
            _tr_flush_block: K,
            _tr_tally: Y,
            _tr_align: q,
          } = x,
          {
            Z_NO_FLUSH: J,
            Z_PARTIAL_FLUSH: j,
            Z_FULL_FLUSH: z,
            Z_FINISH: V,
            Z_BLOCK: W,
            Z_OK: X,
            Z_STREAM_END: Z,
            Z_STREAM_ERROR: $,
            Z_DATA_ERROR: ee,
            Z_BUF_ERROR: te,
            Z_DEFAULT_COMPRESSION: re,
            Z_FILTERED: ie,
            Z_HUFFMAN_ONLY: ne,
            Z_RLE: oe,
            Z_FIXED: Ae,
            Z_DEFAULT_STRATEGY: ae,
            Z_UNKNOWN: se,
            Z_DEFLATED: ce,
          } = M,
          ge = 258,
          le = 262,
          ue = 42,
          he = 113,
          Ie = 666,
          pe = (e, t) => ((e.msg = H[t]), t),
          de = (e) => 2 * e - (e > 4 ? 9 : 0),
          fe = (e) => {
            let t = e.length;
            for (; --t >= 0; ) e[t] = 0;
          },
          Ce = (e) => {
            let t,
              r,
              i,
              n = e.w_size;
            (t = e.hash_size), (i = t);
            do {
              (r = e.head[--i]), (e.head[i] = r >= n ? r - n : 0);
            } while (--t);
            (t = n), (i = t);
            do {
              (r = e.prev[--i]), (e.prev[i] = r >= n ? r - n : 0);
            } while (--t);
          };
        let Be = (e, t, r) => ((t << e.hash_shift) ^ r) & e.hash_mask;
        const Ee = (e) => {
            const t = e.state;
            let r = t.pending;
            r > e.avail_out && (r = e.avail_out),
              0 !== r &&
                (e.output.set(
                  t.pending_buf.subarray(t.pending_out, t.pending_out + r),
                  e.next_out
                ),
                (e.next_out += r),
                (t.pending_out += r),
                (e.total_out += r),
                (e.avail_out -= r),
                (t.pending -= r),
                0 === t.pending && (t.pending_out = 0));
          },
          ye = (e, t) => {
            K(
              e,
              e.block_start >= 0 ? e.block_start : -1,
              e.strstart - e.block_start,
              t
            ),
              (e.block_start = e.strstart),
              Ee(e.strm);
          },
          me = (e, t) => {
            e.pending_buf[e.pending++] = t;
          },
          Qe = (e, t) => {
            (e.pending_buf[e.pending++] = (t >>> 8) & 255),
              (e.pending_buf[e.pending++] = 255 & t);
          },
          ve = (e, t, r, i) => {
            let n = e.avail_in;
            return (
              n > i && (n = i),
              0 === n
                ? 0
                : ((e.avail_in -= n),
                  t.set(e.input.subarray(e.next_in, e.next_in + n), r),
                  1 === e.state.wrap
                    ? (e.adler = R(e.adler, t, n, r))
                    : 2 === e.state.wrap && (e.adler = F(e.adler, t, n, r)),
                  (e.next_in += n),
                  (e.total_in += n),
                  n)
            );
          },
          Se = (e, t) => {
            let r,
              i,
              n = e.max_chain_length,
              o = e.strstart,
              A = e.prev_length,
              a = e.nice_match;
            const s =
                e.strstart > e.w_size - le ? e.strstart - (e.w_size - le) : 0,
              c = e.window,
              g = e.w_mask,
              l = e.prev,
              u = e.strstart + ge;
            let h = c[o + A - 1],
              I = c[o + A];
            e.prev_length >= e.good_match && (n >>= 2),
              a > e.lookahead && (a = e.lookahead);
            do {
              if (
                ((r = t),
                c[r + A] === I &&
                  c[r + A - 1] === h &&
                  c[r] === c[o] &&
                  c[++r] === c[o + 1])
              ) {
                (o += 2), r++;
                do {} while (
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  c[++o] === c[++r] &&
                  o < u
                );
                if (((i = ge - (u - o)), (o = u - ge), i > A)) {
                  if (((e.match_start = t), (A = i), i >= a)) break;
                  (h = c[o + A - 1]), (I = c[o + A]);
                }
              }
            } while ((t = l[t & g]) > s && 0 != --n);
            return A <= e.lookahead ? A : e.lookahead;
          },
          we = (e) => {
            const t = e.w_size;
            let r, i, n;
            do {
              if (
                ((i = e.window_size - e.lookahead - e.strstart),
                e.strstart >= t + (t - le) &&
                  (e.window.set(e.window.subarray(t, t + t - i), 0),
                  (e.match_start -= t),
                  (e.strstart -= t),
                  (e.block_start -= t),
                  e.insert > e.strstart && (e.insert = e.strstart),
                  Ce(e),
                  (i += t)),
                0 === e.strm.avail_in)
              )
                break;
              if (
                ((r = ve(e.strm, e.window, e.strstart + e.lookahead, i)),
                (e.lookahead += r),
                e.lookahead + e.insert >= 3)
              )
                for (
                  n = e.strstart - e.insert,
                    e.ins_h = e.window[n],
                    e.ins_h = Be(e, e.ins_h, e.window[n + 1]);
                  e.insert &&
                  ((e.ins_h = Be(e, e.ins_h, e.window[n + 3 - 1])),
                  (e.prev[n & e.w_mask] = e.head[e.ins_h]),
                  (e.head[e.ins_h] = n),
                  n++,
                  e.insert--,
                  !(e.lookahead + e.insert < 3));

                );
            } while (e.lookahead < le && 0 !== e.strm.avail_in);
          },
          be = (e, t) => {
            let r,
              i,
              n,
              o =
                e.pending_buf_size - 5 > e.w_size
                  ? e.w_size
                  : e.pending_buf_size - 5,
              A = 0,
              a = e.strm.avail_in;
            do {
              if (
                ((r = 65535),
                (n = (e.bi_valid + 42) >> 3),
                e.strm.avail_out < n)
              )
                break;
              if (
                ((n = e.strm.avail_out - n),
                (i = e.strstart - e.block_start),
                r > i + e.strm.avail_in && (r = i + e.strm.avail_in),
                r > n && (r = n),
                r < o &&
                  ((0 === r && t !== V) ||
                    t === J ||
                    r !== i + e.strm.avail_in))
              )
                break;
              (A = t === V && r === i + e.strm.avail_in ? 1 : 0),
                L(e, 0, 0, A),
                (e.pending_buf[e.pending - 4] = r),
                (e.pending_buf[e.pending - 3] = r >> 8),
                (e.pending_buf[e.pending - 2] = ~r),
                (e.pending_buf[e.pending - 1] = ~r >> 8),
                Ee(e.strm),
                i &&
                  (i > r && (i = r),
                  e.strm.output.set(
                    e.window.subarray(e.block_start, e.block_start + i),
                    e.strm.next_out
                  ),
                  (e.strm.next_out += i),
                  (e.strm.avail_out -= i),
                  (e.strm.total_out += i),
                  (e.block_start += i),
                  (r -= i)),
                r &&
                  (ve(e.strm, e.strm.output, e.strm.next_out, r),
                  (e.strm.next_out += r),
                  (e.strm.avail_out -= r),
                  (e.strm.total_out += r));
            } while (0 === A);
            return (
              (a -= e.strm.avail_in),
              a &&
                (a >= e.w_size
                  ? ((e.matches = 2),
                    e.window.set(
                      e.strm.input.subarray(
                        e.strm.next_in - e.w_size,
                        e.strm.next_in
                      ),
                      0
                    ),
                    (e.strstart = e.w_size),
                    (e.insert = e.strstart))
                  : (e.window_size - e.strstart <= a &&
                      ((e.strstart -= e.w_size),
                      e.window.set(
                        e.window.subarray(e.w_size, e.w_size + e.strstart),
                        0
                      ),
                      e.matches < 2 && e.matches++,
                      e.insert > e.strstart && (e.insert = e.strstart)),
                    e.window.set(
                      e.strm.input.subarray(e.strm.next_in - a, e.strm.next_in),
                      e.strstart
                    ),
                    (e.strstart += a),
                    (e.insert +=
                      a > e.w_size - e.insert ? e.w_size - e.insert : a)),
                (e.block_start = e.strstart)),
              e.high_water < e.strstart && (e.high_water = e.strstart),
              A
                ? 4
                : t !== J &&
                  t !== V &&
                  0 === e.strm.avail_in &&
                  e.strstart === e.block_start
                ? 2
                : ((n = e.window_size - e.strstart),
                  e.strm.avail_in > n &&
                    e.block_start >= e.w_size &&
                    ((e.block_start -= e.w_size),
                    (e.strstart -= e.w_size),
                    e.window.set(
                      e.window.subarray(e.w_size, e.w_size + e.strstart),
                      0
                    ),
                    e.matches < 2 && e.matches++,
                    (n += e.w_size),
                    e.insert > e.strstart && (e.insert = e.strstart)),
                  n > e.strm.avail_in && (n = e.strm.avail_in),
                  n &&
                    (ve(e.strm, e.window, e.strstart, n),
                    (e.strstart += n),
                    (e.insert +=
                      n > e.w_size - e.insert ? e.w_size - e.insert : n)),
                  e.high_water < e.strstart && (e.high_water = e.strstart),
                  (n = (e.bi_valid + 42) >> 3),
                  (n =
                    e.pending_buf_size - n > 65535
                      ? 65535
                      : e.pending_buf_size - n),
                  (o = n > e.w_size ? e.w_size : n),
                  (i = e.strstart - e.block_start),
                  (i >= o ||
                    ((i || t === V) &&
                      t !== J &&
                      0 === e.strm.avail_in &&
                      i <= n)) &&
                    ((r = i > n ? n : i),
                    (A = t === V && 0 === e.strm.avail_in && r === i ? 1 : 0),
                    L(e, e.block_start, r, A),
                    (e.block_start += r),
                    Ee(e.strm)),
                  A ? 3 : 1)
            );
          },
          ke = (e, t) => {
            let r, i;
            for (;;) {
              if (e.lookahead < le) {
                if ((we(e), e.lookahead < le && t === J)) return 1;
                if (0 === e.lookahead) break;
              }
              if (
                ((r = 0),
                e.lookahead >= 3 &&
                  ((e.ins_h = Be(e, e.ins_h, e.window[e.strstart + 3 - 1])),
                  (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                  (e.head[e.ins_h] = e.strstart)),
                0 !== r &&
                  e.strstart - r <= e.w_size - le &&
                  (e.match_length = Se(e, r)),
                e.match_length >= 3)
              )
                if (
                  ((i = Y(e, e.strstart - e.match_start, e.match_length - 3)),
                  (e.lookahead -= e.match_length),
                  e.match_length <= e.max_lazy_match && e.lookahead >= 3)
                ) {
                  e.match_length--;
                  do {
                    e.strstart++,
                      (e.ins_h = Be(e, e.ins_h, e.window[e.strstart + 3 - 1])),
                      (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                      (e.head[e.ins_h] = e.strstart);
                  } while (0 != --e.match_length);
                  e.strstart++;
                } else
                  (e.strstart += e.match_length),
                    (e.match_length = 0),
                    (e.ins_h = e.window[e.strstart]),
                    (e.ins_h = Be(e, e.ins_h, e.window[e.strstart + 1]));
              else
                (i = Y(e, 0, e.window[e.strstart])),
                  e.lookahead--,
                  e.strstart++;
              if (i && (ye(e, !1), 0 === e.strm.avail_out)) return 1;
            }
            return (
              (e.insert = e.strstart < 2 ? e.strstart : 2),
              t === V
                ? (ye(e, !0), 0 === e.strm.avail_out ? 3 : 4)
                : e.sym_next && (ye(e, !1), 0 === e.strm.avail_out)
                ? 1
                : 2
            );
          },
          Ne = (e, t) => {
            let r, i, n;
            for (;;) {
              if (e.lookahead < le) {
                if ((we(e), e.lookahead < le && t === J)) return 1;
                if (0 === e.lookahead) break;
              }
              if (
                ((r = 0),
                e.lookahead >= 3 &&
                  ((e.ins_h = Be(e, e.ins_h, e.window[e.strstart + 3 - 1])),
                  (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                  (e.head[e.ins_h] = e.strstart)),
                (e.prev_length = e.match_length),
                (e.prev_match = e.match_start),
                (e.match_length = 2),
                0 !== r &&
                  e.prev_length < e.max_lazy_match &&
                  e.strstart - r <= e.w_size - le &&
                  ((e.match_length = Se(e, r)),
                  e.match_length <= 5 &&
                    (e.strategy === ie ||
                      (3 === e.match_length &&
                        e.strstart - e.match_start > 4096)) &&
                    (e.match_length = 2)),
                e.prev_length >= 3 && e.match_length <= e.prev_length)
              ) {
                (n = e.strstart + e.lookahead - 3),
                  (i = Y(e, e.strstart - 1 - e.prev_match, e.prev_length - 3)),
                  (e.lookahead -= e.prev_length - 1),
                  (e.prev_length -= 2);
                do {
                  ++e.strstart <= n &&
                    ((e.ins_h = Be(e, e.ins_h, e.window[e.strstart + 3 - 1])),
                    (r = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                    (e.head[e.ins_h] = e.strstart));
                } while (0 != --e.prev_length);
                if (
                  ((e.match_available = 0),
                  (e.match_length = 2),
                  e.strstart++,
                  i && (ye(e, !1), 0 === e.strm.avail_out))
                )
                  return 1;
              } else if (e.match_available) {
                if (
                  ((i = Y(e, 0, e.window[e.strstart - 1])),
                  i && ye(e, !1),
                  e.strstart++,
                  e.lookahead--,
                  0 === e.strm.avail_out)
                )
                  return 1;
              } else (e.match_available = 1), e.strstart++, e.lookahead--;
            }
            return (
              e.match_available &&
                ((i = Y(e, 0, e.window[e.strstart - 1])),
                (e.match_available = 0)),
              (e.insert = e.strstart < 2 ? e.strstart : 2),
              t === V
                ? (ye(e, !0), 0 === e.strm.avail_out ? 3 : 4)
                : e.sym_next && (ye(e, !1), 0 === e.strm.avail_out)
                ? 1
                : 2
            );
          };
        function _e(e, t, r, i, n) {
          (this.good_length = e),
            (this.max_lazy = t),
            (this.nice_length = r),
            (this.max_chain = i),
            (this.func = n);
        }
        const De = [
          new _e(0, 0, 0, 0, be),
          new _e(4, 4, 8, 4, ke),
          new _e(4, 5, 16, 8, ke),
          new _e(4, 6, 32, 32, ke),
          new _e(4, 4, 16, 16, Ne),
          new _e(8, 16, 32, 32, Ne),
          new _e(8, 16, 128, 128, Ne),
          new _e(8, 32, 128, 256, Ne),
          new _e(32, 128, 258, 1024, Ne),
          new _e(32, 258, 258, 4096, Ne),
        ];
        function Oe() {
          (this.strm = null),
            (this.status = 0),
            (this.pending_buf = null),
            (this.pending_buf_size = 0),
            (this.pending_out = 0),
            (this.pending = 0),
            (this.wrap = 0),
            (this.gzhead = null),
            (this.gzindex = 0),
            (this.method = ce),
            (this.last_flush = -1),
            (this.w_size = 0),
            (this.w_bits = 0),
            (this.w_mask = 0),
            (this.window = null),
            (this.window_size = 0),
            (this.prev = null),
            (this.head = null),
            (this.ins_h = 0),
            (this.hash_size = 0),
            (this.hash_bits = 0),
            (this.hash_mask = 0),
            (this.hash_shift = 0),
            (this.block_start = 0),
            (this.match_length = 0),
            (this.prev_match = 0),
            (this.match_available = 0),
            (this.strstart = 0),
            (this.match_start = 0),
            (this.lookahead = 0),
            (this.prev_length = 0),
            (this.max_chain_length = 0),
            (this.max_lazy_match = 0),
            (this.level = 0),
            (this.strategy = 0),
            (this.good_match = 0),
            (this.nice_match = 0),
            (this.dyn_ltree = new Uint16Array(1146)),
            (this.dyn_dtree = new Uint16Array(122)),
            (this.bl_tree = new Uint16Array(78)),
            fe(this.dyn_ltree),
            fe(this.dyn_dtree),
            fe(this.bl_tree),
            (this.l_desc = null),
            (this.d_desc = null),
            (this.bl_desc = null),
            (this.bl_count = new Uint16Array(16)),
            (this.heap = new Uint16Array(573)),
            fe(this.heap),
            (this.heap_len = 0),
            (this.heap_max = 0),
            (this.depth = new Uint16Array(573)),
            fe(this.depth),
            (this.sym_buf = 0),
            (this.lit_bufsize = 0),
            (this.sym_next = 0),
            (this.sym_end = 0),
            (this.opt_len = 0),
            (this.static_len = 0),
            (this.matches = 0),
            (this.insert = 0),
            (this.bi_buf = 0),
            (this.bi_valid = 0);
        }
        const Te = (e) => {
            if (!e) return 1;
            const t = e.state;
            return !t ||
              t.strm !== e ||
              (t.status !== ue &&
                57 !== t.status &&
                69 !== t.status &&
                73 !== t.status &&
                91 !== t.status &&
                103 !== t.status &&
                t.status !== he &&
                t.status !== Ie)
              ? 1
              : 0;
          },
          Pe = (e) => {
            if (Te(e)) return pe(e, $);
            (e.total_in = e.total_out = 0), (e.data_type = se);
            const t = e.state;
            return (
              (t.pending = 0),
              (t.pending_out = 0),
              t.wrap < 0 && (t.wrap = -t.wrap),
              (t.status = 2 === t.wrap ? 57 : t.wrap ? ue : he),
              (e.adler = 2 === t.wrap ? 0 : 1),
              (t.last_flush = -2),
              G(t),
              X
            );
          },
          xe = (e) => {
            const t = Pe(e);
            var r;
            return (
              t === X &&
                (((r = e.state).window_size = 2 * r.w_size),
                fe(r.head),
                (r.max_lazy_match = De[r.level].max_lazy),
                (r.good_match = De[r.level].good_length),
                (r.nice_match = De[r.level].nice_length),
                (r.max_chain_length = De[r.level].max_chain),
                (r.strstart = 0),
                (r.block_start = 0),
                (r.lookahead = 0),
                (r.insert = 0),
                (r.match_length = r.prev_length = 2),
                (r.match_available = 0),
                (r.ins_h = 0)),
              t
            );
          },
          Re = (e, t, r, i, n, o) => {
            if (!e) return $;
            let A = 1;
            if (
              (t === re && (t = 6),
              i < 0 ? ((A = 0), (i = -i)) : i > 15 && ((A = 2), (i -= 16)),
              n < 1 ||
                n > 9 ||
                r !== ce ||
                i < 8 ||
                i > 15 ||
                t < 0 ||
                t > 9 ||
                o < 0 ||
                o > Ae ||
                (8 === i && 1 !== A))
            )
              return pe(e, $);
            8 === i && (i = 9);
            const a = new Oe();
            return (
              (e.state = a),
              (a.strm = e),
              (a.status = ue),
              (a.wrap = A),
              (a.gzhead = null),
              (a.w_bits = i),
              (a.w_size = 1 << a.w_bits),
              (a.w_mask = a.w_size - 1),
              (a.hash_bits = n + 7),
              (a.hash_size = 1 << a.hash_bits),
              (a.hash_mask = a.hash_size - 1),
              (a.hash_shift = ~~((a.hash_bits + 3 - 1) / 3)),
              (a.window = new Uint8Array(2 * a.w_size)),
              (a.head = new Uint16Array(a.hash_size)),
              (a.prev = new Uint16Array(a.w_size)),
              (a.lit_bufsize = 1 << (n + 6)),
              (a.pending_buf_size = 4 * a.lit_bufsize),
              (a.pending_buf = new Uint8Array(a.pending_buf_size)),
              (a.sym_buf = a.lit_bufsize),
              (a.sym_end = 3 * (a.lit_bufsize - 1)),
              (a.level = t),
              (a.strategy = o),
              (a.method = r),
              xe(e)
            );
          };
        var Ue = Re,
          Fe = (e, t) =>
            Te(e) || 2 !== e.state.wrap ? $ : ((e.state.gzhead = t), X),
          He = (e, t) => {
            if (Te(e) || t > W || t < 0) return e ? pe(e, $) : $;
            const r = e.state;
            if (
              !e.output ||
              (0 !== e.avail_in && !e.input) ||
              (r.status === Ie && t !== V)
            )
              return pe(e, 0 === e.avail_out ? te : $);
            const i = r.last_flush;
            if (((r.last_flush = t), 0 !== r.pending)) {
              if ((Ee(e), 0 === e.avail_out)) return (r.last_flush = -1), X;
            } else if (0 === e.avail_in && de(t) <= de(i) && t !== V)
              return pe(e, te);
            if (r.status === Ie && 0 !== e.avail_in) return pe(e, te);
            if (
              (r.status === ue && 0 === r.wrap && (r.status = he),
              r.status === ue)
            ) {
              let t = (ce + ((r.w_bits - 8) << 4)) << 8,
                i = -1;
              if (
                ((i =
                  r.strategy >= ne || r.level < 2
                    ? 0
                    : r.level < 6
                    ? 1
                    : 6 === r.level
                    ? 2
                    : 3),
                (t |= i << 6),
                0 !== r.strstart && (t |= 32),
                (t += 31 - (t % 31)),
                Qe(r, t),
                0 !== r.strstart &&
                  (Qe(r, e.adler >>> 16), Qe(r, 65535 & e.adler)),
                (e.adler = 1),
                (r.status = he),
                Ee(e),
                0 !== r.pending)
              )
                return (r.last_flush = -1), X;
            }
            if (57 === r.status)
              if (((e.adler = 0), me(r, 31), me(r, 139), me(r, 8), r.gzhead))
                me(
                  r,
                  (r.gzhead.text ? 1 : 0) +
                    (r.gzhead.hcrc ? 2 : 0) +
                    (r.gzhead.extra ? 4 : 0) +
                    (r.gzhead.name ? 8 : 0) +
                    (r.gzhead.comment ? 16 : 0)
                ),
                  me(r, 255 & r.gzhead.time),
                  me(r, (r.gzhead.time >> 8) & 255),
                  me(r, (r.gzhead.time >> 16) & 255),
                  me(r, (r.gzhead.time >> 24) & 255),
                  me(
                    r,
                    9 === r.level ? 2 : r.strategy >= ne || r.level < 2 ? 4 : 0
                  ),
                  me(r, 255 & r.gzhead.os),
                  r.gzhead.extra &&
                    r.gzhead.extra.length &&
                    (me(r, 255 & r.gzhead.extra.length),
                    me(r, (r.gzhead.extra.length >> 8) & 255)),
                  r.gzhead.hcrc &&
                    (e.adler = F(e.adler, r.pending_buf, r.pending, 0)),
                  (r.gzindex = 0),
                  (r.status = 69);
              else if (
                (me(r, 0),
                me(r, 0),
                me(r, 0),
                me(r, 0),
                me(r, 0),
                me(
                  r,
                  9 === r.level ? 2 : r.strategy >= ne || r.level < 2 ? 4 : 0
                ),
                me(r, 3),
                (r.status = he),
                Ee(e),
                0 !== r.pending)
              )
                return (r.last_flush = -1), X;
            if (69 === r.status) {
              if (r.gzhead.extra) {
                let t = r.pending,
                  i = (65535 & r.gzhead.extra.length) - r.gzindex;
                for (; r.pending + i > r.pending_buf_size; ) {
                  let n = r.pending_buf_size - r.pending;
                  if (
                    (r.pending_buf.set(
                      r.gzhead.extra.subarray(r.gzindex, r.gzindex + n),
                      r.pending
                    ),
                    (r.pending = r.pending_buf_size),
                    r.gzhead.hcrc &&
                      r.pending > t &&
                      (e.adler = F(e.adler, r.pending_buf, r.pending - t, t)),
                    (r.gzindex += n),
                    Ee(e),
                    0 !== r.pending)
                  )
                    return (r.last_flush = -1), X;
                  (t = 0), (i -= n);
                }
                let n = new Uint8Array(r.gzhead.extra);
                r.pending_buf.set(
                  n.subarray(r.gzindex, r.gzindex + i),
                  r.pending
                ),
                  (r.pending += i),
                  r.gzhead.hcrc &&
                    r.pending > t &&
                    (e.adler = F(e.adler, r.pending_buf, r.pending - t, t)),
                  (r.gzindex = 0);
              }
              r.status = 73;
            }
            if (73 === r.status) {
              if (r.gzhead.name) {
                let t,
                  i = r.pending;
                do {
                  if (r.pending === r.pending_buf_size) {
                    if (
                      (r.gzhead.hcrc &&
                        r.pending > i &&
                        (e.adler = F(e.adler, r.pending_buf, r.pending - i, i)),
                      Ee(e),
                      0 !== r.pending)
                    )
                      return (r.last_flush = -1), X;
                    i = 0;
                  }
                  (t =
                    r.gzindex < r.gzhead.name.length
                      ? 255 & r.gzhead.name.charCodeAt(r.gzindex++)
                      : 0),
                    me(r, t);
                } while (0 !== t);
                r.gzhead.hcrc &&
                  r.pending > i &&
                  (e.adler = F(e.adler, r.pending_buf, r.pending - i, i)),
                  (r.gzindex = 0);
              }
              r.status = 91;
            }
            if (91 === r.status) {
              if (r.gzhead.comment) {
                let t,
                  i = r.pending;
                do {
                  if (r.pending === r.pending_buf_size) {
                    if (
                      (r.gzhead.hcrc &&
                        r.pending > i &&
                        (e.adler = F(e.adler, r.pending_buf, r.pending - i, i)),
                      Ee(e),
                      0 !== r.pending)
                    )
                      return (r.last_flush = -1), X;
                    i = 0;
                  }
                  (t =
                    r.gzindex < r.gzhead.comment.length
                      ? 255 & r.gzhead.comment.charCodeAt(r.gzindex++)
                      : 0),
                    me(r, t);
                } while (0 !== t);
                r.gzhead.hcrc &&
                  r.pending > i &&
                  (e.adler = F(e.adler, r.pending_buf, r.pending - i, i));
              }
              r.status = 103;
            }
            if (103 === r.status) {
              if (r.gzhead.hcrc) {
                if (
                  r.pending + 2 > r.pending_buf_size &&
                  (Ee(e), 0 !== r.pending)
                )
                  return (r.last_flush = -1), X;
                me(r, 255 & e.adler),
                  me(r, (e.adler >> 8) & 255),
                  (e.adler = 0);
              }
              if (((r.status = he), Ee(e), 0 !== r.pending))
                return (r.last_flush = -1), X;
            }
            if (
              0 !== e.avail_in ||
              0 !== r.lookahead ||
              (t !== J && r.status !== Ie)
            ) {
              let i =
                0 === r.level
                  ? be(r, t)
                  : r.strategy === ne
                  ? ((e, t) => {
                      let r;
                      for (;;) {
                        if (0 === e.lookahead && (we(e), 0 === e.lookahead)) {
                          if (t === J) return 1;
                          break;
                        }
                        if (
                          ((e.match_length = 0),
                          (r = Y(e, 0, e.window[e.strstart])),
                          e.lookahead--,
                          e.strstart++,
                          r && (ye(e, !1), 0 === e.strm.avail_out))
                        )
                          return 1;
                      }
                      return (
                        (e.insert = 0),
                        t === V
                          ? (ye(e, !0), 0 === e.strm.avail_out ? 3 : 4)
                          : e.sym_next && (ye(e, !1), 0 === e.strm.avail_out)
                          ? 1
                          : 2
                      );
                    })(r, t)
                  : r.strategy === oe
                  ? ((e, t) => {
                      let r, i, n, o;
                      const A = e.window;
                      for (;;) {
                        if (e.lookahead <= ge) {
                          if ((we(e), e.lookahead <= ge && t === J)) return 1;
                          if (0 === e.lookahead) break;
                        }
                        if (
                          ((e.match_length = 0),
                          e.lookahead >= 3 &&
                            e.strstart > 0 &&
                            ((n = e.strstart - 1),
                            (i = A[n]),
                            i === A[++n] && i === A[++n] && i === A[++n]))
                        ) {
                          o = e.strstart + ge;
                          do {} while (
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            i === A[++n] &&
                            n < o
                          );
                          (e.match_length = ge - (o - n)),
                            e.match_length > e.lookahead &&
                              (e.match_length = e.lookahead);
                        }
                        if (
                          (e.match_length >= 3
                            ? ((r = Y(e, 1, e.match_length - 3)),
                              (e.lookahead -= e.match_length),
                              (e.strstart += e.match_length),
                              (e.match_length = 0))
                            : ((r = Y(e, 0, e.window[e.strstart])),
                              e.lookahead--,
                              e.strstart++),
                          r && (ye(e, !1), 0 === e.strm.avail_out))
                        )
                          return 1;
                      }
                      return (
                        (e.insert = 0),
                        t === V
                          ? (ye(e, !0), 0 === e.strm.avail_out ? 3 : 4)
                          : e.sym_next && (ye(e, !1), 0 === e.strm.avail_out)
                          ? 1
                          : 2
                      );
                    })(r, t)
                  : De[r.level].func(r, t);
              if (((3 !== i && 4 !== i) || (r.status = Ie), 1 === i || 3 === i))
                return 0 === e.avail_out && (r.last_flush = -1), X;
              if (
                2 === i &&
                (t === j
                  ? q(r)
                  : t !== W &&
                    (L(r, 0, 0, !1),
                    t === z &&
                      (fe(r.head),
                      0 === r.lookahead &&
                        ((r.strstart = 0),
                        (r.block_start = 0),
                        (r.insert = 0)))),
                Ee(e),
                0 === e.avail_out)
              )
                return (r.last_flush = -1), X;
            }
            return t !== V
              ? X
              : r.wrap <= 0
              ? Z
              : (2 === r.wrap
                  ? (me(r, 255 & e.adler),
                    me(r, (e.adler >> 8) & 255),
                    me(r, (e.adler >> 16) & 255),
                    me(r, (e.adler >> 24) & 255),
                    me(r, 255 & e.total_in),
                    me(r, (e.total_in >> 8) & 255),
                    me(r, (e.total_in >> 16) & 255),
                    me(r, (e.total_in >> 24) & 255))
                  : (Qe(r, e.adler >>> 16), Qe(r, 65535 & e.adler)),
                Ee(e),
                r.wrap > 0 && (r.wrap = -r.wrap),
                0 !== r.pending ? X : Z);
          },
          Me = (e) => {
            if (Te(e)) return $;
            const t = e.state.status;
            return (e.state = null), t === he ? pe(e, ee) : X;
          },
          Ge = (e, t) => {
            let r = t.length;
            if (Te(e)) return $;
            const i = e.state,
              n = i.wrap;
            if (2 === n || (1 === n && i.status !== ue) || i.lookahead)
              return $;
            if (
              (1 === n && (e.adler = R(e.adler, t, r, 0)),
              (i.wrap = 0),
              r >= i.w_size)
            ) {
              0 === n &&
                (fe(i.head),
                (i.strstart = 0),
                (i.block_start = 0),
                (i.insert = 0));
              let e = new Uint8Array(i.w_size);
              e.set(t.subarray(r - i.w_size, r), 0), (t = e), (r = i.w_size);
            }
            const o = e.avail_in,
              A = e.next_in,
              a = e.input;
            for (
              e.avail_in = r, e.next_in = 0, e.input = t, we(i);
              i.lookahead >= 3;

            ) {
              let e = i.strstart,
                t = i.lookahead - 2;
              do {
                (i.ins_h = Be(i, i.ins_h, i.window[e + 3 - 1])),
                  (i.prev[e & i.w_mask] = i.head[i.ins_h]),
                  (i.head[i.ins_h] = e),
                  e++;
              } while (--t);
              (i.strstart = e), (i.lookahead = 2), we(i);
            }
            return (
              (i.strstart += i.lookahead),
              (i.block_start = i.strstart),
              (i.insert = i.lookahead),
              (i.lookahead = 0),
              (i.match_length = i.prev_length = 2),
              (i.match_available = 0),
              (e.next_in = A),
              (e.input = a),
              (e.avail_in = o),
              (i.wrap = n),
              X
            );
          };
        const Le = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
        var Ke = function (e) {
            const t = Array.prototype.slice.call(arguments, 1);
            for (; t.length; ) {
              const r = t.shift();
              if (r) {
                if ("object" != typeof r)
                  throw new TypeError(r + "must be non-object");
                for (const t in r) Le(r, t) && (e[t] = r[t]);
              }
            }
            return e;
          },
          Ye = (e) => {
            let t = 0;
            for (let r = 0, i = e.length; r < i; r++) t += e[r].length;
            const r = new Uint8Array(t);
            for (let t = 0, i = 0, n = e.length; t < n; t++) {
              let n = e[t];
              r.set(n, i), (i += n.length);
            }
            return r;
          };
        let qe = !0;
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (e) {
          qe = !1;
        }
        const Je = new Uint8Array(256);
        for (let e = 0; e < 256; e++)
          Je[e] =
            e >= 252
              ? 6
              : e >= 248
              ? 5
              : e >= 240
              ? 4
              : e >= 224
              ? 3
              : e >= 192
              ? 2
              : 1;
        Je[254] = Je[254] = 1;
        var je = (e) => {
            if (
              "function" == typeof TextEncoder &&
              TextEncoder.prototype.encode
            )
              return new TextEncoder().encode(e);
            let t,
              r,
              i,
              n,
              o,
              A = e.length,
              a = 0;
            for (n = 0; n < A; n++)
              (r = e.charCodeAt(n)),
                55296 == (64512 & r) &&
                  n + 1 < A &&
                  ((i = e.charCodeAt(n + 1)),
                  56320 == (64512 & i) &&
                    ((r = 65536 + ((r - 55296) << 10) + (i - 56320)), n++)),
                (a += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4);
            for (t = new Uint8Array(a), o = 0, n = 0; o < a; n++)
              (r = e.charCodeAt(n)),
                55296 == (64512 & r) &&
                  n + 1 < A &&
                  ((i = e.charCodeAt(n + 1)),
                  56320 == (64512 & i) &&
                    ((r = 65536 + ((r - 55296) << 10) + (i - 56320)), n++)),
                r < 128
                  ? (t[o++] = r)
                  : r < 2048
                  ? ((t[o++] = 192 | (r >>> 6)), (t[o++] = 128 | (63 & r)))
                  : r < 65536
                  ? ((t[o++] = 224 | (r >>> 12)),
                    (t[o++] = 128 | ((r >>> 6) & 63)),
                    (t[o++] = 128 | (63 & r)))
                  : ((t[o++] = 240 | (r >>> 18)),
                    (t[o++] = 128 | ((r >>> 12) & 63)),
                    (t[o++] = 128 | ((r >>> 6) & 63)),
                    (t[o++] = 128 | (63 & r)));
            return t;
          },
          ze = (e, t) => {
            const r = t || e.length;
            if (
              "function" == typeof TextDecoder &&
              TextDecoder.prototype.decode
            )
              return new TextDecoder().decode(e.subarray(0, t));
            let i, n;
            const o = new Array(2 * r);
            for (n = 0, i = 0; i < r; ) {
              let t = e[i++];
              if (t < 128) {
                o[n++] = t;
                continue;
              }
              let A = Je[t];
              if (A > 4) (o[n++] = 65533), (i += A - 1);
              else {
                for (t &= 2 === A ? 31 : 3 === A ? 15 : 7; A > 1 && i < r; )
                  (t = (t << 6) | (63 & e[i++])), A--;
                A > 1
                  ? (o[n++] = 65533)
                  : t < 65536
                  ? (o[n++] = t)
                  : ((t -= 65536),
                    (o[n++] = 55296 | ((t >> 10) & 1023)),
                    (o[n++] = 56320 | (1023 & t)));
              }
            }
            return ((e, t) => {
              if (t < 65534 && e.subarray && qe)
                return String.fromCharCode.apply(
                  null,
                  e.length === t ? e : e.subarray(0, t)
                );
              let r = "";
              for (let i = 0; i < t; i++) r += String.fromCharCode(e[i]);
              return r;
            })(o, n);
          },
          Ve = (e, t) => {
            (t = t || e.length) > e.length && (t = e.length);
            let r = t - 1;
            for (; r >= 0 && 128 == (192 & e[r]); ) r--;
            return r < 0 || 0 === r ? t : r + Je[e[r]] > t ? r : t;
          },
          We = function () {
            (this.input = null),
              (this.next_in = 0),
              (this.avail_in = 0),
              (this.total_in = 0),
              (this.output = null),
              (this.next_out = 0),
              (this.avail_out = 0),
              (this.total_out = 0),
              (this.msg = ""),
              (this.state = null),
              (this.data_type = 2),
              (this.adler = 0);
          };
        const Xe = Object.prototype.toString,
          {
            Z_NO_FLUSH: Ze,
            Z_SYNC_FLUSH: $e,
            Z_FULL_FLUSH: et,
            Z_FINISH: tt,
            Z_OK: rt,
            Z_STREAM_END: it,
            Z_DEFAULT_COMPRESSION: nt,
            Z_DEFAULT_STRATEGY: ot,
            Z_DEFLATED: At,
          } = M;
        function at(e) {
          this.options = Ke(
            {
              level: nt,
              method: At,
              chunkSize: 16384,
              windowBits: 15,
              memLevel: 8,
              strategy: ot,
            },
            e || {}
          );
          let t = this.options;
          t.raw && t.windowBits > 0
            ? (t.windowBits = -t.windowBits)
            : t.gzip &&
              t.windowBits > 0 &&
              t.windowBits < 16 &&
              (t.windowBits += 16),
            (this.err = 0),
            (this.msg = ""),
            (this.ended = !1),
            (this.chunks = []),
            (this.strm = new We()),
            (this.strm.avail_out = 0);
          let r = Ue(
            this.strm,
            t.level,
            t.method,
            t.windowBits,
            t.memLevel,
            t.strategy
          );
          if (r !== rt) throw new Error(H[r]);
          if ((t.header && Fe(this.strm, t.header), t.dictionary)) {
            let e;
            if (
              ((e =
                "string" == typeof t.dictionary
                  ? je(t.dictionary)
                  : "[object ArrayBuffer]" === Xe.call(t.dictionary)
                  ? new Uint8Array(t.dictionary)
                  : t.dictionary),
              (r = Ge(this.strm, e)),
              r !== rt)
            )
              throw new Error(H[r]);
            this._dict_set = !0;
          }
        }
        function st(e, t) {
          const r = new at(t);
          if ((r.push(e, !0), r.err)) throw r.msg || H[r.err];
          return r.result;
        }
        (at.prototype.push = function (e, t) {
          const r = this.strm,
            i = this.options.chunkSize;
          let n, o;
          if (this.ended) return !1;
          for (
            o = t === ~~t ? t : !0 === t ? tt : Ze,
              "string" == typeof e
                ? (r.input = je(e))
                : "[object ArrayBuffer]" === Xe.call(e)
                ? (r.input = new Uint8Array(e))
                : (r.input = e),
              r.next_in = 0,
              r.avail_in = r.input.length;
            ;

          )
            if (
              (0 === r.avail_out &&
                ((r.output = new Uint8Array(i)),
                (r.next_out = 0),
                (r.avail_out = i)),
              (o === $e || o === et) && r.avail_out <= 6)
            )
              this.onData(r.output.subarray(0, r.next_out)), (r.avail_out = 0);
            else {
              if (((n = He(r, o)), n === it))
                return (
                  r.next_out > 0 &&
                    this.onData(r.output.subarray(0, r.next_out)),
                  (n = Me(this.strm)),
                  this.onEnd(n),
                  (this.ended = !0),
                  n === rt
                );
              if (0 !== r.avail_out) {
                if (o > 0 && r.next_out > 0)
                  this.onData(r.output.subarray(0, r.next_out)),
                    (r.avail_out = 0);
                else if (0 === r.avail_in) break;
              } else this.onData(r.output);
            }
          return !0;
        }),
          (at.prototype.onData = function (e) {
            this.chunks.push(e);
          }),
          (at.prototype.onEnd = function (e) {
            e === rt && (this.result = Ye(this.chunks)),
              (this.chunks = []),
              (this.err = e),
              (this.msg = this.strm.msg);
          });
        var ct = {
          Deflate: at,
          deflate: st,
          deflateRaw: function (e, t) {
            return ((t = t || {}).raw = !0), st(e, t);
          },
          gzip: function (e, t) {
            return ((t = t || {}).gzip = !0), st(e, t);
          },
          constants: M,
        };
        const gt = 16209;
        var lt = function (e, t) {
          let r,
            i,
            n,
            o,
            A,
            a,
            s,
            c,
            g,
            l,
            u,
            h,
            I,
            p,
            d,
            f,
            C,
            B,
            E,
            y,
            m,
            Q,
            v,
            S;
          const w = e.state;
          (r = e.next_in),
            (v = e.input),
            (i = r + (e.avail_in - 5)),
            (n = e.next_out),
            (S = e.output),
            (o = n - (t - e.avail_out)),
            (A = n + (e.avail_out - 257)),
            (a = w.dmax),
            (s = w.wsize),
            (c = w.whave),
            (g = w.wnext),
            (l = w.window),
            (u = w.hold),
            (h = w.bits),
            (I = w.lencode),
            (p = w.distcode),
            (d = (1 << w.lenbits) - 1),
            (f = (1 << w.distbits) - 1);
          e: do {
            h < 15 &&
              ((u += v[r++] << h), (h += 8), (u += v[r++] << h), (h += 8)),
              (C = I[u & d]);
            t: for (;;) {
              if (
                ((B = C >>> 24),
                (u >>>= B),
                (h -= B),
                (B = (C >>> 16) & 255),
                0 === B)
              )
                S[n++] = 65535 & C;
              else {
                if (!(16 & B)) {
                  if (0 == (64 & B)) {
                    C = I[(65535 & C) + (u & ((1 << B) - 1))];
                    continue t;
                  }
                  if (32 & B) {
                    w.mode = 16191;
                    break e;
                  }
                  (e.msg = "invalid literal/length code"), (w.mode = gt);
                  break e;
                }
                (E = 65535 & C),
                  (B &= 15),
                  B &&
                    (h < B && ((u += v[r++] << h), (h += 8)),
                    (E += u & ((1 << B) - 1)),
                    (u >>>= B),
                    (h -= B)),
                  h < 15 &&
                    ((u += v[r++] << h),
                    (h += 8),
                    (u += v[r++] << h),
                    (h += 8)),
                  (C = p[u & f]);
                r: for (;;) {
                  if (
                    ((B = C >>> 24),
                    (u >>>= B),
                    (h -= B),
                    (B = (C >>> 16) & 255),
                    !(16 & B))
                  ) {
                    if (0 == (64 & B)) {
                      C = p[(65535 & C) + (u & ((1 << B) - 1))];
                      continue r;
                    }
                    (e.msg = "invalid distance code"), (w.mode = gt);
                    break e;
                  }
                  if (
                    ((y = 65535 & C),
                    (B &= 15),
                    h < B &&
                      ((u += v[r++] << h),
                      (h += 8),
                      h < B && ((u += v[r++] << h), (h += 8))),
                    (y += u & ((1 << B) - 1)),
                    y > a)
                  ) {
                    (e.msg = "invalid distance too far back"), (w.mode = gt);
                    break e;
                  }
                  if (((u >>>= B), (h -= B), (B = n - o), y > B)) {
                    if (((B = y - B), B > c && w.sane)) {
                      (e.msg = "invalid distance too far back"), (w.mode = gt);
                      break e;
                    }
                    if (((m = 0), (Q = l), 0 === g)) {
                      if (((m += s - B), B < E)) {
                        E -= B;
                        do {
                          S[n++] = l[m++];
                        } while (--B);
                        (m = n - y), (Q = S);
                      }
                    } else if (g < B) {
                      if (((m += s + g - B), (B -= g), B < E)) {
                        E -= B;
                        do {
                          S[n++] = l[m++];
                        } while (--B);
                        if (((m = 0), g < E)) {
                          (B = g), (E -= B);
                          do {
                            S[n++] = l[m++];
                          } while (--B);
                          (m = n - y), (Q = S);
                        }
                      }
                    } else if (((m += g - B), B < E)) {
                      E -= B;
                      do {
                        S[n++] = l[m++];
                      } while (--B);
                      (m = n - y), (Q = S);
                    }
                    for (; E > 2; )
                      (S[n++] = Q[m++]),
                        (S[n++] = Q[m++]),
                        (S[n++] = Q[m++]),
                        (E -= 3);
                    E && ((S[n++] = Q[m++]), E > 1 && (S[n++] = Q[m++]));
                  } else {
                    m = n - y;
                    do {
                      (S[n++] = S[m++]),
                        (S[n++] = S[m++]),
                        (S[n++] = S[m++]),
                        (E -= 3);
                    } while (E > 2);
                    E && ((S[n++] = S[m++]), E > 1 && (S[n++] = S[m++]));
                  }
                  break;
                }
              }
              break;
            }
          } while (r < i && n < A);
          (E = h >> 3),
            (r -= E),
            (h -= E << 3),
            (u &= (1 << h) - 1),
            (e.next_in = r),
            (e.next_out = n),
            (e.avail_in = r < i ? i - r + 5 : 5 - (r - i)),
            (e.avail_out = n < A ? A - n + 257 : 257 - (n - A)),
            (w.hold = u),
            (w.bits = h);
        };
        const ut = new Uint16Array([
            3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51,
            59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
          ]),
          ht = new Uint8Array([
            16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19,
            19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
          ]),
          It = new Uint16Array([
            1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
            513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385,
            24577, 0, 0,
          ]),
          pt = new Uint8Array([
            16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23,
            23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
          ]);
        var dt = (e, t, r, i, n, o, A, a) => {
          const s = a.bits;
          let c,
            g,
            l,
            u,
            h,
            I,
            p = 0,
            d = 0,
            f = 0,
            C = 0,
            B = 0,
            E = 0,
            y = 0,
            m = 0,
            Q = 0,
            v = 0,
            S = null;
          const w = new Uint16Array(16),
            b = new Uint16Array(16);
          let k,
            N,
            _,
            D = null;
          for (p = 0; p <= 15; p++) w[p] = 0;
          for (d = 0; d < i; d++) w[t[r + d]]++;
          for (B = s, C = 15; C >= 1 && 0 === w[C]; C--);
          if ((B > C && (B = C), 0 === C))
            return (n[o++] = 20971520), (n[o++] = 20971520), (a.bits = 1), 0;
          for (f = 1; f < C && 0 === w[f]; f++);
          for (B < f && (B = f), m = 1, p = 1; p <= 15; p++)
            if (((m <<= 1), (m -= w[p]), m < 0)) return -1;
          if (m > 0 && (0 === e || 1 !== C)) return -1;
          for (b[1] = 0, p = 1; p < 15; p++) b[p + 1] = b[p] + w[p];
          for (d = 0; d < i; d++) 0 !== t[r + d] && (A[b[t[r + d]]++] = d);
          if (
            (0 === e
              ? ((S = D = A), (I = 20))
              : 1 === e
              ? ((S = ut), (D = ht), (I = 257))
              : ((S = It), (D = pt), (I = 0)),
            (v = 0),
            (d = 0),
            (p = f),
            (h = o),
            (E = B),
            (y = 0),
            (l = -1),
            (Q = 1 << B),
            (u = Q - 1),
            (1 === e && Q > 852) || (2 === e && Q > 592))
          )
            return 1;
          for (;;) {
            (k = p - y),
              A[d] + 1 < I
                ? ((N = 0), (_ = A[d]))
                : A[d] >= I
                ? ((N = D[A[d] - I]), (_ = S[A[d] - I]))
                : ((N = 96), (_ = 0)),
              (c = 1 << (p - y)),
              (g = 1 << E),
              (f = g);
            do {
              (g -= c), (n[h + (v >> y) + g] = (k << 24) | (N << 16) | _ | 0);
            } while (0 !== g);
            for (c = 1 << (p - 1); v & c; ) c >>= 1;
            if (
              (0 !== c ? ((v &= c - 1), (v += c)) : (v = 0), d++, 0 == --w[p])
            ) {
              if (p === C) break;
              p = t[r + A[d]];
            }
            if (p > B && (v & u) !== l) {
              for (
                0 === y && (y = B), h += f, E = p - y, m = 1 << E;
                E + y < C && ((m -= w[E + y]), !(m <= 0));

              )
                E++, (m <<= 1);
              if (((Q += 1 << E), (1 === e && Q > 852) || (2 === e && Q > 592)))
                return 1;
              (l = v & u), (n[l] = (B << 24) | (E << 16) | (h - o) | 0);
            }
          }
          return (
            0 !== v && (n[h + v] = ((p - y) << 24) | (64 << 16) | 0),
            (a.bits = B),
            0
          );
        };
        const {
            Z_FINISH: ft,
            Z_BLOCK: Ct,
            Z_TREES: Bt,
            Z_OK: Et,
            Z_STREAM_END: yt,
            Z_NEED_DICT: mt,
            Z_STREAM_ERROR: Qt,
            Z_DATA_ERROR: vt,
            Z_MEM_ERROR: St,
            Z_BUF_ERROR: wt,
            Z_DEFLATED: bt,
          } = M,
          kt = 16180,
          Nt = 16190,
          _t = 16191,
          Dt = 16192,
          Ot = 16194,
          Tt = 16199,
          Pt = 16200,
          xt = 16206,
          Rt = 16209,
          Ut = (e) =>
            ((e >>> 24) & 255) +
            ((e >>> 8) & 65280) +
            ((65280 & e) << 8) +
            ((255 & e) << 24);
        function Ft() {
          (this.strm = null),
            (this.mode = 0),
            (this.last = !1),
            (this.wrap = 0),
            (this.havedict = !1),
            (this.flags = 0),
            (this.dmax = 0),
            (this.check = 0),
            (this.total = 0),
            (this.head = null),
            (this.wbits = 0),
            (this.wsize = 0),
            (this.whave = 0),
            (this.wnext = 0),
            (this.window = null),
            (this.hold = 0),
            (this.bits = 0),
            (this.length = 0),
            (this.offset = 0),
            (this.extra = 0),
            (this.lencode = null),
            (this.distcode = null),
            (this.lenbits = 0),
            (this.distbits = 0),
            (this.ncode = 0),
            (this.nlen = 0),
            (this.ndist = 0),
            (this.have = 0),
            (this.next = null),
            (this.lens = new Uint16Array(320)),
            (this.work = new Uint16Array(288)),
            (this.lendyn = null),
            (this.distdyn = null),
            (this.sane = 0),
            (this.back = 0),
            (this.was = 0);
        }
        const Ht = (e) => {
            if (!e) return 1;
            const t = e.state;
            return !t || t.strm !== e || t.mode < kt || t.mode > 16211 ? 1 : 0;
          },
          Mt = (e) => {
            if (Ht(e)) return Qt;
            const t = e.state;
            return (
              (e.total_in = e.total_out = t.total = 0),
              (e.msg = ""),
              t.wrap && (e.adler = 1 & t.wrap),
              (t.mode = kt),
              (t.last = 0),
              (t.havedict = 0),
              (t.flags = -1),
              (t.dmax = 32768),
              (t.head = null),
              (t.hold = 0),
              (t.bits = 0),
              (t.lencode = t.lendyn = new Int32Array(852)),
              (t.distcode = t.distdyn = new Int32Array(592)),
              (t.sane = 1),
              (t.back = -1),
              Et
            );
          },
          Gt = (e) => {
            if (Ht(e)) return Qt;
            const t = e.state;
            return (t.wsize = 0), (t.whave = 0), (t.wnext = 0), Mt(e);
          },
          Lt = (e, t) => {
            let r;
            if (Ht(e)) return Qt;
            const i = e.state;
            return (
              t < 0
                ? ((r = 0), (t = -t))
                : ((r = 5 + (t >> 4)), t < 48 && (t &= 15)),
              t && (t < 8 || t > 15)
                ? Qt
                : (null !== i.window && i.wbits !== t && (i.window = null),
                  (i.wrap = r),
                  (i.wbits = t),
                  Gt(e))
            );
          },
          Kt = (e, t) => {
            if (!e) return Qt;
            const r = new Ft();
            (e.state = r), (r.strm = e), (r.window = null), (r.mode = kt);
            const i = Lt(e, t);
            return i !== Et && (e.state = null), i;
          };
        let Yt,
          qt,
          Jt = !0;
        const jt = (e) => {
            if (Jt) {
              (Yt = new Int32Array(512)), (qt = new Int32Array(32));
              let t = 0;
              for (; t < 144; ) e.lens[t++] = 8;
              for (; t < 256; ) e.lens[t++] = 9;
              for (; t < 280; ) e.lens[t++] = 7;
              for (; t < 288; ) e.lens[t++] = 8;
              for (
                dt(1, e.lens, 0, 288, Yt, 0, e.work, { bits: 9 }), t = 0;
                t < 32;

              )
                e.lens[t++] = 5;
              dt(2, e.lens, 0, 32, qt, 0, e.work, { bits: 5 }), (Jt = !1);
            }
            (e.lencode = Yt),
              (e.lenbits = 9),
              (e.distcode = qt),
              (e.distbits = 5);
          },
          zt = (e, t, r, i) => {
            let n;
            const o = e.state;
            return (
              null === o.window &&
                ((o.wsize = 1 << o.wbits),
                (o.wnext = 0),
                (o.whave = 0),
                (o.window = new Uint8Array(o.wsize))),
              i >= o.wsize
                ? (o.window.set(t.subarray(r - o.wsize, r), 0),
                  (o.wnext = 0),
                  (o.whave = o.wsize))
                : ((n = o.wsize - o.wnext),
                  n > i && (n = i),
                  o.window.set(t.subarray(r - i, r - i + n), o.wnext),
                  (i -= n)
                    ? (o.window.set(t.subarray(r - i, r), 0),
                      (o.wnext = i),
                      (o.whave = o.wsize))
                    : ((o.wnext += n),
                      o.wnext === o.wsize && (o.wnext = 0),
                      o.whave < o.wsize && (o.whave += n))),
              0
            );
          };
        var Vt = Gt,
          Wt = Kt,
          Xt = (e, t) => {
            let r,
              i,
              n,
              o,
              A,
              a,
              s,
              c,
              g,
              l,
              u,
              h,
              I,
              p,
              d,
              f,
              C,
              B,
              E,
              y,
              m,
              Q,
              v = 0;
            const S = new Uint8Array(4);
            let w, b;
            const k = new Uint8Array([
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ]);
            if (Ht(e) || !e.output || (!e.input && 0 !== e.avail_in)) return Qt;
            (r = e.state),
              r.mode === _t && (r.mode = Dt),
              (A = e.next_out),
              (n = e.output),
              (s = e.avail_out),
              (o = e.next_in),
              (i = e.input),
              (a = e.avail_in),
              (c = r.hold),
              (g = r.bits),
              (l = a),
              (u = s),
              (Q = Et);
            e: for (;;)
              switch (r.mode) {
                case kt:
                  if (0 === r.wrap) {
                    r.mode = Dt;
                    break;
                  }
                  for (; g < 16; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if (2 & r.wrap && 35615 === c) {
                    0 === r.wbits && (r.wbits = 15),
                      (r.check = 0),
                      (S[0] = 255 & c),
                      (S[1] = (c >>> 8) & 255),
                      (r.check = F(r.check, S, 2, 0)),
                      (c = 0),
                      (g = 0),
                      (r.mode = 16181);
                    break;
                  }
                  if (
                    (r.head && (r.head.done = !1),
                    !(1 & r.wrap) || (((255 & c) << 8) + (c >> 8)) % 31)
                  ) {
                    (e.msg = "incorrect header check"), (r.mode = Rt);
                    break;
                  }
                  if ((15 & c) !== bt) {
                    (e.msg = "unknown compression method"), (r.mode = Rt);
                    break;
                  }
                  if (
                    ((c >>>= 4),
                    (g -= 4),
                    (m = 8 + (15 & c)),
                    0 === r.wbits && (r.wbits = m),
                    m > 15 || m > r.wbits)
                  ) {
                    (e.msg = "invalid window size"), (r.mode = Rt);
                    break;
                  }
                  (r.dmax = 1 << r.wbits),
                    (r.flags = 0),
                    (e.adler = r.check = 1),
                    (r.mode = 512 & c ? 16189 : _t),
                    (c = 0),
                    (g = 0);
                  break;
                case 16181:
                  for (; g < 16; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if (((r.flags = c), (255 & r.flags) !== bt)) {
                    (e.msg = "unknown compression method"), (r.mode = Rt);
                    break;
                  }
                  if (57344 & r.flags) {
                    (e.msg = "unknown header flags set"), (r.mode = Rt);
                    break;
                  }
                  r.head && (r.head.text = (c >> 8) & 1),
                    512 & r.flags &&
                      4 & r.wrap &&
                      ((S[0] = 255 & c),
                      (S[1] = (c >>> 8) & 255),
                      (r.check = F(r.check, S, 2, 0))),
                    (c = 0),
                    (g = 0),
                    (r.mode = 16182);
                case 16182:
                  for (; g < 32; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  r.head && (r.head.time = c),
                    512 & r.flags &&
                      4 & r.wrap &&
                      ((S[0] = 255 & c),
                      (S[1] = (c >>> 8) & 255),
                      (S[2] = (c >>> 16) & 255),
                      (S[3] = (c >>> 24) & 255),
                      (r.check = F(r.check, S, 4, 0))),
                    (c = 0),
                    (g = 0),
                    (r.mode = 16183);
                case 16183:
                  for (; g < 16; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  r.head && ((r.head.xflags = 255 & c), (r.head.os = c >> 8)),
                    512 & r.flags &&
                      4 & r.wrap &&
                      ((S[0] = 255 & c),
                      (S[1] = (c >>> 8) & 255),
                      (r.check = F(r.check, S, 2, 0))),
                    (c = 0),
                    (g = 0),
                    (r.mode = 16184);
                case 16184:
                  if (1024 & r.flags) {
                    for (; g < 16; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (r.length = c),
                      r.head && (r.head.extra_len = c),
                      512 & r.flags &&
                        4 & r.wrap &&
                        ((S[0] = 255 & c),
                        (S[1] = (c >>> 8) & 255),
                        (r.check = F(r.check, S, 2, 0))),
                      (c = 0),
                      (g = 0);
                  } else r.head && (r.head.extra = null);
                  r.mode = 16185;
                case 16185:
                  if (
                    1024 & r.flags &&
                    ((h = r.length),
                    h > a && (h = a),
                    h &&
                      (r.head &&
                        ((m = r.head.extra_len - r.length),
                        r.head.extra ||
                          (r.head.extra = new Uint8Array(r.head.extra_len)),
                        r.head.extra.set(i.subarray(o, o + h), m)),
                      512 & r.flags &&
                        4 & r.wrap &&
                        (r.check = F(r.check, i, h, o)),
                      (a -= h),
                      (o += h),
                      (r.length -= h)),
                    r.length)
                  )
                    break e;
                  (r.length = 0), (r.mode = 16186);
                case 16186:
                  if (2048 & r.flags) {
                    if (0 === a) break e;
                    h = 0;
                    do {
                      (m = i[o + h++]),
                        r.head &&
                          m &&
                          r.length < 65536 &&
                          (r.head.name += String.fromCharCode(m));
                    } while (m && h < a);
                    if (
                      (512 & r.flags &&
                        4 & r.wrap &&
                        (r.check = F(r.check, i, h, o)),
                      (a -= h),
                      (o += h),
                      m)
                    )
                      break e;
                  } else r.head && (r.head.name = null);
                  (r.length = 0), (r.mode = 16187);
                case 16187:
                  if (4096 & r.flags) {
                    if (0 === a) break e;
                    h = 0;
                    do {
                      (m = i[o + h++]),
                        r.head &&
                          m &&
                          r.length < 65536 &&
                          (r.head.comment += String.fromCharCode(m));
                    } while (m && h < a);
                    if (
                      (512 & r.flags &&
                        4 & r.wrap &&
                        (r.check = F(r.check, i, h, o)),
                      (a -= h),
                      (o += h),
                      m)
                    )
                      break e;
                  } else r.head && (r.head.comment = null);
                  r.mode = 16188;
                case 16188:
                  if (512 & r.flags) {
                    for (; g < 16; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    if (4 & r.wrap && c !== (65535 & r.check)) {
                      (e.msg = "header crc mismatch"), (r.mode = Rt);
                      break;
                    }
                    (c = 0), (g = 0);
                  }
                  r.head &&
                    ((r.head.hcrc = (r.flags >> 9) & 1), (r.head.done = !0)),
                    (e.adler = r.check = 0),
                    (r.mode = _t);
                  break;
                case 16189:
                  for (; g < 32; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  (e.adler = r.check = Ut(c)), (c = 0), (g = 0), (r.mode = Nt);
                case Nt:
                  if (0 === r.havedict)
                    return (
                      (e.next_out = A),
                      (e.avail_out = s),
                      (e.next_in = o),
                      (e.avail_in = a),
                      (r.hold = c),
                      (r.bits = g),
                      mt
                    );
                  (e.adler = r.check = 1), (r.mode = _t);
                case _t:
                  if (t === Ct || t === Bt) break e;
                case Dt:
                  if (r.last) {
                    (c >>>= 7 & g), (g -= 7 & g), (r.mode = xt);
                    break;
                  }
                  for (; g < 3; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  switch (((r.last = 1 & c), (c >>>= 1), (g -= 1), 3 & c)) {
                    case 0:
                      r.mode = 16193;
                      break;
                    case 1:
                      if ((jt(r), (r.mode = Tt), t === Bt)) {
                        (c >>>= 2), (g -= 2);
                        break e;
                      }
                      break;
                    case 2:
                      r.mode = 16196;
                      break;
                    case 3:
                      (e.msg = "invalid block type"), (r.mode = Rt);
                  }
                  (c >>>= 2), (g -= 2);
                  break;
                case 16193:
                  for (c >>>= 7 & g, g -= 7 & g; g < 32; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if ((65535 & c) != ((c >>> 16) ^ 65535)) {
                    (e.msg = "invalid stored block lengths"), (r.mode = Rt);
                    break;
                  }
                  if (
                    ((r.length = 65535 & c),
                    (c = 0),
                    (g = 0),
                    (r.mode = Ot),
                    t === Bt)
                  )
                    break e;
                case Ot:
                  r.mode = 16195;
                case 16195:
                  if (((h = r.length), h)) {
                    if ((h > a && (h = a), h > s && (h = s), 0 === h)) break e;
                    n.set(i.subarray(o, o + h), A),
                      (a -= h),
                      (o += h),
                      (s -= h),
                      (A += h),
                      (r.length -= h);
                    break;
                  }
                  r.mode = _t;
                  break;
                case 16196:
                  for (; g < 14; ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if (
                    ((r.nlen = 257 + (31 & c)),
                    (c >>>= 5),
                    (g -= 5),
                    (r.ndist = 1 + (31 & c)),
                    (c >>>= 5),
                    (g -= 5),
                    (r.ncode = 4 + (15 & c)),
                    (c >>>= 4),
                    (g -= 4),
                    r.nlen > 286 || r.ndist > 30)
                  ) {
                    (e.msg = "too many length or distance symbols"),
                      (r.mode = Rt);
                    break;
                  }
                  (r.have = 0), (r.mode = 16197);
                case 16197:
                  for (; r.have < r.ncode; ) {
                    for (; g < 3; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (r.lens[k[r.have++]] = 7 & c), (c >>>= 3), (g -= 3);
                  }
                  for (; r.have < 19; ) r.lens[k[r.have++]] = 0;
                  if (
                    ((r.lencode = r.lendyn),
                    (r.lenbits = 7),
                    (w = { bits: r.lenbits }),
                    (Q = dt(0, r.lens, 0, 19, r.lencode, 0, r.work, w)),
                    (r.lenbits = w.bits),
                    Q)
                  ) {
                    (e.msg = "invalid code lengths set"), (r.mode = Rt);
                    break;
                  }
                  (r.have = 0), (r.mode = 16198);
                case 16198:
                  for (; r.have < r.nlen + r.ndist; ) {
                    for (
                      ;
                      (v = r.lencode[c & ((1 << r.lenbits) - 1)]),
                        (d = v >>> 24),
                        (f = (v >>> 16) & 255),
                        (C = 65535 & v),
                        !(d <= g);

                    ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    if (C < 16) (c >>>= d), (g -= d), (r.lens[r.have++] = C);
                    else {
                      if (16 === C) {
                        for (b = d + 2; g < b; ) {
                          if (0 === a) break e;
                          a--, (c += i[o++] << g), (g += 8);
                        }
                        if (((c >>>= d), (g -= d), 0 === r.have)) {
                          (e.msg = "invalid bit length repeat"), (r.mode = Rt);
                          break;
                        }
                        (m = r.lens[r.have - 1]),
                          (h = 3 + (3 & c)),
                          (c >>>= 2),
                          (g -= 2);
                      } else if (17 === C) {
                        for (b = d + 3; g < b; ) {
                          if (0 === a) break e;
                          a--, (c += i[o++] << g), (g += 8);
                        }
                        (c >>>= d),
                          (g -= d),
                          (m = 0),
                          (h = 3 + (7 & c)),
                          (c >>>= 3),
                          (g -= 3);
                      } else {
                        for (b = d + 7; g < b; ) {
                          if (0 === a) break e;
                          a--, (c += i[o++] << g), (g += 8);
                        }
                        (c >>>= d),
                          (g -= d),
                          (m = 0),
                          (h = 11 + (127 & c)),
                          (c >>>= 7),
                          (g -= 7);
                      }
                      if (r.have + h > r.nlen + r.ndist) {
                        (e.msg = "invalid bit length repeat"), (r.mode = Rt);
                        break;
                      }
                      for (; h--; ) r.lens[r.have++] = m;
                    }
                  }
                  if (r.mode === Rt) break;
                  if (0 === r.lens[256]) {
                    (e.msg = "invalid code -- missing end-of-block"),
                      (r.mode = Rt);
                    break;
                  }
                  if (
                    ((r.lenbits = 9),
                    (w = { bits: r.lenbits }),
                    (Q = dt(1, r.lens, 0, r.nlen, r.lencode, 0, r.work, w)),
                    (r.lenbits = w.bits),
                    Q)
                  ) {
                    (e.msg = "invalid literal/lengths set"), (r.mode = Rt);
                    break;
                  }
                  if (
                    ((r.distbits = 6),
                    (r.distcode = r.distdyn),
                    (w = { bits: r.distbits }),
                    (Q = dt(
                      2,
                      r.lens,
                      r.nlen,
                      r.ndist,
                      r.distcode,
                      0,
                      r.work,
                      w
                    )),
                    (r.distbits = w.bits),
                    Q)
                  ) {
                    (e.msg = "invalid distances set"), (r.mode = Rt);
                    break;
                  }
                  if (((r.mode = Tt), t === Bt)) break e;
                case Tt:
                  r.mode = Pt;
                case Pt:
                  if (a >= 6 && s >= 258) {
                    (e.next_out = A),
                      (e.avail_out = s),
                      (e.next_in = o),
                      (e.avail_in = a),
                      (r.hold = c),
                      (r.bits = g),
                      lt(e, u),
                      (A = e.next_out),
                      (n = e.output),
                      (s = e.avail_out),
                      (o = e.next_in),
                      (i = e.input),
                      (a = e.avail_in),
                      (c = r.hold),
                      (g = r.bits),
                      r.mode === _t && (r.back = -1);
                    break;
                  }
                  for (
                    r.back = 0;
                    (v = r.lencode[c & ((1 << r.lenbits) - 1)]),
                      (d = v >>> 24),
                      (f = (v >>> 16) & 255),
                      (C = 65535 & v),
                      !(d <= g);

                  ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if (f && 0 == (240 & f)) {
                    for (
                      B = d, E = f, y = C;
                      (v = r.lencode[y + ((c & ((1 << (B + E)) - 1)) >> B)]),
                        (d = v >>> 24),
                        (f = (v >>> 16) & 255),
                        (C = 65535 & v),
                        !(B + d <= g);

                    ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (c >>>= B), (g -= B), (r.back += B);
                  }
                  if (
                    ((c >>>= d),
                    (g -= d),
                    (r.back += d),
                    (r.length = C),
                    0 === f)
                  ) {
                    r.mode = 16205;
                    break;
                  }
                  if (32 & f) {
                    (r.back = -1), (r.mode = _t);
                    break;
                  }
                  if (64 & f) {
                    (e.msg = "invalid literal/length code"), (r.mode = Rt);
                    break;
                  }
                  (r.extra = 15 & f), (r.mode = 16201);
                case 16201:
                  if (r.extra) {
                    for (b = r.extra; g < b; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (r.length += c & ((1 << r.extra) - 1)),
                      (c >>>= r.extra),
                      (g -= r.extra),
                      (r.back += r.extra);
                  }
                  (r.was = r.length), (r.mode = 16202);
                case 16202:
                  for (
                    ;
                    (v = r.distcode[c & ((1 << r.distbits) - 1)]),
                      (d = v >>> 24),
                      (f = (v >>> 16) & 255),
                      (C = 65535 & v),
                      !(d <= g);

                  ) {
                    if (0 === a) break e;
                    a--, (c += i[o++] << g), (g += 8);
                  }
                  if (0 == (240 & f)) {
                    for (
                      B = d, E = f, y = C;
                      (v = r.distcode[y + ((c & ((1 << (B + E)) - 1)) >> B)]),
                        (d = v >>> 24),
                        (f = (v >>> 16) & 255),
                        (C = 65535 & v),
                        !(B + d <= g);

                    ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (c >>>= B), (g -= B), (r.back += B);
                  }
                  if (((c >>>= d), (g -= d), (r.back += d), 64 & f)) {
                    (e.msg = "invalid distance code"), (r.mode = Rt);
                    break;
                  }
                  (r.offset = C), (r.extra = 15 & f), (r.mode = 16203);
                case 16203:
                  if (r.extra) {
                    for (b = r.extra; g < b; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    (r.offset += c & ((1 << r.extra) - 1)),
                      (c >>>= r.extra),
                      (g -= r.extra),
                      (r.back += r.extra);
                  }
                  if (r.offset > r.dmax) {
                    (e.msg = "invalid distance too far back"), (r.mode = Rt);
                    break;
                  }
                  r.mode = 16204;
                case 16204:
                  if (0 === s) break e;
                  if (((h = u - s), r.offset > h)) {
                    if (((h = r.offset - h), h > r.whave && r.sane)) {
                      (e.msg = "invalid distance too far back"), (r.mode = Rt);
                      break;
                    }
                    h > r.wnext
                      ? ((h -= r.wnext), (I = r.wsize - h))
                      : (I = r.wnext - h),
                      h > r.length && (h = r.length),
                      (p = r.window);
                  } else (p = n), (I = A - r.offset), (h = r.length);
                  h > s && (h = s), (s -= h), (r.length -= h);
                  do {
                    n[A++] = p[I++];
                  } while (--h);
                  0 === r.length && (r.mode = Pt);
                  break;
                case 16205:
                  if (0 === s) break e;
                  (n[A++] = r.length), s--, (r.mode = Pt);
                  break;
                case xt:
                  if (r.wrap) {
                    for (; g < 32; ) {
                      if (0 === a) break e;
                      a--, (c |= i[o++] << g), (g += 8);
                    }
                    if (
                      ((u -= s),
                      (e.total_out += u),
                      (r.total += u),
                      4 & r.wrap &&
                        u &&
                        (e.adler = r.check =
                          r.flags
                            ? F(r.check, n, u, A - u)
                            : R(r.check, n, u, A - u)),
                      (u = s),
                      4 & r.wrap && (r.flags ? c : Ut(c)) !== r.check)
                    ) {
                      (e.msg = "incorrect data check"), (r.mode = Rt);
                      break;
                    }
                    (c = 0), (g = 0);
                  }
                  r.mode = 16207;
                case 16207:
                  if (r.wrap && r.flags) {
                    for (; g < 32; ) {
                      if (0 === a) break e;
                      a--, (c += i[o++] << g), (g += 8);
                    }
                    if (4 & r.wrap && c !== (4294967295 & r.total)) {
                      (e.msg = "incorrect length check"), (r.mode = Rt);
                      break;
                    }
                    (c = 0), (g = 0);
                  }
                  r.mode = 16208;
                case 16208:
                  Q = yt;
                  break e;
                case Rt:
                  Q = vt;
                  break e;
                case 16210:
                  return St;
                default:
                  return Qt;
              }
            return (
              (e.next_out = A),
              (e.avail_out = s),
              (e.next_in = o),
              (e.avail_in = a),
              (r.hold = c),
              (r.bits = g),
              (r.wsize ||
                (u !== e.avail_out &&
                  r.mode < Rt &&
                  (r.mode < xt || t !== ft))) &&
                zt(e, e.output, e.next_out, u - e.avail_out),
              (l -= e.avail_in),
              (u -= e.avail_out),
              (e.total_in += l),
              (e.total_out += u),
              (r.total += u),
              4 & r.wrap &&
                u &&
                (e.adler = r.check =
                  r.flags
                    ? F(r.check, n, u, e.next_out - u)
                    : R(r.check, n, u, e.next_out - u)),
              (e.data_type =
                r.bits +
                (r.last ? 64 : 0) +
                (r.mode === _t ? 128 : 0) +
                (r.mode === Tt || r.mode === Ot ? 256 : 0)),
              ((0 === l && 0 === u) || t === ft) && Q === Et && (Q = wt),
              Q
            );
          },
          Zt = (e) => {
            if (Ht(e)) return Qt;
            let t = e.state;
            return t.window && (t.window = null), (e.state = null), Et;
          },
          $t = (e, t) => {
            if (Ht(e)) return Qt;
            const r = e.state;
            return 0 == (2 & r.wrap) ? Qt : ((r.head = t), (t.done = !1), Et);
          },
          er = (e, t) => {
            const r = t.length;
            let i, n, o;
            return Ht(e)
              ? Qt
              : ((i = e.state),
                0 !== i.wrap && i.mode !== Nt
                  ? Qt
                  : i.mode === Nt &&
                    ((n = 1), (n = R(n, t, r, 0)), n !== i.check)
                  ? vt
                  : ((o = zt(e, t, r, r)),
                    o ? ((i.mode = 16210), St) : ((i.havedict = 1), Et)));
          },
          tr = function () {
            (this.text = 0),
              (this.time = 0),
              (this.xflags = 0),
              (this.os = 0),
              (this.extra = null),
              (this.extra_len = 0),
              (this.name = ""),
              (this.comment = ""),
              (this.hcrc = 0),
              (this.done = !1);
          };
        const rr = Object.prototype.toString,
          {
            Z_NO_FLUSH: ir,
            Z_FINISH: nr,
            Z_OK: or,
            Z_STREAM_END: Ar,
            Z_NEED_DICT: ar,
            Z_STREAM_ERROR: sr,
            Z_DATA_ERROR: cr,
            Z_MEM_ERROR: gr,
          } = M;
        function lr(e) {
          this.options = Ke(
            { chunkSize: 65536, windowBits: 15, to: "" },
            e || {}
          );
          const t = this.options;
          t.raw &&
            t.windowBits >= 0 &&
            t.windowBits < 16 &&
            ((t.windowBits = -t.windowBits),
            0 === t.windowBits && (t.windowBits = -15)),
            !(t.windowBits >= 0 && t.windowBits < 16) ||
              (e && e.windowBits) ||
              (t.windowBits += 32),
            t.windowBits > 15 &&
              t.windowBits < 48 &&
              0 == (15 & t.windowBits) &&
              (t.windowBits |= 15),
            (this.err = 0),
            (this.msg = ""),
            (this.ended = !1),
            (this.chunks = []),
            (this.strm = new We()),
            (this.strm.avail_out = 0);
          let r = Wt(this.strm, t.windowBits);
          if (r !== or) throw new Error(H[r]);
          if (
            ((this.header = new tr()),
            $t(this.strm, this.header),
            t.dictionary &&
              ("string" == typeof t.dictionary
                ? (t.dictionary = je(t.dictionary))
                : "[object ArrayBuffer]" === rr.call(t.dictionary) &&
                  (t.dictionary = new Uint8Array(t.dictionary)),
              t.raw && ((r = er(this.strm, t.dictionary)), r !== or)))
          )
            throw new Error(H[r]);
        }
        function ur(e, t) {
          const r = new lr(t);
          if ((r.push(e), r.err)) throw r.msg || H[r.err];
          return r.result;
        }
        (lr.prototype.push = function (e, t) {
          const r = this.strm,
            i = this.options.chunkSize,
            n = this.options.dictionary;
          let o, A, a;
          if (this.ended) return !1;
          for (
            A = t === ~~t ? t : !0 === t ? nr : ir,
              "[object ArrayBuffer]" === rr.call(e)
                ? (r.input = new Uint8Array(e))
                : (r.input = e),
              r.next_in = 0,
              r.avail_in = r.input.length;
            ;

          ) {
            for (
              0 === r.avail_out &&
                ((r.output = new Uint8Array(i)),
                (r.next_out = 0),
                (r.avail_out = i)),
                o = Xt(r, A),
                o === ar &&
                  n &&
                  ((o = er(r, n)),
                  o === or ? (o = Xt(r, A)) : o === cr && (o = ar));
              r.avail_in > 0 &&
              o === Ar &&
              r.state.wrap > 0 &&
              0 !== e[r.next_in];

            )
              Vt(r), (o = Xt(r, A));
            switch (o) {
              case sr:
              case cr:
              case ar:
              case gr:
                return this.onEnd(o), (this.ended = !0), !1;
            }
            if (
              ((a = r.avail_out), r.next_out && (0 === r.avail_out || o === Ar))
            )
              if ("string" === this.options.to) {
                let e = Ve(r.output, r.next_out),
                  t = r.next_out - e,
                  n = ze(r.output, e);
                (r.next_out = t),
                  (r.avail_out = i - t),
                  t && r.output.set(r.output.subarray(e, e + t), 0),
                  this.onData(n);
              } else
                this.onData(
                  r.output.length === r.next_out
                    ? r.output
                    : r.output.subarray(0, r.next_out)
                );
            if (o !== or || 0 !== a) {
              if (o === Ar)
                return (
                  (o = Zt(this.strm)), this.onEnd(o), (this.ended = !0), !0
                );
              if (0 === r.avail_in) break;
            }
          }
          return !0;
        }),
          (lr.prototype.onData = function (e) {
            this.chunks.push(e);
          }),
          (lr.prototype.onEnd = function (e) {
            e === or &&
              ("string" === this.options.to
                ? (this.result = this.chunks.join(""))
                : (this.result = Ye(this.chunks))),
              (this.chunks = []),
              (this.err = e),
              (this.msg = this.strm.msg);
          });
        var hr = {
          Inflate: lr,
          inflate: ur,
          inflateRaw: function (e, t) {
            return ((t = t || {}).raw = !0), ur(e, t);
          },
          ungzip: ur,
          constants: M,
        };
        const { Deflate: Ir, deflate: pr, deflateRaw: dr, gzip: fr } = ct,
          { Inflate: Cr, inflate: Br, inflateRaw: Er, ungzip: yr } = hr;
        var mr = pr;
      },
      9612: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              GP: () => s,
              UE: () => c,
              W$: () => l,
              YW: () => g,
              oL: () => a,
            });
            var n = r(85671),
              o = r(43137),
              A = e([n]);
            function a(e) {
              return s(e ? 1n : 0n);
            }
            function s(e) {
              return (0, n.qR)(e);
            }
            function c(e, t = 8) {
              const r = { maximumVmNumberByteLength: t },
                i = (0, n.X5)(e, r);
              if ((0, n.oN)(i)) throw new Error(i);
              return i;
            }
            function g(e) {
              return (0, o.L)(e);
            }
            function l(e) {
              return new Uint8Array(e).fill(0);
            }
            (n = (A.then ? (await A)() : A)[0]), i();
          } catch (u) {
            i(u);
          }
        });
      },
      42543: (e, t, r) => {
        "use strict";
        r.d(t, { JQ: () => n, M9: () => o, Wi: () => A });
        var i = r(34485);
        function n(e) {
          return Uint8Array.from(i.sha256().update(e).digest());
        }
        function o(e) {
          return (function (e) {
            return Uint8Array.from(i.ripemd160().update(e).digest());
          })(n(e));
        }
        function A(e) {
          return n(n(e));
        }
      },
      80976: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              IA: () => f,
              Kr: () => h,
              MM: () => u,
              Op: () => g,
              Zl: () => d,
              dQ: () => B,
            });
            var n = r(16043),
              o = r(85671),
              A = r(67289),
              a = r(34684),
              s = r(9612),
              c = e([o, A, s]);
            [o, A, s] = c.then ? (await c)() : c;
            const g = n.oM;
            function l(e) {
              return p(h(e));
            }
            function u(e) {
              return (
                (t = I(e)),
                (0, o.og)(t).map((e) => ("data" in e ? e.data : e.opcode))
              );
              var t;
            }
            function h(e) {
              const t = e.map((e) =>
                "number" == typeof e
                  ? { opcode: e }
                  : (0, o.og)((0, A.WV)(e))[0]
              );
              return (0, o.V6)(t);
            }
            function I(e) {
              const t = (e = e.replace(/\s+/g, " ").trim())
                .split(" ")
                .map((e) =>
                  e.startsWith("OP_")
                    ? { opcode: g[e] }
                    : (0, o.og)((0, A.WV)((0, a.kW)(e)))[0]
                );
              return (0, o.V6)(t);
            }
            function p(e) {
              let t = (0, o.$n)(e);
              return (
                (t = t.replace(/OP_PUSHBYTES_[^\s]+/g, "")),
                (t = t.replace(/OP_PUSHDATA[^\s]+ [^\s]+/g, "")),
                (t = t.replace(/(^|\s)0x/g, " ")),
                (t = t.replace(/\s+/g, " ").trim()),
                t
              );
            }
            function d(e) {
              return e
                .filter((e) => "number" == typeof e)
                .filter((e) => e > g.OP_16).length;
            }
            function f(e) {
              return h(e).byteLength;
            }
            function C(e) {
              const t = e.findIndex((e) => e === g.OP_NOP);
              if (t < 0) return e;
              e.splice(t, 1);
              let r = e[t];
              if (r instanceof Uint8Array) r = Number((0, s.UE)(r));
              else if (r === g.OP_0) r = 0;
              else {
                if (!(r >= g.OP_1 && r <= g.OP_16)) return e;
                r -= 80;
              }
              return (
                (e[t] = (0, s.GP)(BigInt(r + 1))),
                f(e) > 252 && (e[t] = (0, s.GP)(BigInt(r + 3))),
                u(l(e))
              );
            }
            function B(e, t) {
              return C([...t, ...e]);
            }
            i();
          } catch (E) {
            i(E);
          }
        });
      },
      4899: (e, t, r) => {
        "use strict";
        r.d(t, { MX: () => n, gZ: () => o, x1: () => i });
        class i {
          constructor(e) {
            this.bound = e;
          }
          static fromString(e) {
            const t =
              "byte" === e ? 1 : Number.parseInt(e.substring(5), 10) || void 0;
            return new i(t);
          }
          toString() {
            return `bytes${this.bound ?? ""}`;
          }
        }
        var n;
        function o(e) {
          return e.startsWith("byte") ? i.fromString(e) : n[e.toUpperCase()];
        }
        !(function (e) {
          (e.INT = "int"),
            (e.BOOL = "bool"),
            (e.STRING = "string"),
            (e.PUBKEY = "pubkey"),
            (e.SIG = "sig"),
            (e.DATASIG = "datasig"),
            (e.ANY = "any");
        })(n || (n = {})),
          n.INT,
          n.INT,
          n.BOOL,
          n.BOOL,
          n.BOOL,
          n.INT,
          n.STRING,
          n.STRING,
          n.PUBKEY,
          n.PUBKEY,
          n.SIG,
          n.SIG,
          n.DATASIG,
          n.DATASIG,
          n.ANY;
      },
      44694: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $d: () => _,
              D3: () => c,
              Dw: () => p,
              GK: () => l,
              H: () => E,
              HW: () => f,
              Pf: () => v,
              R3: () => B,
              Te: () => w,
              UW: () => y,
              dq: () => k,
              fJ: () => g,
              fk: () => C,
              ih: () => Q,
              ik: () => m,
              m5: () => I,
              oU: () => h,
              pU: () => S,
              qG: () => b,
              sE: () => N,
              to: () => d,
            });
            var n = r(56394),
              o = r(50370),
              A = r(65301),
              a = e([o]);
            o = (a.then ? (await a)() : a)[0];
            class s extends Error {
              constructor(e, t) {
                e.location && (t += ` at ${e.location.start}`),
                  super(t),
                  (this.name = this.constructor.name),
                  (this.node = e);
              }
            }
            class c extends Error {
              constructor(e, t) {
                const r = t instanceof A.E ? t : t?.start;
                r && (e += ` at ${r}`),
                  super(e),
                  (this.name = this.constructor.name);
              }
            }
            class g extends s {
              constructor(e) {
                super(e, `Undefined reference to symbol ${e.name}`),
                  (this.node = e);
              }
            }
            class l extends s {
              constructor(e, t) {
                super(
                  e,
                  `Found symbol ${e.name} with type ${e.definition?.symbolType} where type ${t} was expected`
                ),
                  (this.node = e),
                  (this.expected = t);
              }
            }
            class u extends s {}
            class h extends u {
              constructor(e) {
                super(e, `Redefinition of function ${e.name}`), (this.node = e);
              }
            }
            class I extends u {
              constructor(e) {
                super(e, `Redefinition of variable ${e.name}`), (this.node = e);
              }
            }
            class p extends s {
              constructor(e) {
                super(e.definition, `Unused variable ${e.name}`),
                  (this.symbol = e);
              }
            }
            class d extends s {
              constructor(e) {
                super(e, `Contract ${e.name} contains no functions`),
                  (this.node = e);
              }
            }
            class f extends s {
              constructor(e) {
                super(e, `Function ${e.name} contains no statements`),
                  (this.node = e);
              }
            }
            class C extends s {
              constructor(e) {
                super(
                  e,
                  "Final statement is expected to be a require() statement"
                ),
                  (this.node = e);
              }
            }
            class B extends s {
              constructor(e, t, r, i) {
                super(
                  e,
                  i ?? `Found type '${t}' where type '${r}' was expected`
                ),
                  (this.actual = t),
                  (this.expected = r);
              }
            }
            class E extends B {
              constructor(e, t, r) {
                super(
                  e,
                  t,
                  r,
                  `Found parameters (${t}) in call to function '${
                    e instanceof o.s5 ? "require" : e.identifier.name
                  }' where parameters (${r}) were expected`
                );
              }
            }
            class y extends B {
              constructor(e) {
                const t = e.left.type,
                  r = e.right.type;
                super(
                  e,
                  t,
                  r,
                  `Tried to apply operator '${e.operator}' to unequal types '${t}' and '${r}'`
                );
              }
            }
            class m extends B {
              constructor(e, t, r) {
                if (e instanceof o.yl && e.operator.startsWith("."))
                  r === n.MX.INT
                    ? super(
                        e,
                        t,
                        r,
                        `Tried to call member 'split' with unsupported parameter type '${t}'`
                      )
                    : super(
                        e,
                        t,
                        r,
                        `Tried to call member 'split' on unsupported type '${t}'`
                      );
                else if (e instanceof o.yl)
                  super(
                    e,
                    t,
                    r,
                    `Tried to apply operator '${e.operator}' to unsupported type '${t}'`
                  );
                else if (e instanceof o.bz && e.operator.startsWith("."))
                  super(
                    e,
                    t,
                    r,
                    `Tried to access member '${e.operator}' on unsupported type '${t}'`
                  );
                else if (e instanceof o.bz && e.operator.includes("[i]")) {
                  const [i] = e.operator.split("[i]");
                  super(
                    e,
                    t,
                    r,
                    `Tried to index '${i}''with unsupported type '${t}'`
                  );
                } else
                  e instanceof o.bz
                    ? super(
                        e,
                        t,
                        r,
                        `Tried to apply operator '${e.operator}' to unsupported type '${t}'`
                      )
                    : e instanceof o.K6
                    ? super(
                        e,
                        t,
                        r,
                        `Tried to apply operator '>=' on unsupported type '${t}'`
                      )
                    : e instanceof o.H7
                    ? super(e, t, r, `Tried to index unsupported type '${t}'`)
                    : super(e, t, r);
              }
            }
            class Q extends B {
              constructor(e) {
                super(
                  e,
                  e.expression.type,
                  e.type,
                  `Type '${e.expression.type}' is not castable to type '${e.type}'`
                );
              }
            }
            class v extends s {
              constructor(e) {
                super(e, "Unexpected cast size argument found");
              }
            }
            class S extends B {
              constructor(e) {
                const t = e instanceof o.fg ? e.identifier.type : e.type;
                super(
                  e,
                  e.expression.type,
                  t,
                  `Type '${e.expression.type}' can not be assigned to variable of type '${t}'`
                );
              }
            }
            class w extends s {
              constructor(e) {
                super(e, "Expression must return a tuple to use destructuring");
              }
            }
            class b extends s {
              constructor(e) {
                super(e, `Tried to modify immutable variable '${e.name}'`);
              }
            }
            class k extends s {
              constructor(e) {
                super(e, "Incorrect elements in array");
              }
            }
            class N extends s {
              constructor(e) {
                super(e, `Index ${e.index} out of bounds`);
              }
            }
            class _ extends Error {
              constructor(e, t) {
                super(
                  `cashc version ${e} does not satisfy version constraint ${t}`
                ),
                  (this.name = this.constructor.name);
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      97129: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { K: () => a });
            var n = r(73947),
              o = r(63243),
              A = e([n, o]);
            function a(e, t, r) {
              const { contract: i } = e,
                A = i.parameters.map((e) => ({
                  name: e.name,
                  type: e.type.toString(),
                })),
                a = i.functions.map((e) => ({
                  name: e.name,
                  inputs: e.parameters.map((e) => ({
                    name: e.name,
                    type: e.type.toString(),
                  })),
                })),
                s = (0, n.Tu)(t);
              return {
                contractName: i.name,
                constructorInputs: A,
                abi: a,
                bytecode: s,
                source: r,
                compiler: { name: "cashc", version: o.i8 },
                updatedAt: new Date().toISOString(),
              };
            }
            ([n, o] = A.then ? (await A)() : A), i();
          } catch (s) {
            i(s);
          }
        });
      },
      50370: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              CW: () => d,
              DU: () => B,
              EO: () => p,
              G6: () => C,
              H7: () => y,
              IV: () => g,
              K6: () => h,
              KS: () => s,
              Qh: () => o,
              Ss: () => _,
              TV: () => w,
              TX: () => v,
              U3: () => l,
              UK: () => E,
              ZP: () => k,
              bz: () => Q,
              f3: () => S,
              fg: () => u,
              h4: () => N,
              nM: () => D,
              oU: () => A,
              p$: () => a,
              s5: () => I,
              yl: () => m,
            });
            var n = r(56394);
            class e {}
            class o extends e {
              constructor(e) {
                super(), (this.contract = e);
              }
              accept(e) {
                return e.visitSourceFile(this);
              }
            }
            class A extends e {
              constructor(e, t, r) {
                super(),
                  (this.name = e),
                  (this.parameters = t),
                  (this.functions = r);
              }
              accept(e) {
                return e.visitContract(this);
              }
            }
            class a extends e {
              constructor(e, t, r) {
                super(),
                  (this.name = e),
                  (this.parameters = t),
                  (this.body = r),
                  (this.opRolls = new Map());
              }
              accept(e) {
                return e.visitFunctionDefinition(this);
              }
            }
            class s extends e {
              constructor(e, t) {
                super(), (this.type = e), (this.name = t);
              }
              accept(e) {
                return e.visitParameter(this);
              }
            }
            class c extends e {}
            class g extends c {
              constructor(e, t, r, i) {
                super(),
                  (this.type = e),
                  (this.modifier = t),
                  (this.name = r),
                  (this.expression = i);
              }
              accept(e) {
                return e.visitVariableDefinition(this);
              }
            }
            class l extends c {
              constructor(e, t, r) {
                super(), (this.var1 = e), (this.var2 = t), (this.tuple = r);
              }
              accept(e) {
                return e.visitTupleAssignment(this);
              }
            }
            class u extends c {
              constructor(e, t) {
                super(), (this.identifier = e), (this.expression = t);
              }
              accept(e) {
                return e.visitAssign(this);
              }
            }
            class h extends c {
              constructor(e, t) {
                super(), (this.timeOp = e), (this.expression = t);
              }
              accept(e) {
                return e.visitTimeOp(this);
              }
            }
            class I extends c {
              constructor(e) {
                super(), (this.expression = e);
              }
              accept(e) {
                return e.visitRequire(this);
              }
            }
            class p extends c {
              constructor(e, t, r) {
                super(),
                  (this.condition = e),
                  (this.ifBlock = t),
                  (this.elseBlock = r);
              }
              accept(e) {
                return e.visitBranch(this);
              }
            }
            class d extends e {
              constructor(e) {
                super(), (this.statements = e);
              }
              accept(e) {
                return e.visitBlock(this);
              }
            }
            class f extends e {}
            class C extends f {
              constructor(e, t, r) {
                super(),
                  (this.type = e),
                  (this.expression = t),
                  (this.size = r);
              }
              accept(e) {
                return e.visitCast(this);
              }
            }
            class B extends f {
              constructor(e, t) {
                super(), (this.identifier = e), (this.parameters = t);
              }
              accept(e) {
                return e.visitFunctionCall(this);
              }
            }
            class E extends f {
              constructor(e, t) {
                super(), (this.identifier = e), (this.parameters = t);
              }
              accept(e) {
                return e.visitInstantiation(this);
              }
            }
            class y extends f {
              constructor(e, t) {
                super(), (this.tuple = e), (this.index = t);
              }
              accept(e) {
                return e.visitTupleIndexOp(this);
              }
            }
            class m extends f {
              constructor(e, t, r) {
                super(), (this.left = e), (this.operator = t), (this.right = r);
              }
              accept(e) {
                return e.visitBinaryOp(this);
              }
            }
            class Q extends f {
              constructor(e, t) {
                super(), (this.operator = e), (this.expression = t);
              }
              accept(e) {
                return e.visitUnaryOp(this);
              }
            }
            class v extends f {
              constructor(e) {
                super(), (this.operator = e);
              }
              accept(e) {
                return e.visitNullaryOp(this);
              }
            }
            class S extends f {
              constructor(e) {
                super(), (this.elements = e);
              }
              accept(e) {
                return e.visitArray(this);
              }
            }
            class w extends f {
              constructor(e) {
                super(), (this.name = e);
              }
              accept(e) {
                return e.visitIdentifier(this);
              }
            }
            class b extends f {}
            class k extends b {
              constructor(e) {
                super(), (this.value = e), (this.type = n.MX.BOOL);
              }
              accept(e) {
                return e.visitBoolLiteral(this);
              }
            }
            class N extends b {
              constructor(e) {
                super(), (this.value = e), (this.type = n.MX.INT);
              }
              accept(e) {
                return e.visitIntLiteral(this);
              }
            }
            class _ extends b {
              constructor(e, t) {
                super(),
                  (this.value = e),
                  (this.quote = t),
                  (this.type = n.MX.STRING);
              }
              accept(e) {
                return e.visitStringLiteral(this);
              }
            }
            class D extends b {
              constructor(e) {
                super(), (this.value = e), (this.type = new n.x1(e.byteLength));
              }
              accept(e) {
                return e.visitHexLiteral(this);
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      81495: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => p });
            var n = r(34684),
              o = r(56394),
              A = r(14941),
              a = r(81249),
              s = r(50370),
              c = r(65301),
              g = r(85757),
              l = r(21959),
              u = r(63243),
              h = r(44694),
              I = e([s, u, h, g]);
            [s, u, h, g] = I.then ? (await I)() : I;
            class p extends A.AbstractParseTreeVisitor {
              constructor(e) {
                super(), (this.tree = e);
              }
              defaultResult() {
                return new s.ZP(!1);
              }
              build() {
                return this.visit(this.tree);
              }
              visitSourceFile(e) {
                e.pragmaDirective().forEach((e) => {
                  this.processPragma(e);
                });
                const t = this.visit(e.contractDefinition()),
                  r = new s.Qh(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              processPragma(e) {
                if ((0, l.Kk)(e.pragmaName().text) !== l.cO.CASHSCRIPT)
                  throw new Error();
                const t = u.i8.replace(/-.*/g, "");
                e.pragmaValue()
                  .versionConstraint()
                  .forEach((e) => {
                    const r = `${(0, l.lc)(e.versionOperator())}${
                      e.VersionLiteral().text
                    }`;
                    if (!a.satisfies(t, r)) throw new h.$d(t, r);
                  });
              }
              visitContractDefinition(e) {
                const t = e.Identifier().text,
                  r = e
                    .parameterList()
                    .parameter()
                    .map((e) => this.visit(e)),
                  i = e.functionDefinition().map((e) => this.visit(e)),
                  n = new s.oU(t, r, i);
                return (n.location = c.Y.fromCtx(e)), n;
              }
              visitFunctionDefinition(e) {
                const t = e.Identifier().text,
                  r = e
                    .parameterList()
                    .parameter()
                    .map((e) => this.visit(e)),
                  i = e.statement().map((e) => this.visit(e)),
                  n = new s.CW(i);
                n.location = c.Y.fromCtx(e);
                const o = new s.p$(t, r, n);
                return (o.location = c.Y.fromCtx(e)), o;
              }
              visitParameter(e) {
                const t = (0, o.gZ)(e.typeName().text),
                  r = e.Identifier().text,
                  i = new s.KS(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitVariableDefinition(e) {
                const t = (0, o.gZ)(e.typeName().text),
                  r = e.modifier().map((e) => e.text),
                  i = e.Identifier().text,
                  n = this.visit(e.expression()),
                  A = new s.IV(t, r, i, n);
                return (A.location = c.Y.fromCtx(e)), A;
              }
              visitTupleAssignment(e) {
                const t = this.visit(e.expression()),
                  r = e.Identifier(),
                  i = e.typeName(),
                  [n, A] = r.map((e, t) => ({
                    name: e.text,
                    type: (0, o.gZ)(i[t].text),
                  })),
                  a = new s.U3(n, A, t);
                return (a.location = c.Y.fromCtx(e)), a;
              }
              visitAssignStatement(e) {
                const t = new s.TV(e.Identifier().text);
                t.location = c.Y.fromToken(e.Identifier().symbol);
                const r = this.visit(e.expression()),
                  i = new s.fg(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitTimeOpStatement(e) {
                const t = this.visit(e.expression()),
                  r = new s.K6(e.TxVar().text, t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              visitRequireStatement(e) {
                const t = this.visit(e.expression()),
                  r = new s.s5(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              visitIfStatement(e) {
                const t = this.visit(e.expression()),
                  r = this.visit(e._ifBlock),
                  i = e._elseBlock && this.visit(e._elseBlock),
                  n = new s.EO(t, r, i);
                return (n.location = c.Y.fromCtx(e)), n;
              }
              visitBlock(e) {
                const t = e.statement().map((e) => this.visit(e)),
                  r = new s.CW(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              visitParenthesised(e) {
                return this.visit(e.expression());
              }
              visitCast(e) {
                const t = (0, o.gZ)(e.typeName().text),
                  r = this.visit(e._castable),
                  i = e._size && this.visit(e._size),
                  n = new s.G6(t, r, i);
                return (n.location = c.Y.fromCtx(e)), n;
              }
              visitFunctionCallExpression(e) {
                return this.visit(e.functionCall());
              }
              visitFunctionCall(e) {
                const t = new s.TV(e.Identifier().text);
                t.location = c.Y.fromToken(e.Identifier().symbol);
                const r = e
                    .expressionList()
                    .expression()
                    .map((e) => this.visit(e)),
                  i = new s.DU(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitInstantiation(e) {
                const t = new s.TV(e.Identifier().text);
                t.location = c.Y.fromToken(e.Identifier().symbol);
                const r = e
                    .expressionList()
                    .expression()
                    .map((e) => this.visit(e)),
                  i = new s.UK(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitTupleIndexOp(e) {
                const t = this.visit(e.expression()),
                  r = parseInt(e._index.text, 10),
                  i = new s.H7(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitNullaryOp(e) {
                const t = e.text,
                  r = new s.TX(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              visitUnaryIntrospectionOp(e) {
                const t = `${e._scope.text}[i]${e._op.text}`,
                  r = this.visit(e.expression()),
                  i = new s.bz(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitUnaryOp(e) {
                const t = e._op.text,
                  r = this.visit(e.expression()),
                  i = new s.bz(t, r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
              visitBinaryOp(e) {
                const t = this.visit(e._left),
                  r = e._op.text,
                  i = this.visit(e._right),
                  n = new s.yl(t, r, i);
                return (n.location = c.Y.fromCtx(e)), n;
              }
              visitArray(e) {
                const t = e.expression().map((e) => this.visit(e)),
                  r = new s.f3(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              visitIdentifier(e) {
                const t = new s.TV(e.Identifier().text);
                return (t.location = c.Y.fromCtx(e)), t;
              }
              visitLiteralExpression(e) {
                return this.createLiteral(e.literal());
              }
              createLiteral(e) {
                if (e.BooleanLiteral()) return this.createBooleanLiteral(e);
                if (e.numberLiteral()) return this.createIntLiteral(e);
                if (e.StringLiteral()) return this.createStringLiteral(e);
                if (e.DateLiteral()) return this.createDateLiteral(e);
                if (e.HexLiteral()) return this.createHexLiteral(e);
                throw new Error();
              }
              createBooleanLiteral(e) {
                const t = "true" === e.BooleanLiteral().text,
                  r = new s.ZP(t);
                return (r.location = c.Y.fromCtx(e)), r;
              }
              createIntLiteral(e) {
                const t = e.numberLiteral(),
                  r = t.NumberLiteral().text,
                  i = t.NumberUnit()?.text,
                  n = BigInt(r) * BigInt(i ? g.aQ[i.toUpperCase()] : 1),
                  o = new s.h4(n);
                return (o.location = c.Y.fromCtx(e)), o;
              }
              createStringLiteral(e) {
                const t = e.StringLiteral().text,
                  r = t.substring(1, t.length - 1),
                  i = t.substring(0, 1),
                  n = new s.Ss(r, i);
                return (n.location = c.Y.fromCtx(e)), n;
              }
              createDateLiteral(e) {
                const t = e.DateLiteral().text,
                  r = t.substring(6, t.length - 2).trim();
                if (!/^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d$/.test(r))
                  throw new h.D3(
                    "Date should be in format `YYYY-MM-DDThh:mm:ss`",
                    c.Y.fromCtx(e)
                  );
                const i = Math.round(Date.parse(r) / 1e3);
                if (Number.isNaN(i))
                  throw new h.D3(
                    `Incorrectly formatted date "${r}"`,
                    c.Y.fromCtx(e)
                  );
                const n = new s.h4(BigInt(i));
                return (n.location = c.Y.fromCtx(e)), n;
              }
              createHexLiteral(e) {
                const t = e.HexLiteral().text,
                  r = (0, n.kW)(t.substring(2)),
                  i = new s.nM(r);
                return (i.location = c.Y.fromCtx(e)), i;
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      69204: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => n });
        class i {
          visit(e) {
            return e.accept(this);
          }
          visitOptional(e) {
            return e && this.visit(e);
          }
          visitList(e) {
            return e.map((e) => this.visit(e));
          }
          visitOptionalList(e) {
            return e && this.visitList(e);
          }
        }
        class n extends i {
          visitSourceFile(e) {
            return (e.contract = this.visit(e.contract)), e;
          }
          visitContract(e) {
            return (
              (e.parameters = this.visitList(e.parameters)),
              (e.functions = this.visitList(e.functions)),
              e
            );
          }
          visitFunctionDefinition(e) {
            return (
              (e.parameters = this.visitList(e.parameters)),
              (e.body = this.visit(e.body)),
              e
            );
          }
          visitParameter(e) {
            return e;
          }
          visitVariableDefinition(e) {
            return (e.expression = this.visit(e.expression)), e;
          }
          visitTupleAssignment(e) {
            return (e.tuple = this.visit(e.tuple)), e;
          }
          visitAssign(e) {
            return (
              (e.identifier = this.visit(e.identifier)),
              (e.expression = this.visit(e.expression)),
              e
            );
          }
          visitTimeOp(e) {
            return (e.expression = this.visit(e.expression)), e;
          }
          visitRequire(e) {
            return (e.expression = this.visit(e.expression)), e;
          }
          visitBranch(e) {
            return (
              (e.condition = this.visit(e.condition)),
              (e.ifBlock = this.visit(e.ifBlock)),
              (e.elseBlock = this.visitOptional(e.elseBlock)),
              e
            );
          }
          visitBlock(e) {
            return (e.statements = this.visitOptionalList(e.statements)), e;
          }
          visitCast(e) {
            return (
              (e.expression = this.visit(e.expression)),
              (e.size = this.visitOptional(e.size)),
              e
            );
          }
          visitFunctionCall(e) {
            return (
              (e.identifier = this.visit(e.identifier)),
              (e.parameters = this.visitList(e.parameters)),
              e
            );
          }
          visitInstantiation(e) {
            return (
              (e.identifier = this.visit(e.identifier)),
              (e.parameters = this.visitList(e.parameters)),
              e
            );
          }
          visitTupleIndexOp(e) {
            return (e.tuple = this.visit(e.tuple)), e;
          }
          visitBinaryOp(e) {
            return (
              (e.left = this.visit(e.left)), (e.right = this.visit(e.right)), e
            );
          }
          visitUnaryOp(e) {
            return (e.expression = this.visit(e.expression)), e;
          }
          visitNullaryOp(e) {
            return e;
          }
          visitArray(e) {
            return (e.elements = this.visitList(e.elements)), e;
          }
          visitIdentifier(e) {
            return e;
          }
          visitBoolLiteral(e) {
            return e;
          }
          visitIntLiteral(e) {
            return e;
          }
          visitStringLiteral(e) {
            return e;
          }
          visitHexLiteral(e) {
            return e;
          }
        }
      },
      85757: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              Dg: () => c,
              GT: () => g,
              PQ: () => a,
              aQ: () => e,
              hV: () => A,
              wT: () => s,
            });
            var n = r(56394),
              o = r(40120);
            const e = {
              SATOSHIS: 1,
              SATS: 1,
              FINNEY: 10,
              BITS: 100,
              BITCOIN: 1e8,
              SECONDS: 1,
              MINUTES: 60,
              HOURS: 3600,
              DAYS: 86400,
              WEEKS: 604800,
            };
            var A, a, s, c;
            !(function (e) {
              (e.ABS = "abs"),
                (e.MIN = "min"),
                (e.MAX = "max"),
                (e.WITHIN = "within"),
                (e.RIPEMD160 = "ripemd160"),
                (e.SHA1 = "sha1"),
                (e.SHA256 = "sha256"),
                (e.HASH160 = "hash160"),
                (e.HASH256 = "hash256"),
                (e.CHECKSIG = "checkSig"),
                (e.CHECKMULTISIG = "checkMultiSig"),
                (e.CHECKDATASIG = "checkDataSig");
            })(A || (A = {})),
              (function (e) {
                (e.CHECK_SEQUENCE = "tx.age"), (e.CHECK_LOCKTIME = "tx.time");
              })(a || (a = {})),
              (function (e) {
                (e.LOCKING_BYTECODE_P2SH20 = "LockingBytecodeP2SH20"),
                  (e.LOCKING_BYTECODE_P2SH32 = "LockingBytecodeP2SH32"),
                  (e.LOCKING_BYTECODE_P2PKH = "LockingBytecodeP2PKH"),
                  (e.LOCKING_BYTECODE_NULLDATA = "LockingBytecodeNullData");
              })(s || (s = {})),
              (function (e) {
                e.CONSTANT = "constant";
              })(c || (c = {}));
            const g = new o.d6();
            g.set(
              o.mN.class(s.LOCKING_BYTECODE_P2SH20, new n.x1(23), [
                new n.x1(20),
              ])
            ),
              g.set(
                o.mN.class(s.LOCKING_BYTECODE_P2SH32, new n.x1(35), [
                  new n.x1(32),
                ])
              ),
              g.set(
                o.mN.class(s.LOCKING_BYTECODE_P2PKH, new n.x1(25), [
                  new n.x1(20),
                ])
              ),
              g.set(
                o.mN.class(s.LOCKING_BYTECODE_NULLDATA, new n.x1(), [
                  new n.ts(new n.x1()),
                ])
              ),
              g.set(o.mN.function(A.ABS, n.MX.INT, [n.MX.INT])),
              g.set(o.mN.function(A.MIN, n.MX.INT, [n.MX.INT, n.MX.INT])),
              g.set(o.mN.function(A.MAX, n.MX.INT, [n.MX.INT, n.MX.INT])),
              g.set(
                o.mN.function(A.WITHIN, n.MX.BOOL, [
                  n.MX.INT,
                  n.MX.INT,
                  n.MX.INT,
                ])
              ),
              g.set(o.mN.function(A.RIPEMD160, new n.x1(20), [n.MX.ANY])),
              g.set(o.mN.function(A.SHA1, new n.x1(20), [n.MX.ANY])),
              g.set(o.mN.function(A.SHA256, new n.x1(32), [n.MX.ANY])),
              g.set(o.mN.function(A.HASH160, new n.x1(20), [n.MX.ANY])),
              g.set(o.mN.function(A.HASH256, new n.x1(32), [n.MX.ANY])),
              g.set(
                o.mN.function(A.CHECKSIG, n.MX.BOOL, [n.MX.SIG, n.MX.PUBKEY])
              ),
              g.set(
                o.mN.function(A.CHECKMULTISIG, n.MX.BOOL, [
                  new n.ts(n.MX.SIG),
                  new n.ts(n.MX.PUBKEY),
                ])
              ),
              g.set(
                o.mN.function(A.CHECKDATASIG, n.MX.BOOL, [
                  n.MX.DATASIG,
                  new n.x1(),
                  n.MX.PUBKEY,
                ])
              ),
              i();
          } catch (e) {
            i(e);
          }
        });
      },
      65301: (e, t, r) => {
        "use strict";
        r.d(t, { E: () => n, Y: () => i });
        class i {
          constructor(e, t) {
            (this.start = e), (this.end = t);
          }
          static fromCtx(e) {
            const t = e.stop?.text ? e.stop : e.start,
              r = (t.text ?? "").length,
              o = new n(e.start.line, e.start.charPositionInLine),
              A = new n(t.line, t.charPositionInLine + r);
            return new i(o, A);
          }
          static fromToken(e) {
            const t = (e.text ?? "").length,
              r = new n(e.line, e.charPositionInLine),
              o = new n(e.line, e.charPositionInLine + t);
            return new i(r, o);
          }
          text(e) {
            return e.slice(this.start.offset(e), this.end.offset(e));
          }
        }
        class n {
          constructor(e, t) {
            (this.line = e), (this.column = t);
          }
          offset(e) {
            const t = e.split("\n"),
              r = this.line - 1;
            return (
              t.slice(0, r).reduce((e, t) => e + t.length, 0) + r + this.column
            );
          }
          toString() {
            return `Line ${this.line}, Column ${this.column}`;
          }
        }
      },
      84656: (e, t, r) => {
        "use strict";
        var i, n, o;
        r.d(t, { J6: () => o, M: () => n, _E: () => i }),
          (function (e) {
            (e.INPUT_INDEX = "this.activeInputIndex"),
              (e.BYTECODE = "this.activeBytecode"),
              (e.INPUT_COUNT = "tx.inputs.length"),
              (e.OUTPUT_COUNT = "tx.outputs.length"),
              (e.VERSION = "tx.version"),
              (e.LOCKTIME = "tx.locktime");
          })(i || (i = {})),
          (function (e) {
            (e.NOT = "!"),
              (e.NEGATE = "-"),
              (e.SIZE = ".length"),
              (e.REVERSE = ".reverse()"),
              (e.INPUT_VALUE = "tx.inputs[i].value"),
              (e.INPUT_LOCKING_BYTECODE = "tx.inputs[i].lockingBytecode"),
              (e.INPUT_OUTPOINT_HASH = "tx.inputs[i].outpointTransactionHash"),
              (e.INPUT_OUTPOINT_INDEX = "tx.inputs[i].outpointIndex"),
              (e.INPUT_UNLOCKING_BYTECODE = "tx.inputs[i].unlockingBytecode"),
              (e.INPUT_SEQUENCE_NUMBER = "tx.inputs[i].sequenceNumber"),
              (e.OUTPUT_VALUE = "tx.outputs[i].value"),
              (e.OUTPUT_LOCKING_BYTECODE = "tx.outputs[i].lockingBytecode"),
              (e.INPUT_TOKEN_CATEGORY = "tx.inputs[i].tokenCategory"),
              (e.INPUT_NFT_COMMITMENT = "tx.inputs[i].nftCommitment"),
              (e.INPUT_TOKEN_AMOUNT = "tx.inputs[i].tokenAmount"),
              (e.OUTPUT_TOKEN_CATEGORY = "tx.outputs[i].tokenCategory"),
              (e.OUTPUT_NFT_COMMITMENT = "tx.outputs[i].nftCommitment"),
              (e.OUTPUT_TOKEN_AMOUNT = "tx.outputs[i].tokenAmount");
          })(n || (n = {})),
          (function (e) {
            (e.MUL = "*"),
              (e.DIV = "/"),
              (e.MOD = "%"),
              (e.PLUS = "+"),
              (e.MINUS = "-"),
              (e.LT = "<"),
              (e.LE = "<="),
              (e.GT = ">"),
              (e.GE = ">="),
              (e.EQ = "=="),
              (e.NE = "!="),
              (e.BIT_AND = "&"),
              (e.BIT_XOR = "^"),
              (e.BIT_OR = "|"),
              (e.AND = "&&"),
              (e.OR = "||"),
              (e.SPLIT = ".split");
          })(o || (o = {}));
      },
      21959: (e, t, r) => {
        "use strict";
        var i, n;
        function o(e) {
          return i[e.toUpperCase()];
        }
        function A(e) {
          return e ? e.text : "=";
        }
        r.d(t, { Kk: () => o, cO: () => i, lc: () => A }),
          (function (e) {
            e.CASHSCRIPT = "cashscript";
          })(i || (i = {})),
          (function (e) {
            (e.CARET = "^"),
              (e.TILDE = "~"),
              (e.GE = ">="),
              (e.GT = ">"),
              (e.LT = "<"),
              (e.LE = "<="),
              (e.EQ = "=");
          })(n || (n = {}));
      },
      40120: (e, t, r) => {
        "use strict";
        r.d(t, { Ko: () => n, d6: () => o, mN: () => i });
        class i {
          constructor(e, t, r, i, n) {
            (this.name = e),
              (this.type = t),
              (this.symbolType = r),
              (this.definition = i),
              (this.parameters = n),
              (this.references = []);
          }
          static variable(e) {
            return new i(e.name, e.type, n.VARIABLE, e);
          }
          static global(e, t) {
            return new i(e, t, n.VARIABLE);
          }
          static function(e, t, r) {
            return new i(e, t, n.FUNCTION, void 0, r);
          }
          static class(e, t, r) {
            return new i(e, t, n.CLASS, void 0, r);
          }
          toString() {
            let e = `${this.type} ${this.name}`;
            return this.parameters && (e += ` (${this.parameters})`), e;
          }
        }
        var n;
        !(function (e) {
          (e.VARIABLE = "variable"),
            (e.FUNCTION = "function"),
            (e.CLASS = "class");
        })(n || (n = {}));
        class o {
          constructor(e) {
            (this.parent = e), (this.symbols = new Map());
          }
          set(e) {
            this.symbols.set(e.name, e);
          }
          get(e) {
            return this.symbols.get(e) ?? this.parent?.get(e);
          }
          getFromThis(e) {
            return this.symbols.get(e);
          }
          toString() {
            return `[${Array.from(this.symbols).map((e) => e[1])}]`;
          }
          unusedSymbols() {
            return Array.from(this.symbols)
              .map((e) => e[1])
              .filter((e) => 0 === e.references.length);
          }
        }
      },
      11010: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => a });
            var n = r(44694),
              o = r(65301),
              A = e([n]);
            n = (A.then ? (await A)() : A)[0];
            class a {
              syntaxError(e, t, r, i, A, a) {
                const s = A.charAt(0).toUpperCase() + A.slice(1);
                throw new n.D3(s, new o.E(r, i));
              }
            }
            (a.INSTANCE = new a()), i();
          } catch (e) {
            i(e);
          }
        });
      },
      48680: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { P6: () => C, kM: () => f });
            var n = r(73947),
              o = r(45029),
              A = r(36165),
              a = r(97129),
              s = r(81495),
              c = r(11010),
              g = r(96339),
              l = r(87217),
              u = r(88529),
              h = r(18770),
              I = r(85221),
              p = r(41195),
              d = e([h, I, p, g, n, a, c, s]);
            function f(e) {
              let t = B(e);
              (t = t.accept(new h.Z())),
                (t = t.accept(new I.Z())),
                (t = t.accept(new p.Z()));
              const r = new g.Z();
              t = t.accept(r);
              const i = r.output,
                o = (0, n.H_)(i);
              return (0, a.K)(t, o, e);
            }
            function C(e) {
              return f(A.readFileSync(e, { encoding: "utf-8" }));
            }
            function B(e) {
              const t = new o.ANTLRInputStream(e),
                r = new l.X(t);
              r.removeErrorListeners(), r.addErrorListener(c.Z.INSTANCE);
              const i = new o.CommonTokenStream(r),
                n = new u.z3(i);
              n.removeErrorListeners(), n.addErrorListener(c.Z.INSTANCE);
              const A = n.sourceFile();
              return new s.Z(A).build();
            }
            ([h, I, p, g, n, a, c, s] = d.then ? (await d)() : d), i();
          } catch (E) {
            i(E);
          }
        });
      },
      96339: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => I });
            var n = r(34684),
              o = r(73947),
              A = r(63103),
              a = r(56394),
              s = r(50370),
              c = r(69204),
              g = r(85757),
              l = r(84656),
              u = r(72821),
              h = e([o, A, u, g, s]);
            [o, A, u, g, s] = h.then ? (await h)() : h;
            class I extends c.Z {
              constructor() {
                super(...arguments),
                  (this.output = []),
                  (this.stack = []),
                  (this.scopeDepth = 0);
              }
              emit(e) {
                Array.isArray(e) ? this.output.push(...e) : this.output.push(e);
              }
              pushToStack(e, t) {
                t ? this.stack.push(e) : this.stack.unshift(e);
              }
              popFromStack(e = 1) {
                for (let t = 0; t < e; t += 1) this.stack.shift();
              }
              removeFromStack(e) {
                this.stack.splice(e, 1);
              }
              nipFromStack() {
                this.stack.splice(1, 1);
              }
              getStackIndex(e) {
                const t = this.stack.indexOf(e);
                if (-1 === t) throw new Error();
                return t;
              }
              visitSourceFile(e) {
                return (
                  (e.contract = this.visit(e.contract)),
                  (this.output = (0, o.MM)((0, o.Tu)(this.output))),
                  e
                );
              }
              visitContract(e) {
                if (
                  ((e.parameters = this.visitList(e.parameters)),
                  1 === e.functions.length)
                )
                  e.functions = this.visitList(e.functions);
                else {
                  this.pushToStack("$$", !0),
                    (e.functions = e.functions.map((t, r) => {
                      const i = [...this.stack],
                        n = this.getStackIndex("$$");
                      return (
                        this.emit((0, A.GP)(BigInt(n))),
                        r === e.functions.length - 1
                          ? (this.emit(o.Op.OP_ROLL), this.removeFromStack(n))
                          : this.emit(o.Op.OP_PICK),
                        this.emit((0, A.GP)(BigInt(r))),
                        this.emit(o.Op.OP_NUMEQUAL),
                        r < e.functions.length - 1
                          ? this.emit(o.Op.OP_IF)
                          : this.emit(o.Op.OP_VERIFY),
                        (t = this.visit(t)),
                        r < e.functions.length - 1 && this.emit(o.Op.OP_ELSE),
                        (this.stack = [...i]),
                        t
                      );
                    }));
                  for (let t = 0; t < e.functions.length - 1; t += 1)
                    this.emit(o.Op.OP_ENDIF);
                }
                return e;
              }
              visitFunctionDefinition(e) {
                return (
                  (this.currentFunction = e),
                  (e.parameters = this.visitList(e.parameters)),
                  (e.body = this.visit(e.body)),
                  this.removeFinalVerify(),
                  this.cleanStack(),
                  e
                );
              }
              removeFinalVerify() {
                const e = this.output.pop();
                (e === o.Op.OP_VERIFY && this.stack.length < 4) ||
                  (this.emit(e), this.emit(o.Op.OP_1)),
                  this.pushToStack("(value)");
              }
              cleanStack() {
                const e = this.stack.length;
                for (let t = 0; t < e - 1; t += 1)
                  this.emit(o.Op.OP_NIP), this.nipFromStack();
              }
              visitParameter(e) {
                return this.pushToStack(e.name, !0), e;
              }
              visitVariableDefinition(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  this.popFromStack(),
                  this.pushToStack(e.name),
                  e
                );
              }
              visitTupleAssignment(e) {
                return (
                  (e.tuple = this.visit(e.tuple)),
                  this.popFromStack(2),
                  this.pushToStack(e.var1.name),
                  this.pushToStack(e.var2.name),
                  e
                );
              }
              visitAssign(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  this.scopeDepth > 0
                    ? (this.emitReplace(this.getStackIndex(e.identifier.name)),
                      this.popFromStack())
                    : (this.popFromStack(),
                      this.pushToStack(e.identifier.name)),
                  e
                );
              }
              emitReplace(e) {
                this.emit((0, A.GP)(BigInt(e))),
                  this.emit(o.Op.OP_ROLL),
                  this.emit(o.Op.OP_DROP);
                for (let t = 0; t < e - 1; t += 1)
                  this.emit(o.Op.OP_SWAP),
                    t < e - 2 && this.emit(o.Op.OP_TOALTSTACK);
                for (let t = 0; t < e - 2; t += 1)
                  this.emit(o.Op.OP_FROMALTSTACK);
              }
              visitTimeOp(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  this.emit((0, u.nA)(e.timeOp)),
                  this.popFromStack(),
                  e
                );
              }
              visitRequire(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  this.emit(o.Op.OP_VERIFY),
                  this.popFromStack(),
                  e
                );
              }
              visitBranch(e) {
                (e.condition = this.visit(e.condition)),
                  this.popFromStack(),
                  (this.scopeDepth += 1),
                  this.emit(o.Op.OP_IF);
                let t = this.stack.length;
                return (
                  (e.ifBlock = this.visit(e.ifBlock)),
                  this.removeScopedVariables(t),
                  e.elseBlock &&
                    (this.emit(o.Op.OP_ELSE),
                    (t = this.stack.length),
                    (e.elseBlock = this.visit(e.elseBlock)),
                    this.removeScopedVariables(t)),
                  this.emit(o.Op.OP_ENDIF),
                  (this.scopeDepth -= 1),
                  e
                );
              }
              removeScopedVariables(e) {
                const t = this.stack.length - e;
                for (let e = 0; e < t; e += 1)
                  this.emit(o.Op.OP_DROP), this.popFromStack();
              }
              visitCast(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  e.size &&
                    ((e.size = this.visit(e.size)),
                    this.emit(o.Op.OP_NUM2BIN),
                    this.popFromStack()),
                  this.emit((0, u.FH)(e.expression.type, e.type)),
                  this.popFromStack(),
                  this.pushToStack("(value)"),
                  e
                );
              }
              visitFunctionCall(e) {
                return e.identifier.name === g.hV.CHECKMULTISIG
                  ? this.visitMultiSig(e)
                  : ((e.parameters = this.visitList(e.parameters)),
                    this.emit((0, u.g_)(e.identifier.name)),
                    this.popFromStack(e.parameters.length),
                    this.pushToStack("(value)"),
                    e);
              }
              visitMultiSig(e) {
                this.emit((0, A.oL)(!1)),
                  this.pushToStack("(value)"),
                  (e.parameters = this.visitList(e.parameters)),
                  this.emit(o.Op.OP_CHECKMULTISIG);
                const t = e.parameters[0],
                  r = e.parameters[1];
                return (
                  this.popFromStack(t.elements.length + r.elements.length + 3),
                  this.pushToStack("(value)"),
                  e
                );
              }
              visitInstantiation(e) {
                if (e.identifier.name === g.wT.LOCKING_BYTECODE_P2PKH)
                  this.emit((0, n.kW)("76a914")),
                    this.pushToStack("(value)"),
                    this.visit(e.parameters[0]),
                    this.emit(o.Op.OP_CAT),
                    this.emit((0, n.kW)("88ac")),
                    this.emit(o.Op.OP_CAT),
                    this.popFromStack(2);
                else if (e.identifier.name === g.wT.LOCKING_BYTECODE_P2SH20)
                  this.emit((0, n.kW)("a914")),
                    this.pushToStack("(value)"),
                    this.visit(e.parameters[0]),
                    this.emit(o.Op.OP_CAT),
                    this.emit((0, n.kW)("87")),
                    this.emit(o.Op.OP_CAT),
                    this.popFromStack(2);
                else if (e.identifier.name === g.wT.LOCKING_BYTECODE_P2SH32)
                  this.emit((0, n.kW)("aa20")),
                    this.pushToStack("(value)"),
                    this.visit(e.parameters[0]),
                    this.emit(o.Op.OP_CAT),
                    this.emit((0, n.kW)("87")),
                    this.emit(o.Op.OP_CAT),
                    this.popFromStack(2);
                else {
                  if (e.identifier.name !== g.wT.LOCKING_BYTECODE_NULLDATA)
                    throw new Error();
                  {
                    this.emit((0, n.kW)("6a")), this.pushToStack("(value)");
                    const { elements: t } = e.parameters[0];
                    t.forEach((e) => {
                      this.visit(e),
                        this.emit(o.Op.OP_SIZE),
                        e instanceof s.nM
                          ? e.value.byteLength > 75 &&
                            (this.emit((0, n.kW)("4c")),
                            this.emit(o.Op.OP_SWAP),
                            this.emit(o.Op.OP_CAT))
                          : (this.emit(o.Op.OP_DUP),
                            this.emit((0, A.GP)(75n)),
                            this.emit(o.Op.OP_GREATERTHAN),
                            this.emit(o.Op.OP_IF),
                            this.emit((0, n.kW)("4c")),
                            this.emit(o.Op.OP_SWAP),
                            this.emit(o.Op.OP_CAT),
                            this.emit(o.Op.OP_ENDIF)),
                        this.emit(o.Op.OP_SWAP),
                        this.emit(o.Op.OP_CAT),
                        this.emit(o.Op.OP_CAT),
                        this.popFromStack();
                    }),
                      this.popFromStack();
                  }
                }
                return this.pushToStack("(value)"), e;
              }
              visitTupleIndexOp(e) {
                return (
                  (e.tuple = this.visit(e.tuple)),
                  0 === e.index
                    ? (this.emit(o.Op.OP_DROP), this.popFromStack())
                    : 1 === e.index &&
                      (this.emit(o.Op.OP_NIP), this.nipFromStack()),
                  e
                );
              }
              visitBinaryOp(e) {
                (e.left = this.visit(e.left)), (e.right = this.visit(e.right));
                const t = (0, a.w)(e.left.type, e.right.type) === a.MX.INT;
                return (
                  this.emit((0, u.iO)(e.operator, t)),
                  this.popFromStack(2),
                  this.pushToStack("(value)"),
                  e.operator === l.J6.SPLIT && this.pushToStack("(value"),
                  e
                );
              }
              visitUnaryOp(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  this.emit((0, u.XB)(e.operator)),
                  this.popFromStack(),
                  this.pushToStack("(value)"),
                  e
                );
              }
              visitNullaryOp(e) {
                return (
                  this.emit((0, u.eZ)(e.operator)),
                  this.pushToStack("(value)"),
                  e
                );
              }
              visitArray(e) {
                return (
                  (e.elements = this.visitList(e.elements)),
                  this.emit((0, A.GP)(BigInt(e.elements.length))),
                  this.pushToStack("(value)"),
                  e
                );
              }
              visitIdentifier(e) {
                const t = this.getStackIndex(e.name);
                return (
                  this.emit((0, A.GP)(BigInt(t))),
                  this.isOpRoll(e)
                    ? (this.emit(o.Op.OP_ROLL), this.removeFromStack(t))
                    : this.emit(o.Op.OP_PICK),
                  this.pushToStack("(value)"),
                  e
                );
              }
              isOpRoll(e) {
                return (
                  this.currentFunction.opRolls.get(e.name) === e &&
                  0 === this.scopeDepth
                );
              }
              visitBoolLiteral(e) {
                return (
                  this.emit((0, A.oL)(e.value)), this.pushToStack("(value)"), e
                );
              }
              visitIntLiteral(e) {
                return (
                  this.emit((0, A.GP)(e.value)), this.pushToStack("(value)"), e
                );
              }
              visitStringLiteral(e) {
                return (
                  this.emit((0, A.YW)(e.value)), this.pushToStack("(value)"), e
                );
              }
              visitHexLiteral(e) {
                return this.emit(e.value), this.pushToStack("(value)"), e;
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      72821: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              FH: () => l,
              XB: () => I,
              eZ: () => p,
              g_: () => u,
              iO: () => h,
              nA: () => g,
            });
            var n = r(73947),
              o = r(56394),
              A = r(63103),
              a = r(84656),
              s = r(85757),
              c = e([s, n, A]);
            function g(e) {
              return {
                [s.PQ.CHECK_LOCKTIME]: [
                  n.Op.OP_CHECKLOCKTIMEVERIFY,
                  n.Op.OP_DROP,
                ],
                [s.PQ.CHECK_SEQUENCE]: [
                  n.Op.OP_CHECKSEQUENCEVERIFY,
                  n.Op.OP_DROP,
                ],
              }[e];
            }
            function l(e, t) {
              return e === o.MX.INT && t instanceof o.x1 && void 0 !== t.bound
                ? [(0, A.GP)(BigInt(t.bound)), n.Op.OP_NUM2BIN]
                : e !== o.MX.INT && t === o.MX.INT
                ? [n.Op.OP_BIN2NUM]
                : [];
            }
            function u(e) {
              return {
                [s.hV.ABS]: [n.Op.OP_ABS],
                [s.hV.CHECKDATASIG]: [n.Op.OP_CHECKDATASIG],
                [s.hV.CHECKMULTISIG]: [n.Op.OP_CHECKMULTISIG],
                [s.hV.CHECKSIG]: [n.Op.OP_CHECKSIG],
                [s.hV.MAX]: [n.Op.OP_MAX],
                [s.hV.MIN]: [n.Op.OP_MIN],
                [s.hV.RIPEMD160]: [n.Op.OP_RIPEMD160],
                [s.hV.SHA1]: [n.Op.OP_SHA1],
                [s.hV.SHA256]: [n.Op.OP_SHA256],
                [s.hV.HASH160]: [n.Op.OP_HASH160],
                [s.hV.HASH256]: [n.Op.OP_HASH256],
                [s.hV.WITHIN]: [n.Op.OP_WITHIN],
              }[e];
            }
            function h(e, t = !1) {
              const r = {
                [a.J6.MUL]: [n.Op.OP_MUL],
                [a.J6.DIV]: [n.Op.OP_DIV],
                [a.J6.MOD]: [n.Op.OP_MOD],
                [a.J6.PLUS]: [n.Op.OP_CAT],
                [a.J6.MINUS]: [n.Op.OP_SUB],
                [a.J6.LT]: [n.Op.OP_LESSTHAN],
                [a.J6.LE]: [n.Op.OP_LESSTHANOREQUAL],
                [a.J6.GT]: [n.Op.OP_GREATERTHAN],
                [a.J6.GE]: [n.Op.OP_GREATERTHANOREQUAL],
                [a.J6.EQ]: [n.Op.OP_EQUAL],
                [a.J6.NE]: [n.Op.OP_EQUAL, n.Op.OP_NOT],
                [a.J6.AND]: [n.Op.OP_BOOLAND],
                [a.J6.OR]: [n.Op.OP_BOOLOR],
                [a.J6.BIT_AND]: [n.Op.OP_AND],
                [a.J6.BIT_OR]: [n.Op.OP_OR],
                [a.J6.BIT_XOR]: [n.Op.OP_XOR],
                [a.J6.SPLIT]: [n.Op.OP_SPLIT],
              };
              return (
                t &&
                  ((r[a.J6.PLUS] = [n.Op.OP_ADD]),
                  (r[a.J6.EQ] = [n.Op.OP_NUMEQUAL]),
                  (r[a.J6.NE] = [n.Op.OP_NUMNOTEQUAL])),
                r[e]
              );
            }
            function I(e) {
              return {
                [a.M.NOT]: [n.Op.OP_NOT],
                [a.M.NEGATE]: [n.Op.OP_NEGATE],
                [a.M.SIZE]: [n.Op.OP_SIZE, n.Op.OP_NIP],
                [a.M.REVERSE]: [n.Op.OP_REVERSEBYTES],
                [a.M.INPUT_VALUE]: [n.Op.OP_UTXOVALUE],
                [a.M.INPUT_LOCKING_BYTECODE]: [n.Op.OP_UTXOBYTECODE],
                [a.M.INPUT_OUTPOINT_HASH]: [n.Op.OP_OUTPOINTTXHASH],
                [a.M.INPUT_OUTPOINT_INDEX]: [n.Op.OP_OUTPOINTINDEX],
                [a.M.INPUT_UNLOCKING_BYTECODE]: [n.Op.OP_INPUTBYTECODE],
                [a.M.INPUT_SEQUENCE_NUMBER]: [n.Op.OP_INPUTSEQUENCENUMBER],
                [a.M.OUTPUT_VALUE]: [n.Op.OP_OUTPUTVALUE],
                [a.M.OUTPUT_LOCKING_BYTECODE]: [n.Op.OP_OUTPUTBYTECODE],
                [a.M.INPUT_TOKEN_CATEGORY]: [n.Op.OP_UTXOTOKENCATEGORY],
                [a.M.INPUT_NFT_COMMITMENT]: [n.Op.OP_UTXOTOKENCOMMITMENT],
                [a.M.INPUT_TOKEN_AMOUNT]: [n.Op.OP_UTXOTOKENAMOUNT],
                [a.M.OUTPUT_TOKEN_CATEGORY]: [n.Op.OP_OUTPUTTOKENCATEGORY],
                [a.M.OUTPUT_NFT_COMMITMENT]: [n.Op.OP_OUTPUTTOKENCOMMITMENT],
                [a.M.OUTPUT_TOKEN_AMOUNT]: [n.Op.OP_OUTPUTTOKENAMOUNT],
              }[e];
            }
            function p(e) {
              return {
                [a._E.INPUT_INDEX]: [n.Op.OP_INPUTINDEX],
                [a._E.BYTECODE]: [n.Op.OP_ACTIVEBYTECODE],
                [a._E.INPUT_COUNT]: [n.Op.OP_TXINPUTCOUNT],
                [a._E.OUTPUT_COUNT]: [n.Op.OP_TXOUTPUTCOUNT],
                [a._E.VERSION]: [n.Op.OP_TXVERSION],
                [a._E.LOCKTIME]: [n.Op.OP_TXLOCKTIME],
              }[e];
            }
            ([s, n, A] = c.then ? (await c)() : c), i();
          } catch (d) {
            i(d);
          }
        });
      },
      87217: (e, t, r) => {
        "use strict";
        r.d(t, { X: () => s });
        var i = r(56349),
          n = r(8170),
          o = r(49796),
          A = r(61434),
          a = r(93070);
        class s extends n.Lexer {
          constructor(e) {
            super(e), (this._interp = new o.LexerATNSimulator(s._ATN, this));
          }
          get vocabulary() {
            return s.VOCABULARY;
          }
          get grammarFileName() {
            return "CashScript.g4";
          }
          get ruleNames() {
            return s.ruleNames;
          }
          get serializedATN() {
            return s._serializedATN;
          }
          get channelNames() {
            return s.channelNames;
          }
          get modeNames() {
            return s.modeNames;
          }
          static get _ATN() {
            return (
              s.__ATN ||
                (s.__ATN = new i.ATNDeserializer().deserialize(
                  a.toCharArray(s._serializedATN)
                )),
              s.__ATN
            );
          }
        }
        (s.T__0 = 1),
          (s.T__1 = 2),
          (s.T__2 = 3),
          (s.T__3 = 4),
          (s.T__4 = 5),
          (s.T__5 = 6),
          (s.T__6 = 7),
          (s.T__7 = 8),
          (s.T__8 = 9),
          (s.T__9 = 10),
          (s.T__10 = 11),
          (s.T__11 = 12),
          (s.T__12 = 13),
          (s.T__13 = 14),
          (s.T__14 = 15),
          (s.T__15 = 16),
          (s.T__16 = 17),
          (s.T__17 = 18),
          (s.T__18 = 19),
          (s.T__19 = 20),
          (s.T__20 = 21),
          (s.T__21 = 22),
          (s.T__22 = 23),
          (s.T__23 = 24),
          (s.T__24 = 25),
          (s.T__25 = 26),
          (s.T__26 = 27),
          (s.T__27 = 28),
          (s.T__28 = 29),
          (s.T__29 = 30),
          (s.T__30 = 31),
          (s.T__31 = 32),
          (s.T__32 = 33),
          (s.T__33 = 34),
          (s.T__34 = 35),
          (s.T__35 = 36),
          (s.T__36 = 37),
          (s.T__37 = 38),
          (s.T__38 = 39),
          (s.T__39 = 40),
          (s.T__40 = 41),
          (s.T__41 = 42),
          (s.T__42 = 43),
          (s.T__43 = 44),
          (s.T__44 = 45),
          (s.T__45 = 46),
          (s.T__46 = 47),
          (s.T__47 = 48),
          (s.T__48 = 49),
          (s.T__49 = 50),
          (s.T__50 = 51),
          (s.T__51 = 52),
          (s.T__52 = 53),
          (s.T__53 = 54),
          (s.T__54 = 55),
          (s.T__55 = 56),
          (s.VersionLiteral = 57),
          (s.BooleanLiteral = 58),
          (s.NumberUnit = 59),
          (s.NumberLiteral = 60),
          (s.Bytes = 61),
          (s.Bound = 62),
          (s.StringLiteral = 63),
          (s.DateLiteral = 64),
          (s.HexLiteral = 65),
          (s.TxVar = 66),
          (s.NullaryOp = 67),
          (s.Identifier = 68),
          (s.WHITESPACE = 69),
          (s.COMMENT = 70),
          (s.LINE_COMMENT = 71),
          (s.channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]),
          (s.modeNames = ["DEFAULT_MODE"]),
          (s.ruleNames = [
            "T__0",
            "T__1",
            "T__2",
            "T__3",
            "T__4",
            "T__5",
            "T__6",
            "T__7",
            "T__8",
            "T__9",
            "T__10",
            "T__11",
            "T__12",
            "T__13",
            "T__14",
            "T__15",
            "T__16",
            "T__17",
            "T__18",
            "T__19",
            "T__20",
            "T__21",
            "T__22",
            "T__23",
            "T__24",
            "T__25",
            "T__26",
            "T__27",
            "T__28",
            "T__29",
            "T__30",
            "T__31",
            "T__32",
            "T__33",
            "T__34",
            "T__35",
            "T__36",
            "T__37",
            "T__38",
            "T__39",
            "T__40",
            "T__41",
            "T__42",
            "T__43",
            "T__44",
            "T__45",
            "T__46",
            "T__47",
            "T__48",
            "T__49",
            "T__50",
            "T__51",
            "T__52",
            "T__53",
            "T__54",
            "T__55",
            "VersionLiteral",
            "BooleanLiteral",
            "NumberUnit",
            "NumberLiteral",
            "Bytes",
            "Bound",
            "StringLiteral",
            "DateLiteral",
            "HexLiteral",
            "TxVar",
            "NullaryOp",
            "Identifier",
            "WHITESPACE",
            "COMMENT",
            "LINE_COMMENT",
          ]),
          (s._LITERAL_NAMES = [
            void 0,
            "'pragma'",
            "';'",
            "'cashscript'",
            "'^'",
            "'~'",
            "'>='",
            "'>'",
            "'<'",
            "'<='",
            "'='",
            "'contract'",
            "'{'",
            "'}'",
            "'function'",
            "'('",
            "','",
            "')'",
            "'require'",
            "'if'",
            "'else'",
            "'new'",
            "'['",
            "']'",
            "'tx.outputs'",
            "'.value'",
            "'.lockingBytecode'",
            "'.tokenCategory'",
            "'.nftCommitment'",
            "'.tokenAmount'",
            "'tx.inputs'",
            "'.outpointTransactionHash'",
            "'.outpointIndex'",
            "'.unlockingBytecode'",
            "'.sequenceNumber'",
            "'.reverse()'",
            "'.length'",
            "'.split'",
            "'!'",
            "'-'",
            "'*'",
            "'/'",
            "'%'",
            "'+'",
            "'=='",
            "'!='",
            "'&'",
            "'|'",
            "'&&'",
            "'||'",
            "'constant'",
            "'int'",
            "'bool'",
            "'string'",
            "'pubkey'",
            "'sig'",
            "'datasig'",
          ]),
          (s._SYMBOLIC_NAMES = [
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            "VersionLiteral",
            "BooleanLiteral",
            "NumberUnit",
            "NumberLiteral",
            "Bytes",
            "Bound",
            "StringLiteral",
            "DateLiteral",
            "HexLiteral",
            "TxVar",
            "NullaryOp",
            "Identifier",
            "WHITESPACE",
            "COMMENT",
            "LINE_COMMENT",
          ]),
          (s.VOCABULARY = new A.VocabularyImpl(
            s._LITERAL_NAMES,
            s._SYMBOLIC_NAMES,
            []
          )),
          (s._serializedATNSegments = 2),
          (s._serializedATNSegment0 =
            '줝쪺֍꾺体؇쉁Į\b\t\t\t\t\t\t\b\t\b\t\t\t\n\t\n\v\t\v\f\t\f\r\t\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t !\t!"\t"#\t#$\t$%\t%&\t&\'\t\'(\t()\t)*\t*+\t+,\t,-\t-.\t./\t/0\t01\t12\t23\t34\t45\t56\t67\t78\t89\t9:\t:;\t;<\t<=\t=>\t>?\t?@\t@A\tAB\tBC\tCD\tDE\tEF\tFG\tGH\tH\b\b\t\t\n\n\n\v\v\f\f\f\f\f\f\f\f\f\r\r                         !!!!!!!!!!!!!!!"""""""""""""""""""################$$$$$$$$$$$%%%%%%%%&&&&&&&\'\'(())**++,,---...//0011122233333333344445555566666667777777888899999999::ǰ\n:\r::Ǳ:::Ƕ\n:\r::Ƿ:::Ǽ\n:\r::ǽ;;;;;;;;;;ȉ\n;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Ʉ\n<==ɇ\n===Ɋ\n=\r==ɋ===ɐ\n=\r==ɑ=ɔ\n=>>>>>>>>ɝ\n>>>>>>ɣ\n>???ɧ\n?\f??ɪ\v?@@@@@ɰ\n@\f@@ɳ\v@@@@@@@ɺ\n@\f@@ɽ\v@@@ʀ\n@AAAAAAAAABBBBʎ\nB\fBBʑ\vBCCCCCCCCCCCCCCʠ\nCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD̀\nDEEĒ\nE\fEĖ\vEFF̊\nF\rFF̋FFGGGGG̔\nG\fGG̗\vGGGGGGHHHHH̢\nH\fHH̥\vHHHɱɻ̕I\t\v\r\b\t\n\v\f\r!#%\')+-/13579;= ?!A"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5i6k7m8o9q:s;u<w=y>{?}@ABCDEFGHI2;//GGgg3;\f\f$$\f\f))ZZzz2;CHchC\\c|2;C\\aac|\v\f""\f\f͋\t\v\r!#%\')+-/13579;=?ACEGIKMOQSUWY[]_acegikmoqsuwy{}\t¥\v§\r©¬®°³µ¾ÀÂË!Í#Ï%Ñ\'Ù)Ü+á-å/ç1é3ô5û7Č9ě;Ī=ķ?ŁAŚCũEżGƌIƗKƟMƦOƨQƪSƬUƮWưYƲ[Ƶ]Ƹ_ƺaƼcƿeǂgǋiǏkǔmǛoǢqǦsǯuȈwɃyɆ{ɢ}ɤɿʁʊʟ˿́̉̏̝rtcioc=ecuju e ¡t¡¢k¢£r£¤v¤\b¥¦`¦\n§¨¨\f©ª@ª«?«¬­@­®¯>¯°±>±²?²³´?´µ¶e¶·q·¸p¸¹v¹ºtº»c»¼e¼½v½¾¿}¿ÀÁÁÂÃhÃÄwÄÅpÅÆeÆÇvÇÈkÈÉqÉÊpÊËÌ*Ì ÍÎ.Î"ÏÐ+Ð$ÑÒtÒÓgÓÔsÔÕwÕÖkÖ×t×ØgØ&ÙÚkÚÛhÛ(ÜÝgÝÞnÞßußàgà*áâpâãgãäyä,åæ]æ.çè_è0éêvêëzëì0ìíqíîwîïvïðrðñwñòvòóuó2ôõ0õöxö÷c÷ønøùwùúgú4ûü0üýnýþqþÿeÿĀmĀākāĂpĂăiăĄDĄą{ąĆvĆćgćĈeĈĉqĉĊfĊċgċ6Čč0čĎvĎďqďĐmĐđgđĒpĒēEēĔcĔĕvĕĖgĖėiėĘqĘętęĚ{Ě8ěĜ0ĜĝpĝĞhĞğvğĠEĠġqġĢoĢģoģĤkĤĥvĥĦoĦħgħĨpĨĩvĩ:Īī0īĬvĬĭqĭĮmĮįgįİpİıCıĲoĲĳqĳĴwĴĵpĵĶvĶ<ķĸvĸĹzĹĺ0ĺĻkĻļpļĽrĽľwľĿvĿŀuŀ>Łł0łŃqŃńwńŅvŅņrņŇqŇňkňŉpŉŊvŊŋVŋŌtŌōcōŎpŎŏuŏŐcŐőeőŒvŒœkœŔqŔŕpŕŖJŖŗcŗŘuŘřjř@Śś0śŜqŜŝwŝŞvŞşrşŠqŠškšŢpŢţvţŤKŤťpťŦfŦŧgŧŨzŨBũŪ0ŪūwūŬpŬŭnŭŮqŮůeůŰmŰűkűŲpŲųiųŴDŴŵ{ŵŶvŶŷgŷŸeŸŹqŹźfźŻgŻDżŽ0ŽžužſgſƀsƀƁwƁƂgƂƃpƃƄeƄƅgƅƆPƆƇwƇƈoƈƉdƉƊgƊƋtƋFƌƍ0ƍƎtƎƏgƏƐxƐƑgƑƒtƒƓuƓƔgƔƕ*ƕƖ+ƖHƗƘ0ƘƙnƙƚgƚƛpƛƜiƜƝvƝƞjƞJƟƠ0ƠơuơƢrƢƣnƣƤkƤƥvƥLƦƧ#ƧNƨƩ/ƩPƪƫ,ƫRƬƭ1ƭTƮƯ\'ƯVưƱ-ƱXƲƳ?Ƴƴ?ƴZƵƶ#ƶƷ?Ʒ\\Ƹƹ(ƹ^ƺƻ~ƻ`Ƽƽ(ƽƾ(ƾbƿǀ~ǀǁ~ǁdǂǃeǃǄqǄǅpǅǆuǆǇvǇǈcǈǉpǉǊvǊfǋǌkǌǍpǍǎvǎhǏǐdǐǑqǑǒqǒǓnǓjǔǕuǕǖvǖǗtǗǘkǘǙpǙǚiǚlǛǜrǜǝwǝǞdǞǟmǟǠgǠǡ{ǡnǢǣuǣǤkǤǥiǥpǦǧfǧǨcǨǩvǩǪcǪǫuǫǬkǬǭiǭrǮǰ\tǯǮǰǱǱǯǱǲǲǳǳǵ0ǴǶ\tǵǴǶǷǷǵǷǸǸǹǹǻ0ǺǼ\tǻǺ'),
          (s._serializedATNSegment1 =
            "ǼǽǽǻǽǾǾtǿȀvȀȁtȁȂwȂȉgȃȄhȄȅcȅȆnȆȇuȇȉgȈǿȈȃȉvȊȋuȋȌcȌȍvȍȎqȎȏuȏȐjȐȑkȑɄuȒȓuȓȔcȔȕvȕɄuȖȗhȗȘkȘșpșȚpȚțgțɄ{ȜȝdȝȞkȞȟvȟɄuȠȡdȡȢkȢȣvȣȤeȤȥqȥȦkȦɄpȧȨuȨȩgȩȪeȪȫqȫȬpȬȭfȭɄuȮȯoȯȰkȰȱpȱȲwȲȳvȳȴgȴɄuȵȶjȶȷqȷȸwȸȹtȹɄuȺȻfȻȼcȼȽ{ȽɄuȾȿyȿɀgɀɁgɁɂmɂɄuɃȊɃȒɃȖɃȜɃȠɃȧɃȮɃȵɃȺɃȾɄxɅɇ\tɆɅɆɇɇɉɈɊ\tɉɈɊɋɋɉɋɌɌɓɍɏ\tɎɐ\tɏɎɐɑɑɏɑɒɒɔɓɍɓɔɔzɕɖdɖɗ{ɗɘvɘəgəɚuɚɜɛɝ}?ɜɛɜɝɝɣɞɟdɟɠ{ɠɡvɡɣgɢɕɢɞɣ|ɤɨ\tɥɧ\tɦɥɧɪɨɦɨɩɩ~ɪɨɫɱ$ɬɭ^ɭɰ$ɮɰ\nɯɬɯɮɰɳɱɲɱɯɲɴɳɱɴʀ$ɵɻ)ɶɷ^ɷɺ)ɸɺ\nɹɶɹɸɺɽɻɼɻɹɼɾɽɻɾʀ)ɿɫɿɵʀʁʂfʂʃcʃʄvʄʅgʅʆ*ʆʇʇʈ@ʈʉ+ʉʊʋ2ʋʏ\t\bʌʎ\t\tʍʌʎʑʏʍʏʐʐʑʏʒʓvʓʔzʔʕ0ʕʖcʖʗiʗʠgʘʙvʙʚzʚʛ0ʛʜvʜʝkʝʞoʞʠgʟʒʟʘʠʡʢvʢʣjʣʤkʤʥuʥʦ0ʦʧcʧʨeʨʩvʩʪkʪʫxʫʬgʬʭKʭʮpʮʯrʯʰwʰʱvʱʲKʲʳpʳʴfʴʵgʵ̀zʶʷvʷʸjʸʹkʹʺuʺʻ0ʻʼcʼʽeʽʾvʾʿkʿˀxˀˁgˁ˂D˂˃{˃˄v˄˅g˅ˆeˆˇqˇˈfˈ̀gˉˊvˊˋzˋˌ0ˌˍkˍˎpˎˏrˏːwːˑvˑ˒u˒˓0˓˔n˔˕g˕˖p˖˗i˗˘v˘̀j˙˚v˚˛z˛˜0˜˝q˝˞w˞˟v˟ˠrˠˡwˡˢvˢˣuˣˤ0ˤ˥n˥˦g˦˧p˧˨i˨˩v˩̀j˪˫v˫ˬzˬ˭0˭ˮxˮ˯g˯˰t˰˱u˱˲k˲˳q˳̀p˴˵v˵˶z˶˷0˷˸n˸˹q˹˺e˺˻m˻˼v˼˽k˽˾o˾̀g˿ʡ˿ʶ˿ˉ˿˙˿˪˿˴̀́̅\t\n̂̄\t\v̃̂̄̇̅̃̅̆̆̇̅̈̊\t\f̉̈̊̋̋̉̋̌̌̍̍̎\bF̎̏̐1̐̑,̑̕̒̔\v̓̒̗̔̖̕̓̕̖̘̗̕̘̙,̙̚1̛̚̛̜\bG̜̝̞1̞̟1̟̣̢̠\n\r̡̠̢̥̡̣̣̤̤̦̥̣̧̦\bH̧ǱǷǽȈɃɆɋɑɓɜɢɨɯɱɹɻɿʏʟ˿̣̅̋̕\b"),
          (s._serializedATN = a.join(
            [s._serializedATNSegment0, s._serializedATNSegment1],
            ""
          ));
      },
      88529: (e, t, r) => {
        "use strict";
        r.d(t, { z3: () => I });
        var i = r(68148),
          n = r(56349),
          o = r(81103),
          A = r(61202),
          a = r(53679),
          s = r(39248),
          c = r(14217),
          g = r(1100),
          l = r(48999),
          u = r(61434),
          h = r(93070);
        class I extends a.Parser {
          constructor(e) {
            super(e), (this._interp = new c.ParserATNSimulator(I._ATN, this));
          }
          get vocabulary() {
            return I.VOCABULARY;
          }
          get grammarFileName() {
            return "CashScript.g4";
          }
          get ruleNames() {
            return I.ruleNames;
          }
          get serializedATN() {
            return I._serializedATN;
          }
          createFailedPredicateException(e, t) {
            return new o.FailedPredicateException(this, e, t);
          }
          sourceFile() {
            let e,
              t = new p(this._ctx, this.state);
            this.enterRule(t, 0, I.RULE_sourceFile);
            try {
              for (
                this.enterOuterAlt(t, 1),
                  this.state = 53,
                  this._errHandler.sync(this),
                  e = this._input.LA(1);
                e === I.T__0;

              )
                (this.state = 50),
                  this.pragmaDirective(),
                  (this.state = 55),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1));
              (this.state = 56),
                this.contractDefinition(),
                (this.state = 57),
                this.match(I.EOF);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          pragmaDirective() {
            let e = new d(this._ctx, this.state);
            this.enterRule(e, 2, I.RULE_pragmaDirective);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 59),
                this.match(I.T__0),
                (this.state = 60),
                this.pragmaName(),
                (this.state = 61),
                this.pragmaValue(),
                (this.state = 62),
                this.match(I.T__1);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          pragmaName() {
            let e = new f(this._ctx, this.state);
            this.enterRule(e, 4, I.RULE_pragmaName);
            try {
              this.enterOuterAlt(e, 1), (this.state = 64), this.match(I.T__2);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          pragmaValue() {
            let e,
              t = new C(this._ctx, this.state);
            this.enterRule(t, 6, I.RULE_pragmaValue);
            try {
              this.enterOuterAlt(t, 1),
                (this.state = 66),
                this.versionConstraint(),
                (this.state = 68),
                this._errHandler.sync(this),
                (e = this._input.LA(1)),
                ((0 == (-32 & e) &&
                  0 !=
                    ((1 << e) &
                      ((1 << I.T__3) |
                        (1 << I.T__4) |
                        (1 << I.T__5) |
                        (1 << I.T__6) |
                        (1 << I.T__7) |
                        (1 << I.T__8) |
                        (1 << I.T__9)))) ||
                  e === I.VersionLiteral) &&
                  ((this.state = 67), this.versionConstraint());
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          versionConstraint() {
            let e,
              t = new B(this._ctx, this.state);
            this.enterRule(t, 8, I.RULE_versionConstraint);
            try {
              this.enterOuterAlt(t, 1),
                (this.state = 71),
                this._errHandler.sync(this),
                (e = this._input.LA(1)),
                0 == (-32 & e) &&
                  0 !=
                    ((1 << e) &
                      ((1 << I.T__3) |
                        (1 << I.T__4) |
                        (1 << I.T__5) |
                        (1 << I.T__6) |
                        (1 << I.T__7) |
                        (1 << I.T__8) |
                        (1 << I.T__9))) &&
                  ((this.state = 70), this.versionOperator()),
                (this.state = 73),
                this.match(I.VersionLiteral);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          versionOperator() {
            let e,
              t = new E(this._ctx, this.state);
            this.enterRule(t, 10, I.RULE_versionOperator);
            try {
              this.enterOuterAlt(t, 1),
                (this.state = 75),
                (e = this._input.LA(1)),
                0 != (-32 & e) ||
                0 ==
                  ((1 << e) &
                    ((1 << I.T__3) |
                      (1 << I.T__4) |
                      (1 << I.T__5) |
                      (1 << I.T__6) |
                      (1 << I.T__7) |
                      (1 << I.T__8) |
                      (1 << I.T__9)))
                  ? this._errHandler.recoverInline(this)
                  : (this._input.LA(1) === l.Token.EOF &&
                      (this.matchedEOF = !0),
                    this._errHandler.reportMatch(this),
                    this.consume());
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          contractDefinition() {
            let e,
              t = new y(this._ctx, this.state);
            this.enterRule(t, 12, I.RULE_contractDefinition);
            try {
              for (
                this.enterOuterAlt(t, 1),
                  this.state = 77,
                  this.match(I.T__10),
                  this.state = 78,
                  this.match(I.Identifier),
                  this.state = 79,
                  this.parameterList(),
                  this.state = 80,
                  this.match(I.T__11),
                  this.state = 84,
                  this._errHandler.sync(this),
                  e = this._input.LA(1);
                e === I.T__13;

              )
                (this.state = 81),
                  this.functionDefinition(),
                  (this.state = 86),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1));
              (this.state = 87), this.match(I.T__12);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          functionDefinition() {
            let e,
              t = new m(this._ctx, this.state);
            this.enterRule(t, 14, I.RULE_functionDefinition);
            try {
              for (
                this.enterOuterAlt(t, 1),
                  this.state = 89,
                  this.match(I.T__13),
                  this.state = 90,
                  this.match(I.Identifier),
                  this.state = 91,
                  this.parameterList(),
                  this.state = 92,
                  this.match(I.T__11),
                  this.state = 96,
                  this._errHandler.sync(this),
                  e = this._input.LA(1);
                e === I.T__17 ||
                e === I.T__18 ||
                (0 == ((e - 51) & -32) &&
                  0 !=
                    ((1 << (e - 51)) &
                      ((1 << (I.T__50 - 51)) |
                        (1 << (I.T__51 - 51)) |
                        (1 << (I.T__52 - 51)) |
                        (1 << (I.T__53 - 51)) |
                        (1 << (I.T__54 - 51)) |
                        (1 << (I.T__55 - 51)) |
                        (1 << (I.Bytes - 51)) |
                        (1 << (I.Identifier - 51)))));

              )
                (this.state = 93),
                  this.statement(),
                  (this.state = 98),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1));
              (this.state = 99), this.match(I.T__12);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          parameterList() {
            let e,
              t = new Q(this._ctx, this.state);
            this.enterRule(t, 16, I.RULE_parameterList);
            try {
              let r;
              if (
                (this.enterOuterAlt(t, 1),
                (this.state = 101),
                this.match(I.T__14),
                (this.state = 113),
                this._errHandler.sync(this),
                (e = this._input.LA(1)),
                0 == ((e - 51) & -32) &&
                  0 !=
                    ((1 << (e - 51)) &
                      ((1 << (I.T__50 - 51)) |
                        (1 << (I.T__51 - 51)) |
                        (1 << (I.T__52 - 51)) |
                        (1 << (I.T__53 - 51)) |
                        (1 << (I.T__54 - 51)) |
                        (1 << (I.T__55 - 51)) |
                        (1 << (I.Bytes - 51)))))
              ) {
                for (
                  this.state = 102,
                    this.parameter(),
                    this.state = 107,
                    this._errHandler.sync(this),
                    r = this.interpreter.adaptivePredict(
                      this._input,
                      5,
                      this._ctx
                    );
                  2 !== r && r !== i.ATN.INVALID_ALT_NUMBER;

                )
                  1 === r &&
                    ((this.state = 103),
                    this.match(I.T__15),
                    (this.state = 104),
                    this.parameter()),
                    (this.state = 109),
                    this._errHandler.sync(this),
                    (r = this.interpreter.adaptivePredict(
                      this._input,
                      5,
                      this._ctx
                    ));
                (this.state = 111),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1)),
                  e === I.T__15 && ((this.state = 110), this.match(I.T__15));
              }
              (this.state = 115), this.match(I.T__16);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          parameter() {
            let e = new v(this._ctx, this.state);
            this.enterRule(e, 18, I.RULE_parameter);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 117),
                this.typeName(),
                (this.state = 118),
                this.match(I.Identifier);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          block() {
            let e,
              t = new S(this._ctx, this.state);
            this.enterRule(t, 20, I.RULE_block);
            try {
              switch (
                ((this.state = 129),
                this._errHandler.sync(this),
                this._input.LA(1))
              ) {
                case I.T__11:
                  for (
                    this.enterOuterAlt(t, 1),
                      this.state = 120,
                      this.match(I.T__11),
                      this.state = 124,
                      this._errHandler.sync(this),
                      e = this._input.LA(1);
                    e === I.T__17 ||
                    e === I.T__18 ||
                    (0 == ((e - 51) & -32) &&
                      0 !=
                        ((1 << (e - 51)) &
                          ((1 << (I.T__50 - 51)) |
                            (1 << (I.T__51 - 51)) |
                            (1 << (I.T__52 - 51)) |
                            (1 << (I.T__53 - 51)) |
                            (1 << (I.T__54 - 51)) |
                            (1 << (I.T__55 - 51)) |
                            (1 << (I.Bytes - 51)) |
                            (1 << (I.Identifier - 51)))));

                  )
                    (this.state = 121),
                      this.statement(),
                      (this.state = 126),
                      this._errHandler.sync(this),
                      (e = this._input.LA(1));
                  (this.state = 127), this.match(I.T__12);
                  break;
                case I.T__17:
                case I.T__18:
                case I.T__50:
                case I.T__51:
                case I.T__52:
                case I.T__53:
                case I.T__54:
                case I.T__55:
                case I.Bytes:
                case I.Identifier:
                  this.enterOuterAlt(t, 2),
                    (this.state = 128),
                    this.statement();
                  break;
                default:
                  throw new A.NoViableAltException(this);
              }
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          statement() {
            let e = new w(this._ctx, this.state);
            this.enterRule(e, 22, I.RULE_statement);
            try {
              switch (
                ((this.state = 137),
                this._errHandler.sync(this),
                this.interpreter.adaptivePredict(this._input, 10, this._ctx))
              ) {
                case 1:
                  this.enterOuterAlt(e, 1),
                    (this.state = 131),
                    this.variableDefinition();
                  break;
                case 2:
                  this.enterOuterAlt(e, 2),
                    (this.state = 132),
                    this.tupleAssignment();
                  break;
                case 3:
                  this.enterOuterAlt(e, 3),
                    (this.state = 133),
                    this.assignStatement();
                  break;
                case 4:
                  this.enterOuterAlt(e, 4),
                    (this.state = 134),
                    this.timeOpStatement();
                  break;
                case 5:
                  this.enterOuterAlt(e, 5),
                    (this.state = 135),
                    this.requireStatement();
                  break;
                case 6:
                  this.enterOuterAlt(e, 6),
                    (this.state = 136),
                    this.ifStatement();
              }
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          variableDefinition() {
            let e,
              t = new b(this._ctx, this.state);
            this.enterRule(t, 24, I.RULE_variableDefinition);
            try {
              for (
                this.enterOuterAlt(t, 1),
                  this.state = 139,
                  this.typeName(),
                  this.state = 143,
                  this._errHandler.sync(this),
                  e = this._input.LA(1);
                e === I.T__49;

              )
                (this.state = 140),
                  this.modifier(),
                  (this.state = 145),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1));
              (this.state = 146),
                this.match(I.Identifier),
                (this.state = 147),
                this.match(I.T__9),
                (this.state = 148),
                this.expression(0),
                (this.state = 149),
                this.match(I.T__1);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          tupleAssignment() {
            let e = new k(this._ctx, this.state);
            this.enterRule(e, 26, I.RULE_tupleAssignment);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 151),
                this.typeName(),
                (this.state = 152),
                this.match(I.Identifier),
                (this.state = 153),
                this.match(I.T__15),
                (this.state = 154),
                this.typeName(),
                (this.state = 155),
                this.match(I.Identifier),
                (this.state = 156),
                this.match(I.T__9),
                (this.state = 157),
                this.expression(0),
                (this.state = 158),
                this.match(I.T__1);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          assignStatement() {
            let e = new N(this._ctx, this.state);
            this.enterRule(e, 28, I.RULE_assignStatement);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 160),
                this.match(I.Identifier),
                (this.state = 161),
                this.match(I.T__9),
                (this.state = 162),
                this.expression(0),
                (this.state = 163),
                this.match(I.T__1);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          timeOpStatement() {
            let e = new _(this._ctx, this.state);
            this.enterRule(e, 30, I.RULE_timeOpStatement);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 165),
                this.match(I.T__17),
                (this.state = 166),
                this.match(I.T__14),
                (this.state = 167),
                this.match(I.TxVar),
                (this.state = 168),
                this.match(I.T__5),
                (this.state = 169),
                this.expression(0),
                (this.state = 170),
                this.match(I.T__16),
                (this.state = 171),
                this.match(I.T__1);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          requireStatement() {
            let e = new D(this._ctx, this.state);
            this.enterRule(e, 32, I.RULE_requireStatement);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 173),
                this.match(I.T__17),
                (this.state = 174),
                this.match(I.T__14),
                (this.state = 175),
                this.expression(0),
                (this.state = 176),
                this.match(I.T__16),
                (this.state = 177),
                this.match(I.T__1);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          ifStatement() {
            let e = new O(this._ctx, this.state);
            this.enterRule(e, 34, I.RULE_ifStatement);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 179),
                this.match(I.T__18),
                (this.state = 180),
                this.match(I.T__14),
                (this.state = 181),
                this.expression(0),
                (this.state = 182),
                this.match(I.T__16),
                (this.state = 183),
                (e._ifBlock = this.block()),
                (this.state = 186),
                this._errHandler.sync(this),
                1 ===
                  this.interpreter.adaptivePredict(
                    this._input,
                    12,
                    this._ctx
                  ) &&
                  ((this.state = 184),
                  this.match(I.T__19),
                  (this.state = 185),
                  (e._elseBlock = this.block()));
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          functionCall() {
            let e = new T(this._ctx, this.state);
            this.enterRule(e, 36, I.RULE_functionCall);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 188),
                this.match(I.Identifier),
                (this.state = 189),
                this.expressionList();
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          expressionList() {
            let e,
              t = new P(this._ctx, this.state);
            this.enterRule(t, 38, I.RULE_expressionList);
            try {
              let r;
              if (
                (this.enterOuterAlt(t, 1),
                (this.state = 191),
                this.match(I.T__14),
                (this.state = 203),
                this._errHandler.sync(this),
                (e = this._input.LA(1)),
                (0 == (-32 & e) &&
                  0 !=
                    ((1 << e) &
                      ((1 << I.T__14) |
                        (1 << I.T__20) |
                        (1 << I.T__21) |
                        (1 << I.T__23) |
                        (1 << I.T__29)))) ||
                  (0 == ((e - 38) & -32) &&
                    0 !=
                      ((1 << (e - 38)) &
                        ((1 << (I.T__37 - 38)) |
                          (1 << (I.T__38 - 38)) |
                          (1 << (I.T__50 - 38)) |
                          (1 << (I.T__51 - 38)) |
                          (1 << (I.T__52 - 38)) |
                          (1 << (I.T__53 - 38)) |
                          (1 << (I.T__54 - 38)) |
                          (1 << (I.T__55 - 38)) |
                          (1 << (I.BooleanLiteral - 38)) |
                          (1 << (I.NumberLiteral - 38)) |
                          (1 << (I.Bytes - 38)) |
                          (1 << (I.StringLiteral - 38)) |
                          (1 << (I.DateLiteral - 38)) |
                          (1 << (I.HexLiteral - 38)) |
                          (1 << (I.NullaryOp - 38)) |
                          (1 << (I.Identifier - 38))))))
              ) {
                for (
                  this.state = 192,
                    this.expression(0),
                    this.state = 197,
                    this._errHandler.sync(this),
                    r = this.interpreter.adaptivePredict(
                      this._input,
                      13,
                      this._ctx
                    );
                  2 !== r && r !== i.ATN.INVALID_ALT_NUMBER;

                )
                  1 === r &&
                    ((this.state = 193),
                    this.match(I.T__15),
                    (this.state = 194),
                    this.expression(0)),
                    (this.state = 199),
                    this._errHandler.sync(this),
                    (r = this.interpreter.adaptivePredict(
                      this._input,
                      13,
                      this._ctx
                    ));
                (this.state = 201),
                  this._errHandler.sync(this),
                  (e = this._input.LA(1)),
                  e === I.T__15 && ((this.state = 200), this.match(I.T__15));
              }
              (this.state = 205), this.match(I.T__16);
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          expression(e) {
            void 0 === e && (e = 0);
            let t,
              r = this._ctx,
              n = this.state,
              o = new x(this._ctx, n),
              A = o,
              a = 40;
            this.enterRecursionRule(o, 40, I.RULE_expression, e);
            try {
              let e;
              switch (
                (this.enterOuterAlt(o, 1),
                (this.state = 260),
                this._errHandler.sync(this),
                this.interpreter.adaptivePredict(this._input, 21, this._ctx))
              ) {
                case 1:
                  (o = new R(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 208),
                    this.match(I.T__14),
                    (this.state = 209),
                    this.expression(0),
                    (this.state = 210),
                    this.match(I.T__16);
                  break;
                case 2:
                  (o = new U(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 212),
                    this.typeName(),
                    (this.state = 213),
                    this.match(I.T__14),
                    (this.state = 214),
                    (o._castable = this.expression(0)),
                    (this.state = 217),
                    this._errHandler.sync(this),
                    1 ===
                      this.interpreter.adaptivePredict(
                        this._input,
                        16,
                        this._ctx
                      ) &&
                      ((this.state = 215),
                      this.match(I.T__15),
                      (this.state = 216),
                      (o._size = this.expression(0))),
                    (this.state = 220),
                    this._errHandler.sync(this),
                    (t = this._input.LA(1)),
                    t === I.T__15 && ((this.state = 219), this.match(I.T__15)),
                    (this.state = 222),
                    this.match(I.T__16);
                  break;
                case 3:
                  (o = new F(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 224),
                    this.functionCall();
                  break;
                case 4:
                  (o = new H(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 225),
                    this.match(I.T__20),
                    (this.state = 226),
                    this.match(I.Identifier),
                    (this.state = 227),
                    this.expressionList();
                  break;
                case 5:
                  (o = new G(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 228),
                    (o._scope = this.match(I.T__23)),
                    (this.state = 229),
                    this.match(I.T__21),
                    (this.state = 230),
                    this.expression(0),
                    (this.state = 231),
                    this.match(I.T__22),
                    (this.state = 232),
                    (o._op = this._input.LT(1)),
                    (t = this._input.LA(1)),
                    0 != (-32 & t) ||
                    0 ==
                      ((1 << t) &
                        ((1 << I.T__24) |
                          (1 << I.T__25) |
                          (1 << I.T__26) |
                          (1 << I.T__27) |
                          (1 << I.T__28)))
                      ? (o._op = this._errHandler.recoverInline(this))
                      : (this._input.LA(1) === l.Token.EOF &&
                          (this.matchedEOF = !0),
                        this._errHandler.reportMatch(this),
                        this.consume());
                  break;
                case 6:
                  (o = new G(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 234),
                    (o._scope = this.match(I.T__29)),
                    (this.state = 235),
                    this.match(I.T__21),
                    (this.state = 236),
                    this.expression(0),
                    (this.state = 237),
                    this.match(I.T__22),
                    (this.state = 238),
                    (o._op = this._input.LT(1)),
                    (t = this._input.LA(1)),
                    0 != ((t - 25) & -32) ||
                    0 ==
                      ((1 << (t - 25)) &
                        ((1 << (I.T__24 - 25)) |
                          (1 << (I.T__25 - 25)) |
                          (1 << (I.T__26 - 25)) |
                          (1 << (I.T__27 - 25)) |
                          (1 << (I.T__28 - 25)) |
                          (1 << (I.T__30 - 25)) |
                          (1 << (I.T__31 - 25)) |
                          (1 << (I.T__32 - 25)) |
                          (1 << (I.T__33 - 25))))
                      ? (o._op = this._errHandler.recoverInline(this))
                      : (this._input.LA(1) === l.Token.EOF &&
                          (this.matchedEOF = !0),
                        this._errHandler.reportMatch(this),
                        this.consume());
                  break;
                case 7:
                  (o = new L(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 240),
                    (o._op = this._input.LT(1)),
                    (t = this._input.LA(1)),
                    t !== I.T__37 && t !== I.T__38
                      ? (o._op = this._errHandler.recoverInline(this))
                      : (this._input.LA(1) === l.Token.EOF &&
                          (this.matchedEOF = !0),
                        this._errHandler.reportMatch(this),
                        this.consume()),
                    (this.state = 241),
                    this.expression(14);
                  break;
                case 8:
                  if (
                    ((o = new Y(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 242),
                    this.match(I.T__21),
                    (this.state = 254),
                    this._errHandler.sync(this),
                    (t = this._input.LA(1)),
                    (0 == (-32 & t) &&
                      0 !=
                        ((1 << t) &
                          ((1 << I.T__14) |
                            (1 << I.T__20) |
                            (1 << I.T__21) |
                            (1 << I.T__23) |
                            (1 << I.T__29)))) ||
                      (0 == ((t - 38) & -32) &&
                        0 !=
                          ((1 << (t - 38)) &
                            ((1 << (I.T__37 - 38)) |
                              (1 << (I.T__38 - 38)) |
                              (1 << (I.T__50 - 38)) |
                              (1 << (I.T__51 - 38)) |
                              (1 << (I.T__52 - 38)) |
                              (1 << (I.T__53 - 38)) |
                              (1 << (I.T__54 - 38)) |
                              (1 << (I.T__55 - 38)) |
                              (1 << (I.BooleanLiteral - 38)) |
                              (1 << (I.NumberLiteral - 38)) |
                              (1 << (I.Bytes - 38)) |
                              (1 << (I.StringLiteral - 38)) |
                              (1 << (I.DateLiteral - 38)) |
                              (1 << (I.HexLiteral - 38)) |
                              (1 << (I.NullaryOp - 38)) |
                              (1 << (I.Identifier - 38))))))
                  ) {
                    for (
                      this.state = 243,
                        this.expression(0),
                        this.state = 248,
                        this._errHandler.sync(this),
                        e = this.interpreter.adaptivePredict(
                          this._input,
                          18,
                          this._ctx
                        );
                      2 !== e && e !== i.ATN.INVALID_ALT_NUMBER;

                    )
                      1 === e &&
                        ((this.state = 244),
                        this.match(I.T__15),
                        (this.state = 245),
                        this.expression(0)),
                        (this.state = 250),
                        this._errHandler.sync(this),
                        (e = this.interpreter.adaptivePredict(
                          this._input,
                          18,
                          this._ctx
                        ));
                    (this.state = 252),
                      this._errHandler.sync(this),
                      (t = this._input.LA(1)),
                      t === I.T__15 &&
                        ((this.state = 251), this.match(I.T__15));
                  }
                  (this.state = 256), this.match(I.T__22);
                  break;
                case 9:
                  (o = new q(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 257),
                    this.match(I.NullaryOp);
                  break;
                case 10:
                  (o = new J(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 258),
                    this.match(I.Identifier);
                  break;
                case 11:
                  (o = new j(o)),
                    (this._ctx = o),
                    (A = o),
                    (this.state = 259),
                    this.literal();
              }
              for (
                this._ctx._stop = this._input.tryLT(-1),
                  this.state = 303,
                  this._errHandler.sync(this),
                  e = this.interpreter.adaptivePredict(
                    this._input,
                    23,
                    this._ctx
                  );
                2 !== e && e !== i.ATN.INVALID_ALT_NUMBER;

              ) {
                if (1 === e)
                  switch (
                    (null != this._parseListeners &&
                      this.triggerExitRuleEvent(),
                    (A = o),
                    (this.state = 301),
                    this._errHandler.sync(this),
                    this.interpreter.adaptivePredict(
                      this._input,
                      22,
                      this._ctx
                    ))
                  ) {
                    case 1:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 262),
                        !this.precpred(this._ctx, 13))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 13)"
                        );
                      (this.state = 263),
                        (o._op = this._input.LT(1)),
                        (t = this._input.LA(1)),
                        0 != ((t - 40) & -32) ||
                        0 ==
                          ((1 << (t - 40)) &
                            ((1 << (I.T__39 - 40)) |
                              (1 << (I.T__40 - 40)) |
                              (1 << (I.T__41 - 40))))
                          ? (o._op = this._errHandler.recoverInline(this))
                          : (this._input.LA(1) === l.Token.EOF &&
                              (this.matchedEOF = !0),
                            this._errHandler.reportMatch(this),
                            this.consume()),
                        (this.state = 264),
                        (o._right = this.expression(14));
                      break;
                    case 2:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 265),
                        !this.precpred(this._ctx, 12))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 12)"
                        );
                      (this.state = 266),
                        (o._op = this._input.LT(1)),
                        (t = this._input.LA(1)),
                        t !== I.T__38 && t !== I.T__42
                          ? (o._op = this._errHandler.recoverInline(this))
                          : (this._input.LA(1) === l.Token.EOF &&
                              (this.matchedEOF = !0),
                            this._errHandler.reportMatch(this),
                            this.consume()),
                        (this.state = 267),
                        (o._right = this.expression(13));
                      break;
                    case 3:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 268),
                        !this.precpred(this._ctx, 11))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 11)"
                        );
                      (this.state = 269),
                        (o._op = this._input.LT(1)),
                        (t = this._input.LA(1)),
                        0 != (-32 & t) ||
                        0 ==
                          ((1 << t) &
                            ((1 << I.T__5) |
                              (1 << I.T__6) |
                              (1 << I.T__7) |
                              (1 << I.T__8)))
                          ? (o._op = this._errHandler.recoverInline(this))
                          : (this._input.LA(1) === l.Token.EOF &&
                              (this.matchedEOF = !0),
                            this._errHandler.reportMatch(this),
                            this.consume()),
                        (this.state = 270),
                        (o._right = this.expression(12));
                      break;
                    case 4:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 271),
                        !this.precpred(this._ctx, 10))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 10)"
                        );
                      (this.state = 272),
                        (o._op = this._input.LT(1)),
                        (t = this._input.LA(1)),
                        t !== I.T__43 && t !== I.T__44
                          ? (o._op = this._errHandler.recoverInline(this))
                          : (this._input.LA(1) === l.Token.EOF &&
                              (this.matchedEOF = !0),
                            this._errHandler.reportMatch(this),
                            this.consume()),
                        (this.state = 273),
                        (o._right = this.expression(11));
                      break;
                    case 5:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 274),
                        !this.precpred(this._ctx, 9))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 9)"
                        );
                      (this.state = 275),
                        (o._op = this.match(I.T__45)),
                        (this.state = 276),
                        (o._right = this.expression(10));
                      break;
                    case 6:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 277),
                        !this.precpred(this._ctx, 8))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 8)"
                        );
                      (this.state = 278),
                        (o._op = this.match(I.T__3)),
                        (this.state = 279),
                        (o._right = this.expression(9));
                      break;
                    case 7:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 280),
                        !this.precpred(this._ctx, 7))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 7)"
                        );
                      (this.state = 281),
                        (o._op = this.match(I.T__46)),
                        (this.state = 282),
                        (o._right = this.expression(8));
                      break;
                    case 8:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 283),
                        !this.precpred(this._ctx, 6))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 6)"
                        );
                      (this.state = 284),
                        (o._op = this.match(I.T__47)),
                        (this.state = 285),
                        (o._right = this.expression(7));
                      break;
                    case 9:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 286),
                        !this.precpred(this._ctx, 5))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 5)"
                        );
                      (this.state = 287),
                        (o._op = this.match(I.T__48)),
                        (this.state = 288),
                        (o._right = this.expression(6));
                      break;
                    case 10:
                      if (
                        ((o = new M(new x(r, n))),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 289),
                        !this.precpred(this._ctx, 19))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 19)"
                        );
                      (this.state = 290),
                        this.match(I.T__21),
                        (this.state = 291),
                        (o._index = this.match(I.NumberLiteral)),
                        (this.state = 292),
                        this.match(I.T__22);
                      break;
                    case 11:
                      if (
                        ((o = new L(new x(r, n))),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 293),
                        !this.precpred(this._ctx, 16))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 16)"
                        );
                      (this.state = 294),
                        (o._op = this._input.LT(1)),
                        (t = this._input.LA(1)),
                        t !== I.T__34 && t !== I.T__35
                          ? (o._op = this._errHandler.recoverInline(this))
                          : (this._input.LA(1) === l.Token.EOF &&
                              (this.matchedEOF = !0),
                            this._errHandler.reportMatch(this),
                            this.consume());
                      break;
                    case 12:
                      if (
                        ((o = new K(new x(r, n))),
                        (o._left = A),
                        this.pushNewRecursionContext(o, a, I.RULE_expression),
                        (this.state = 295),
                        !this.precpred(this._ctx, 15))
                      )
                        throw this.createFailedPredicateException(
                          "this.precpred(this._ctx, 15)"
                        );
                      (this.state = 296),
                        (o._op = this.match(I.T__36)),
                        (this.state = 297),
                        this.match(I.T__14),
                        (this.state = 298),
                        (o._right = this.expression(0)),
                        (this.state = 299),
                        this.match(I.T__16);
                  }
                (this.state = 305),
                  this._errHandler.sync(this),
                  (e = this.interpreter.adaptivePredict(
                    this._input,
                    23,
                    this._ctx
                  ));
              }
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (o.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.unrollRecursionContexts(r);
            }
            return o;
          }
          modifier() {
            let e = new z(this._ctx, this.state);
            this.enterRule(e, 42, I.RULE_modifier);
            try {
              this.enterOuterAlt(e, 1), (this.state = 306), this.match(I.T__49);
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          literal() {
            let e = new V(this._ctx, this.state);
            this.enterRule(e, 44, I.RULE_literal);
            try {
              switch (
                ((this.state = 313),
                this._errHandler.sync(this),
                this._input.LA(1))
              ) {
                case I.BooleanLiteral:
                  this.enterOuterAlt(e, 1),
                    (this.state = 308),
                    this.match(I.BooleanLiteral);
                  break;
                case I.NumberLiteral:
                  this.enterOuterAlt(e, 2),
                    (this.state = 309),
                    this.numberLiteral();
                  break;
                case I.StringLiteral:
                  this.enterOuterAlt(e, 3),
                    (this.state = 310),
                    this.match(I.StringLiteral);
                  break;
                case I.DateLiteral:
                  this.enterOuterAlt(e, 4),
                    (this.state = 311),
                    this.match(I.DateLiteral);
                  break;
                case I.HexLiteral:
                  this.enterOuterAlt(e, 5),
                    (this.state = 312),
                    this.match(I.HexLiteral);
                  break;
                default:
                  throw new A.NoViableAltException(this);
              }
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          numberLiteral() {
            let e = new W(this._ctx, this.state);
            this.enterRule(e, 46, I.RULE_numberLiteral);
            try {
              this.enterOuterAlt(e, 1),
                (this.state = 315),
                this.match(I.NumberLiteral),
                (this.state = 317),
                this._errHandler.sync(this),
                1 ===
                  this.interpreter.adaptivePredict(
                    this._input,
                    25,
                    this._ctx
                  ) && ((this.state = 316), this.match(I.NumberUnit));
            } catch (t) {
              if (!(t instanceof g.RecognitionException)) throw t;
              (e.exception = t),
                this._errHandler.reportError(this, t),
                this._errHandler.recover(this, t);
            } finally {
              this.exitRule();
            }
            return e;
          }
          typeName() {
            let e,
              t = new X(this._ctx, this.state);
            this.enterRule(t, 48, I.RULE_typeName);
            try {
              this.enterOuterAlt(t, 1),
                (this.state = 319),
                (e = this._input.LA(1)),
                0 != ((e - 51) & -32) ||
                0 ==
                  ((1 << (e - 51)) &
                    ((1 << (I.T__50 - 51)) |
                      (1 << (I.T__51 - 51)) |
                      (1 << (I.T__52 - 51)) |
                      (1 << (I.T__53 - 51)) |
                      (1 << (I.T__54 - 51)) |
                      (1 << (I.T__55 - 51)) |
                      (1 << (I.Bytes - 51))))
                  ? this._errHandler.recoverInline(this)
                  : (this._input.LA(1) === l.Token.EOF &&
                      (this.matchedEOF = !0),
                    this._errHandler.reportMatch(this),
                    this.consume());
            } catch (e) {
              if (!(e instanceof g.RecognitionException)) throw e;
              (t.exception = e),
                this._errHandler.reportError(this, e),
                this._errHandler.recover(this, e);
            } finally {
              this.exitRule();
            }
            return t;
          }
          sempred(e, t, r) {
            return 20 !== t || this.expression_sempred(e, r);
          }
          expression_sempred(e, t) {
            switch (t) {
              case 0:
                return this.precpred(this._ctx, 13);
              case 1:
                return this.precpred(this._ctx, 12);
              case 2:
                return this.precpred(this._ctx, 11);
              case 3:
                return this.precpred(this._ctx, 10);
              case 4:
                return this.precpred(this._ctx, 9);
              case 5:
                return this.precpred(this._ctx, 8);
              case 6:
                return this.precpred(this._ctx, 7);
              case 7:
                return this.precpred(this._ctx, 6);
              case 8:
                return this.precpred(this._ctx, 5);
              case 9:
                return this.precpred(this._ctx, 19);
              case 10:
                return this.precpred(this._ctx, 16);
              case 11:
                return this.precpred(this._ctx, 15);
            }
            return !0;
          }
          static get _ATN() {
            return (
              I.__ATN ||
                (I.__ATN = new n.ATNDeserializer().deserialize(
                  h.toCharArray(I._serializedATN)
                )),
              I.__ATN
            );
          }
        }
        (I.T__0 = 1),
          (I.T__1 = 2),
          (I.T__2 = 3),
          (I.T__3 = 4),
          (I.T__4 = 5),
          (I.T__5 = 6),
          (I.T__6 = 7),
          (I.T__7 = 8),
          (I.T__8 = 9),
          (I.T__9 = 10),
          (I.T__10 = 11),
          (I.T__11 = 12),
          (I.T__12 = 13),
          (I.T__13 = 14),
          (I.T__14 = 15),
          (I.T__15 = 16),
          (I.T__16 = 17),
          (I.T__17 = 18),
          (I.T__18 = 19),
          (I.T__19 = 20),
          (I.T__20 = 21),
          (I.T__21 = 22),
          (I.T__22 = 23),
          (I.T__23 = 24),
          (I.T__24 = 25),
          (I.T__25 = 26),
          (I.T__26 = 27),
          (I.T__27 = 28),
          (I.T__28 = 29),
          (I.T__29 = 30),
          (I.T__30 = 31),
          (I.T__31 = 32),
          (I.T__32 = 33),
          (I.T__33 = 34),
          (I.T__34 = 35),
          (I.T__35 = 36),
          (I.T__36 = 37),
          (I.T__37 = 38),
          (I.T__38 = 39),
          (I.T__39 = 40),
          (I.T__40 = 41),
          (I.T__41 = 42),
          (I.T__42 = 43),
          (I.T__43 = 44),
          (I.T__44 = 45),
          (I.T__45 = 46),
          (I.T__46 = 47),
          (I.T__47 = 48),
          (I.T__48 = 49),
          (I.T__49 = 50),
          (I.T__50 = 51),
          (I.T__51 = 52),
          (I.T__52 = 53),
          (I.T__53 = 54),
          (I.T__54 = 55),
          (I.T__55 = 56),
          (I.VersionLiteral = 57),
          (I.BooleanLiteral = 58),
          (I.NumberUnit = 59),
          (I.NumberLiteral = 60),
          (I.Bytes = 61),
          (I.Bound = 62),
          (I.StringLiteral = 63),
          (I.DateLiteral = 64),
          (I.HexLiteral = 65),
          (I.TxVar = 66),
          (I.NullaryOp = 67),
          (I.Identifier = 68),
          (I.WHITESPACE = 69),
          (I.COMMENT = 70),
          (I.LINE_COMMENT = 71),
          (I.RULE_sourceFile = 0),
          (I.RULE_pragmaDirective = 1),
          (I.RULE_pragmaName = 2),
          (I.RULE_pragmaValue = 3),
          (I.RULE_versionConstraint = 4),
          (I.RULE_versionOperator = 5),
          (I.RULE_contractDefinition = 6),
          (I.RULE_functionDefinition = 7),
          (I.RULE_parameterList = 8),
          (I.RULE_parameter = 9),
          (I.RULE_block = 10),
          (I.RULE_statement = 11),
          (I.RULE_variableDefinition = 12),
          (I.RULE_tupleAssignment = 13),
          (I.RULE_assignStatement = 14),
          (I.RULE_timeOpStatement = 15),
          (I.RULE_requireStatement = 16),
          (I.RULE_ifStatement = 17),
          (I.RULE_functionCall = 18),
          (I.RULE_expressionList = 19),
          (I.RULE_expression = 20),
          (I.RULE_modifier = 21),
          (I.RULE_literal = 22),
          (I.RULE_numberLiteral = 23),
          (I.RULE_typeName = 24),
          (I.ruleNames = [
            "sourceFile",
            "pragmaDirective",
            "pragmaName",
            "pragmaValue",
            "versionConstraint",
            "versionOperator",
            "contractDefinition",
            "functionDefinition",
            "parameterList",
            "parameter",
            "block",
            "statement",
            "variableDefinition",
            "tupleAssignment",
            "assignStatement",
            "timeOpStatement",
            "requireStatement",
            "ifStatement",
            "functionCall",
            "expressionList",
            "expression",
            "modifier",
            "literal",
            "numberLiteral",
            "typeName",
          ]),
          (I._LITERAL_NAMES = [
            void 0,
            "'pragma'",
            "';'",
            "'cashscript'",
            "'^'",
            "'~'",
            "'>='",
            "'>'",
            "'<'",
            "'<='",
            "'='",
            "'contract'",
            "'{'",
            "'}'",
            "'function'",
            "'('",
            "','",
            "')'",
            "'require'",
            "'if'",
            "'else'",
            "'new'",
            "'['",
            "']'",
            "'tx.outputs'",
            "'.value'",
            "'.lockingBytecode'",
            "'.tokenCategory'",
            "'.nftCommitment'",
            "'.tokenAmount'",
            "'tx.inputs'",
            "'.outpointTransactionHash'",
            "'.outpointIndex'",
            "'.unlockingBytecode'",
            "'.sequenceNumber'",
            "'.reverse()'",
            "'.length'",
            "'.split'",
            "'!'",
            "'-'",
            "'*'",
            "'/'",
            "'%'",
            "'+'",
            "'=='",
            "'!='",
            "'&'",
            "'|'",
            "'&&'",
            "'||'",
            "'constant'",
            "'int'",
            "'bool'",
            "'string'",
            "'pubkey'",
            "'sig'",
            "'datasig'",
          ]),
          (I._SYMBOLIC_NAMES = [
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            void 0,
            "VersionLiteral",
            "BooleanLiteral",
            "NumberUnit",
            "NumberLiteral",
            "Bytes",
            "Bound",
            "StringLiteral",
            "DateLiteral",
            "HexLiteral",
            "TxVar",
            "NullaryOp",
            "Identifier",
            "WHITESPACE",
            "COMMENT",
            "LINE_COMMENT",
          ]),
          (I.VOCABULARY = new u.VocabularyImpl(
            I._LITERAL_NAMES,
            I._SYMBOLIC_NAMES,
            []
          )),
          (I._serializedATN =
            '줝쪺֍꾺体؇쉁Iń\t\t\t\t\t\t\b\t\b\t\t\t\n\t\n\v\t\v\f\t\f\r\t\r\t\t\t\t\t\t\t\t\t\t\t\t\t6\n\f9\vG\nJ\n\b\b\b\b\b\bU\n\b\f\b\bX\v\b\b\b\t\t\t\t\t\ta\n\t\f\t\td\v\t\t\t\n\n\n\n\nl\n\n\f\n\no\v\n\n\nr\n\n\nt\n\n\n\n\v\v\v\f\f\f}\n\f\f\f\f\v\f\f\f\f\n\f\r\r\r\r\r\r\r\n\r\n\f\v½\nÆ\n\fÉ\vÌ\nÎ\nÜ\nß\nù\n\fü\vÿ\nā\nć\nİ\n\fĳ\vļ\nŀ\n*\b\n\f "$&(*,.02\f\f!$()*,))--\b\v./%&5:??Ş7=B\bD\nI\fMO[gw¢ §"¯$µ&¾(Á*Ć,Ĵ.Ļ0Ľ2Ł46546975788:97:;\b;<<=>>??@\b@AABCCDF\nEG\nFEFGG\tHJ\fIHIJJKKL;L\vMN\tN\rOP\rPQFQR\nRVSU\tTSUXVTVWWYXVYZZ[\\\\]F]^\n^b_a\r`_adb`bccedbeffgshm\vijjl\vkilomkmnnqomprqpqrrtshsttuuvvwx2xyFyz~{}\r|{}~|~~\rz "$2,F\f*2F2F\f * ¡¡¢£F£¤\f¤¥*¥¦¦§¨¨©©ªDª«\b«¬*¬­­®®!¯°°±±²*²³³´´#µ¶¶··¸*¸¹¹¼\fº»»½\f¼º¼½½%¾¿F¿À(À\'ÁÍÂÇ*ÃÄÄÆ*ÅÃÆÉÇÅÇÈÈËÉÇÊÌËÊËÌÌÎÍÂÍÎÎÏÏÐÐ)ÑÒ\bÒÓÓÔ*ÔÕÕćÖ×2×ØØÛ*ÙÚÚÜ*ÛÙÛÜÜÞÝßÞÝÞßßààááćâć&ãääåFåć(æççèèé*éêêë\tëćìí íîîï*ïððñ\tñćòó\tóć*ôĀõú*ö÷÷ù*øöùüúøúûûþüúýÿþýþÿÿāĀõĀāāĂĂćăćEĄćFąć.ĆÑĆÖĆâĆãĆæĆìĆòĆôĆăĆĄĆąćıĈĉ\fĉĊ\tĊİ*ċČ\fČč\tčİ*Ďď\f\rďĐ\t\bĐİ*đĒ\f\fĒē\t\tēİ*\rĔĕ\f\vĕĖ0Ėİ*\fėĘ\f\nĘęęİ*\vĚě\f\těĜ1Ĝİ*\nĝĞ\f\bĞğ2ğİ*\tĠġ\fġĢ3Ģİ*\bģĤ\fĤĥĥĦ>ĦİħĨ\fĨİ\t\nĩĪ\fĪī\'īĬĬĭ*ĭĮĮİįĈįċįĎįđįĔįėįĚįĝįĠįģįħįĩİĳıįıĲĲ+ĳıĴĵ4ĵ-Ķļ<ķļ0ĸļAĹļBĺļCĻĶĻķĻĸĻĹĻĺļ/ĽĿ>ľŀ=ĿľĿŀŀ1Łł\t\vł37FIVbmqs~¼ÇËÍÛÞúþĀĆįıĻĿ');
        class p extends s.ParserRuleContext {
          contractDefinition() {
            return this.getRuleContext(0, y);
          }
          EOF() {
            return this.getToken(I.EOF, 0);
          }
          pragmaDirective(e) {
            return void 0 === e
              ? this.getRuleContexts(d)
              : this.getRuleContext(e, d);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_sourceFile;
          }
          accept(e) {
            return e.visitSourceFile
              ? e.visitSourceFile(this)
              : e.visitChildren(this);
          }
        }
        class d extends s.ParserRuleContext {
          pragmaName() {
            return this.getRuleContext(0, f);
          }
          pragmaValue() {
            return this.getRuleContext(0, C);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_pragmaDirective;
          }
          accept(e) {
            return e.visitPragmaDirective
              ? e.visitPragmaDirective(this)
              : e.visitChildren(this);
          }
        }
        class f extends s.ParserRuleContext {
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_pragmaName;
          }
          accept(e) {
            return e.visitPragmaName
              ? e.visitPragmaName(this)
              : e.visitChildren(this);
          }
        }
        class C extends s.ParserRuleContext {
          versionConstraint(e) {
            return void 0 === e
              ? this.getRuleContexts(B)
              : this.getRuleContext(e, B);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_pragmaValue;
          }
          accept(e) {
            return e.visitPragmaValue
              ? e.visitPragmaValue(this)
              : e.visitChildren(this);
          }
        }
        class B extends s.ParserRuleContext {
          VersionLiteral() {
            return this.getToken(I.VersionLiteral, 0);
          }
          versionOperator() {
            return this.tryGetRuleContext(0, E);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_versionConstraint;
          }
          accept(e) {
            return e.visitVersionConstraint
              ? e.visitVersionConstraint(this)
              : e.visitChildren(this);
          }
        }
        class E extends s.ParserRuleContext {
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_versionOperator;
          }
          accept(e) {
            return e.visitVersionOperator
              ? e.visitVersionOperator(this)
              : e.visitChildren(this);
          }
        }
        class y extends s.ParserRuleContext {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          parameterList() {
            return this.getRuleContext(0, Q);
          }
          functionDefinition(e) {
            return void 0 === e
              ? this.getRuleContexts(m)
              : this.getRuleContext(e, m);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_contractDefinition;
          }
          accept(e) {
            return e.visitContractDefinition
              ? e.visitContractDefinition(this)
              : e.visitChildren(this);
          }
        }
        class m extends s.ParserRuleContext {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          parameterList() {
            return this.getRuleContext(0, Q);
          }
          statement(e) {
            return void 0 === e
              ? this.getRuleContexts(w)
              : this.getRuleContext(e, w);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_functionDefinition;
          }
          accept(e) {
            return e.visitFunctionDefinition
              ? e.visitFunctionDefinition(this)
              : e.visitChildren(this);
          }
        }
        class Q extends s.ParserRuleContext {
          parameter(e) {
            return void 0 === e
              ? this.getRuleContexts(v)
              : this.getRuleContext(e, v);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_parameterList;
          }
          accept(e) {
            return e.visitParameterList
              ? e.visitParameterList(this)
              : e.visitChildren(this);
          }
        }
        class v extends s.ParserRuleContext {
          typeName() {
            return this.getRuleContext(0, X);
          }
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_parameter;
          }
          accept(e) {
            return e.visitParameter
              ? e.visitParameter(this)
              : e.visitChildren(this);
          }
        }
        class S extends s.ParserRuleContext {
          statement(e) {
            return void 0 === e
              ? this.getRuleContexts(w)
              : this.getRuleContext(e, w);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_block;
          }
          accept(e) {
            return e.visitBlock ? e.visitBlock(this) : e.visitChildren(this);
          }
        }
        class w extends s.ParserRuleContext {
          variableDefinition() {
            return this.tryGetRuleContext(0, b);
          }
          tupleAssignment() {
            return this.tryGetRuleContext(0, k);
          }
          assignStatement() {
            return this.tryGetRuleContext(0, N);
          }
          timeOpStatement() {
            return this.tryGetRuleContext(0, _);
          }
          requireStatement() {
            return this.tryGetRuleContext(0, D);
          }
          ifStatement() {
            return this.tryGetRuleContext(0, O);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_statement;
          }
          accept(e) {
            return e.visitStatement
              ? e.visitStatement(this)
              : e.visitChildren(this);
          }
        }
        class b extends s.ParserRuleContext {
          typeName() {
            return this.getRuleContext(0, X);
          }
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          modifier(e) {
            return void 0 === e
              ? this.getRuleContexts(z)
              : this.getRuleContext(e, z);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_variableDefinition;
          }
          accept(e) {
            return e.visitVariableDefinition
              ? e.visitVariableDefinition(this)
              : e.visitChildren(this);
          }
        }
        class k extends s.ParserRuleContext {
          typeName(e) {
            return void 0 === e
              ? this.getRuleContexts(X)
              : this.getRuleContext(e, X);
          }
          Identifier(e) {
            return void 0 === e
              ? this.getTokens(I.Identifier)
              : this.getToken(I.Identifier, e);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_tupleAssignment;
          }
          accept(e) {
            return e.visitTupleAssignment
              ? e.visitTupleAssignment(this)
              : e.visitChildren(this);
          }
        }
        class N extends s.ParserRuleContext {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_assignStatement;
          }
          accept(e) {
            return e.visitAssignStatement
              ? e.visitAssignStatement(this)
              : e.visitChildren(this);
          }
        }
        class _ extends s.ParserRuleContext {
          TxVar() {
            return this.getToken(I.TxVar, 0);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_timeOpStatement;
          }
          accept(e) {
            return e.visitTimeOpStatement
              ? e.visitTimeOpStatement(this)
              : e.visitChildren(this);
          }
        }
        class D extends s.ParserRuleContext {
          expression() {
            return this.getRuleContext(0, x);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_requireStatement;
          }
          accept(e) {
            return e.visitRequireStatement
              ? e.visitRequireStatement(this)
              : e.visitChildren(this);
          }
        }
        class O extends s.ParserRuleContext {
          constructor(e, t) {
            super(e, t);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          block(e) {
            return void 0 === e
              ? this.getRuleContexts(S)
              : this.getRuleContext(e, S);
          }
          get ruleIndex() {
            return I.RULE_ifStatement;
          }
          accept(e) {
            return e.visitIfStatement
              ? e.visitIfStatement(this)
              : e.visitChildren(this);
          }
        }
        class T extends s.ParserRuleContext {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          expressionList() {
            return this.getRuleContext(0, P);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_functionCall;
          }
          accept(e) {
            return e.visitFunctionCall
              ? e.visitFunctionCall(this)
              : e.visitChildren(this);
          }
        }
        class P extends s.ParserRuleContext {
          expression(e) {
            return void 0 === e
              ? this.getRuleContexts(x)
              : this.getRuleContext(e, x);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_expressionList;
          }
          accept(e) {
            return e.visitExpressionList
              ? e.visitExpressionList(this)
              : e.visitChildren(this);
          }
        }
        class x extends s.ParserRuleContext {
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_expression;
          }
          copyFrom(e) {
            super.copyFrom(e);
          }
        }
        class R extends x {
          expression() {
            return this.getRuleContext(0, x);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitParenthesised
              ? e.visitParenthesised(this)
              : e.visitChildren(this);
          }
        }
        class U extends x {
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          typeName() {
            return this.getRuleContext(0, X);
          }
          expression(e) {
            return void 0 === e
              ? this.getRuleContexts(x)
              : this.getRuleContext(e, x);
          }
          accept(e) {
            return e.visitCast ? e.visitCast(this) : e.visitChildren(this);
          }
        }
        class F extends x {
          functionCall() {
            return this.getRuleContext(0, T);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitFunctionCallExpression
              ? e.visitFunctionCallExpression(this)
              : e.visitChildren(this);
          }
        }
        class H extends x {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          expressionList() {
            return this.getRuleContext(0, P);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitInstantiation
              ? e.visitInstantiation(this)
              : e.visitChildren(this);
          }
        }
        class M extends x {
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          NumberLiteral() {
            return this.getToken(I.NumberLiteral, 0);
          }
          accept(e) {
            return e.visitTupleIndexOp
              ? e.visitTupleIndexOp(this)
              : e.visitChildren(this);
          }
        }
        class G extends x {
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          accept(e) {
            return e.visitUnaryIntrospectionOp
              ? e.visitUnaryIntrospectionOp(this)
              : e.visitChildren(this);
          }
        }
        class L extends x {
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          expression() {
            return this.getRuleContext(0, x);
          }
          accept(e) {
            return e.visitUnaryOp
              ? e.visitUnaryOp(this)
              : e.visitChildren(this);
          }
        }
        class K extends x {
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          expression(e) {
            return void 0 === e
              ? this.getRuleContexts(x)
              : this.getRuleContext(e, x);
          }
          accept(e) {
            return e.visitBinaryOp
              ? e.visitBinaryOp(this)
              : e.visitChildren(this);
          }
        }
        class Y extends x {
          expression(e) {
            return void 0 === e
              ? this.getRuleContexts(x)
              : this.getRuleContext(e, x);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitArray ? e.visitArray(this) : e.visitChildren(this);
          }
        }
        class q extends x {
          NullaryOp() {
            return this.getToken(I.NullaryOp, 0);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitNullaryOp
              ? e.visitNullaryOp(this)
              : e.visitChildren(this);
          }
        }
        class J extends x {
          Identifier() {
            return this.getToken(I.Identifier, 0);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitIdentifier
              ? e.visitIdentifier(this)
              : e.visitChildren(this);
          }
        }
        class j extends x {
          literal() {
            return this.getRuleContext(0, V);
          }
          constructor(e) {
            super(e.parent, e.invokingState), this.copyFrom(e);
          }
          accept(e) {
            return e.visitLiteralExpression
              ? e.visitLiteralExpression(this)
              : e.visitChildren(this);
          }
        }
        class z extends s.ParserRuleContext {
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_modifier;
          }
          accept(e) {
            return e.visitModifier
              ? e.visitModifier(this)
              : e.visitChildren(this);
          }
        }
        class V extends s.ParserRuleContext {
          BooleanLiteral() {
            return this.tryGetToken(I.BooleanLiteral, 0);
          }
          numberLiteral() {
            return this.tryGetRuleContext(0, W);
          }
          StringLiteral() {
            return this.tryGetToken(I.StringLiteral, 0);
          }
          DateLiteral() {
            return this.tryGetToken(I.DateLiteral, 0);
          }
          HexLiteral() {
            return this.tryGetToken(I.HexLiteral, 0);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_literal;
          }
          accept(e) {
            return e.visitLiteral
              ? e.visitLiteral(this)
              : e.visitChildren(this);
          }
        }
        class W extends s.ParserRuleContext {
          NumberLiteral() {
            return this.getToken(I.NumberLiteral, 0);
          }
          NumberUnit() {
            return this.tryGetToken(I.NumberUnit, 0);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_numberLiteral;
          }
          accept(e) {
            return e.visitNumberLiteral
              ? e.visitNumberLiteral(this)
              : e.visitChildren(this);
          }
        }
        class X extends s.ParserRuleContext {
          Bytes() {
            return this.getToken(I.Bytes, 0);
          }
          constructor(e, t) {
            super(e, t);
          }
          get ruleIndex() {
            return I.RULE_typeName;
          }
          accept(e) {
            return e.visitTypeName
              ? e.visitTypeName(this)
              : e.visitChildren(this);
          }
        }
      },
      63243: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { i8: () => e });
            const e = "0.8.0-next.2";
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      41195: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => s });
            var n = r(50370),
              o = r(69204),
              A = r(44694),
              a = e([A, n]);
            [A, n] = a.then ? (await a)() : a;
            class s extends o.Z {
              visitContract(e) {
                if (
                  ((e.parameters = this.visitList(e.parameters)),
                  (e.functions = this.visitList(e.functions)),
                  0 === e.functions.length)
                )
                  throw new A.to(e);
                return e;
              }
              visitFunctionDefinition(e) {
                if (
                  ((e.parameters = this.visitList(e.parameters)),
                  (e.body = this.visit(e.body)),
                  void 0 === e.body.statements ||
                    0 === e.body.statements.length)
                )
                  throw new A.HW(e);
                return c(e.body.statements), e;
              }
            }
            function c(e = []) {
              const t = e[e.length - 1];
              if (t) {
                if (t instanceof n.EO)
                  return (
                    c(t.ifBlock.statements), void c(t.elseBlock?.statements)
                  );
                if (!(t instanceof n.s5 || t instanceof n.K6))
                  throw new A.fk(t);
              }
            }
            i();
          } catch (g) {
            i(g);
          }
        });
      },
      18770: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => g });
            var n = r(85757),
              o = r(50370),
              A = r(69204),
              a = r(40120),
              s = r(44694),
              c = e([n, s, o]);
            [n, s, o] = c.then ? (await c)() : c;
            class g extends A.Z {
              constructor() {
                super(...arguments),
                  (this.symbolTables = [n.GT]),
                  (this.functionNames = new Map()),
                  (this.expectedSymbolType = a.Ko.VARIABLE);
              }
              visitContract(e) {
                (e.symbolTable = new a.d6(this.symbolTables[0])),
                  this.symbolTables.unshift(e.symbolTable),
                  (e.parameters = this.visitList(e.parameters)),
                  (e.functions = this.visitList(e.functions));
                const t = e.symbolTable.unusedSymbols();
                if (0 !== t.length) throw new s.Dw(t[0]);
                return this.symbolTables.shift(), e;
              }
              visitParameter(e) {
                if (this.symbolTables[0].get(e.name)) throw new s.m5(e);
                return this.symbolTables[0].set(a.mN.variable(e)), e;
              }
              visitFunctionDefinition(e) {
                if (
                  ((this.currentFunction = e), this.functionNames.get(e.name))
                )
                  throw new s.oU(e);
                this.functionNames.set(e.name, !0),
                  (e.symbolTable = new a.d6(this.symbolTables[0])),
                  this.symbolTables.unshift(e.symbolTable),
                  (e.parameters = this.visitList(e.parameters)),
                  (e.body = this.visit(e.body));
                const t = e.symbolTable.unusedSymbols();
                if (0 !== t.length) throw new s.Dw(t[0]);
                return this.symbolTables.shift(), e;
              }
              visitBlock(e) {
                (e.symbolTable = new a.d6(this.symbolTables[0])),
                  this.symbolTables.unshift(e.symbolTable),
                  (e.statements = this.visitOptionalList(e.statements));
                const t = e.symbolTable.unusedSymbols();
                if (0 !== t.length) throw new s.Dw(t[0]);
                return this.symbolTables.shift(), e;
              }
              visitVariableDefinition(e) {
                if (this.symbolTables[0].get(e.name)) throw new s.m5(e);
                return (
                  (e.expression = this.visit(e.expression)),
                  this.symbolTables[0].set(a.mN.variable(e)),
                  e
                );
              }
              visitAssign(e) {
                const t = this.symbolTables[0].get(
                  e.identifier.name
                )?.definition;
                return (
                  t?.modifier?.forEach((e) => {
                    if (e === n.Dg.CONSTANT) throw new s.qG(t);
                  }),
                  super.visitAssign(e),
                  e
                );
              }
              visitTupleAssignment(e) {
                return (
                  [e.var1, e.var2].forEach(({ name: t, type: r }) => {
                    if (this.symbolTables[0].get(t))
                      throw new s.m5(new o.IV(r, [], t, e.tuple));
                    this.symbolTables[0].set(
                      a.mN.variable(new o.IV(r, [], t, e.tuple))
                    );
                  }),
                  (e.tuple = this.visit(e.tuple)),
                  e
                );
              }
              visitFunctionCall(e) {
                return (
                  (this.expectedSymbolType = a.Ko.FUNCTION),
                  (e.identifier = this.visit(e.identifier)),
                  (this.expectedSymbolType = a.Ko.VARIABLE),
                  (e.parameters = this.visitList(e.parameters)),
                  e
                );
              }
              visitInstantiation(e) {
                return (
                  (this.expectedSymbolType = a.Ko.CLASS),
                  (e.identifier = this.visit(e.identifier)),
                  (this.expectedSymbolType = a.Ko.VARIABLE),
                  (e.parameters = this.visitList(e.parameters)),
                  e
                );
              }
              visitIdentifier(e) {
                const t = this.symbolTables[0].get(e.name);
                if (!t) throw new s.fJ(e);
                if (t.symbolType !== this.expectedSymbolType)
                  throw new s.GK(e, this.expectedSymbolType);
                return (
                  (e.definition = t),
                  e.definition.references.push(e),
                  this.currentFunction.opRolls.set(e.name, e),
                  e
                );
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      85221: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => l });
            var n = r(56394),
              o = r(50370),
              A = r(69204),
              a = r(44694),
              s = r(84656),
              c = r(85757),
              g = e([o, a, c]);
            [o, a, c] = g.then ? (await g)() : g;
            class l extends A.Z {
              visitVariableDefinition(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  f(e, e.expression.type, e.type),
                  e
                );
              }
              visitTupleAssignment(e) {
                if (
                  ((e.tuple = this.visit(e.tuple)),
                  !(e.tuple instanceof o.yl) || e.tuple.operator !== s.J6.SPLIT)
                )
                  throw new a.Te(e.tuple);
                const t = e.tuple.left.type;
                for (const r of [e.var1, e.var2])
                  if (!(0, n.rI)(t, r.type)) {
                    if (t instanceof n.x1 && r.type instanceof n.x1) return e;
                    throw new a.pU(new o.IV(r.type, [], r.name, e.tuple));
                  }
                return e;
              }
              visitAssign(e) {
                return (
                  (e.identifier = this.visit(e.identifier)),
                  (e.expression = this.visit(e.expression)),
                  f(e, e.expression.type, e.identifier.type),
                  e
                );
              }
              visitTimeOp(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  I(e, e.expression.type),
                  e
                );
              }
              visitRequire(e) {
                return (
                  (e.expression = this.visit(e.expression)),
                  C(e, e.expression.type ? [e.expression.type] : [], [
                    n.MX.BOOL,
                  ]),
                  e
                );
              }
              visitBranch(e) {
                if (
                  ((e.condition = this.visit(e.condition)),
                  (e.ifBlock = this.visit(e.ifBlock)),
                  (e.elseBlock = this.visitOptional(e.elseBlock)),
                  !(0, n.rI)(e.condition.type, n.MX.BOOL))
                )
                  throw new a.R3(e, e.condition.type, n.MX.BOOL);
                return e;
              }
              visitCast(e) {
                if (
                  ((e.expression = this.visit(e.expression)),
                  (e.size = this.visitOptional(e.size)),
                  !(0, n.bs)(e.expression.type, e.type))
                )
                  throw new a.ih(e);
                if (
                  e.size &&
                  (e.expression.type !== n.MX.INT ||
                    "bytes" !== e.type.toString())
                )
                  throw new a.Pf(e);
                return e;
              }
              visitFunctionCall(e) {
                (e.identifier = this.visit(e.identifier)),
                  (e.parameters = this.visitList(e.parameters));
                const { definition: t, type: r } = e.identifier;
                if (!t || !t.parameters) return e;
                const i = e.parameters.map((e) => e.type);
                if (
                  (C(e, i, t.parameters),
                  e.identifier.name === c.hV.CHECKMULTISIG)
                ) {
                  const t = e.parameters[0],
                    r = e.parameters[1];
                  if (t.elements.length > r.elements.length) throw new a.dq(r);
                }
                return (e.type = r), e;
              }
              visitInstantiation(e) {
                (e.identifier = this.visit(e.identifier)),
                  (e.parameters = this.visitList(e.parameters));
                const { definition: t, type: r } = e.identifier;
                if (!t || !t.parameters) return e;
                const i = e.parameters.map((e) => e.type);
                return C(e, i, t.parameters), (e.type = r), e;
              }
              visitTupleIndexOp(e) {
                if (
                  ((e.tuple = this.visit(e.tuple)),
                  d(e, e.tuple.type),
                  0 !== e.index && 1 !== e.index)
                )
                  throw new a.sE(e);
                return (e.type = e.tuple.type.elementType), e;
              }
              visitBinaryOp(e) {
                (e.left = this.visit(e.left)), (e.right = this.visit(e.right));
                const t = (0, n.w)(e.left.type, e.right.type);
                if (!t && !e.operator.startsWith(".")) throw new a.UW(e);
                switch (e.operator) {
                  case s.J6.PLUS:
                    return (
                      u(e, t, [n.MX.INT, n.MX.STRING, new n.x1()]),
                      (e.type = t),
                      e.left.type instanceof n.x1 &&
                        e.right.type instanceof n.x1 &&
                        e.left.type.bound &&
                        e.right.type.bound &&
                        (e.type = new n.x1(
                          e.left.type.bound + e.right.type.bound
                        )),
                      e
                    );
                  case s.J6.MUL:
                  case s.J6.DIV:
                  case s.J6.MOD:
                  case s.J6.MINUS:
                    return I(e, t), (e.type = t), e;
                  case s.J6.LT:
                  case s.J6.LE:
                  case s.J6.GT:
                  case s.J6.GE:
                    return I(e, t), (e.type = n.MX.BOOL), e;
                  case s.J6.EQ:
                  case s.J6.NE:
                    return (e.type = n.MX.BOOL), e;
                  case s.J6.AND:
                  case s.J6.OR:
                    return h(e, t), (e.type = n.MX.BOOL), e;
                  case s.J6.BIT_AND:
                  case s.J6.BIT_OR:
                  case s.J6.BIT_XOR:
                    return (
                      p(e, e.left.type, e.right.type), (e.type = e.left.type), e
                    );
                  case s.J6.SPLIT:
                    return (
                      u(e, e.left.type, [new n.x1(), n.MX.STRING]),
                      I(e, e.right.type),
                      (e.type = new n.Qc(
                        e.left.type instanceof n.x1 ? new n.x1() : n.MX.STRING
                      )),
                      e
                    );
                  default:
                    return e;
                }
              }
              visitUnaryOp(e) {
                switch (
                  ((e.expression = this.visit(e.expression)), e.operator)
                ) {
                  case s.M.NOT:
                    return h(e, e.expression.type), (e.type = n.MX.BOOL), e;
                  case s.M.NEGATE:
                    return I(e, e.expression.type), (e.type = n.MX.INT), e;
                  case s.M.SIZE:
                    return (
                      u(e, e.expression.type, [new n.x1(), n.MX.STRING]),
                      (e.type = n.MX.INT),
                      e
                    );
                  case s.M.REVERSE:
                    return (
                      u(e, e.expression.type, [new n.x1(), n.MX.STRING]),
                      (e.type = e.expression.type),
                      e
                    );
                  case s.M.INPUT_VALUE:
                  case s.M.INPUT_OUTPOINT_INDEX:
                  case s.M.INPUT_SEQUENCE_NUMBER:
                  case s.M.OUTPUT_VALUE:
                  case s.M.INPUT_TOKEN_AMOUNT:
                  case s.M.OUTPUT_TOKEN_AMOUNT:
                    return I(e, e.expression.type), (e.type = n.MX.INT), e;
                  case s.M.INPUT_LOCKING_BYTECODE:
                  case s.M.INPUT_UNLOCKING_BYTECODE:
                  case s.M.OUTPUT_LOCKING_BYTECODE:
                  case s.M.INPUT_NFT_COMMITMENT:
                  case s.M.OUTPUT_NFT_COMMITMENT:
                  case s.M.INPUT_TOKEN_CATEGORY:
                  case s.M.OUTPUT_TOKEN_CATEGORY:
                    return I(e, e.expression.type), (e.type = new n.x1()), e;
                  case s.M.INPUT_OUTPOINT_HASH:
                    return I(e, e.expression.type), (e.type = new n.x1(32)), e;
                  default:
                    return e;
                }
              }
              visitNullaryOp(e) {
                switch (e.operator) {
                  case s._E.INPUT_INDEX:
                  case s._E.INPUT_COUNT:
                  case s._E.OUTPUT_COUNT:
                  case s._E.VERSION:
                  case s._E.LOCKTIME:
                    return (e.type = n.MX.INT), e;
                  case s._E.BYTECODE:
                    return (e.type = new n.x1()), e;
                  default:
                    return e;
                }
              }
              visitArray(e) {
                e.elements = this.visitList(e.elements);
                const t = e.elements.map((t) => {
                    if (!t.type) throw new a.dq(e);
                    return t.type;
                  }),
                  r = (0, n.Mx)(t);
                if (!r) throw new a.dq(e);
                return (e.type = new n.ts(r)), e;
              }
              visitIdentifier(e) {
                return e.definition ? ((e.type = e.definition.type), e) : e;
              }
            }
            function u(e, t, r) {
              if (r && 0 !== r.length && !r.find((e) => (0, n.rI)(t, e)))
                throw new a.ik(e, t, r[0]);
            }
            function h(e, t) {
              u(e, t, [n.MX.BOOL]);
            }
            function I(e, t) {
              u(e, t, [n.MX.INT]);
            }
            function p(e, t, r) {
              if (!(t instanceof n.x1 && r instanceof n.x1))
                throw new a.ik(e, t, new n.x1());
              if (t.bound !== r.bound) throw new a.UW(e);
            }
            function d(e, t) {
              if (!(t instanceof n.Qc)) throw new a.ik(e, t, new n.Qc());
            }
            function f(e, t, r) {
              if (!(0, n.rI)(t, r)) throw new a.pU(e);
            }
            function C(e, t, r) {
              if (!(0, n.gk)(t, r)) throw new a.H(e, t, r);
            }
            i();
          } catch (B) {
            i(B);
          }
        });
      },
      96364: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => i });
        const i =
          "\n# This file can be run with CashProof to prove that the optimisations preserve exact functionality\n# This includes most of CashScript's bytecode optimisations, although some are incompatible with CashProof\n\n# Hardcoded arithmetic\n# OP_NOT OP_IF                         <=> OP_NOTIF;\nOP_1 OP_ADD                            <=> OP_1ADD;\nOP_1 OP_SUB                            <=> OP_1SUB;\nOP_1 OP_NEGATE                         <=> OP_1NEGATE;\nOP_0 OP_EQUAL OP_NOT                   <=> OP_0NOTEQUAL;\nOP_NUMEQUAL OP_NOT                     <=> OP_NUMNOTEQUAL;\nOP_SHA256 OP_SHA256                    <=> OP_HASH256;\nOP_SHA256 OP_RIPEMD160                 <=> OP_HASH160;\n\n# Hardcoded stack ops\nOP_2 OP_PICK OP_1 OP_PICK OP_3 OP_PICK <=> OP_3DUP OP_SWAP;\nOP_2 OP_PICK OP_2 OP_PICK OP_2 OP_PICK <=> OP_3DUP;\n\nOP_0 OP_PICK OP_2 OP_PICK              <=> OP_2DUP OP_SWAP;\nOP_2 OP_PICK OP_4 OP_PICK              <=> OP_2OVER OP_SWAP;\nOP_3 OP_PICK OP_3 OP_PICK              <=> OP_2OVER;\n\nOP_2 OP_ROLL OP_3 OP_ROLL              <=> OP_2SWAP OP_SWAP;\nOP_3 OP_ROLL OP_3 OP_ROLL              <=> OP_2SWAP;\nOP_4 OP_ROLL OP_5 OP_ROLL              <=> OP_2ROT OP_SWAP;\nOP_5 OP_ROLL OP_5 OP_ROLL              <=> OP_2ROT;\n\nOP_0 OP_PICK                           <=> OP_DUP;\nOP_1 OP_PICK                           <=> OP_OVER;\nOP_0 OP_ROLL                           <=> ;\nOP_1 OP_ROLL                           <=> OP_SWAP;\nOP_2 OP_ROLL                           <=> OP_ROT;\nOP_DROP OP_DROP                        <=> OP_2DROP;\n\n# Secondary effects\nOP_DUP OP_SWAP                         <=> OP_DUP;\nOP_SWAP OP_SWAP                        <=> ;\nOP_2SWAP OP_2SWAP                      <=> ;\nOP_ROT OP_ROT OP_ROT                   <=> ;\nOP_2ROT OP_2ROT OP_2ROT                <=> ;\nOP_OVER OP_OVER                        <=> OP_2DUP;\nOP_DUP OP_DROP                         <=> ;\nOP_DUP OP_NIP                          <=> ;\n\n# Enabling secondary effects\nOP_DUP OP_OVER                         <=> OP_DUP OP_DUP;\n\n# Merge OP_VERIFY\nOP_EQUAL OP_VERIFY                     <=> OP_EQUALVERIFY;\nOP_NUMEQUAL OP_VERIFY                  <=> OP_NUMEQUALVERIFY;\nOP_CHECKSIG OP_VERIFY                  <=> OP_CHECKSIGVERIFY;\n# OP_CHECKMULTISIG OP_VERIFY           <=> OP_CHECKMULTISIGVERIFY;\nOP_CHECKDATASIG OP_VERIFY              <=> OP_CHECKDATASIGVERIFY;\n\n# Remove/replace extraneous OP_SWAP\n# OP_SWAP OP_AND                         <=> OP_AND;\n# OP_SWAP OP_OR                          <=> OP_OR;\n# OP_SWAP OP_XOR                         <=> OP_XOR;\nOP_SWAP OP_ADD                         <=> OP_ADD;\nOP_SWAP OP_EQUAL                       <=> OP_EQUAL;\nOP_SWAP OP_NUMEQUAL                    <=> OP_NUMEQUAL;\nOP_SWAP OP_NUMNOTEQUAL                 <=> OP_NUMNOTEQUAL;\nOP_SWAP OP_GREATERTHANOREQUAL          <=> OP_LESSTHANOREQUAL;\nOP_SWAP OP_LESSTHANOREQUAL             <=> OP_GREATERTHANOREQUAL;\nOP_SWAP OP_GREATERTHAN                 <=> OP_LESSTHAN;\nOP_SWAP OP_LESSTHAN                    <=> OP_GREATERTHAN;\nOP_SWAP OP_DROP                        <=> OP_NIP;\nOP_SWAP OP_NIP                         <=> OP_DROP;\n\n# Remove/replace extraneous OP_DUP\n# OP_DUP OP_AND                         <=> ;\n# OP_DUP OP_OR                          <=> ;\nOP_DUP OP_DROP                        <=> ;\nOP_DUP OP_NIP                         <=> ;\n\n# Random optimisations (don't know what I'm targeting with this)\nOP_2DUP OP_DROP                        <=> OP_OVER;\nOP_2DUP OP_NIP                         <=> OP_DUP;\nOP_CAT OP_DROP                         <=> OP_2DROP;\nOP_NIP OP_DROP                         <=> OP_2DROP;\n\n# Far-fetched stuff\nOP_DUP OP_ROT OP_SWAP OP_DROP          <=> OP_SWAP;\nOP_OVER OP_ROT OP_SWAP OP_DROP         <=> OP_SWAP;\nOP_2 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_3 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_4 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_5 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_6 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_7 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_8 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_9 OP_PICK OP_ROT OP_SWAP OP_DROP    <=> OP_SWAP;\nOP_10 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_11 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_12 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_13 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_14 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_15 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\nOP_16 OP_PICK OP_ROT OP_SWAP OP_DROP   <=> OP_SWAP;\n\nOP_DUP OP_ROT OP_DROP                  <=> OP_NIP OP_DUP;\nOP_OVER OP_ROT OP_DROP                 <=> OP_SWAP;\nOP_2 OP_PICK OP_ROT OP_DROP            <=> OP_NIP OP_OVER;\n\nOP_0 OP_NIP                            <=> OP_DROP OP_0;\nOP_1 OP_NIP                            <=> OP_DROP OP_1;\nOP_2 OP_NIP                            <=> OP_DROP OP_2;\nOP_3 OP_NIP                            <=> OP_DROP OP_3;\nOP_4 OP_NIP                            <=> OP_DROP OP_4;\nOP_5 OP_NIP                            <=> OP_DROP OP_5;\nOP_6 OP_NIP                            <=> OP_DROP OP_6;\nOP_7 OP_NIP                            <=> OP_DROP OP_7;\nOP_8 OP_NIP                            <=> OP_DROP OP_8;\nOP_9 OP_NIP                            <=> OP_DROP OP_9;\nOP_10 OP_NIP                           <=> OP_DROP OP_10;\nOP_11 OP_NIP                           <=> OP_DROP OP_11;\nOP_12 OP_NIP                           <=> OP_DROP OP_12;\nOP_13 OP_NIP                           <=> OP_DROP OP_13;\nOP_14 OP_NIP                           <=> OP_DROP OP_14;\nOP_15 OP_NIP                           <=> OP_DROP OP_15;\nOP_16 OP_NIP                           <=> OP_DROP OP_16;\n\nOP_2 OP_PICK OP_SWAP OP_2 OP_PICK OP_NIP <=> OP_DROP OP_2DUP;\n";
      },
      63103: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { GP: () => s, YW: () => c, oL: () => a });
            var n = r(85671),
              o = r(43137),
              A = e([n]);
            function a(e) {
              return s(e ? 1n : 0n);
            }
            function s(e) {
              return (0, n.qR)(e);
            }
            function c(e) {
              return (0, o.L)(e);
            }
            (n = (A.then ? (await A)() : A)[0]), i();
          } catch (g) {
            i(g);
          }
        });
      },
      73947: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { H_: () => d, MM: () => u, Op: () => g, Tu: () => l });
            var n = r(16043),
              o = r(85671),
              A = r(67289),
              a = r(34684),
              s = r(96364),
              c = e([o, A]);
            [o, A] = c.then ? (await c)() : c;
            const g = n.oM;
            function l(e) {
              return p(h(e));
            }
            function u(e) {
              return (
                (t = I(e)),
                (0, o.og)(t).map((e) => ("data" in e ? e.data : e.opcode))
              );
              var t;
            }
            function h(e) {
              const t = e.map((e) =>
                "number" == typeof e
                  ? { opcode: e }
                  : (0, o.og)((0, A.WV)(e))[0]
              );
              return (0, o.V6)(t);
            }
            function I(e) {
              const t = (e = e.replace(/\s+/g, " ").trim())
                .split(" ")
                .map((e) =>
                  e.startsWith("OP_")
                    ? { opcode: g[e] }
                    : (0, o.og)((0, A.WV)((0, a.kW)(e)))[0]
                );
              return (0, o.V6)(t);
            }
            function p(e) {
              let t = (0, o.$n)(e);
              return (
                (t = t.replace(/OP_PUSHBYTES_[^\s]+/g, "")),
                (t = t.replace(/OP_PUSHDATA[^\s]+ [^\s]+/g, "")),
                (t = t.replace(/(^|\s)0x/g, " ")),
                (t = t.replace(/\s+/g, " ").trim()),
                t
              );
            }
            function d(e, t = 1e3) {
              const r = s.Z.split("\n")
                .map((e) => e.trim())
                .filter((e) => !e.startsWith("#"))
                .join("")
                .split(";")
                .map((e) => e.trim())
                .map((e) => e.split("<=>").map((e) => e.trim()))
                .filter((e) => 2 === e.length);
              for (let i = 0; i < t; i += 1) {
                const t = e;
                if (((e = f(e, r)), l(t) === l(e))) break;
              }
              return e;
            }
            function f(e, t) {
              let r = l(e);
              return (
                t.forEach(([e, t]) => {
                  r = r.replace(new RegExp(e, "g"), t);
                }),
                (r = r.replace(/OP_NOT OP_IF/g, "OP_NOTIF")),
                (r = r.replace(
                  /OP_CHECKMULTISIG OP_VERIFY/g,
                  "OP_CHECKMULTISIGVERIFY"
                )),
                (r = r.replace(/OP_SWAP OP_AND/g, "OP_AND")),
                (r = r.replace(/OP_SWAP OP_OR/g, "OP_OR")),
                (r = r.replace(/OP_SWAP OP_XOR/g, "OP_XOR")),
                (r = r.replace(/OP_DUP OP_AND/g, "")),
                (r = r.replace(/OP_DUP OP_OR/g, "")),
                (r = r.replace(/\s+/g, " ").trim()),
                u(r)
              );
            }
            i();
          } catch (C) {
            i(C);
          }
        });
      },
      56394: (e, t, r) => {
        "use strict";
        r.d(t, {
          MX: () => A,
          Mx: () => l,
          Qc: () => o,
          bs: () => s,
          gZ: () => h,
          gk: () => u,
          rI: () => c,
          ts: () => i,
          w: () => g,
          x1: () => n,
        });
        class i {
          constructor(e, t) {
            (this.elementType = e), (this.bound = t);
          }
          toString() {
            return `${this.elementType}[${this.bound ?? ""}]`;
          }
        }
        class n {
          constructor(e) {
            this.bound = e;
          }
          static fromString(e) {
            const t =
              "byte" === e ? 1 : Number.parseInt(e.substring(5), 10) || void 0;
            return new n(t);
          }
          toString() {
            return `bytes${this.bound ?? ""}`;
          }
        }
        class o {
          constructor(e) {
            this.elementType = e;
          }
          toString() {
            return `(${this.elementType}, ${this.elementType})`;
          }
        }
        var A;
        !(function (e) {
          (e.INT = "int"),
            (e.BOOL = "bool"),
            (e.STRING = "string"),
            (e.PUBKEY = "pubkey"),
            (e.SIG = "sig"),
            (e.DATASIG = "datasig"),
            (e.ANY = "any");
        })(A || (A = {}));
        const a = {
          [A.INT]: [A.INT, A.BOOL],
          [A.BOOL]: [A.BOOL, A.INT],
          [A.STRING]: [A.STRING],
          [A.PUBKEY]: [A.PUBKEY],
          [A.SIG]: [A.SIG],
          [A.DATASIG]: [A.DATASIG],
          [A.ANY]: [],
        };
        function s(e, t) {
          return (
            !(!e || !t) &&
            !(e instanceof o || t instanceof o) &&
            (e instanceof i && t instanceof i
              ? s(e.elementType, t.elementType)
              : !(e instanceof i || t instanceof i) &&
                (t instanceof n
                  ? e !== A.BOOL &&
                    (e === A.INT ||
                      !t.bound ||
                      (e instanceof n && (!e.bound || e.bound === t.bound)))
                  : e instanceof n
                  ? t === A.INT
                    ? !e.bound || e.bound <= 8
                    : t !== A.BOOL &&
                      t !== A.STRING &&
                      (t === A.PUBKEY || t === A.SIG || A.DATASIG, !0)
                  : a[e].includes(t)))
          );
        }
        function c(e, t) {
          return (
            !(!e || !t) &&
            !(e instanceof o || t instanceof o) &&
            (e instanceof i && t instanceof i
              ? c(e.elementType, t.elementType)
              : !(
                  e instanceof i ||
                  t instanceof i ||
                  (t !== A.ANY &&
                    !(t instanceof n
                      ? e !== A.BOOL &&
                        e !== A.INT &&
                        e !== A.STRING &&
                        (!t.bound ||
                          (e instanceof n && !!e.bound && e.bound === t.bound))
                      : e === t))
                ))
          );
        }
        function g(e, t) {
          return c(e, t)
            ? t
            : c(t, e)
            ? e
            : e instanceof n && t instanceof n
            ? new n()
            : void 0;
        }
        function l(e) {
          if (0 === e.length) return;
          let t = e[0];
          return (
            e.forEach((e) => {
              t = g(t, e);
            }),
            t
          );
        }
        function u(e, t) {
          return e.length === t.length && t.every((t, r) => c(e[r], t));
        }
        function h(e) {
          return e.startsWith("byte") ? n.fromString(e) : A[e.toUpperCase()];
        }
      },
      40789: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { m: () => g });
            var n = r(34684),
              o = r(4899),
              A = r(9612),
              a = r(99132),
              s = r(82374),
              c = e([A, s]);
            function g(e, t) {
              let r = (0, o.gZ)(t);
              if (r === o.MX.BOOL) {
                if ("boolean" != typeof e) throw new a.R3(typeof e, r);
                return (0, A.oL)(e);
              }
              if (r === o.MX.INT) {
                if ("bigint" != typeof e) throw new a.R3(typeof e, r);
                return (0, A.GP)(e);
              }
              if (r === o.MX.STRING) {
                if ("string" != typeof e) throw new a.R3(typeof e, r);
                return (0, A.YW)(e);
              }
              if (r === o.MX.SIG && e instanceof s.Z) return e;
              if (
                ("string" == typeof e &&
                  (e.startsWith("0x") && (e = e.slice(2)), (e = (0, n.kW)(e))),
                !(e instanceof Uint8Array))
              )
                throw Error(
                  `Value for type ${r} should be a Uint8Array or hex string`
                );
              if (
                (r === o.MX.SIG && 0 !== e.byteLength && (r = new o.x1(65)),
                r === o.MX.DATASIG && 0 !== e.byteLength && (r = new o.x1(64)),
                r instanceof o.x1 && r.bound && e.byteLength !== r.bound)
              )
                throw new a.R3(`bytes${e.byteLength}`, r);
              return e;
            }
            ([A, s] = c.then ? (await c)() : c), i();
          } catch (l) {
            i(l);
          }
        });
      },
      72024: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { C: () => u });
            var n = r(34684),
              o = r(80976),
              A = r(68551),
              a = r(40789),
              s = r(59773),
              c = r(82374),
              g = r(99362),
              l = e([g, a, c, o, s, A]);
            [g, a, c, o, s, A] = l.then ? (await l)() : l;
            class u {
              constructor(e, t, r) {
                (this.artifact = e), (this.options = r);
                const i = new g.Z();
                if (
                  ((this.provider = this.options?.provider ?? i),
                  (this.addressType = this.options?.addressType ?? "p2sh32"),
                  ![
                    "abi",
                    "bytecode",
                    "constructorInputs",
                    "contractName",
                  ].every((t) => t in e))
                )
                  throw new Error("Invalid or incomplete artifact provided");
                if (e.constructorInputs.length !== t.length)
                  throw new Error(
                    `Incorrect number of arguments passed to ${e.contractName} constructor`
                  );
                const A = t
                  .map((t, r) => (0, a.m)(t, e.constructorInputs[r].type))
                  .reverse();
                if (A.some((e) => e instanceof c.Z))
                  throw new Error("Cannot use signatures in constructor");
                if (
                  ((this.redeemScript = (0, o.dQ)(
                    (0, o.MM)(this.artifact.bytecode),
                    A
                  )),
                  (this.functions = {}),
                  1 === e.abi.length)
                ) {
                  const t = e.abi[0];
                  this.functions[t.name] = this.createFunction(t);
                } else
                  e.abi.forEach((e, t) => {
                    this.functions[e.name] = this.createFunction(e, t);
                  });
                (this.name = e.contractName),
                  (this.address = (0, s.ft)(
                    this.redeemScript,
                    this.provider.network,
                    this.addressType,
                    !1
                  )),
                  (this.tokenAddress = (0, s.ft)(
                    this.redeemScript,
                    this.provider.network,
                    this.addressType,
                    !0
                  )),
                  (this.bytecode = (0, n.UM)((0, o.Kr)(this.redeemScript))),
                  (this.bytesize = (0, o.IA)(this.redeemScript)),
                  (this.opcount = (0, o.Zl)(this.redeemScript));
              }
              async getBalance() {
                return (await this.getUtxos()).reduce(
                  (e, t) => e + t.satoshis,
                  0n
                );
              }
              async getUtxos() {
                return this.provider.getUtxos(this.address);
              }
              createFunction(e, t) {
                return (...r) => {
                  if (e.inputs.length !== r.length)
                    throw new Error(
                      `Incorrect number of arguments passed to function ${e.name}`
                    );
                  const i = r.map((t, r) => (0, a.m)(t, e.inputs[r].type));
                  return new A.Y(
                    this.address,
                    this.provider,
                    this.redeemScript,
                    e,
                    i,
                    t
                  );
                };
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      99132: (e, t, r) => {
        "use strict";
        r.d(t, {
          G$: () => a,
          I7: () => n,
          KG: () => g,
          R3: () => i,
          Sk: () => o,
          _q: () => c,
          ec: () => s,
          y6: () => A,
        });
        class i extends Error {
          constructor(e, t) {
            super(
              `Found type '${e}' where type '${t.toString()}' was expected`
            );
          }
        }
        class n extends Error {
          constructor(e, t) {
            super(
              `Tried to add an output with ${e} satoshis, which is less than the required minimum for this output-type (${t})`
            );
          }
        }
        class o extends Error {
          constructor(e) {
            super(
              `Tried to send tokens to an address without token support, ${e}.`
            );
          }
        }
        class A extends Error {
          constructor(e, t) {
            super(`Transaction failed with reason: ${e}\n${t}`),
              (this.reason = e),
              (this.meep = t);
          }
        }
        class a extends A {}
        class s extends A {}
        class c extends A {}
        var g;
        !(function (e) {
          (e.EVAL_FALSE =
            "Script evaluated without error but finished with a false/empty top stack element"),
            (e.VERIFY = "Script failed an OP_VERIFY operation"),
            (e.EQUALVERIFY = "Script failed an OP_EQUALVERIFY operation"),
            (e.CHECKMULTISIGVERIFY =
              "Script failed an OP_CHECKMULTISIGVERIFY operation"),
            (e.CHECKSIGVERIFY = "Script failed an OP_CHECKSIGVERIFY operation"),
            (e.CHECKDATASIGVERIFY =
              "Script failed an OP_CHECKDATASIGVERIFY operation"),
            (e.NUMEQUALVERIFY = "Script failed an OP_NUMEQUALVERIFY operation"),
            (e.SCRIPT_SIZE = "Script is too big"),
            (e.PUSH_SIZE = "Push value size limit exceeded"),
            (e.OP_COUNT = "Operation limit exceeded"),
            (e.STACK_SIZE = "Stack size limit exceeded"),
            (e.SIG_COUNT =
              "Signature count negative or greater than pubkey count"),
            (e.PUBKEY_COUNT = "Pubkey count negative or limit exceeded"),
            (e.INVALID_OPERAND_SIZE = "Invalid operand size"),
            (e.INVALID_NUMBER_RANGE =
              "Given operand is not a number within the valid range"),
            (e.IMPOSSIBLE_ENCODING =
              "The requested encoding is impossible to satisfy"),
            (e.INVALID_SPLIT_RANGE = "Invalid OP_SPLIT range"),
            (e.INVALID_BIT_COUNT =
              "Invalid number of bit set in OP_CHECKMULTISIG"),
            (e.BAD_OPCODE = "Opcode missing or not understood"),
            (e.DISABLED_OPCODE = "Attempted to use a disabled opcode"),
            (e.INVALID_STACK_OPERATION =
              "Operation not valid with the current stack size"),
            (e.INVALID_ALTSTACK_OPERATION =
              "Operation not valid with the current altstack size"),
            (e.OP_RETURN = "OP_RETURN was encountered"),
            (e.UNBALANCED_CONDITIONAL = "Invalid OP_IF construction"),
            (e.DIV_BY_ZERO = "Division by zero error"),
            (e.MOD_BY_ZERO = "Modulo by zero error"),
            (e.INVALID_BITFIELD_SIZE = "Bitfield of unexpected size error"),
            (e.INVALID_BIT_RANGE = "Bitfield's bit out of the expected range"),
            (e.NEGATIVE_LOCKTIME = "Negative locktime"),
            (e.UNSATISFIED_LOCKTIME = "Locktime requirement not satisfied"),
            (e.SIG_HASHTYPE = "Signature hash type missing or not understood"),
            (e.SIG_DER = "Non-canonical DER signature"),
            (e.MINIMALDATA = "Data push larger than necessary"),
            (e.SIG_PUSHONLY =
              "Only push operators allowed in signature scripts"),
            (e.SIG_HIGH_S =
              "Non-canonical signature: S value is unnecessarily high"),
            (e.MINIMALIF = "OP_IF/NOTIF argument must be minimal"),
            (e.SIG_NULLFAIL =
              "Signature must be zero for failed CHECK(MULTI)SIG operation"),
            (e.SIG_BADLENGTH = "Signature cannot be 65 bytes in CHECKMULTISIG"),
            (e.SIG_NONSCHNORR =
              "Only Schnorr signatures allowed in this operation"),
            (e.DISCOURAGE_UPGRADABLE_NOPS =
              "NOPx reserved for soft-fork upgrades"),
            (e.PUBKEYTYPE = "Public key is neither compressed or uncompressed"),
            (e.CLEANSTACK = "Script did not clean its stack"),
            (e.NONCOMPRESSED_PUBKEY = "Using non-compressed public key"),
            (e.ILLEGAL_FORKID = "Illegal use of SIGHASH_FORKID"),
            (e.MUST_USE_FORKID = "Signature must use SIGHASH_FORKID"),
            (e.UNKNOWN = "unknown error");
        })(g || (g = {}));
      },
      82374: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => c });
            var n = r(12909),
              o = r(44115),
              A = r(19555),
              a = r(24090),
              s = e([n, o, A]);
            [n, o, A] = s.then ? (await s)() : s;
            class c {
              constructor(
                e,
                t = a.k_.SIGHASH_ALL | a.k_.SIGHASH_UTXOS,
                r = a.Ye.SCHNORR
              ) {
                if (
                  ((this.hashtype = t),
                  (this.signatureAlgorithm = r),
                  "function" == typeof e.toWIF)
                ) {
                  const t = e.toWIF();
                  this.privateKey = g(t);
                } else this.privateKey = "string" == typeof e ? g(e) : e;
              }
              generateSignature(e, t) {
                const r =
                  this.signatureAlgorithm === a.Ye.SCHNORR
                    ? n.kA.signMessageHashSchnorr(this.privateKey, e)
                    : n.kA.signMessageHashDER(this.privateKey, e);
                return Uint8Array.from([...r, this.getHashType(t)]);
              }
              getHashType(e = !0) {
                return e ? this.hashtype | o.IR.forkId : this.hashtype;
              }
              getPublicKey() {
                return n.kA.derivePublicKeyCompressed(this.privateKey);
              }
            }
            function g(e) {
              const t = (0, A.L)(e);
              if ("string" == typeof t) throw new Error(t);
              return t.privateKey;
            }
            i();
          } catch (l) {
            i(l);
          }
        });
      },
      68551: (e, t, r) => {
        "use strict";
        r.a(
          e,
          async (e, i) => {
            try {
              r.d(t, { Y: () => p });
              var n = r(34684),
                o = r(30861),
                A = r(59228),
                a = r(80976),
                s = r(42543),
                c = r(9612),
                g = r(24090),
                l = r(59773),
                u = r(82374),
                h = e([l, a, u, o, c]);
              [l, a, u, o, c] = h.then ? (await h)() : h;
              const I = await r.e(232).then(r.t.bind(r, 73232, 19));
              class p {
                constructor(e, t, r, i, n, o) {
                  (this.address = e),
                    (this.provider = t),
                    (this.redeemScript = r),
                    (this.abiFunction = i),
                    (this.args = n),
                    (this.selector = o),
                    (this.inputs = []),
                    (this.outputs = []),
                    (this.sequence = 4294967294),
                    (this.feePerByte = 1),
                    (this.minChange = 0n),
                    (this.tokenChange = !0);
                }
                from(e) {
                  return (
                    Array.isArray(e) || (e = [e]),
                    (this.inputs = this.inputs.concat(e)),
                    this
                  );
                }
                fromP2PKH(e, t) {
                  return (
                    Array.isArray(e) || (e = [e]),
                    (e = e.map((e) => ({ ...e, template: t }))),
                    (this.inputs = this.inputs.concat(e)),
                    this
                  );
                }
                to(e, t, r) {
                  if ("string" == typeof e && "bigint" == typeof t) {
                    const i = { to: e, amount: t, token: r };
                    return this.to([i]);
                  }
                  if (Array.isArray(e) && void 0 === t)
                    return (
                      e.forEach(l.Im),
                      (this.outputs = this.outputs.concat(e)),
                      this
                    );
                  throw new Error(
                    "Incorrect arguments passed to function 'to'"
                  );
                }
                withOpReturn(e) {
                  return this.outputs.push((0, l.sU)(e)), this;
                }
                withAge(e) {
                  return (this.sequence = I.encode({ blocks: e })), this;
                }
                withTime(e) {
                  return (this.locktime = e), this;
                }
                withHardcodedFee(e) {
                  return (this.hardcodedFee = e), this;
                }
                withFeePerByte(e) {
                  return (this.feePerByte = e), this;
                }
                withMinChange(e) {
                  return (this.minChange = e), this;
                }
                withoutChange() {
                  return this.withMinChange(BigInt(Number.MAX_VALUE));
                }
                withoutTokenChange() {
                  return (this.tokenChange = !1), this;
                }
                async build() {
                  (this.locktime =
                    this.locktime ?? (await this.provider.getBlockHeight())),
                    await this.setInputsAndOutputs();
                  const e = (0, a.Kr)(this.redeemScript),
                    t = (0, l.Qj)(this.address),
                    r = this.inputs.map((e) => ({
                      outpointIndex: e.vout,
                      outpointTransactionHash: (0, n.kW)(e.txid),
                      sequenceNumber: this.sequence,
                      unlockingBytecode: new Uint8Array(),
                    })),
                    i = this.inputs.map((e) => {
                      const r = {
                        amount: e.satoshis,
                        to: (0, g.zV)(e)
                          ? (0, l.qc)(e.template.getPublicKey())
                          : t,
                        token: e.token,
                      };
                      return (0, l.Nw)(r);
                    }),
                    A = this.outputs.map(l.Nw),
                    c = {
                      inputs: r,
                      locktime: this.locktime,
                      outputs: A,
                      version: 2,
                    },
                    h = [];
                  return (
                    this.inputs.forEach((t, r) => {
                      if ((0, g.zV)(t)) {
                        const e = t.template.getPublicKey(),
                          n = (0, l.qc)(e),
                          o = t.template.getHashType(),
                          A = (0, l.fw)(c, i, r, n, o),
                          g = (0, s.Wi)(A),
                          u = t.template.generateSignature(g),
                          I = (0, a.Kr)([u, e]);
                        return void h.push(I);
                      }
                      let n = -1;
                      const o = this.args.map((t) => {
                          if (!(t instanceof u.Z)) return t;
                          n < 0 && (n = t.getHashType());
                          const o = (0, l.fw)(c, i, r, e, t.getHashType()),
                            A = (0, s.Wi)(o);
                          return t.generateSignature(A);
                        }),
                        A = this.abiFunction.covenant
                          ? (0, l.fw)(c, i, r, e, n)
                          : void 0,
                        I = (0, l.OB)(this.redeemScript, o, this.selector, A);
                      h.push(I);
                    }),
                    h.forEach((e, t) => {
                      c.inputs[t].unlockingBytecode = e;
                    }),
                    (0, n.UM)((0, o.SC)(c))
                  );
                }
                async send(e) {
                  const t = await this.build();
                  try {
                    const r = await this.provider.sendRawTransaction(t);
                    return e
                      ? await this.getTxDetails(r, e)
                      : await this.getTxDetails(r);
                  } catch (e) {
                    const r = e.error ?? e.message;
                    throw (0, l.RP)(
                      r,
                      (0, l.oy)(t, this.inputs, this.redeemScript)
                    );
                  }
                }
                async getTxDetails(e, t) {
                  for (let r = 0; r < 1200; r += 1) {
                    await A(500);
                    try {
                      const r = await this.provider.getRawTransaction(e);
                      return t
                        ? r
                        : { ...(0, o.c8)((0, n.kW)(r)), txid: e, hex: r };
                    } catch (e) {}
                  }
                  throw new Error(
                    "Could not retrieve transaction details for over 10 minutes"
                  );
                }
                async meep() {
                  const e = await this.build();
                  return (0, l.oy)(e, this.inputs, this.redeemScript);
                }
                async setInputsAndOutputs() {
                  if (0 === this.outputs.length)
                    throw Error(
                      "Attempted to build a transaction without outputs"
                    );
                  const e = await this.provider.getUtxos(this.address),
                    t = this.inputs.filter((e) => e.token);
                  t.length > 0 && E(t, this.outputs);
                  const r = E(e, this.outputs),
                    i = t.length > 0 ? t : r;
                  if (this.tokenChange) {
                    const e = y(i, this.outputs, this.address);
                    this.outputs.push(...e);
                  }
                  const n = [];
                  this.inputs.forEach((e) => {
                    e.token &&
                      e.token.nft &&
                      n.push({ ...e.token.nft, category: e.token.category });
                  });
                  let o = [];
                  if (
                    (this.outputs.forEach((e) => {
                      e.token &&
                        e.token.nft &&
                        o.push({ ...e.token.nft, category: e.token.category });
                    }),
                    this.inputs.length > 0)
                  ) {
                    let e = n;
                    for (const t of n)
                      if ("none" === t.capability)
                        for (let r = 0; r < o.length; r += 1)
                          if (JSON.stringify(o[r]) === JSON.stringify(t)) {
                            o.splice(r, 1), (e = e.filter((e) => e !== t));
                            break;
                          }
                    for (const t of n) {
                      if ("minting" === t.capability) {
                        const r = o.filter((e) => e.category !== t.category);
                        r !== o && ((e = e.filter((e) => e !== t)), (o = r));
                      }
                      if ("mutable" === t.capability)
                        for (let r = 0; r < o.length; r += 1)
                          if (o[r].category === t.category) {
                            o.splice(r, 1), (e = e.filter((e) => e !== t));
                            break;
                          }
                    }
                    /*for (const e of o)
                      d(this.inputs, e.category) &&
                        (o = o.filter((t) => t !== e));
                    if (0 !== o.length)
                      throw new Error(
                        `NFT output with token category ${o[0].category} does not have corresponding input`
                      );*/
                    if (this.tokenChange)
                      for (const t of e) {
                        const e = {
                            category: t.category,
                            amount: BigInt(0),
                            nft: {
                              capability: t.capability,
                              commitment: t.commitment,
                            },
                          },
                          r = {
                            to: this.address,
                            amount: BigInt(1e3),
                            token: e,
                          };
                        this.outputs.push(r);
                      }
                  }
                  const A = this.args.map((e) =>
                      e instanceof u.Z ? (0, c.W$)(65) : e
                    ),
                    s = this.abiFunction.covenant
                      ? (0, c.W$)((0, l.nf)((0, a.Kr)(this.redeemScript)))
                      : void 0,
                    g = (0, l.OB)(this.redeemScript, A, this.selector, s),
                    h = (0, l.BI)(g) + 1;
                  let I = m(this.outputs.reduce((e, t) => e + t.amount, 0n)),
                    p = m(
                      this.hardcodedFee ??
                        (0, l.$0)(this.outputs) * this.feePerByte
                    ),
                    f = 0n;
                  if (this.inputs.length > 0)
                    this.hardcodedFee ||
                      (p += m(this.inputs.length * h * this.feePerByte)),
                      (f = m(this.inputs.reduce((e, t) => e + t.satoshis, 0n)));
                  else {
                    const t = e.filter((e) => !e.token);
                    t.sort(l.Wn).reverse();
                    for (const e of r)
                      this.inputs.push(e),
                        (f += m(e.satoshis)),
                        this.hardcodedFee || (p += m(h * this.feePerByte));
                    for (const e of t) {
                      if (f > I + p) break;
                      this.inputs.push(e),
                        (f += m(e.satoshis)),
                        this.hardcodedFee || (p += m(h * this.feePerByte));
                    }
                  }
                  (f = Q(f)), (I = Q(I)), (p = v(p));
                  let C = f - I - p;
                  if (C < 0)
                    throw new Error(
                      `Insufficient funds: available (${f}) < needed (${
                        I + p
                      }).`
                    );
                  if (!this.hardcodedFee) {
                    const e = (0, l.yk)({ to: this.address, amount: 0n });
                    C -= BigInt(e * this.feePerByte);
                  }
                  const B = { to: this.address, amount: C };
                  C >= this.minChange &&
                    C >= (0, l.yX)(B) &&
                    this.outputs.push(B);
                }
              }
              const d = (e, t) => e.find((e) => 0 === e.vout && e.txid === t),
                f = (e) =>
                  e.filter((e) => e.token).map((e) => e.token.category),
                C = (e, t) =>
                  e
                    .filter((e) => e.token?.category === t)
                    .reduce((e, t) => e + t.token.amount, 0n),
                B = (e, t, r) => {
                  const i = d(e, r);
                  if (i) return [i];
                  const n = e.filter((e) => e.token?.category === r);
                  n.sort(l.c5).reverse();
                  let o = 0n;
                  const A = [];
                  for (const e of n)
                    if ((A.push(e), (o += e.token.amount), o >= t)) break;
                  if (o < t)
                    throw new Error(
                      `Insufficient funds for token ${r}: available (${o}) < needed (${t}).`
                    );
                  return A;
                },
                E = (e, t) => f(t).flatMap((r) => B(e, C(t, r), r)),
                y = (e, t, r) =>
                  f(e).map((i) => {
                    const n = C(t, i),
                      o = C(e, i) - n;
                    return {
                      to: r,
                      amount: BigInt(1e3),
                      token: { category: i, amount: o },
                    };
                  }),
                m = (e, t = 6) =>
                  "number" == typeof e
                    ? BigInt(Math.ceil(e * 10 ** t))
                    : e * BigInt(10 ** t),
                Q = (e, t = 6) => e / 10n ** BigInt(t),
                v = (e, t = 6) => {
                  const r = 10n ** BigInt(t);
                  return (e + r - 1n) / r;
                };
              i();
            } catch (e) {
              i(e);
            }
          },
          1
        );
      },
      65221: (e, t, r) => {
        "use strict";
        r.d(t, { d: () => i, t: () => n });
        const i = 4,
          n = 4;
      },
      24090: (e, t, r) => {
        "use strict";
        function i(e) {
          return "template" in e;
        }
        var n, o;
        r.d(t, { Ye: () => n, Zc: () => A, k_: () => o, zV: () => i }),
          (function (e) {
            (e[(e.ECDSA = 0)] = "ECDSA"), (e[(e.SCHNORR = 1)] = "SCHNORR");
          })(n || (n = {})),
          (function (e) {
            (e[(e.SIGHASH_ALL = 1)] = "SIGHASH_ALL"),
              (e[(e.SIGHASH_NONE = 2)] = "SIGHASH_NONE"),
              (e[(e.SIGHASH_SINGLE = 3)] = "SIGHASH_SINGLE"),
              (e[(e.SIGHASH_UTXOS = 32)] = "SIGHASH_UTXOS"),
              (e[(e.SIGHASH_ANYONECANPAY = 128)] = "SIGHASH_ANYONECANPAY");
          })(o || (o = {}));
        const A = {
          MAINNET: "mainnet",
          TESTNET3: "testnet3",
          TESTNET4: "testnet4",
          CHIPNET: "chipnet",
          REGTEST: "regtest",
        };
      },
      99362: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => g });
            var n = r(34684),
              o = r(42543),
              A = r(39797),
              a = r(24090),
              s = r(59773),
              c = e([s]);
            s = (c.then ? (await c)() : c)[0];
            class g {
              constructor(e = a.Zc.MAINNET, t, r) {
                if (
                  ((this.network = e),
                  (this.manualConnectionManagement = r),
                  (this.concurrentRequests = 0),
                  t)
                )
                  this.electrum = t;
                else if (e === a.Zc.MAINNET)
                  (this.electrum = new A.bc(
                    "CashScript Application",
                    "1.4.1",
                    2,
                    3,
                    A.OC.PRIORITY
                  )),
                    this.electrum.addServer(
                      "bch.imaginary.cash",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "blackie.c3-soft.com",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "electroncash.de",
                      60002,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "electroncash.dk",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "bch.loping.net",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "electrum.imaginary.cash",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    );
                else if (e === a.Zc.TESTNET3)
                  (this.electrum = new A.bc(
                    "CashScript Application",
                    "1.4.1",
                    1,
                    2,
                    A.OC.PRIORITY
                  )),
                    this.electrum.addServer(
                      "blackie.c3-soft.com",
                      60004,
                      A.Cq.WSS.Scheme,
                      !1
                    ),
                    this.electrum.addServer(
                      "electroncash.de",
                      60004,
                      A.Cq.WSS.Scheme,
                      !1
                    );
                else if (e === a.Zc.TESTNET4)
                  (this.electrum = new A.bc(
                    "CashScript Application",
                    "1.4.1",
                    1,
                    1,
                    A.OC.PRIORITY
                  )),
                    this.electrum.addServer(
                      "testnet4.imaginary.cash",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    );
                else {
                  if (e !== a.Zc.CHIPNET)
                    throw new Error(
                      `Tried to instantiate an ElectrumNetworkProvider for unsupported network ${e}`
                    );
                  (this.electrum = new A.bc(
                    "CashScript Application",
                    "1.4.1",
                    1,
                    1,
                    A.OC.PRIORITY
                  )),
                    this.electrum.addServer(
                      "chipnet.imaginary.cash",
                      50004,
                      A.Cq.WSS.Scheme,
                      !1
                    );
                }
              }
              async getUtxos(e) {
                const t = l(e);
                return (
                  await this.performRequest(
                    "blockchain.scripthash.listunspent",
                    t,
                    "include_tokens"
                  )
                ).map((e) => ({
                  txid: e.tx_hash,
                  vout: e.tx_pos,
                  satoshis: BigInt(e.value),
                  token: e.token_data
                    ? { ...e.token_data, amount: BigInt(e.token_data.amount) }
                    : void 0,
                }));
              }
              async getBlockHeight() {
                const { height: e } = await this.performRequest(
                  "blockchain.headers.subscribe"
                );
                return e;
              }
              async getRawTransaction(e) {
                return await this.performRequest(
                  "blockchain.transaction.get",
                  e
                );
              }
              async sendRawTransaction(e) {
                return await this.performRequest(
                  "blockchain.transaction.broadcast",
                  e
                );
              }
              async connectCluster() {
                try {
                  return await this.electrum.startup();
                } catch (e) {
                  return [];
                }
              }
              async disconnectCluster() {
                return this.electrum.shutdown();
              }
              async performRequest(e, ...t) {
                let r;
                this.shouldConnect() && this.connectCluster(),
                  (this.concurrentRequests += 1),
                  await this.electrum.ready();
                try {
                  r = await this.electrum.request(e, ...t);
                } finally {
                  this.shouldDisconnect() && (await this.disconnectCluster());
                }
                if (((this.concurrentRequests -= 1), r instanceof Error))
                  throw r;
                return r;
              }
              shouldConnect() {
                return (
                  !this.manualConnectionManagement &&
                  0 === this.concurrentRequests
                );
              }
              shouldDisconnect() {
                return (
                  !this.manualConnectionManagement &&
                  1 === this.concurrentRequests
                );
              }
            }
            function l(e) {
              const t = (0, s.Qj)(e),
                r = (0, o.JQ)(t);
              return r.reverse(), (0, n.UM)(r);
            }
            i();
          } catch (u) {
            i(u);
          }
        });
      },
      59773: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $0: () => S,
              BI: () => Q,
              Im: () => f,
              Nw: () => y,
              OB: () => w,
              Qj: () => F,
              RP: () => _,
              Wn: () => R,
              c5: () => U,
              ft: () => T,
              fw: () => N,
              nf: () => v,
              oy: () => O,
              qc: () => x,
              sU: () => b,
              yX: () => C,
              yk: () => B,
            });
            var n = r(30861),
              o = r(34684),
              A = r(5102),
              a = r(43137),
              s = r(44115),
              c = r(11779),
              g = r(9612),
              l = r(80976),
              u = r(42543),
              h = r(24090),
              I = r(65221),
              p = r(99132),
              d = e([n, g, l, s, c]);
            function f(e) {
              const t = C(e);
              if (e.amount < t) throw new p.I7(e.amount, BigInt(t));
              if (e.token && !m(e.to)) throw new p.Sk(e.to);
            }
            function C(e) {
              return 444 + 3 * B(e);
            }
            function B(e) {
              return E(e).byteLength;
            }
            function E(e) {
              return (0, n.vy)(y(e));
            }
            function y(e) {
              return {
                lockingBytecode: "string" == typeof e.to ? F(e.to) : e.to,
                valueSatoshis: e.amount,
                token: e.token && {
                  ...e.token,
                  category: (0, o.kW)(e.token.category),
                  nft: e.token.nft && {
                    ...e.token.nft,
                    commitment: (0, o.kW)(e.token.nft.commitment),
                  },
                },
              };
            }
            function m(e) {
              const t = (0, A.Hc)(e);
              if ("string" == typeof t) throw new Error(t);
              return (
                "p2pkhWithTokens" === t.type || "p2shWithTokens" === t.type
              );
            }
            function Q(e) {
              const t = e.byteLength;
              return 36 + (t > 252 ? 3 : 1) + t + 4;
            }
            function v(e) {
              const t = e.byteLength;
              return 104 + (t > 252 ? 3 : 1) + t + 8 + 4 + 32 + 4 + 4;
            }
            function S(e) {
              let t = I.d + I.t;
              return (
                (t += e.reduce((e, t) => e + B(t), 0)),
                (t += (0, g.GP)(BigInt(e.length + 1)).byteLength),
                t
              );
            }
            function w(e, t, r, i) {
              const n = t.reverse();
              void 0 !== i && n.push(i),
                void 0 !== r && n.push((0, g.GP)(BigInt(r)));
              const o = [...n, (0, l.Kr)(e)];
              return (0, l.Kr)(o);
            }
            function b(e) {
              return {
                to:
                  ((t = [l.Op.OP_RETURN, ...e.map((e) => k(e))]),
                  (0, o.kg)(
                    t.map((e) => {
                      if ("number" == typeof e) return new Uint8Array([e]);
                      const t = M(e);
                      return new Uint8Array([...t, ...e]);
                    })
                  )),
                amount: 0n,
              };
              var t;
            }
            function k(e) {
              const t = e.replace(/^0x/, "");
              return (t === e ? a.L : o.kW)(t);
            }
            function N(e, t, r, i, n) {
              const o = { inputIndex: r, sourceOutputs: t, transaction: e },
                A = new Uint8Array([n]);
              return (0, s.Y8)(o, {
                coveredBytecode: i,
                signingSerializationType: A,
              });
            }
            function _(e, t) {
              const r = [
                  p.KG.EVAL_FALSE,
                  p.KG.VERIFY,
                  p.KG.EQUALVERIFY,
                  p.KG.CHECKMULTISIGVERIFY,
                  p.KG.CHECKSIGVERIFY,
                  p.KG.CHECKDATASIGVERIFY,
                  p.KG.NUMEQUALVERIFY,
                ],
                i = [p.KG.NEGATIVE_LOCKTIME, p.KG.UNSATISFIED_LOCKTIME],
                n = [
                  p.KG.SIG_COUNT,
                  p.KG.PUBKEY_COUNT,
                  p.KG.SIG_HASHTYPE,
                  p.KG.SIG_DER,
                  p.KG.SIG_HIGH_S,
                  p.KG.SIG_NULLFAIL,
                  p.KG.SIG_BADLENGTH,
                  p.KG.SIG_NONSCHNORR,
                ];
              return D(r).test(e)
                ? new p.G$(e, t)
                : D(i).test(e)
                ? new p.ec(e, t)
                : D(n).test(e)
                ? new p._q(e, t)
                : new p.y6(e, t);
            }
            function D(e) {
              return new RegExp(
                e.join("|").replace(/\(/g, "\\(").replace(/\)/g, "\\)")
              );
            }
            function O(e, t, r) {
              const i = (0, o.UM)(P(r, "p2sh20"));
              return `meep debug --tx=${e} --idx=0 --amt=${t[0].satoshis} --pkscript=${i}`;
            }
            function T(e, t, r, i) {
              const n = P(e, r),
                o = H(t);
              return (0, c.PG)(n, o, { tokenSupport: i });
            }
            function P(e, t) {
              const r = (0, l.Kr)(e),
                i = {
                  payload: "p2sh20" === t ? (0, u.M9)(r) : (0, u.Wi)(r),
                  type: c.EG[t],
                };
              return (0, c.Gw)(i);
            }
            function x(e) {
              const t = { payload: (0, u.M9)(e), type: c.EG.p2pkh };
              return (0, c.Gw)(t);
            }
            function R(e, t) {
              return e.satoshis > t.satoshis
                ? 1
                : e.satoshis < t.satoshis
                ? -1
                : 0;
            }
            function U(e, t) {
              if (!e.token || !t.token)
                throw new Error("UTXO does not have token data");
              if (!e.token.category != !t.token.category)
                throw new Error("UTXO token categories do not match");
              return e.token.amount > t.token.amount
                ? 1
                : e.token.amount < t.token.amount
                ? -1
                : 0;
            }
            function F(e) {
              const t = (0, c.nA)(e);
              if ("string" == typeof t) throw new Error(t);
              return t.bytecode;
            }
            function H(e) {
              switch (e) {
                case h.Zc.MAINNET:
                  return "bitcoincash";
                case h.Zc.TESTNET4:
                case h.Zc.TESTNET3:
                case h.Zc.CHIPNET:
                  return "bchtest";
                case h.Zc.REGTEST:
                  return "bchreg";
                default:
                  return "bitcoincash";
              }
            }
            function M(e) {
              const { byteLength: t } = e;
              if (0 === t) return Uint8Array.from([76, 0]);
              if (t < 76) return Uint8Array.from([t]);
              if (t < 256) return Uint8Array.from([76, t]);
              throw Error("Pushdata too large");
            }
            ([n, g, l, s, c] = d.then ? (await d)() : d), i();
          } catch (G) {
            i(G);
          }
        });
      },
      98650: (e, t, r) => {
        "use strict";
        r.d(t, { U: () => i });
        const i = { subUnits: 1e8 };
      },
      16543: (e, t, r) => {
        "use strict";
        r.d(t, { D: () => i });
        class i {}
        i.EnforceCashTokenReceiptAddresses = !1;
      },
      20200: (e, t, r) => {
        "use strict";
        r.r(t),
          r.d(t, {
            DELIMITER: () => i,
            DERIVATION_PATHS: () => a,
            DUST_UTXO_THRESHOLD: () => n,
            EXCHANGE_RATE_TTL: () => A,
            MEMPOOL_CHAIN_LIMIT: () => o,
          });
        const i = ":",
          n = 546,
          o = 50,
          A = 25e4,
          a = [
            "m/0",
            "m/0'",
            "m/0'/0",
            "m/0'/0'",
            "m/0'/0'/0'",
            "m/44'/0'/0'",
            "m/44'/0'/0'/0",
            "m/44'/145'/0'",
            "m/44'/145'/0'/0",
            "m/44'/245'/0",
            "m/44'/245'/0'",
            "m/44'/245'/0'/0",
          ];
      },
      5523: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => n });
        var i = r(59085);
        class n extends i.ZP {
          constructor(e) {
            super(e),
              this.version(3).stores({ wallet: "name" }),
              (this.db = this.table("wallet"));
          }
          async init() {
            return this;
          }
          async close() {
            return this;
          }
          getInfo() {
            return "indexedDB";
          }
          async addWallet(e, t) {
            return this.transaction(
              "rw",
              this.db,
              async () =>
                0 === (await this.db.where({ name: e }).count()) &&
                (await this.db.add({ name: e, wallet: t }).catch((e) => {
                  throw Error(e);
                }),
                !0)
            ).catch((e) => {
              throw e.stack || e;
            });
          }
          async getWallet(e) {
            return (await this.db.get({ name: e })) || void 0;
          }
          async getWallets() {
            let e = await this.transaction(
              "r",
              this.db,
              async () => await this.db.where("id").above(0).toArray()
            );
            return e ? await Promise.all(e.map(async (e) => e)) : [];
          }
          async updateWallet(e, t) {
            this.transaction("rw", this.db, async () => {
              const r = this.db.where({ name: e });
              if (0 === (await r.count())) return !1;
              {
                const i = await r.first();
                return (
                  await this.db
                    .put({ id: i.id, name: e, wallet: t }, i.id)
                    .catch((e) => {
                      throw Error(e);
                    }),
                  !0
                );
              }
            }).catch((e) => {
              throw e.stack || e;
            });
          }
          async walletExists(e) {
            return void 0 !== (await this.getWallet(e));
          }
        }
      },
      11853: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => c });
        var i = r(56217),
          n = r(68700),
          o = r(40766),
          A = r(87801),
          a = r(56170),
          s = r(1098);
        class c {
          constructor(e) {
            if (
              ((this.webhookTable = "webhook"),
              (this.faucetQueueTable = "faucet_queue"),
              (this.isInit = !1),
              (this.walletTable = e || "wallet"),
              !process.env.DATABASE_URL)
            )
              throw new Error(
                "Named wallets and webhooks require a postgres DATABASE_URL environment variable to be set"
              );
            let t = A(process.env.DATABASE_URL),
              r = (0, o.F)();
            r && (t.ssl = r), (this.config = t);
            const i = a.Pool;
            (this.db = new i(t)), (this.formatter = s);
          }
          getConfig() {
            return this.config;
          }
          async init() {
            if (!this.isInit) {
              (this.isInit = !0), await this.db, await this.formatter;
              let e = this.formatter(
                "CREATE TABLE IF NOT EXISTS %I (id SERIAL, name TEXT PRIMARY KEY, wallet TEXT );",
                this.walletTable
              );
              const t = await this.db.query(e);
              let r = this.formatter(
                "CREATE TABLE IF NOT EXISTS %I (id SERIAL PRIMARY KEY,cashaddr TEXT,type TEXT,recurrence TEXT,url TEXT,status TEXT,tx_seen JSON,last_height INTEGER,token_id TEXT,expires_at TIMESTAMPTZ);",
                this.webhookTable
              );
              const i = await this.db.query(r);
              let n = this.formatter(
                "CREATE TABLE IF NOT EXISTS %I (id SERIAL PRIMARY KEY,address TEXT,token TEXT,value TEXT);",
                this.faucetQueueTable
              );
              const o = await this.db.query(n);
              if (!t || !i || !o) throw new Error("Failed to init SqlProvider");
            }
            return this;
          }
          async close() {
            return await this.db.end(), this;
          }
          getInfo() {
            return this.info;
          }
          async addWallet(e, t) {
            let r = this.formatter(
              "INSERT into %I (name,wallet) VALUES ($1, $2);",
              this.walletTable
            );
            return await this.db.query(r, [e, t]);
          }
          async getWallets() {
            let e = this.formatter("SELECT * FROM %I;", this.walletTable),
              t = await this.db.query(e);
            return t ? await Promise.all(t.rows.map(async (e) => e)) : [];
          }
          async getWallet(e) {
            let t = this.formatter(
              "SELECT * FROM %I WHERE name = $1;",
              this.walletTable
            );
            return (await this.db.query(t, [e])).rows[0];
          }
          async updateWallet(e, t) {
            let r = this.formatter(
              "UPDATE %I SET wallet = $1 WHERE name = $2;",
              this.walletTable
            );
            await this.db.query(r, [t, e]);
          }
          async walletExists(e) {
            return void 0 !== (await this.getWallet(e));
          }
          async webhookFromDb(e) {
            if (
              ((e.tokenId = e.token_id),
              delete e.token_id,
              0 === e.type.indexOf("slp"))
            ) {
              const { WebhookSlp: t } = await Promise.resolve().then(
                r.bind(r, 39757)
              );
              return new t(e);
            }
            if ((0, n.isCashAddress)(e.cashaddr)) {
              const { WebhookBch: t } = await Promise.resolve().then(
                r.bind(r, 93379)
              );
              return new t(e);
            }
            throw new Error(
              `Unsupported or incorrect hook address ${e.cashaddr}`
            );
          }
          async addWebhook(e) {
            await this.init(),
              (e.type = e.type || i.Ez.transactionInOut),
              (e.recurrence = e.recurrence || i.CM.once);
            const t =
              Number(process.env.WEBHOOK_EXPIRE_TIMEOUT_SECONDS) || 86400;
            if (
              ((e.duration_sec = e.duration_sec || t),
              (e.duration_sec = e.duration_sec > t ? t : e.duration_sec),
              (e.tokenId = e.tokenId || ""),
              0 === e.type.indexOf("slp") && !e.tokenId)
            )
              throw new Error(
                "'tokenId' parameter is required for SLP webhooks"
              );
            const r = new Date(new Date().getTime() + 1e3 * e.duration_sec);
            let n = this.formatter(
              "INSERT into %I (cashaddr,type,recurrence,url,status,tx_seen,last_height,token_id,expires_at) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING *;",
              this.webhookTable
            );
            const o = await this.db.query(n, [
                e.cashaddr,
                e.type,
                e.recurrence,
                e.url,
                "",
                "[]",
                0,
                e.tokenId,
                r.toISOString(),
              ]),
              A = await this.webhookFromDb(o.rows[0]);
            return (A.db = this), A;
          }
          async getWebhooks() {
            let e = this.formatter("SELECT * FROM %I;", this.webhookTable),
              t = await this.db.query(e);
            return t
              ? await Promise.all(
                  t.rows.map(
                    async (e) => (
                      ((e = await this.webhookFromDb(e)).db = this), e
                    )
                  )
                )
              : [];
          }
          async getWebhook(e) {
            const t = this.formatter(
              "SELECT * FROM %I WHERE id = $1;",
              this.webhookTable
            );
            let r = (await this.db.query(t, [e])).rows[0];
            return r && ((r = this.webhookFromDb(r)), (r.db = this)), r;
          }
          async setWebhookStatus(e, t) {
            let r = this.formatter(
              "UPDATE %I SET status = $1 WHERE id = $2;",
              this.webhookTable
            );
            await this.db.query(r, [t, e]);
          }
          async setWebhookSeenTxLastHeight(e, t, r) {
            let i = this.formatter(
              "UPDATE %I SET tx_seen = $1, last_height = $2 WHERE id = $3;",
              this.webhookTable
            );
            await this.db.query(i, [JSON.stringify(t), r, e]);
          }
          async deleteWebhook(e) {
            let t = this.formatter(
              "DELETE FROM %I WHERE id = $1;",
              this.webhookTable
            );
            await this.db.query(t, [e]);
          }
          async clearWebhooks() {
            let e = this.formatter("DELETE FROM %I;", this.webhookTable);
            await this.db.query(e);
          }
          async addFaucetQueueItem(e, t, r) {
            let i = this.formatter(
              "INSERT into %I (address,token,value) VALUES ($1, $2, $3);",
              this.faucetQueueTable
            );
            return await this.db.query(i, [e, t, r]);
          }
          async getFaucetQueue() {
            let e = this.formatter("SELECT * FROM %I;", this.faucetQueueTable),
              t = await this.db.query(e);
            return t ? await Promise.all(t.rows.map(async (e) => e)) : [];
          }
          async deleteFaucetQueueItems(e) {
            const t = e.map((e) => e.id);
            let r = this.formatter(
              "DELETE FROM %I WHERE id IN (%L);",
              this.faucetQueueTable,
              t
            );
            return await this.db.query(r);
          }
          async beginTransaction() {
            return await this.db.query("BEGIN");
          }
          async commitTransaction() {
            return await this.db.query("COMMIT");
          }
          async rollbackTransaction() {
            return await this.db.query("ROLLBACK");
          }
        }
      },
      11761: (e, t, r) => {
        "use strict";
        r.d(t, { m: () => a });
        var i = r(62853),
          n = r(5523),
          o = r(11853),
          A = r(40766);
        function a(e) {
          return "node" !== (0, i.B)() && (0, A.k)()
            ? new n.Z(e)
            : "DATABASE_URL" in process.env
            ? new o.Z(e)
            : void console.warn(
                "DATABASE_URL was not configured, storage unavailable"
              );
        }
      },
      8329: (e, t, r) => {
        "use strict";
        r.d(t, { C: () => n.Z, X: () => i.Z });
        var i = r(5523),
          n = r(11853);
      },
      40766: (e, t, r) => {
        "use strict";
        r.d(t, { F: () => o, k: () => n });
        var i = r(48834).Buffer;
        function n() {
          return "indexedDB" in globalThis;
        }
        function o() {
          const e = process.env.DATABASE_SSL_CA
              ? i.from(process.env.DATABASE_SSL_CA, "base64").toString("ascii")
              : void 0,
            t = process.env.DATABASE_SSL_KEY
              ? i.from(process.env.DATABASE_SSL_KEY, "base64").toString("ascii")
              : void 0,
            r = process.env.DATABASE_SSL_CERT
              ? i
                  .from(process.env.DATABASE_SSL_CERT, "base64")
                  .toString("ascii")
              : void 0;
          let n = {
            rejectUnauthorized:
              "false" != process.env.DATABASE_SSL_REJECT_UNAUTHORIZED,
            ca: e,
            key: t,
            cert: r,
          };
          return n.ca || n.cert || n.key ? n : void 0;
        }
      },
      46634: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { ZX: () => c, cM: () => a, f8: () => e, td: () => n });
            var n,
              o,
              A = r(5102);
            !(function (e) {
              (e.Mainnet = "mainnet"),
                (e.Testnet = "testnet"),
                (e.Regtest = "regtest");
            })(n || (n = {})),
              (function (e) {
                (e[(e.Mainnet = "mainnet")] = "Mainnet"),
                  (e[(e.Testnet = "testnet")] = "Testnet"),
                  (e[(e.Regtest = "regtest")] = "Regtest"),
                  (e[(e.Simtest = "simtest")] = "Simtest");
              })(o || (o = {}));
            const e = {
                bitcoincash: "mainnet",
                bchtest: "testnet",
                bchreg: "regtest",
              },
              a = {
                mainnet: A.s.mainnet,
                testnet: A.s.testnet,
                regtest: A.s.regtest,
              },
              s = (e) => e,
              c = {
                BCH: s("bch"),
                USD: s("usd"),
                BIT: s("bit"),
                BITS: s("bits"),
                SAT: s("sat"),
                SATS: s("sats"),
                SATOSHI: s("satoshi"),
                SATOSHIS: s("satoshis"),
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      41873: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { T: () => u });
            var n = r(11779),
              o = r(30861),
              A = r(34684),
              a = r(93321),
              s = r(1546),
              c = r(98650),
              g = r(22545),
              l = e([s, n, o, a]);
            async function u(e, t, r = "sat", i = 0, n = 25, o = !0) {
              let A = await t.getHistory(e),
                a = A.length;
              A = A.slice(a - i - n, a - i);
              let g = await t.getBalance(e),
                l = A.map((r) => h(e, r.tx_hash, r.height, t, o)),
                u = await Promise.all(l),
                I = Array.prototype.concat.apply([], u);
              return (
                (I = I.reverse()),
                {
                  transactions: f(
                    I,
                    g,
                    r,
                    (await (0, s.O)(c.U.subUnits, "sat", r)) / c.U.subUnits
                  ),
                }
              );
            }
            async function h(e, t, r, i, a) {
              let s = await i.getRawTransaction(t),
                c = (0, n.nA)(e);
              if ("string" == typeof c) throw Error(c);
              let g = (0, o.c8)((0, A.kW)(s));
              if ("string" == typeof g) throw Error(g);
              let l = [];
              return l.push(...(await I(g, e, r, t, i, a))), l;
            }
            async function I(e, t, r, i, s, c) {
              let g = (0, n.nA)(t);
              if ("string" == typeof g) throw Error(g);
              let l = (0, A.UM)(g.bytecode),
                u = (0, a.G)(t),
                h = await p(e, s),
                I = d(h, e.outputs, l, c),
                f = [],
                C = [];
              for (let o of e.inputs) {
                let a = h[e.inputs.indexOf(o)];
                if ((0, A.UM)(a.lockingBytecode) === l)
                  for (let o of e.outputs) {
                    let s = e.outputs.indexOf(o),
                      g = (0, n.PG)(a.lockingBytecode, u);
                    if ((0, A.UM)(o.lockingBytecode) === l)
                      c ||
                        f.push({
                          from: g,
                          to: t,
                          unit: "sat",
                          index: s,
                          blockheight: r,
                          txn: `${i}`,
                          txId: `${i}:i:${s}`,
                          value: -Number(o.valueSatoshis),
                          fee: 0,
                        });
                    else if (!C.find((e) => e === `${i}:i:${s}`)) {
                      let e = (0, n.PG)(o.lockingBytecode, u);
                      f.push({
                        from: g,
                        to: e,
                        unit: "sat",
                        index: s,
                        blockheight: r,
                        txn: `${i}`,
                        txId: `${i}:i:${s}`,
                        value: -Number(o.valueSatoshis),
                        fee: I,
                      }),
                        C.push(`${i}:i:${s}`);
                    }
                  }
              }
              for (let a of e.outputs)
                if ((0, A.UM)(a.lockingBytecode) === l)
                  if (1 == e.inputs.length) {
                    const g = e.inputs[0],
                      l = (0, A.UM)(g.outpointTransactionHash),
                      h = await s.getRawTransaction(l),
                      I = (0, o.c8)((0, A.kW)(h));
                    if ("string" == typeof I) throw Error(I);
                    let p = I.outputs[g.outpointIndex],
                      d = (0, n.PG)(p.lockingBytecode, u);
                    (d === t && c) ||
                      f.push({
                        from: d,
                        to: t,
                        unit: "sat",
                        index: e.outputs.indexOf(a),
                        blockheight: r,
                        txn: `${i}`,
                        txId: `${i}:o:${e.outputs.indexOf(a)}`,
                        value: Number(a.valueSatoshis),
                      });
                  } else {
                    let n = e.inputs
                      .map(
                        (e) =>
                          `${(0, A.UM)(e.outpointTransactionHash)}:o:${
                            e.outpointIndex
                          }`
                      )
                      .join(";");
                    f.push({
                      from: n,
                      to: t,
                      unit: "sat",
                      index: e.outputs.indexOf(a),
                      blockheight: r,
                      txn: `${i}`,
                      txId: `${i}:o:${e.outputs.indexOf(a)}`,
                      value: Number(a.valueSatoshis),
                      fee: 0,
                    });
                  }
              return f;
            }
            async function p(e, t) {
              let r = [];
              for (let i of e.inputs) {
                let e = (0, A.UM)(i.outpointTransactionHash),
                  n = await t.getRawTransaction(e),
                  a = (0, o.c8)((0, A.kW)(n));
                if ("string" == typeof a) throw Error(a);
                r.push(a.outputs[i.outpointIndex]);
              }
              return r;
            }
            function d(e, t, r, i) {
              let n = 0;
              for (let t of e)
                (0, A.UM)(t.lockingBytecode) && (n += Number(t.valueSatoshis));
              const o = t
                .map((e) => Number(e.valueSatoshis))
                .reduce((e, t) => e + t, 0);
              let a = 0;
              if (i) {
                const e = t
                  .map((e) => ((0, A.UM)(e.lockingBytecode) === r ? 0 : 1))
                  .reduce((e, t) => e + t, 0);
                a = (0, g.G)((n - o) / e, 0);
              } else a = (0, g.G)((n - o) / t.length, 0);
              return a;
            }
            function f(e, t, r, i) {
              let n = t,
                o = [];
              for (let t of e)
                (t.balance = n),
                  (t.fee = t.fee ? t.fee : 0),
                  (n -= t.value),
                  (n += t.fee),
                  (t.value = t.value * i),
                  (t.fee = t.fee * i),
                  "usd" == r.toLowerCase() &&
                    ((t.value = (0, g.G)(t.value, 2)),
                    (t.fee = (0, g.G)(t.fee, 2))),
                  (t.unit = r),
                  o.push(t);
              return o;
            }
            ([s, n, o, a] = l.then ? (await l)() : l), i();
          } catch (C) {
            i(C);
          }
        });
      },
      49921: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $2: () => p.$2,
              $e: () => y.balanceFromSatoshi,
              A5: () => A.A5,
              At: () => w.At,
              Ay: () => I.Ay,
              Br: () => y.getXpubKeyInfoObject,
              Bt: () => y.getRuntimePlatform,
              CM: () => c.CM,
              Cb: () => I.Cb,
              Cc: () => n.C,
              Ci: () => I.Ci,
              De: () => f.D,
              EI: () => y.derivePublicKeyHash,
              EK: () => p.EK,
              Ez: () => c.Ez,
              F5: () => w.F5,
              Fl: () => y.isTokenaddr,
              G2: () => c.G2,
              GM: () => s.O,
              GV: () => E.GV,
              Gf: () => y.toTokenaddr,
              H$: () => y.deriveTokenaddr,
              HO: () => E.HO,
              He: () => g.H,
              Ib: () => A.Ib,
              Iw: () => y.ExchangeRate,
              JQ: () => y.sha256,
              Kv: () => B.K,
              L$: () => y.utf8ToBin,
              LG: () => I.LG,
              Lt: () => E.Lt,
              M1: () => c.M1,
              M9: () => y.hash160,
              NS: () => p.NS,
              O$: () => A.O$,
              OC: () => y.sanitizeUnit,
              OQ: () => y.convert,
              Ot: () => o.O,
              Ox: () => y.randomValues,
              QQ: () => m,
              Rb: () => E.Rb,
              S1: () => w.S1,
              SQ: () => p.SQ,
              U$: () => y.asSendRequestObject,
              UC: () => E.UC,
              UI: () => A.UI,
              UM: () => y.binToHex,
              US: () => y.toCashaddr,
              UX: () => y.getUsdRate,
              VK: () => p.VK,
              Wk: () => y.balanceResponseFromSatoshi,
              X6: () => n.X,
              XF: () => y.getRandomInt,
              Y7: () => y.sanitizeAddress,
              ZH: () => y.sumUtxoValue,
              ZT: () => E.ZT,
              ZX: () => C.ZX,
              Zc: () => S.Z,
              Zq: () => p.Zq,
              ao: () => y.amountInSatoshi,
              b1: () => y.RuntimePlatform,
              bB: () => E.bB,
              bY: () => w.bY,
              c0: () => p.c0,
              cC: () => h.c,
              dB: () => y.convertObject,
              dO: () => y.BalanceResponse,
              dm: () => c.dm,
              ew: () => l.ew,
              fO: () => I.fO,
              fb: () => E.fb,
              fl: () => y.checkTokenaddr,
              gw: () => y.delay,
              hJ: () => y.deriveCashaddr,
              hK: () => S.h,
              hR: () => y.getXPubKey,
              hx: () => E.hx,
              jS: () => p.jS,
              kO: () => k,
              kW: () => y.hexToBin,
              ku: () => l.ku,
              lC: () => l.lC,
              l_: () => a.l,
              my: () => y.derivedNetwork,
              n9: () => E.n9,
              ny: () => y,
              oL: () => d.oL,
              oQ: () => s.o,
              oX: () => v,
              r3: () => y.btoa,
              rn: () => I.rn,
              t8: () => I.t8,
              td: () => C.td,
              te: () => Q.t,
              ty: () => y.atob,
              uC: () => y.getXpubKeyInfo,
              uP: () => w.uP,
              uk: () => u.u,
              ux: () => y.getAddrsByXpubKeyObject,
              vY: () => l.vY,
              vj: () => c.vj,
              w5: () => I.w5,
              yM: () => y.binToBase64,
              yd: () => y.getAddrsByXpubKey,
              yk: () => p.yk,
              yw: () => l.yw,
              zl: () => I.zl,
            });
            var n = r(8329),
              o = r(44989),
              A = r(60117),
              a = r(91870),
              s = r(64626),
              c = r(48078),
              g = r(77657),
              l = r(18460),
              u = r(56688),
              h = r(8153),
              I = r(46827),
              p = r(64447),
              d = r(35193),
              f = r(16543),
              C = r(46634),
              B = r(85858),
              E = r(34167),
              y = r(19149),
              m = r(72668),
              Q = r(45230),
              v = r(20200),
              S = r(89341),
              w = r(30865),
              b = e([A, c, g, l, u, h, I, p, d, C, E, y, m, Q]);
            function k(e) {
              return e * e * e;
            }
            ([A, c, g, l, u, h, I, p, d, C, E, y, m, Q] = b.then
              ? (await b)()
              : b),
              i();
          } catch (N) {
            i(N);
          }
        });
      },
      89341: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => i, h: () => n });
        const i = {
            MAINNET: "mainnet",
            TESTNET: "testnet",
            REGTEST: "regtest",
          },
          n = { none: "none", mutable: "mutable", minting: "minting" };
      },
      72668: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.r(t),
              r.d(t, {
                authenticationTemplateP2pkh: () => o.W,
                authenticationTemplateP2pkhNonHd: () => o.F,
                authenticationTemplateToCompilerBCH: () => A.m6,
                cashAddressToLockingBytecode: () => a.nA,
                decodeTransaction: () => g.c8,
                encodeTransaction: () => g.SC,
                generateTransaction: () => c.y4,
                hexToBin: () => s.kW,
                importAuthenticationTemplate: () => n.d,
              });
            var n = r(2783),
              o = r(13744),
              A = r(13609),
              a = r(11779),
              s = r(34684),
              c = r(51183),
              g = r(30861),
              l = e([A, a, c, g]);
            ([A, a, c, g] = l.then ? (await l)() : l), i();
          } catch (e) {
            i(e);
          }
        });
      },
      56688: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { u: () => p });
            var n = r(43137),
              o = r(34684),
              A = r(91040),
              a = r(78468),
              s = r(66998),
              c = r(5102),
              g = r(93321),
              l = r(86707),
              u = e([l, g]);
            function h(e) {
              const t = (0, n.L)(e).length.toString(16);
              return new Uint8Array([
                ...(0, n.L)("Bitcoin Signed Message:\n"),
                ...(0, o.kW)(t),
                ...(0, n.L)(e),
              ]);
            }
            async function I(e) {
              const t = (await (0, A.Um)()).hash;
              return t(t(h(e)));
            }
            [l, g] = u.then ? (await u)() : u;
            class p {
              async sign(e, t) {
                const r = await (0, a.M2)();
                let i = await I(e),
                  n = r.signMessageHashRecoverableCompact(t, i);
                if ("string" == typeof n) throw new Error(n);
                let o = r.signMessageHashDER(t, i),
                  A = r.signMessageHashSchnorr(t, i),
                  c = new Uint8Array([31 + n.recoveryId, ...n.signature]);
                return {
                  raw: {
                    ecdsa: (0, s.yM)(n.signature),
                    schnorr: (0, s.yM)(A),
                    der: (0, s.yM)(o),
                  },
                  details: {
                    recoveryId: n.recoveryId,
                    compressed: !0,
                    messageHash: (0, s.yM)(i),
                  },
                  signature: (0, s.yM)(c),
                };
              }
              static async sign(e, t) {
                return new this().sign(e, t);
              }
              async verify(e, t, r, i) {
                const n = await (0, a.M2)();
                let o,
                  A,
                  u = await I(e),
                  h = (0, s.VB)(t),
                  p = !1,
                  d = !1;
                if (65 === h.length) {
                  let e = 65 === h.length ? h.slice(1) : h,
                    t = h.slice(0, 1)[0] - 31,
                    i = n.recoverPublicKeyCompressed(e, t, u);
                  if ("string" == typeof i) throw new Error(i);
                  if (
                    ((o = await (0, l.M)(i)),
                    (A = "recoverable"),
                    (p = n.verifySignatureCompact(e, i, u)),
                    r)
                  ) {
                    let e = (0, g.G)(r);
                    (0, c.Hh)(e, c.Jl.p2pkh, o) === r && (d = !0);
                  }
                } else
                  i &&
                    (n.verifySignatureDER(h, i, u)
                      ? ((A = "der"), (p = !0))
                      : n.verifySignatureSchnorr(h, i, u)
                      ? ((A = "schnorr"), (p = !0))
                      : n.verifySignatureCompact(h, i, u)
                      ? ((A = "ecdsa"), (p = !0))
                      : (A = "na"));
                return {
                  valid: p,
                  details: {
                    signatureValid: p,
                    signatureType: A,
                    messageHash: (0, s.yM)(u),
                    publicKeyHashMatch: d,
                  },
                };
              }
              static async verify(e, t, r, i) {
                return new this().verify(e, t, r, i);
              }
            }
            i();
          } catch (d) {
            i(d);
          }
        });
      },
      44989: (e, t, r) => {
        "use strict";
        r.d(t, { O: () => o });
        var i = r(62853),
          n = r(9669);
        async function o({ cashaddr: e, blocks: t }) {
          !(function () {
            if ("node" !== (0, i.B)())
              throw new Error(
                "This usage is not supported in the browser at this time."
              );
          })();
          const r = [
              "exec",
              "bitcoind",
              "bitcoin-cli",
              `--rpcconnect=${process.env.RPC_HOST}`,
              `--rpcuser=${process.env.RPC_USER}`,
              `--rpcpassword=${process.env.RPC_PASS}`,
              `--rpcport=${process.env.RPC_PORT}`,
              "generatetoaddress",
              t,
              e,
            ],
            o = n.spawnSync("docker", r);
          return o.stderr.length > 0
            ? console.log("Mine Error: " + o.stderr.toString())
            : JSON.parse(o.stdout.toString());
        }
      },
      64822: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { $B: () => s, ew: () => u, lC: () => l, vY: () => c });
            var n = r(20252),
              o = r(39081),
              A = r(46634),
              a = e([n, A]);
            async function s(e) {
              if (!(0, n.WB)(e)) {
                const t = new u(e),
                  r = (await t.ready()).networkProvider;
                return (0, n.S5)(e, r), r;
              }
              return (0, n.WB)(e);
            }
            async function c(e) {
              let t = (e = e || Object.keys(o.y6)).map((e) => s(e));
              await Promise.all(t).catch((e) => {
                console.warn(
                  `Warning, couldn't establish a connection for ${e}`
                );
              });
            }
            async function g(e) {
              const t = (0, n.WB)(e);
              return !t || (await t.disconnect(), void (0, n.zZ)(e));
            }
            async function l(e) {
              let t = (e = e || Object.keys(o.y6)).map((e) => g(e));
              await Promise.all(t);
            }
            [n, A] = a.then ? (await a)() : a;
            class u {
              constructor(e, t) {
                (this.network = e || "mainnet"),
                  (this.networkPrefix = A.cM[this.network]),
                  (this.networkProvider = (0, n.ku)(this.network, t, !0));
              }
              async ready() {
                return (
                  await this.networkProvider.connect(),
                  await this.networkProvider.ready(),
                  this
                );
              }
              async disconnect() {
                return await this.networkProvider.disconnect(), this;
              }
            }
            i();
          } catch (h) {
            i(h);
          }
        });
      },
      47618: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Z: () => l });
            var n = r(39797),
              o = r(89341),
              A = r(26131),
              a = r(39872),
              s = r(1345),
              c = r(39081),
              g = e([s]);
            s = (g.then ? (await g)() : g)[0];
            class l {
              constructor(e, t = o.Z.MAINNET, r) {
                if (
                  ((this.network = t),
                  (this.manualConnectionManagement = r),
                  (this.subscriptions = 0),
                  (this.mutex = new a.WU()),
                  (this.blockHeight = 0),
                  !e)
                )
                  throw new Error(
                    "A electrum-cash cluster or client is required."
                  );
                (this.electrum = e),
                  (this.connectPromise = this.getConnectPromise()),
                  this.electrum instanceof n.bc
                    ? (this.version = this.electrum.version)
                    : (this.version = this.electrum.connection.version);
              }
              async getConnectPromise(e = 3e3) {
                await Promise.race([
                  new Promise(async (e) => {
                    if (
                      ((this.connectPromise = void 0),
                      this.electrum instanceof n.bc)
                    ) {
                      try {
                        await this.connectCluster();
                      } catch (e) {
                        console.warn(
                          `Unable to connect to one or more electrum-cash hosts: ${JSON.stringify(
                            e
                          )}`
                        );
                      }
                      e(await this.readyCluster());
                    } else e(await this.connectClient());
                  }),
                ]),
                  clearTimeout(void 0);
              }
              async getUtxos(e) {
                const t = await this.performRequest(
                  "blockchain.address.listunspent",
                  e
                );
                return this.network === o.Z.MAINNET
                  ? t.map((e) => ({
                      txid: e.tx_hash,
                      vout: e.tx_pos,
                      satoshis: e.value,
                      height: e.height,
                    }))
                  : t.map((e) => ({
                      txid: e.tx_hash,
                      vout: e.tx_pos,
                      satoshis: e.value,
                      height: e.height,
                      token: e.token_data
                        ? {
                            amount: Number(e.token_data.amount),
                            tokenId: e.token_data.category,
                            capability: e.token_data.nft?.capability,
                            commitment: e.token_data.nft?.commitment,
                          }
                        : void 0,
                    }));
              }
              async getBalance(e) {
                const t = await this.performRequest(
                  "blockchain.address.get_balance",
                  e
                );
                return t.confirmed + t.unconfirmed;
              }
              async getBlockHeight() {
                return this.version !== c.zM
                  ? (await this.performRequest("blockchain.headers.get_tip"))
                      .height
                  : this.blockHeight
                  ? this.blockHeight
                  : new Promise(async (e) => {
                      await this.subscribeToHeaders((e) => {
                        this.blockHeight = e.height;
                      }),
                        e(this.blockHeight);
                    });
              }
              async getRawTransaction(e, t = !1, r = !1) {
                const i = `${this.network}-${e}-${t}-${r}`;
                if (l.rawTransactionCache[i]) return l.rawTransactionCache[i];
                try {
                  const n = await this.performRequest(
                    "blockchain.transaction.get",
                    e,
                    t
                  );
                  if (((l.rawTransactionCache[i] = n), t && r)) {
                    const e = [...new Set(n.vin.map((e) => e.txid))],
                      t = await Promise.all(
                        e.map((e) => this.getRawTransactionObject(e, !1))
                      ),
                      r = new Map();
                    t.forEach((e) => r.set(e.hash, e)),
                      n.vin.forEach((e) => {
                        const t = r
                          .get(e.txid)
                          .vout.find((t) => t.n === e.vout);
                        (e.address = t.scriptPubKey.addresses[0]),
                          (e.value = t.value),
                          (e.tokenData = t.tokenData);
                      });
                  }
                  return n;
                } catch (t) {
                  throw t.message.indexOf(
                    "No such mempool or blockchain transaction."
                  ) > -1
                    ? Error(
                        `Could not decode transaction ${e}. It might not exist on the current blockchain (${this.network}).`
                      )
                    : t;
                }
              }
              async getRawTransactionObject(e, t = !1) {
                return await this.getRawTransaction(e, !0, t);
              }
              async sendRawTransaction(e, t = !0) {
                return new Promise(async (r, i) => {
                  let n = await (0, s.$)(e);
                  if (t) {
                    const t = async (e) => {
                      e &&
                        e[0] === n &&
                        (this.unsubscribeFromTransaction(n, t), r(n));
                    };
                    this.subscribeToTransaction(n, t),
                      this.performRequest(
                        "blockchain.transaction.broadcast",
                        e
                      ).catch((e) => {
                        this.unsubscribeFromTransaction(n, t), i(e);
                      });
                  } else
                    this.performRequest("blockchain.transaction.broadcast", e),
                      r(n);
                });
              }
              async getHistory(e) {
                return await this.performRequest(
                  "blockchain.address.get_history",
                  e
                );
              }
              async getRelayFee() {
                return await this.performRequest("blockchain.relayfee");
              }
              watchAddressStatus(e, t) {
                const r = async (r) => {
                  if (r instanceof Array) {
                    if (r[0] !== e) return;
                    const i = r[1];
                    t(i);
                  }
                };
                return (
                  this.subscribeToAddress(e, r),
                  async () => {
                    await this.unsubscribeFromAddress(e, r);
                  }
                );
              }
              watchAddress(e, t) {
                const r = {};
                return (
                  this.getHistory(e).then((e) =>
                    e.forEach((e) => (r[e.tx_hash] = !0))
                  ),
                  this.watchAddressStatus(e, async () => {
                    const i = (await this.getHistory(e))
                      .sort((e, t) =>
                        e.height <= 0 || t.height <= 0
                          ? -1
                          : t.height - e.height
                      )
                      .map((e) => e.tx_hash);
                    for (const e of i)
                      if (!(e in r)) {
                        (r[e] = !0), t(e);
                        break;
                      }
                  })
                );
              }
              watchAddressTransactions(e, t) {
                return this.watchAddress(e, async (e) => {
                  const r = await this.getRawTransactionObject(e);
                  t(r);
                });
              }
              watchAddressTokenTransactions(e, t) {
                return this.watchAddress(e, async (e) => {
                  const r = await this.getRawTransactionObject(e, !0);
                  (r.vin.some((e) => e.tokenData) ||
                    r.vout.some((e) => e.tokenData)) &&
                    t(r);
                });
              }
              watchBlocks(e) {
                let t = !1;
                const r = (r) => {
                  t ? ((r = r instanceof Array ? r[0] : r), e(r)) : (t = !0);
                };
                return (
                  this.subscribeToHeaders(r),
                  async () => {
                    this.unsubscribeFromHeaders(r);
                  }
                );
              }
              async waitForBlock(e) {
                return new Promise(async (t) => {
                  const r = this.watchBlocks(async (i) => {
                    (void 0 === e || i.height >= e) && (await r(), t(i));
                  });
                });
              }
              async subscribeToHeaders(e) {
                await this.subscribeRequest("blockchain.headers.subscribe", e);
              }
              async unsubscribeFromHeaders(e) {
                await this.unsubscribeRequest(
                  "blockchain.headers.subscribe",
                  e
                );
              }
              async subscribeToAddress(e, t) {
                await this.subscribeRequest(
                  "blockchain.address.subscribe",
                  t,
                  e
                );
              }
              async unsubscribeFromAddress(e, t) {
                await this.unsubscribeRequest(
                  "blockchain.address.subscribe",
                  t,
                  e
                );
              }
              async subscribeToAddressTransactions(e, t) {
                await this.subscribeRequest(
                  "blockchain.address.transactions.subscribe",
                  t,
                  e
                );
              }
              async unsubscribeFromAddressTransactions(e, t) {
                await this.unsubscribeRequest(
                  "blockchain.address.transactions.subscribe",
                  t,
                  e
                );
              }
              async subscribeToTransaction(e, t) {
                await this.subscribeRequest(
                  "blockchain.transaction.subscribe",
                  t,
                  e
                );
              }
              async unsubscribeFromTransaction(e, t) {
                await this.unsubscribeRequest(
                  "blockchain.transaction.subscribe",
                  t,
                  e
                );
              }
              async performRequest(e, ...t) {
                await this.ready();
                const r = new Promise(function (e, t) {
                    setTimeout(function () {
                      t("electrum-cash request timed out, retrying");
                    }, 3e4);
                  }).catch(function (e) {
                    throw e;
                  }),
                  i = this.electrum.request(e, ...t);
                return await Promise.race([i, r])
                  .then((e) => {
                    if (e instanceof Error) throw e;
                    return e;
                  })
                  .catch(
                    async () =>
                      await Promise.race([i, r])
                        .then((e) => {
                          if (e instanceof Error) throw e;
                          return e;
                        })
                        .catch(function (e) {
                          throw e;
                        })
                  );
              }
              async subscribeRequest(e, t, ...r) {
                await this.ready();
                const i = await this.electrum.subscribe(t, e, ...r);
                return this.subscriptions++, i;
              }
              async unsubscribeRequest(e, t, ...r) {
                await this.ready();
                const i = this.electrum.unsubscribe(t, e, ...r);
                return this.subscriptions--, i;
              }
              async ready() {
                return await this.connect();
              }
              async connect() {
                return await this.mutex.runExclusive(
                  async () => await this.connectPromise
                );
              }
              disconnect() {
                return (
                  this.subscriptions,
                  this.isElectrumClient()
                    ? this.disconnectClient()
                    : this.disconnectCluster()
                );
              }
              isElectrumClient() {
                return this.electrum.hasOwnProperty("connection");
              }
              async readyClient(e) {
                return (
                  (e = void 0 !== e ? e : 3e3),
                  async () => {
                    for (; this.electrum.connection.status !== n.QK.CONNECTED; )
                      await (0, A.g)(100);
                    return !0;
                  }
                );
              }
              async readyCluster(e) {
                return this.electrum.ready();
              }
              async connectCluster() {
                return this.electrum.startup();
              }
              async connectClient() {
                return [
                  await (async () => {
                    try {
                      return await this.electrum.connect();
                    } catch (e) {
                      return void console.warn(
                        `Warning: Failed to connect to client on ${this.network} at ${this.electrum.connection.host}.`,
                        e
                      );
                    }
                  })(),
                ];
              }
              async disconnectCluster() {
                return this.electrum.shutdown();
              }
              async disconnectClient() {
                return [await this.electrum.disconnect(!0)];
              }
            }
            (l.rawTransactionCache = {}), i();
          } catch (e) {
            i(e);
          }
        });
      },
      35193: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Ky: () => g, SI: () => u, ij: () => l, oL: () => c });
            var n = r(62853),
              o = r(39081);
            let A, a, s;
            class c {}
            function g(e) {
              let t;
              return (
                (t = "node" == (0, n.B)() ? process.env : {}),
                (A = c.servers.mainnet.length
                  ? c.servers.mainnet
                  : t.ELECTRUM
                  ? t.ELECTRUM.split(",")
                  : o.er),
                (a = c.servers.testnet.length
                  ? c.servers.testnet
                  : t.ELECTRUM_TESTNET
                  ? t.ELECTRUM_TESTNET.split(",")
                  : o.mp),
                (s = c.servers.regtest.length
                  ? c.servers.regtest
                  : t.ELECTRUM_REGTEST
                  ? t.ELECTRUM_REGTEST.split(",")
                  : o.KM),
                { mainnet: A, testnet: a, regtest: s }[e]
              );
            }
            function l() {
              let e;
              return (
                (e =
                  "node" === (0, n.B)() && process.env.ELECTRUM_USER_AGENT
                    ? process.env.ELECTRUM_USER_AGENT
                    : "mainnet-js-" + (0, n.B)()),
                e
              );
            }
            function u() {
              let e;
              return (
                (e =
                  "node" === (0, n.B)() && process.env.ELECTRUM_CONFIDENCE
                    ? parseInt(process.env.ELECTRUM_CONFIDENCE)
                    : 1),
                e
              );
            }
            (c.servers = { mainnet: [], testnet: [], regtest: [] }), i();
          } catch (h) {
            i(h);
          }
        });
      },
      39081: (e, t, r) => {
        "use strict";
        r.d(t, {
          FS: () => n,
          KM: () => c,
          er: () => a,
          m$: () => g,
          mp: () => s,
          y6: () => A,
          zM: () => o,
        });
        var i = r(39797);
        const n = "1.5",
          o = "1.4.1",
          A = { mainnet: "BCH", testnet: "tBCH", regtest: "rBCH" },
          a = [
            "wss://bch.imaginary.cash:50004",
            "wss://electrum.imaginary.cash:50004",
          ],
          s = ["wss://chipnet.imaginary.cash:50004"],
          c = ["ws://127.0.0.1:60003"],
          g = {
            mainnet: {
              confidence: 1,
              distribution: 1,
              order: i.OC.RANDOM,
              timeout: 45e3,
            },
            testnet: {
              confidence: 1,
              distribution: 1,
              order: i.OC.RANDOM,
              timeout: 3e4,
            },
            regtest: {
              confidence: 1,
              distribution: 1,
              order: i.OC.PRIORITY,
              timeout: 3e3,
            },
          };
      },
      20252: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { S5: () => l, WB: () => u, ku: () => I, zZ: () => h });
            var n = r(47618),
              o = r(39797),
              A = r(35193),
              a = r(15631),
              s = r(89341),
              c = r(39081),
              g = e([A, n]);
            function l(e, t) {
              const r = c.y6[e];
              return (globalThis[r] = t), t;
            }
            function u(e) {
              const t = c.y6[e];
              return globalThis[t];
            }
            function h(e) {
              const t = c.y6[e];
              t in globalThis && delete globalThis[t];
            }
            function I(e = s.Z.MAINNET, t, r, i) {
              const o = void 0 === t && void 0 === r && void 0 === i;
              if (o) {
                const t = u(e);
                if (t) return t;
              }
              let a;
              if (
                ((r = r || !1),
                "string" == typeof (t = t || (0, A.Ky)(e))
                  ? ((t = [t]), (a = !1))
                  : (a = t.length > 1),
                t)
              ) {
                let s;
                if (a) {
                  let r = c.m$[e];
                  (r.confidence = (0, A.SI)()),
                    (r = Object.assign({}, r, i)),
                    (s = p(t, r, e));
                } else s = d(t, e);
                let g = new n.Z(s, e, r);
                return o ? l(e, g) : g;
              }
              throw Error("No servers provided, defaults not available.");
            }
            function p(e, t, r) {
              let i = f(t, r);
              for (const t of e) {
                let e = (0, a.P)(t);
                try {
                  i.addServer(e.host, e.port, e.scheme, !1);
                } catch (t) {
                  console.log(
                    `Error connecting ${e.host}:${e.port} over ${e.scheme}`
                  );
                }
              }
              return i;
            }
            function d(e, t) {
              return C((0, a.P)(e[0]), 12e4, t);
            }
            function f(e, t) {
              return new o.bc(
                (0, A.ij)(),
                t === s.Z.MAINNET ? c.zM : c.FS,
                e.confidence,
                e.distribution,
                e.order,
                e.timeout
              );
            }
            function C(e, t, r) {
              return new o.Ls(
                (0, A.ij)(),
                r === s.Z.MAINNET ? c.zM : c.FS,
                e.host,
                e.port,
                e.scheme,
                t
              );
            }
            ([A, n] = g.then ? (await g)() : g), i();
          } catch (B) {
            i(B);
          }
        });
      },
      37051: (e, t, r) => {
        "use strict";
        r.d(t, { H: () => o });
        var i = r(98650),
          n = r(39081);
        async function o(e) {
          let t;
          return (
            n.y6[e.network] + "_RELAY_FEE" in globalThis &&
              (t = globalThis[n.y6[e.network] + "_RELAY_FEE"]),
            "number" != typeof t &&
              ((t = await e.getRelayFee()),
              (globalThis[n.y6[e.network] + "_RELAY_FEE"] = t)),
            "number" == typeof t
              ? Math.round(t * i.U.subUnits) / 1e3
              : (console.warn(
                  "Couldn't get min relay fee, using default instead"
                ),
                Math.round(1e-5 * i.U.subUnits) / 1e3)
          );
        }
      },
      18460: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              ew: () => o.ew,
              ku: () => n.ku,
              lC: () => o.lC,
              vY: () => o.vY,
              yw: () => A.Z,
            });
            var n = r(20252),
              o = r(64822),
              A = r(47618),
              a = e([n, o, A]);
            ([n, o, A] = a.then ? (await a)() : a), i();
          } catch (e) {
            i(e);
          }
        });
      },
      15631: (e, t, r) => {
        "use strict";
        r.d(t, { P: () => n });
        var i = r(39797);
        function n(e) {
          let t = new URL(e),
            r = parseInt(t.port || "443"),
            n = (function (e) {
              let t;
              switch (e) {
                case "http:":
                  t = i.Cq.TCP.Scheme;
                  break;
                case "https:":
                  t = i.Cq.TCP_TLS.Scheme;
                  break;
                case "ws:":
                  t = i.Cq.WS.Scheme;
                  break;
                case "wss:":
                  t = i.Cq.WSS.Scheme;
                  break;
                default:
                  throw Error("Electrum transport protocol not understood.");
              }
              return t;
            })(t.protocol);
          return { host: t.hostname, port: r, scheme: n };
        }
      },
      45230: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { t: () => a });
            var n = r(14697),
              o = r(12795),
              A = e([o]);
            function a(e, t = 256) {
              let r = new n({ content: e, width: t, height: t }).svg();
              return {
                src: `data:image/svg+xml;base64,${(0, o.r)(r)}`,
                title: e,
                alt: "a Bitcoin Cash address QR Code",
              };
            }
            (o = (A.then ? (await A)() : A)[0]), i();
          } catch (s) {
            i(s);
          }
        });
      },
      3473: (e, t, r) => {
        "use strict";
        r.d(t, { Iw: () => c });
        var i = r(20200),
          n = r(62853),
          o = r(59085);
        class A extends o.ZP {
          constructor() {
            super("exchange-rate"),
              this.version(3).stores({ rate: "symbol" }),
              (this.fx = this.table("rate"));
          }
          async init() {
            return this;
          }
          async close() {
            return this;
          }
          getInfo() {
            return "indexedDB";
          }
          async getRate(e) {
            return (await this.fx.get({ symbol: e })) || void 0;
          }
          async setRate(e, t, r) {
            return this.transaction(
              "rw",
              this.fx,
              async () => (
                await this.fx.put({ symbol: e, rate: t, ttl: r }).catch((e) => {
                  throw Error(e);
                }),
                !0
              )
            );
          }
        }
        var a = r(40766),
          s = r(89644);
        class c {
          constructor({ symbol: e, rate: t, ttl: r }) {
            (this.symbol = e), (this.rate = t), (this.ttl = r);
          }
          static setupAxiosMock(e, t) {
            s.interceptors.mocks ||
              ((s.interceptors.mocks = {}),
              s.interceptors.request.use((e) => {
                const t = e.url;
                if (s.interceptors.mocks[t]) {
                  const r = s.interceptors.mocks[t];
                  return {
                    ...e,
                    cancelToken: new s.CancelToken((e) =>
                      e({ status: 200, data: r })
                    ),
                  };
                }
                return e;
              }),
              s.interceptors.response.use(
                function (e) {
                  return e;
                },
                function (e) {
                  return s.isCancel(e)
                    ? Promise.resolve(e.message)
                    : Promise.reject(e);
                }
              )),
              (s.interceptors.mocks[e] = t);
          }
          static removeAxiosMock(e) {
            delete (s.interceptors.mocks || {})[e];
          }
          toString() {
            this.rate.toFixed(2);
          }
          static async get(e, t = !0) {
            if ((0, n.B)() === n.b.node || !(0, a.k)())
              return await this.getRateFromGlobalScope(e, t);
            try {
              return await this.getRateFromIndexedDb(e, t);
            } catch {
              return await this.getRateFromGlobalScope(e, t);
            }
          }
          static async getRateFromIndexedDb(e, t = !0) {
            if (!t) return await l(e);
            let r = new A(),
              i = await r.getRate(e);
            if (i && i.ttl > Date.now()) return i.rate;
            let n = await l(e);
            return r.setRate(e, n, g()), n;
          }
          static async getRateFromGlobalScope(e, t = !0) {
            if (!t) return await l(e);
            if (globalThis.RATE) {
              let t = globalThis.RATE;
              if (e in t) {
                let r = t[e];
                if (r.ttl > Date.now()) return r.rate;
              }
            }
            let r = await l(e);
            return this.cacheRateInGlobalScope(e, r), r;
          }
          static cacheRateInGlobalScope(e, t) {
            globalThis.RATE
              ? (globalThis.RATE[e] = { symbol: e, rate: t, ttl: g() })
              : (globalThis.RATE = {});
          }
        }
        function g() {
          return Math.trunc(Date.now() + i.EXCHANGE_RATE_TTL);
        }
        async function l(e) {
          if ((e.length > 0 && (e = e.toLocaleLowerCase()), "usd" === e))
            try {
              return (
                await s.get(
                  "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin-cash&vs_currencies=usd"
                )
              ).data["bitcoin-cash"].usd;
            } catch (e) {
              try {
                return (
                  await s.get("https://markets.api.bitcoin.com/live/bitcoin")
                ).data.data.BCH;
              } catch (e) {
                return e;
              }
            }
          throw Error(
            "Support for giving an amount in '${symbol}' is not supported."
          );
        }
        setTimeout(() => c.get("usd"), 0);
      },
      82366: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { UI: () => u });
            var n = r(89341),
              o = r(6391),
              A = r(70217),
              a = r(89644),
              s = r(12795),
              c = r(48640),
              g = r(62853),
              l = e([s]);
            s = (l.then ? (await l)() : l)[0];
            class u {
              constructor(e = n.Z.MAINNET) {
                (this.network = e),
                  (this.servers = { ...u.defaultServers }),
                  (this.caching = !1),
                  (0, g.B)() === g.b.node &&
                    (process.env.GSPP_MAINNET_DATA &&
                      (this.servers.mainnet.dataSource =
                        process.env.GSPP_MAINNET_DATA),
                    process.env.GSPP_MAINNET_EVENTS &&
                      (this.servers.mainnet.eventSource =
                        process.env.GSPP_MAINNET_EVENTS),
                    process.env.GSPP_TESTNET_DATA &&
                      (this.servers.testnet.dataSource =
                        process.env.GSPP_TESTNET_DATA),
                    process.env.GSPP_TESTNET_EVENTS &&
                      (this.servers.testnet.eventSource =
                        process.env.GSPP_TESTNET_EVENTS),
                    process.env.GSPP_REGTEST_DATA &&
                      (this.servers.regtest.dataSource =
                        process.env.GSPP_REGTEST_DATA),
                    process.env.GSPP_REGTEST_EVENTS &&
                      (this.servers.regtest.eventSource =
                        process.env.GSPP_REGTEST_EVENTS));
              }
              async SlpOutpoints(e) {
                return (
                  await this.GsppQuery(
                    { cashaddr: e },
                    "v1/graphsearch/slpoutpoints"
                  )
                ).outpoints;
              }
              async SlpUtxos(e) {
                const t = (
                  await this.GsppQuery(
                    { cashaddr: e },
                    "v1/graphsearch/slputxos"
                  )
                ).utxos;
                return t
                  ? ((r = t).forEach((e) => {
                      (e.value = new o(e.value).shiftedBy(-1 * e.decimals)),
                        (e.satoshis = Number(e.satoshis));
                    }),
                    r)
                  : [];
                var r;
              }
              async SlpSpendableUtxos(e, t) {
                return (await this.SlpUtxos(e)).filter(
                  (e) => !1 === e.isBaton && (!t || e.tokenId === t)
                );
              }
              async SlpBatonUtxos(e, t) {
                return (await this.SlpUtxos(e)).filter(
                  (e) => !0 === e.isBaton && (!t || e.tokenId === t)
                );
              }
              async SlpTokenInfo(e) {
                return (t = await this.GsppQuery(
                  { tokenId: e },
                  "v1/graphsearch/slptokeninfo"
                ))
                  ? ((t.initialAmount = new o(t.initialAmount).shiftedBy(
                      -1 * t.decimals
                    )),
                    (t.parentTokenId = t.groupId),
                    t)
                  : t;
                var t;
              }
              async SlpAllTokenBalances(e) {
                return f(
                  (
                    await this.GsppQuery(
                      { cashaddr: e },
                      "v1/graphsearch/slpalltokenbalances"
                    )
                  ).balances || []
                );
              }
              async SlpTokenBalance(e, t) {
                const r = await this.GsppQuery(
                  { cashaddr: e, tokenId: t },
                  "v1/graphsearch/slptokenbalance"
                );
                if (!r) return (0, A.qR)(t);
                const i = f([r]);
                return i[0].value.isZero() ? (0, A.qR)(t) : i[0];
              }
              async SlpAddressTransactionHistory(e, t, r = 100, i = 0) {
                throw "Not implemented";
              }
              async SlpWaitForTransaction(e, t) {
                return new Promise(async (r) => {
                  const i = this.SlpWatchTransactions(
                    async (e) => {
                      await i(), r(e);
                    },
                    e,
                    t
                  );
                });
              }
              async SlpWaitForBalance(e, t, r) {
                return new Promise((i) => {
                  const n = this.SlpWatchBalance(
                    async (t) => {
                      t.value.isGreaterThanOrEqualTo(new o(e)) &&
                        (await n(), i(t));
                    },
                    t,
                    r
                  );
                });
              }
              SlpWatchBalance(e, t, r) {
                return this.SlpWatchTransactions(
                  async () => {
                    const i = await this.SlpTokenBalance(t, r);
                    e(i);
                  },
                  t,
                  r
                );
              }
              SlpWatchTransactions(e, t, r) {
                const i = this.SlpSocketEventSource({
                  query: { slpaddr: t, tokenId: r },
                });
                return (
                  i.addEventListener(
                    "message",
                    async (t) => {
                      const r = JSON.parse(t.data);
                      if ("rawtx" === r.type) {
                        const t = {
                          tx_hash: r.data.txHash,
                          height: 0,
                          details: r.data,
                        };
                        e(t);
                      }
                    },
                    !1
                  ),
                  async () => {
                    i.close();
                  }
                );
              }
              GsppQuery(e, t) {
                return (
                  this.caching
                    ? (I.defaults.headers = {})
                    : (I.defaults.headers = h),
                  new Promise((r, i) => {
                    const n = `${this.servers[this.network].dataSource}/${t}`;
                    p(n, e)
                      .then((e) => {
                        r(e.data);
                      })
                      .catch((e) => {
                        e.isAxiosError && i(e.response.data), i(e);
                      });
                  })
                );
              }
              SlpSocketEventSource(e) {
                const t = `${this.servers[this.network].eventSource}/s/${d(e)}`;
                return new c.Z(t);
              }
            }
            u.defaultServers = {
              mainnet: {
                dataSource: "https://gs.fountainhead.cash",
                eventSource: "https://slpsocket.fountainhead.cash",
              },
              testnet: {
                dataSource: "https://gs-testnet.fountainhead.cash",
                eventSource: "https://slpsocket-testnet.fountainhead.cash",
              },
              regtest: {
                dataSource: "http://localhost:12400",
                eventSource: "http://localhost:12401",
              },
            };
            const h = {
                "Cache-Control": "no-cache",
                Pragma: "no-cache",
                Expires: "0",
              },
              I = a.create({ headers: h }),
              p = (e, t = {}, r = 1) =>
                I.post(e, t).catch(function (i) {
                  if (0 === r) throw i;
                  return new Promise((i) => {
                    setTimeout(() => i(p(e, t, r - 1)), 1e3);
                  });
                }),
              d = function (e) {
                if (!e || !Object.keys(e).length)
                  throw new Error("Empty query");
                return (0, s.r)(JSON.stringify(e));
              };
            function f(e) {
              return (
                e.forEach(
                  (e) => (e.value = new o(e.value).shiftedBy(-1 * e.decimals))
                ),
                e
              );
            }
            i();
          } catch (C) {
            i(C);
          }
        });
      },
      12561: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { A: () => h });
            var n = r(89341),
              o = r(1239),
              A = r(6391),
              a = r(70217),
              s = r(89644),
              c = r(12795),
              g = r(48640),
              l = r(62853),
              u = e([c]);
            c = (u.then ? (await u)() : u)[0];
            class h {
              constructor(e = n.Z.MAINNET) {
                (this.network = e),
                  (this.servers = { ...h.defaultServers }),
                  (this.caching = !1),
                  (0, l.B)() === l.b.node &&
                    (process.env.SLPDB_MAINNET_DATA &&
                      (this.servers.mainnet.dataSource =
                        process.env.SLPDB_MAINNET_DATA),
                    process.env.SLPDB_MAINNET_EVENTS &&
                      (this.servers.mainnet.eventSource =
                        process.env.SLPDB_MAINNET_EVENTS),
                    process.env.SLPDB_TESTNET_DATA &&
                      (this.servers.testnet.dataSource =
                        process.env.SLPDB_TESTNET_DATA),
                    process.env.SLPDB_TESTNET_EVENTS &&
                      (this.servers.testnet.eventSource =
                        process.env.SLPDB_TESTNET_EVENTS),
                    process.env.SLPDB_REGTEST_DATA &&
                      (this.servers.regtest.dataSource =
                        process.env.SLPDB_REGTEST_DATA),
                    process.env.SLPDB_REGTEST_EVENTS &&
                      (this.servers.regtest.eventSource =
                        process.env.SLPDB_REGTEST_EVENTS));
              }
              async SlpOutpoints(e) {
                return (await this.SlpDbQuery((0, o.ty)(e))).g;
              }
              async SlpUtxos(e) {
                return (0, a.j6)((await this.SlpDbQuery((0, o.vA)(e))).g);
              }
              async SlpTokenInfo(e) {
                const t = (await this.SlpDbQuery((0, o.p8)(e))).t;
                return (0, a.cG)(t[0]);
              }
              async SlpSpendableUtxos(e, t) {
                return (0, a.j6)((await this.SlpDbQuery((0, o.vT)(e, t))).g);
              }
              async SlpBatonUtxos(e, t) {
                return (0, a.j6)((await this.SlpDbQuery((0, o.Hy)(e, t))).g);
              }
              async SlpAllTokenBalances(e) {
                return (0, a.HC)((await this.SlpDbQuery((0, o.hQ)(e))).g);
              }
              async SlpTokenBalance(e, t) {
                return (
                  (0, a.HC)((await this.SlpDbQuery((0, o.Gc)(e, t))).g)[0] ||
                  (0, a.qR)(t)
                );
              }
              async SlpAddressTransactionHistory(e, t, r = 100, i = 0) {
                const n = await this.SlpDbQuery((0, o.OH)(e, t, r, i));
                return n.c.concat(n.u);
              }
              async SlpWaitForTransaction(e, t) {
                return new Promise(async (r) => {
                  const i = this.SlpWatchTransactions(
                    async (e) => {
                      await i(), r(e);
                    },
                    e,
                    t
                  );
                });
              }
              async SlpWaitForBalance(e, t, r) {
                return new Promise((i) => {
                  const n = this.SlpWatchBalance(
                    async (t) => {
                      t.value.isGreaterThanOrEqualTo(new A(e)) &&
                        (await n(), i(t));
                    },
                    t,
                    r
                  );
                });
              }
              SlpWatchBalance(e, t, r) {
                return this.SlpWatchTransactions(
                  async () => {
                    const i = await this.SlpTokenBalance(t, r);
                    e(i);
                  },
                  t,
                  r
                );
              }
              SlpWatchTransactions(e, t, r) {
                const i = this.SlpSocketEventSource((0, o.O6)(t, r));
                return (
                  i.addEventListener(
                    "message",
                    async (t) => {
                      const r = JSON.parse(t.data);
                      if (r.data && r.data.length) {
                        const t = {
                          tx_hash: r.data[0].tx.h,
                          height: 0,
                          details: r.data[0],
                        };
                        e(t);
                      }
                    },
                    !1
                  ),
                  async () => {
                    i.close();
                  }
                );
              }
              SlpDbQuery(e) {
                return (
                  this.caching
                    ? (p.defaults.headers = {})
                    : (p.defaults.headers = I),
                  new Promise((t, r) => {
                    const i = `${this.servers[this.network].dataSource}/q/${f(
                      e
                    )}`;
                    d(i).then((e) => {
                      e.hasOwnProperty("error") && r(new Error(e.error)),
                        t(e.data);
                    });
                  })
                );
              }
              SlpSocketEventSource(e) {
                const t = `${this.servers[this.network].eventSource}/s/${f(e)}`;
                return new g.Z(t);
              }
            }
            h.defaultServers = {
              mainnet: {
                dataSource: "https://slpdb.fountainhead.cash",
                eventSource: "https://slpsocket.fountainhead.cash",
              },
              testnet: {
                dataSource: "https://slpdb-testnet.fountainhead.cash",
                eventSource: "https://slpsocket-testnet.fountainhead.cash",
              },
              regtest: {
                dataSource: "http://localhost:12300",
                eventSource: "http://localhost:12301",
              },
            };
            const I = {
                "Cache-Control": "no-cache",
                Pragma: "no-cache",
                Expires: "0",
              },
              p = s.create({ headers: I }),
              d = (e, t = {}, r = 5) =>
                p.get(e, t).catch(function (i) {
                  if (0 === r) throw i;
                  return new Promise((i) => {
                    setTimeout(() => i(d(e, t, r - 1)), 1e3);
                  });
                }),
              f = function (e) {
                if (!e || !Object.keys(e).length)
                  throw new Error("Empty SLPDB query");
                return (0, c.r)(JSON.stringify(e));
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      1239: (e, t, r) => {
        "use strict";
        r.d(t, {
          Gc: () => a,
          Hy: () => l,
          O6: () => c,
          OH: () => s,
          hQ: () => A,
          p8: () => g,
          ty: () => n,
          vA: () => i,
          vT: () => o,
        });
        const i = (e) => ({
            v: 3,
            q: {
              db: ["g"],
              aggregate: [
                {
                  $match: {
                    "graphTxn.outputs.address": e,
                    "graphTxn.outputs.status": {
                      $in: ["UNSPENT", "BATON_UNSPENT"],
                    },
                  },
                },
                { $unwind: "$graphTxn.outputs" },
                {
                  $match: {
                    "graphTxn.outputs.address": e,
                    "graphTxn.outputs.status": {
                      $in: ["UNSPENT", "BATON_UNSPENT"],
                    },
                  },
                },
              ],
              limit: 1e6,
            },
            r: {
              f: "[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .graphTxn.details.decimals, ticker: .graphTxn.details.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType, parentTokenId: .tokenDetails.nftGroupIdHex } ]",
            },
          }),
          n = (e) => ({
            v: 3,
            q: {
              db: ["g"],
              aggregate: [
                {
                  $match: {
                    "graphTxn.outputs.address": e,
                    "graphTxn.outputs.status": {
                      $in: ["UNSPENT", "BATON_UNSPENT"],
                    },
                  },
                },
                { $unwind: "$graphTxn.outputs" },
                {
                  $match: {
                    "graphTxn.outputs.address": e,
                    "graphTxn.outputs.status": {
                      $in: ["UNSPENT", "BATON_UNSPENT"],
                    },
                  },
                },
                { $project: { graphTxn: 1 } },
              ],
              limit: 1e6,
            },
            r: {
              f: '[ .[] | [.graphTxn.txid, .graphTxn.outputs.vout | tostring] | join(":") ]',
            },
          }),
          o = (e, t) => {
            let r = {
              v: 3,
              q: {
                db: ["g"],
                aggregate: [
                  {
                    $match: {
                      "graphTxn.outputs.address": e,
                      "graphTxn.outputs.status": "UNSPENT",
                    },
                  },
                  { $unwind: "$graphTxn.outputs" },
                  {
                    $match: {
                      "graphTxn.outputs.address": e,
                      "graphTxn.outputs.status": "UNSPENT",
                    },
                  },
                  {
                    $lookup: {
                      from: "tokens",
                      localField: "graphTxn.details.tokenIdHex",
                      foreignField: "tokenDetails.tokenIdHex",
                      as: "token",
                    },
                  },
                ],
              },
              r: {
                f: "[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .token[0].tokenDetails.decimals, ticker: .token[0].tokenDetails.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType, parentTokenId: .token[0].nftParentId } ]",
              },
            };
            return (
              t && (r.q.aggregate[0].$match["graphTxn.details.tokenIdHex"] = t),
              r
            );
          },
          A = (e) => ({
            v: 3,
            q: {
              db: ["g"],
              aggregate: [
                {
                  $match: {
                    "graphTxn.outputs.status": "UNSPENT",
                    "graphTxn.outputs.address": e,
                  },
                },
                { $unwind: "$graphTxn.outputs" },
                {
                  $match: {
                    "graphTxn.outputs.status": "UNSPENT",
                    "graphTxn.outputs.address": e,
                  },
                },
                {
                  $group: {
                    _id: "$tokenDetails.tokenIdHex",
                    slpAmount: { $sum: "$graphTxn.outputs.slpAmount" },
                  },
                },
                { $sort: { slpAmount: -1 } },
                {
                  $lookup: {
                    from: "tokens",
                    localField: "_id",
                    foreignField: "tokenDetails.tokenIdHex",
                    as: "token",
                  },
                },
                { $match: { slpAmount: { $gt: 0 } } },
              ],
              sort: { slpAmount: -1 },
            },
            r: {
              f: "[ .[] | { value: .slpAmount, ticker: .token[0].tokenDetails.symbol, name: .token[0].tokenDetails.name, tokenId: ._id, type: .token[0].tokenDetails.versionType, parentTokenId: .token[0].nftParentId } ]",
            },
          }),
          a = (e, t) => ({
            v: 3,
            q: {
              db: ["g"],
              aggregate: [
                { $match: { "tokenDetails.tokenIdHex": t } },
                {
                  $match: {
                    "graphTxn.outputs.status": "UNSPENT",
                    "graphTxn.outputs.address": e,
                  },
                },
                { $unwind: "$graphTxn.outputs" },
                {
                  $match: {
                    "graphTxn.outputs.status": "UNSPENT",
                    "graphTxn.outputs.address": e,
                  },
                },
                {
                  $group: {
                    _id: "$tokenDetails.tokenIdHex",
                    slpAmount: { $sum: "$graphTxn.outputs.slpAmount" },
                  },
                },
                { $sort: { slpAmount: -1 } },
                {
                  $lookup: {
                    from: "tokens",
                    localField: "_id",
                    foreignField: "tokenDetails.tokenIdHex",
                    as: "token",
                  },
                },
              ],
              sort: { slpAmount: -1 },
            },
            r: {
              f: "[ .[] | { value: .slpAmount, ticker: .token[0].tokenDetails.symbol, name: .token[0].tokenDetails.name, tokenId: ._id, type: .token[0].tokenDetails.versionType, parentTokenId: .token[0].nftParentId } ]",
            },
          }),
          s = (e, t, r = 100, i = 0) => {
            const n = {
              v: 3,
              q: {
                db: ["c", "u"],
                find: {
                  $query: {
                    $or: [{ "in.e.a": e }, { "out.e.a": e }],
                    $and: [{ "slp.valid": !0 }],
                  },
                },
                sort: { "blk.i": 1 },
                limit: r,
                skip: i,
              },
              r: {
                f: "[ .[] | { tx_hash: .tx.h, height: .blk.i, details: . } ]",
              },
            };
            return (
              t && n.q.find.$query.$and.push({ "slp.detail.tokenIdHex": t }), n
            );
          },
          c = (e, t) => {
            let r = { v: 3, q: { db: ["c", "u"], find: {} } };
            return (
              e && (r.q.find.$or = [{ "in.e.a": e }, { "out.e.a": e }]),
              t && (r.q.find["slp.detail.tokenIdHex"] = t),
              r
            );
          },
          g = (e, t = 100, r = 0) => {
            let i = {
              v: 3,
              q: {
                db: ["t"],
                find: {},
                sort: { "tokenStats.approx_txns_since_genesis": -1 },
                limit: t,
                skip: r,
              },
              r: {
                f: "[ .[] | { ticker: .tokenDetails.symbol, name: .tokenDetails.name, tokenId: .tokenDetails.tokenIdHex, decimals: .tokenDetails.decimals, documentUrl: .tokenDetails.documentUri, documentHash: .tokenDetails.documentSha256Hex, initialAmount: .tokenDetails.genesisOrMintQuantity, type: .tokenDetails.versionType, parentTokenId: .nftParentId } ]",
              },
            };
            return e && (i.q.find["tokenDetails.tokenIdHex"] = e), i;
          },
          l = (e, t) => {
            let r = {
              v: 3,
              q: {
                db: ["g"],
                aggregate: [
                  {
                    $match: {
                      "graphTxn.outputs.address": e,
                      "graphTxn.outputs.status": "BATON_UNSPENT",
                    },
                  },
                  { $unwind: "$graphTxn.outputs" },
                  {
                    $match: {
                      "graphTxn.outputs.address": e,
                      "graphTxn.outputs.status": "BATON_UNSPENT",
                    },
                  },
                  { $project: { graphTxn: 1 } },
                  {
                    $lookup: {
                      from: "tokens",
                      localField: "graphTxn.details.tokenIdHex",
                      foreignField: "tokenDetails.tokenIdHex",
                      as: "token",
                    },
                  },
                ],
              },
              r: {
                f: "[ .[] | { txid: .graphTxn.txid, vout: .graphTxn.outputs.vout, satoshis: .graphTxn.outputs.bchSatoshis, value: .graphTxn.outputs.slpAmount, decimals: .token[0].tokenDetails.decimals, ticker: .token[0].tokenDetails.symbol, tokenId: .graphTxn.details.tokenIdHex, type: .graphTxn.details.versionType } ]",
              },
            };
            return (
              t && (r.q.aggregate[0].$match["graphTxn.details.tokenIdHex"] = t),
              r
            );
          };
      },
      97534: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { JR: () => m, OJ: () => y, h0: () => Q });
            var n = r(78997),
              o = r(34684),
              A = r(43137),
              a = r(2783),
              s = r(13609),
              c = r(48422),
              g = r(34167),
              l = r(34782),
              u = r(6391),
              h = r(20200),
              I = r(46634),
              p = r(68700),
              d = r(48834).Buffer,
              f = e([g, I, s]);
            [g, I, s] = f.then ? (await f)() : f;
            const C = (e) => (0, n.of)(e).reverse(),
              B = (e, t = !1) => {
                if (!e) return Uint8Array.from([76, 0]);
                if (t) return Uint8Array.from([e.length / 2, ...(0, o.kW)(e)]);
                const r = new TextEncoder().encode(e).length;
                return Uint8Array.from([r, ...(0, A.L)(e)]);
              },
              E = [l.I.Type1, l.I.NftParent, l.I.NftChild],
              y = async (e) => {
                if (!(0, p.isValidAddress)(e.tokenReceiverSlpAddr))
                  throw new Error(
                    `Invalid tokenReceiverSlpAddr ${e.tokenReceiverSlpAddr}`
                  );
                if (!(0, p.isValidAddress)(e.batonReceiverSlpAddr))
                  throw new Error(
                    `Invalid batonReceiverSlpAddr ${e.batonReceiverSlpAddr}`
                  );
                if ((e.type || (e.type = l.I.Type1), !E.includes(e.type)))
                  throw new Error(`Unsupported token type ${e.type}`);
                if (
                  ((e.initialAmount = new u(e.initialAmount)),
                  e.initialAmount.isLessThanOrEqualTo(0))
                )
                  throw Error(
                    "Initial genesis token amount should be greater than zero"
                  );
                if (e.decimals < 0 || e.decimals > 9)
                  throw new Error("Genesis allows decimal places between 0");
                const t = (
                    e.endBaton
                      ? [e.tokenReceiverSlpAddr]
                      : [e.tokenReceiverSlpAddr, e.batonReceiverSlpAddr]
                  ).map(
                    (e) =>
                      new g.Lt({
                        cashaddr: (0, p.toCashAddress)(e),
                        value: h.DUST_UTXO_THRESHOLD,
                        unit: I.ZX.SAT,
                      })
                  ),
                  r = (0, a.d)(v);
                if ("string" == typeof r)
                  throw new Error("Transaction template error");
                const i = await (0, s.m6)(r),
                  n = BigInt(e.initialAmount.shiftedBy(e.decimals)),
                  o = e.endBaton ? [76, 0] : [1, 2];
                let A = i.generateBytecode({
                  scriptId: "genesis_lock",
                  data: {
                    bytecode: {
                      g_token_type: Uint8Array.from([1, e.type]),
                      g_token_ticker: B(e.ticker),
                      g_token_name: B(e.name),
                      g_token_document_url: B(e.documentUrl),
                      g_token_document_hash: B(e.documentHash, !0),
                      g_decimals: Uint8Array.from([1, e.decimals]),
                      g_mint_baton_vout: Uint8Array.from(o),
                      g_initial_token_mint_quantity: Uint8Array.from([
                        8,
                        ...C(n),
                      ]),
                    },
                  },
                });
                if (!A.success)
                  throw new Error(A.errors.map((e) => e.error).join("\n"));
                return {
                  SlpOutputs: [
                    { lockingBytecode: A.bytecode, valueSatoshis: 0n },
                  ],
                  FundingSlpUtxos: [],
                  BchSendRequests: t,
                };
              },
              m = async (e, t) => {
                if (!(0, p.isValidAddress)(e.tokenReceiverSlpAddr))
                  throw new Error(
                    `Invalid tokenReceiverSlpAddr ${e.tokenReceiverSlpAddr}`
                  );
                if (!(0, p.isValidAddress)(e.batonReceiverSlpAddr))
                  throw new Error(
                    `Invalid batonReceiverSlpAddr ${e.batonReceiverSlpAddr}`
                  );
                const r = t[0].type;
                if (!E.includes(r))
                  throw new Error(`Unsupported token type ${r}`);
                const i = (
                    e.endBaton
                      ? [e.tokenReceiverSlpAddr]
                      : [e.tokenReceiverSlpAddr, e.batonReceiverSlpAddr]
                  ).map(
                    (e) =>
                      new g.Lt({
                        cashaddr: (0, p.toCashAddress)(e),
                        value: h.DUST_UTXO_THRESHOLD,
                        unit: I.ZX.SAT,
                      })
                  ),
                  n = (0, a.d)(v);
                if ("string" == typeof n)
                  throw new Error("Transaction template error");
                const A = await (0, s.m6)(n),
                  c = t[0].decimals,
                  l = new u(e.value).shiftedBy(c),
                  d = e.endBaton ? [76, 0] : [1, 2];
                let f = A.generateBytecode({
                  scriptId: "mint_lock",
                  data: {
                    bytecode: {
                      m_token_type: Uint8Array.from([1, r]),
                      m_token_id: (0, o.kW)(e.tokenId),
                      m_mint_baton_vout: Uint8Array.from(d),
                      m_additional_token_quantity: Uint8Array.from([
                        8,
                        ...C(BigInt(l.toString())),
                      ]),
                    },
                  },
                });
                if (!f.success)
                  throw new Error(f.errors.map((e) => e.error).join("\n"));
                return {
                  SlpOutputs: [
                    { lockingBytecode: f.bytecode, valueSatoshis: 0n },
                  ],
                  FundingSlpUtxos: t,
                  BchSendRequests: i,
                };
              },
              Q = async (e, t, r) => {
                if (!(0, p.isValidAddress)(e))
                  throw new Error(`Invalid changeSlpaddr ${e}`);
                if (!t.length) throw new Error("No available tokens to spend");
                const i = t[0].decimals,
                  n = t[0].tokenId,
                  A = t[0].type;
                if (!E.includes(A))
                  throw new Error(`Unsupported token type ${A}`);
                const l = (t = t.sort((e, t) => e.value.comparedTo(t.value)))
                    .map((e) => new u(e.value))
                    .reduce((e, t) => u.sum(e, t), new u(0)),
                  f = r
                    .map((e) => new u(e.value))
                    .reduce((e, t) => u.sum(e, t), new u(0));
                if (f.isLessThanOrEqualTo(0))
                  throw new Error("Refusing to spend 0 tokens");
                if (f.isGreaterThan(l))
                  throw new Error("Not enough tokens to spend");
                let B = [],
                  y = new u(0);
                for (let e of t) {
                  if (!y.isLessThan(f)) break;
                  (y = y.plus(e.value)), B.push(e);
                }
                const m = (0, a.d)(v);
                if ("string" == typeof m)
                  throw new Error("Transaction template error");
                const Q = await (0, s.m6)(m),
                  S = y.minus(f);
                let w = r.map((e) => new u(e.value));
                S.isGreaterThan(new u(0)) &&
                  (w.push(S),
                  r.push({ slpaddr: e, tokenId: n, value: new u(0) }));
                const b = r.map(
                  (e) =>
                    new g.Lt({
                      cashaddr: (0, p.toCashAddress)(e.slpaddr),
                      value: h.DUST_UTXO_THRESHOLD,
                      unit: I.ZX.SAT,
                    })
                );
                w = w.map((e) => e.shiftedBy(i));
                let k = new Uint8Array();
                for (const e of w)
                  k = new Uint8Array([...k, 8, ...C(BigInt(e.toString()))]);
                let N = Q.generateBytecode({
                  scriptId: "send_lock",
                  data: {
                    bytecode: {
                      s_token_type: Uint8Array.from([1, A]),
                      s_token_id: (0, o.kW)(n),
                      s_token_output_quantities: k,
                    },
                  },
                });
                if (!N.success)
                  throw new Error(N.errors.map((e) => e.error).join("\n"));
                return (
                  (0, c.parseSLP)(d.from((0, o.UM)(N.bytecode), "hex")),
                  {
                    SlpOutputs: [
                      { lockingBytecode: N.bytecode, valueSatoshis: 0n },
                    ],
                    FundingSlpUtxos: B,
                    BchSendRequests: b,
                  }
                );
              },
              v = {
                $schema:
                  "https://bitauth.com/schemas/authentication-template-v0.schema.json",
                description: "SLP Token transaction output templates",
                name: "SLP",
                entities: {
                  genesis_variables: {
                    description: "Variables used in genesis template.",
                    name: "Genesis_Variables",
                    scripts: ["genesis_lock", "genesis_unlock"],
                    variables: {
                      g_token_type: {
                        description: "1 to 2 byte integer",
                        name: "token_type",
                        type: "AddressData",
                      },
                      g_token_ticker: {
                        description: "0 to ∞ bytes, suggested utf-8",
                        name: "token_ticker",
                        type: "AddressData",
                      },
                      g_token_name: {
                        description: "0 to ∞ bytes, suggested utf-8",
                        name: "token_name",
                        type: "AddressData",
                      },
                      g_token_document_url: {
                        description: "0 to ∞ bytes, suggested ascii",
                        name: "token_document_url",
                        type: "AddressData",
                      },
                      g_token_document_hash: {
                        description: "0 bytes or 32 bytes",
                        name: "token_document_hash",
                        type: "AddressData",
                      },
                      g_decimals: {
                        description: "1 byte in range 0x00-0x09",
                        name: "decimals",
                        type: "AddressData",
                      },
                      g_mint_baton_vout: {
                        description: "0 bytes, or 1 byte in range 0x02-0xff",
                        name: "mint_baton_vout",
                        type: "AddressData",
                      },
                      g_initial_token_mint_quantity: {
                        description: "8 byte integer",
                        name: "initial_token_mint_quantity",
                        type: "AddressData",
                      },
                    },
                  },
                  send_variables: {
                    description: "",
                    name: "Send_Variables",
                    scripts: ["send_lock", "send_unlock"],
                    variables: {
                      s_token_type: {
                        description: "1 to 2 byte integer",
                        name: "token_type",
                        type: "AddressData",
                      },
                      s_token_id: {
                        description: "Token Id, genesis transaction hex",
                        name: "Token_Id",
                        type: "AddressData",
                      },
                      s_token_output_quantities: {
                        description:
                          "N 8 byte integer token amounts (up to 19). At least one is required. Each one is a push.\nN BCH transaction outputs should be specified",
                        name: "Token Output Quantities",
                        type: "AddressData",
                      },
                    },
                  },
                  mint_variables: {
                    description: "",
                    name: "Mint_Variables",
                    scripts: ["mint_lock", "mint_unlock"],
                    variables: {
                      m_token_type: {
                        description: "1 to 2 byte integer",
                        name: "token_type",
                        type: "AddressData",
                      },
                      m_token_id: {
                        description: "Token Id, genesis transaction hex",
                        name: "Token_Id",
                        type: "AddressData",
                      },
                      m_mint_baton_vout: {
                        description: "0 bytes, or 1 byte in range 0x02-0xff",
                        name: "mint_baton_vout",
                        type: "AddressData",
                      },
                      m_additional_token_quantity: {
                        description: "Amount of tokens to mint, 8 byte integer",
                        name: "Additinial token quantity",
                        type: "AddressData",
                      },
                    },
                  },
                },
                scenarios: {
                  genesis: {
                    data: {
                      bytecode: {
                        g_token_type: "0x01",
                        g_token_ticker: "0x00",
                        g_token_name: "0x00",
                        g_token_document_url: "0x00",
                        g_token_document_hash: "",
                        g_decimals: "0x09",
                        g_mint_baton_vout: "0x02",
                        g_initial_token_mint_quantity: "0x0102030405060708",
                      },
                    },
                    description: "Genesis",
                    name: "Genesis",
                    transaction: { locktime: 100 },
                  },
                  send: {
                    data: {
                      bytecode: {
                        s_token_type: "0x01",
                        s_token_id:
                          "0x0000000000000000'0000000000000000'0000000000000000'0000000000000000'",
                        s_token_output_quantities: "0x0000000000000000",
                      },
                    },
                    description: "Send",
                    name: "Send",
                    transaction: { locktime: 100 },
                  },
                  mint: {
                    data: {
                      bytecode: {
                        m_token_type: "0x01",
                        m_token_id:
                          "0x0000000000000000'0000000000000000'0000000000000000'0000000000000000'",
                        m_mint_baton_vout: "0x00",
                        m_additional_token_quantity: "0x0000000000000000",
                      },
                    },
                    description: "Mint",
                    name: "Mint",
                    transaction: { locktime: 100 },
                  },
                },
                scripts: {
                  genesis_unlock: {
                    fails: ["genesis"],
                    name: "Genesis Unlock",
                    script:
                      "// unlock script is required, so we leave it empty",
                    unlocks: "genesis_lock",
                  },
                  send_unlock: {
                    fails: ["send"],
                    name: "Send Unlock",
                    script: "",
                    unlocks: "send_lock",
                  },
                  mint_unlock: {
                    fails: ["mint"],
                    name: "Mint Unlock",
                    script: "",
                    unlocks: "mint_lock",
                  },
                  genesis_lock: {
                    lockingType: "standard",
                    name: "Genesis",
                    script:
                      "OP_RETURN <'SLP'0x00> g_token_type <'GENESIS'> g_token_ticker g_token_name g_token_document_url g_token_document_hash g_decimals g_mint_baton_vout g_initial_token_mint_quantity",
                  },
                  send_lock: {
                    lockingType: "standard",
                    name: "Send",
                    script:
                      "OP_RETURN <'SLP'0x00> s_token_type <'SEND'> <s_token_id> s_token_output_quantities",
                  },
                  mint_lock: {
                    lockingType: "standard",
                    name: "Mint",
                    script:
                      "OP_RETURN <'SLP'0x00> m_token_type <'MINT'> <m_token_id> m_mint_baton_vout m_additional_token_quantity",
                  },
                },
                supported: ["BCH_2020_05"],
                version: 0,
              };
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      70217: (e, t, r) => {
        "use strict";
        r.d(t, { HC: () => n, cG: () => A, j6: () => o, qR: () => a });
        var i = r(6391);
        function n(e) {
          return e.forEach((e) => (e.value = new i(e.value))), e;
        }
        function o(e) {
          return e.forEach((e) => (e.value = new i(e.value))), e;
        }
        function A(e) {
          if (!e) return e;
          for (const t in e) null === e[t] && (e[t] = "");
          return (e.initialAmount = new i(e.initialAmount)), e;
        }
        function a(e) {
          return { value: new i(0), ticker: "", name: "", tokenId: e };
        }
      },
      60117: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              A5: () => n.A,
              Ib: () => a.I,
              O$: () => A,
              UI: () => o.UI,
            });
            var n = r(12561),
              o = r(82366),
              A = r(6391),
              a = r(34782),
              s = e([n, o]);
            ([n, o] = s.then ? (await s)() : s), i();
          } catch (e) {
            i(e);
          }
        });
      },
      34782: (e, t, r) => {
        "use strict";
        var i;
        r.d(t, { I: () => i }),
          (function (e) {
            (e[(e.Type1 = 1)] = "Type1"),
              (e[(e.NftParent = 129)] = "NftParent"),
              (e[(e.NftChild = 65)] = "NftChild");
          })(i || (i = {}));
      },
      64626: (e, t, r) => {
        "use strict";
        r.d(t, { O: () => n, o: () => o });
        var i = r(89644);
        function n(e, t) {
          i.interceptors.mocks ||
            ((i.interceptors.mocks = {}),
            i.interceptors.request.use((e) => {
              const t = e.url;
              if (i.interceptors.mocks[t]) {
                const r = i.interceptors.mocks[t];
                return {
                  ...e,
                  cancelToken: new i.CancelToken((e) =>
                    e({ status: 200, data: r })
                  ),
                };
              }
              return e;
            }),
            i.interceptors.response.use(
              function (e) {
                return e;
              },
              function (e) {
                return i.isCancel(e)
                  ? Promise.resolve(e.message)
                  : Promise.reject(e);
              }
            )),
            (i.interceptors.mocks[e] = t);
        }
        function o(e) {
          delete (i.interceptors.mocks || {})[e];
        }
      },
      91870: (e, t, r) => {
        "use strict";
        function i(e) {
          return {
            toBe: function (t) {
              if (e !== t)
                throw new Error(
                  `assertion failed: expected ${e} is not equal to received ${t}`
                );
            },
            toEqual: function (t) {
              if (e !== t)
                throw new Error(
                  `assertion failed: expected ${e} is not equal to received ${t}`
                );
            },
            toBeGreaterThan: function (t) {
              if (!(e > t))
                throw new Error(
                  `assertion failed: expected ${e} is not GreaterThan received ${t}`
                );
            },
            toBeGreaterThanOrEqual: function (t) {
              if (!(e >= t))
                throw new Error(
                  `assertion failed: expected ${e} is not GreaterThanOrEqual received ${t}`
                );
            },
            toStrictEqual: function (t) {
              if (JSON.stringify(e) !== JSON.stringify(t))
                throw new Error(
                  `assertion failed: expected ${e} is not StrictEqual to received ${t}`
                );
            },
            toContain: function (t) {
              if (!e.includes(t))
                throw new Error(
                  `assertion failed: expected ${e} does not Contain received ${t}`
                );
            },
            rejects: {
              toThrow: async function (t) {
                try {
                  await e;
                } catch (e) {
                  if (!e.message.includes(t))
                    throw new Error(
                      `assertion failed: expected function to throw with message ${t}, but it did not.`
                    );
                }
              },
            },
          };
        }
        r.d(t, { l: () => i });
      },
      1318: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Um: () => w, pD: () => S, uv: () => k, v3: () => b });
            var n = r(2783),
              o = r(13744),
              A = r(13609),
              a = r(11779),
              s = r(51183),
              c = r(17720),
              g = r(34684),
              l = r(30861),
              u = r(89341),
              h = r(48682),
              I = r(20200),
              p = r(34167),
              d = r(10149),
              f = r(25540),
              C = r(56724),
              B = r(85858),
              E = e([A, f, h, a, s, c, p, d, l]);
            async function y({
              inputs: e,
              outputs: t,
              signingKey: r,
              sourceAddress: i,
              fee: g = 0,
              discardChange: l = !1,
              slpOutputs: u = [],
              feePaidBy: p = B.F.change,
              changeAddress: d = "",
            }) {
              if (!r)
                throw new Error(
                  "Missing signing key when building transaction"
                );
              const E = (0, n.d)(o.F);
              if ("string" == typeof E)
                throw new Error("Transaction template error");
              const y = await (0, A.m6)(E),
                v = await (0, C.O)(e),
                S = await (0, f.m)(t),
                w = BigInt(v) - BigInt(S) - BigInt(g);
              t = (0, h.L$)(t, g, p, w);
              const b = await Q(t);
              if ((d || (d = i), !0 !== l && w > I.DUST_UTXO_THRESHOLD)) {
                const e = (0, a.nA)(d);
                if ("string" == typeof e) throw Error(e);
                b.push({
                  lockingBytecode: e.bytecode,
                  valueSatoshis: BigInt(w),
                });
              }
              const { preparedInputs: k, sourceOutputs: N } = m({
                  inputs: e,
                  compiler: y,
                  signingKey: r,
                  sourceAddress: i,
                }),
                _ = (0, s.y4)({
                  inputs: k,
                  locktime: 0,
                  outputs: [...u, ...b],
                  version: 2,
                });
              if (!_.success)
                throw Error("Error building transaction with fee");
              const D = (0, c.xW)(_.transaction, N);
              if (!0 !== D && g > 0) throw D;
              return { transaction: _.transaction, sourceOutputs: N };
            }
            function m({
              inputs: e,
              compiler: t,
              signingKey: r,
              sourceAddress: i,
            }) {
              const n = [],
                o = [];
              for (const A of e) {
                const e = A.satoshis,
                  s = A.vout,
                  c = new Uint8Array(
                    A.txid.match(/.{1,2}/g).map((e) => parseInt(e, 16))
                  );
                if (!c || void 0 === s)
                  throw new Error(
                    "Missing unspent outpoint when building transaction"
                  );
                const l = A.token && {
                    amount: BigInt(A.token.amount),
                    category: (0, g.kW)(A.token.tokenId),
                    nft:
                      void 0 !== A.token.capability ||
                      void 0 !== A.token.commitment
                        ? {
                            capability: A.token.capability,
                            commitment:
                              void 0 !== A.token.commitment &&
                              (0, g.kW)(A.token.commitment),
                          }
                        : void 0,
                  },
                  u = {
                    outpointIndex: s,
                    outpointTransactionHash: c,
                    sequenceNumber: 0,
                    unlockingBytecode: {
                      compiler: t,
                      data: {
                        keys: {
                          privateKeys: {
                            key: r?.length ? r : Uint8Array.from(Array(32)),
                          },
                        },
                      },
                      valueSatoshis: BigInt(e),
                      script: "unlock",
                      token: l,
                    },
                  };
                n.push(u);
                const h = (0, a.nA)(i);
                if ("string" == typeof h) throw h;
                o.push({
                  outpointIndex: s,
                  outpointTransactionHash: c,
                  sequenceNumber: 0,
                  unlockingBytecode: Uint8Array.from([]),
                  lockingBytecode: h.bytecode,
                  valueSatoshis: BigInt(e),
                  token: l,
                });
              }
              return { preparedInputs: n, sourceOutputs: o };
            }
            async function Q(e) {
              const t = [];
              for (const r of e) {
                if (r instanceof p.n9) {
                  t.push(v(r));
                  continue;
                }
                if (r instanceof p.Rb) {
                  t.push({
                    lockingBytecode: r.buffer,
                    valueSatoshis: BigInt(0),
                  });
                  continue;
                }
                const e = (0, a.nA)(r.cashaddr);
                if ("string" == typeof e) throw new Error(e);
                const i = await (0, d.a)(r.value, r.unit);
                if (i % 1 != 0)
                  throw Error(
                    `Cannot send ${i} satoshis, (fractional sats do not exist, yet), please use an integer number.`
                  );
                const n = {
                  lockingBytecode: e.bytecode,
                  valueSatoshis: BigInt(i),
                };
                t.push(n);
              }
              return t;
            }
            function v(e) {
              const t = e,
                r = (0, a.nA)(e.cashaddr);
              if ("string" == typeof r) throw new Error(r);
              const i = {
                amount: BigInt(t.amount),
                category: (0, g.kW)(t.tokenId),
                nft:
                  void 0 !== t.capability || void 0 !== t.commitment
                    ? {
                        capability: t.capability,
                        commitment:
                          void 0 !== t.commitment && (0, g.kW)(t.commitment),
                      }
                    : void 0,
              };
              return {
                lockingBytecode: r.bytecode,
                valueSatoshis: BigInt(e.value || 1e3),
                token: i,
              };
            }
            async function S(e, t, r, i, n, o = [], A = "send") {
              const a = [...o];
              let s = BigInt(0);
              const c = n.filter((e) => e instanceof p.n9),
                g = e.slice();
              if ("send" === A)
                for (const e of c) {
                  const t = g.filter((t) => t.token?.tokenId === e.tokenId),
                    r = [...a, ...t].filter(
                      (t) =>
                        t.token?.capability === e.capability &&
                        t.token?.commitment === e.commitment
                    );
                  if (!r.length) {
                    if (
                      e.capability === u.h.minting ||
                      e.capability === u.h.mutable
                    ) {
                      const r = [...a, ...t].filter(
                        (t) => t.token?.capability === e.capability
                      );
                      if (r.length) {
                        const e = r[0],
                          t = g.indexOf(e);
                        -1 !== t &&
                          (a.push(e),
                          g.splice(t, 1),
                          (s += BigInt(e.satoshis)));
                        continue;
                      }
                    }
                    throw Error(
                      `No suitable token utxos available to send token with id "${e.tokenId}", capability "${e.capability}", commitment "${e.commitment}"`
                    );
                  }
                  {
                    const e = r[0],
                      t = g.indexOf(e);
                    -1 !== t &&
                      (a.push(e), g.splice(t, 1), (s += BigInt(e.satoshis)));
                  }
                }
              for (const e of g)
                if (
                  !e.token &&
                  (e.coinbase && e.height && r
                    ? r - e.height > 100 &&
                      (a.push(e), (s += BigInt(e.satoshis)))
                    : (a.push(e), (s += BigInt(e.satoshis))),
                  t && s > t)
                )
                  break;
              const l = (e) =>
                [...o, ...e].filter(
                  (e, t, r) =>
                    r.findIndex(
                      (t) => t.txid === e.txid && t.vout === e.vout
                    ) === t
                );
              if (i && i != B.F.change) return l(a);
              if (void 0 === t) return l(a);
              if (s < t) {
                const e = Error(
                  `Amount required was not met, ${t} satoshis needed, ${s} satoshis available`
                );
                throw ((e.data = { required: t, available: s }), e);
              }
              return l(a);
            }
            async function w({
              utxos: e,
              sendRequests: t,
              privateKey: r,
              sourceAddress: i,
              relayFeePerByteInSatoshi: n,
              slpOutputs: o,
              feePaidBy: A,
              discardChange: a,
            }) {
              if (e) {
                const { encodedTransaction: s } = await b({
                  inputs: e,
                  outputs: t,
                  signingKey: r,
                  sourceAddress: i,
                  fee: 0,
                  discardChange: a ?? !1,
                  slpOutputs: o,
                  feePaidBy: A,
                  changeAddress: "",
                });
                return s.length * n + 1;
              }
              throw Error(
                "The available inputs in the wallet cannot satisfy this send request"
              );
            }
            async function b({
              inputs: e,
              outputs: t,
              signingKey: r,
              sourceAddress: i,
              fee: n = 0,
              discardChange: o = !1,
              slpOutputs: A = [],
              feePaidBy: a = B.F.change,
              changeAddress: s = "",
              buildUnsigned: c = !1,
            }) {
              const { transaction: g, sourceOutputs: u } = await y({
                inputs: e,
                outputs: t,
                signingKey: r,
                sourceAddress: i,
                fee: n,
                discardChange: o,
                slpOutputs: A,
                feePaidBy: a,
                changeAddress: s,
              });
              return (
                !0 === c &&
                  g.inputs.forEach(
                    (e) => (e.unlockingBytecode = Uint8Array.from([]))
                  ),
                { encodedTransaction: (0, l.SC)(g), sourceOutputs: u }
              );
            }
            async function k(e, t, r) {
              "string" == typeof e && (e = (0, g.kW)(e));
              const i = (0, l.c8)(e);
              if ("string" == typeof i) throw i;
              const a = (0, n.d)(o.F);
              if ("string" == typeof a)
                throw new Error("Transaction template error");
              const c = (0, A.m6)(a),
                u = { ...i };
              for (const [e, n] of i.inputs.entries()) {
                const i = t[e];
                u.inputs[e] = {
                  ...n,
                  unlockingBytecode: {
                    compiler: c,
                    data: { keys: { privateKeys: { key: r } } },
                    valueSatoshis: i.valueSatoshis,
                    script: "unlock",
                    token: i.token,
                  },
                };
              }
              const h = (0, s.y4)(u);
              if (!h.success) throw h.errors;
              return (0, l.SC)(h.transaction);
            }
            ([A, f, h, a, s, c, p, d, l] = E.then ? (await E)() : E), i();
          } catch (N) {
            i(N);
          }
        });
      },
      48682: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { L$: () => d });
            var n = r(34167),
              o = r(85858),
              A = r(20200),
              a = e([n]);
            function s(e) {
              if (e < A.DUST_UTXO_THRESHOLD)
                throw Error("Fee strategy would result in dust output");
            }
            function c(e, t) {
              if (
                e.reduce(function (e, t) {
                  return e + (t.value - A.DUST_UTXO_THRESHOLD);
                }, 0) < t
              )
                throw Error("Insufficient funds for transaction given fee");
            }
            function g(e) {
              if (e instanceof n.n9)
                throw Error(
                  "Cannot specify fee to be paid by TokenSendRequest"
                );
              if (e instanceof n.Rb)
                throw Error("Cannot specify fee to be paid by OpReturnData");
              return e;
            }
            function l(e, t) {
              c(e, t), (t = Number(t));
              for (let r = 0; r < e.length; r++)
                if (t > 0) {
                  g(e[r]);
                  let i = Math.floor(t / (e.length - r));
                  (i += t % (e.length - r)),
                    e[r].value - i < A.DUST_UTXO_THRESHOLD
                      ? ((t -= e[r].value), (e[r].value = 0))
                      : ((t -= i), (e[r].value -= i));
                }
              return e.filter((e) => e.value >= A.DUST_UTXO_THRESHOLD);
            }
            function u(e, t) {
              let r = e.shift();
              return (
                (r = g(r)), (r.value = r.value - t), s(r.value), e.unshift(r), e
              );
            }
            function h(e, t) {
              let r = e.pop();
              return (
                (r = g(r)), (r.value = r.value - t), s(r.value), e.push(r), e
              );
            }
            function I(e, t) {
              for (let t of e) g(t);
              return l((e = e.sort((e, t) => e.value - t.value)), t);
            }
            function p(e, t, r, i) {
              return BigInt(t) > r && (e = i(e, BigInt(t) - r)), e;
            }
            function d(e, t, r, i) {
              if (e.length > 0) {
                switch (r) {
                  case o.F.change:
                    break;
                  case o.F.changeThenFirst:
                    e = p(e, t, i, u);
                    break;
                  case o.F.changeThenLast:
                    e = p(e, t, i, h);
                    break;
                  case o.F.changeThenAny:
                    e = p(e, t, i, I);
                    break;
                  case o.F.first:
                    e = u(e, t);
                    break;
                  case o.F.last:
                    e = h(e, t);
                    break;
                  case o.F.any:
                    e = I(e, t);
                    break;
                  default:
                    throw Error("FeePaidBy option not recognized");
                }
                return e;
              }
              throw Error(
                "Attempted to specify feePaidBy on zero length SendRequest"
              );
            }
            (n = (a.then ? (await a)() : a)[0]), i();
          } catch (f) {
            i(f);
          }
        });
      },
      10149: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { a: () => c });
            var n = r(98650),
              o = r(46634),
              A = r(3473),
              a = r(59490),
              s = e([o]);
            async function c(e, t) {
              switch ((0, a.O)(t)) {
                case o.ZX.BCH:
                  return Math.round(e * n.U.subUnits);
                case o.ZX.SATOSHI:
                case o.ZX.SAT:
                case o.ZX.SATS:
                case o.ZX.SATOSHIS:
                  return e;
                case o.ZX.USD:
                  let t = await A.Iw.get("usd"),
                    r = n.U.subUnits;
                  return Math.round(Number(e * (r / t)));
                default:
                  throw Error("Unit of value not defined");
              }
            }
            (o = (s.then ? (await s)() : s)[0]), i();
          } catch (g) {
            i(g);
          }
        });
      },
      88594: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { U: () => s });
            var n = r(66998),
              o = r(34167),
              A = r(48834).Buffer,
              a = e([o]);
            function s(e) {
              let t = [];
              return (
                Array.isArray(e)
                  ? e.forEach((e) => {
                      Array.isArray(e)
                        ? "OP_RETURN" === e[0]
                          ? t.push(o.Rb.from(e[1]))
                          : "OP_RETURNB64" === e[0]
                          ? t.push(o.Rb.fromBuffer(A.from((0, n.VB)(e[1]))))
                          : t.push(
                              new o.Lt({
                                cashaddr: e[0],
                                value: e[1],
                                unit: e[2],
                              })
                            )
                        : t.push(c(e));
                    })
                  : t.push(c(e)),
                t
              );
            }
            function c(e) {
              if (e.hasOwnProperty("unit")) return new o.Lt(e);
              if (e.hasOwnProperty("tokenId")) return new o.n9(e);
              if (e.hasOwnProperty("buffer")) return o.Rb.fromBuffer(e.buffer);
              if (e.hasOwnProperty("dataString"))
                return o.Rb.fromString(e.dataString);
              if (e.hasOwnProperty("dataBuffer"))
                return o.Rb.fromBuffer(A.from((0, n.VB)(e.dataBuffer)));
              throw new Error("Unsupported send object");
            }
            (o = (a.then ? (await a)() : a)[0]), i();
          } catch (g) {
            i(g);
          }
        });
      },
      59059: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { $e: () => u, Wk: () => l, dO: () => g });
            var n = r(98650),
              o = r(46634),
              A = r(22545),
              a = r(3473),
              s = r(59490),
              c = e([o]);
            o = (c.then ? (await c)() : c)[0];
            class g {
              constructor(e, t, r) {
                (this.bch = e), (this.sat = t), (this.usd = r);
              }
            }
            async function l(e, t = !0) {
              let r = new g(),
                i = ["bch", "sat", "usd"];
              for (const s of i)
                switch (s) {
                  case o.ZX.BCH:
                    r.bch = e / n.U.subUnits;
                    break;
                  case o.ZX.SAT:
                    r.sat = e;
                    break;
                  case o.ZX.USD:
                    let i = (e / n.U.subUnits) * (await a.Iw.get("usd", t));
                    r.usd = (0, A.G)(i, 2);
                    break;
                  default:
                    throw Error(
                      `Balance response type ${JSON.stringify(
                        s
                      )} not understood`
                    );
                }
              return r;
            }
            async function u(e, t, r = !0) {
              const i = (0, s.O)(t);
              switch (i) {
                case o.ZX.BCH:
                  return e / n.U.subUnits;
                case o.ZX.SAT:
                case o.ZX.SATS:
                case o.ZX.SATOSHI:
                case o.ZX.SATOSHIS:
                  return e;
                case o.ZX.USD:
                  let t = (e / n.U.subUnits) * (await a.Iw.get("usd", r));
                  return Number(t.toFixed(2));
                default:
                  throw Error(
                    `Balance response type ${JSON.stringify(i)} not understood`
                  );
              }
            }
            i();
          } catch (h) {
            i(h);
          }
        });
      },
      12795: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { r: () => o, t: () => A });
            var n = r(66998);
            function o(e) {
              return (0, n.yM)(new TextEncoder().encode(e));
            }
            function A(e) {
              if (!(0, n.Zp)(e))
                throw new Error("Provided data is not a valid base64");
              return String.fromCharCode(...(0, n.VB)(e));
            }
            i();
          } catch (a) {
            i(a);
          }
        });
      },
      30865: (e, t, r) => {
        "use strict";
        r.d(t, {
          At: () => i.isValidAddress,
          F5: () => i.isSlpAddress,
          S1: () => i.isCashAddress,
          bY: () => i.toSlpAddress,
          uP: () => i.toCashAddress,
        });
        var i = r(68700);
      },
      26463: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { d: () => o });
            var n = r(34684);
            function o(e) {
              let t = new Uint8Array(e.buffer);
              if (
                "4ed8d4b17698ddeaa1f1559f152f87b5d472f725ca86d341bd0276f1b61197e21dd5a391f9f5ed7340ff4d4513aab9cce44f9497a5e7ed85fd818876b6eb402e" ==
                (0, n.UM)(t)
              )
                throw Error("Seed was generated using empty mnemonic");
            }
            i();
          } catch (A) {
            i(A);
          }
        });
      },
      65937: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { u: () => A });
            var n = r(46634),
              o = e([n]);
            function A(e, t) {
              if ("L" !== e[0] && "K" !== e[0] && t === n.td.Mainnet)
                throw Error(
                  `Mainnet type wif ${e} passed, should start with L or K`
                );
              if ("c" !== e[0] && t === n.td.Testnet)
                throw Error(
                  `Testnet type wif ${e} passed, should start with c`
                );
            }
            (n = (o.then ? (await o)() : o)[0]), i();
          } catch (a) {
            i(a);
          }
        });
      },
      1546: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { O: () => a, d: () => s });
            var n = r(10149),
              o = r(4780),
              A = e([n, o]);
            async function a(e, t, r) {
              let i = await (0, n.a)(e, t);
              return (0, o.b)(i, r);
            }
            async function s({ value: e, from: t, to: r }) {
              return await a(e, t, r);
            }
            ([n, o] = A.then ? (await A)() : A), i();
          } catch (c) {
            i(c);
          }
        });
      },
      26131: (e, t, r) => {
        "use strict";
        function i(e) {
          return new Promise((t) => setTimeout(t, e));
        }
        r.d(t, { g: () => i });
      },
      63862: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              Fl: () => u,
              Gf: () => l,
              H$: () => c,
              US: () => g,
              fl: () => h,
              hJ: () => s,
            });
            var n = r(12909),
              o = r(5102),
              A = r(86707),
              a = e([n, A]);
            function s(e, t) {
              let r = n.kA.derivePublicKeyCompressed(e);
              if ("string" == typeof r) throw new Error(r);
              let i = (0, A.M)(r);
              return (0, o.Hh)(t, o.Jl.p2pkh, i);
            }
            function c(e, t) {
              let r;
              if (32 === e.length) {
                let t = n.kA.derivePublicKeyCompressed(e);
                if ("string" == typeof t) throw new Error(t);
                r = (0, A.M)(t);
              } else if (65 === e.length) {
                let t = n.kA.compressPublicKey(e);
                if ("string" == typeof t) throw new Error(t);
                r = (0, A.M)(t);
              } else if (33 === e.length) r = (0, A.M)(e);
              else {
                if (20 !== e.length) throw new Error("Unsupported type of key");
                r = e;
              }
              return (0, o.Hh)(t, o.Jl.p2pkhWithTokens, r);
            }
            function g(e) {
              let t;
              if (
                ((t = e.includes(":") ? (0, o.ef)(e) : (0, o.Jy)(e)),
                "string" == typeof t)
              )
                throw new Error(t);
              return (0, o.Hh)(t.prefix, o.Jl.p2pkh, t.payload);
            }
            function l(e) {
              let t;
              if (
                ((t = e.includes(":") ? (0, o.ef)(e) : (0, o.Jy)(e)),
                "string" == typeof t)
              )
                throw new Error(t);
              return (0, o.Hh)(t.prefix, o.Jl.p2pkhWithTokens, t.payload);
            }
            function u(e) {
              let t;
              if (
                ((t = e.includes(":") ? (0, o.ef)(e) : (0, o.Jy)(e)),
                "string" == typeof t)
              )
                throw new Error(t);
              const r = (0, o.pl)(t.version);
              if ("string" == typeof r) throw new Error(r);
              const i = o.cr[r.typeBits];
              if (void 0 === i) throw Error("Wrong cashaddress type");
              return (
                -1 !== [o.Jl.p2pkhWithTokens, o.Jl.p2shWithTokens].indexOf(i)
              );
            }
            function h(e, t) {
              if (t && !u(e))
                throw new Error(
                  "Error trying to send to a non-tokenaware cash address"
                );
            }
            ([n, A] = a.then ? (await a)() : a), i();
          } catch (I) {
            i(I);
          }
        });
      },
      65715: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { m: () => a });
            var n = r(93321),
              o = r(46634),
              A = e([o, n]);
            function a(e) {
              let t = e.map((e) => o.f8[(0, n.G)(e)]),
                r = new Set(t);
              if (r.size > 1)
                throw Error("Contract addresses are not on the same network");
              if (0 === r.size) throw Error("No address network was derived");
              return r.values().next().value;
            }
            ([o, n] = A.then ? (await A)() : A), i();
          } catch (s) {
            i(s);
          }
        });
      },
      93321: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { E: () => o, G: () => A });
            var n = r(5102);
            function o(e) {
              let t;
              if (
                ((t = e.includes(":") ? (0, n.ef)(e) : (0, n.Jy)(e)),
                "string" == typeof t)
              )
                throw new Error(t);
              return t.payload;
            }
            function A(e) {
              let t;
              if (
                ((t = e.includes(":") ? (0, n.ef)(e) : (0, n.Jy)(e)),
                "string" == typeof t)
              )
                throw new Error(t);
              return t.prefix;
            }
            i();
          } catch (a) {
            i(a);
          }
        });
      },
      48640: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => A });
        var i = r(62853),
          n = r(63181);
        let o;
        o = "node" != (0, i.B)() ? globalThis.EventSource : n;
        const A = o;
      },
      22545: (e, t, r) => {
        "use strict";
        function i(e, t) {
          var r = Math.pow(10, t || 0);
          return Math.floor(e * r) / r;
        }
        r.d(t, { G: () => i });
      },
      25599: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Br: () => h, uC: () => u, ux: () => g, yd: () => c });
            var n = r(59431),
              o = r(5102),
              A = r(34684),
              a = r(86707),
              s = e([n, a]);
            function c(e, t, r) {
              let i,
                n = t.split("/"),
                o = n.shift();
              ("M" !== o && "m" !== o) || (o = n.shift()), (i = parseInt(o));
              let A = [];
              const a = parseInt(n.pop()),
                s = a + r;
              for (let t = a; t < s; t++) {
                let r = ["M", i, ...n, t].join("/");
                A.push(l(e, i, r));
              }
              return A;
            }
            function g(e) {
              return c(e.xpubkey, e.path, e.count);
            }
            function l(e, t, r) {
              const i = (0, n.$I)(e);
              if ("string" == typeof i) throw new Error(i);
              let A,
                s = "mainnet" === i.network ? "bitcoincash" : "bchtest",
                c = (0, n.dD)(i.node, t);
              if ("string" == typeof c) throw new Error(c);
              if ("string" == typeof r) {
                if ("M" !== r[0])
                  throw Error("use M for public path derivation");
                let e = (0, n.Ai)(i.node, r);
                if ("string" == typeof e) throw new Error(e);
                {
                  let t = (0, a.M)(e.publicKey);
                  A = (0, o.Hh)(s, o.Jl.p2pkh, t);
                }
              }
              return A;
            }
            function u(e) {
              let t = (0, n.$I)(e);
              if ("string" == typeof t) throw new Error(t);
              return {
                version: t.network,
                depth: t.node.depth,
                parentFingerprint: (0, A.UM)(t.node.parentFingerprint),
                childNumber: t.node.childIndex,
                chain: (0, A.UM)(t.node.chainCode),
                data: (0, A.UM)(t.node.publicKey),
                fingerprint: (0, A.UM)((0, a.M)(t.node.publicKey).slice(0, 4)),
              };
            }
            async function h(e) {
              return u(e.xpubkey);
            }
            ([n, a] = s.then ? (await s)() : s), i();
          } catch (I) {
            i(I);
          }
        });
      },
      62853: (e, t, r) => {
        "use strict";
        var i;
        function n() {
          if (
            "undefined" == typeof global ||
            ("[object global]" !== toString.call(global) &&
              "[object Object]" !== toString.call(global))
          ) {
            if (
              "undefined" != typeof navigator &&
              "undefined" != typeof document
            )
              return i.browser;
            throw Error("Could not determine runtime platform");
          }
          return i.node;
        }
        r.d(t, { B: () => n, b: () => i }),
          (function (e) {
            (e.node = "node"),
              (e.browser = "browser"),
              (e.webworker = "webworker");
          })(i || (i = {}));
      },
      34843: (e, t, r) => {
        "use strict";
        r.d(t, { U: () => n });
        var i = r(3473);
        function n() {
          return i.Iw.get("usd");
        }
      },
      94052: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { h: () => a });
            var n = r(34684),
              o = r(59431),
              A = e([o]);
            function a(e, t, r) {
              "string" == typeof e && (e = (0, n.kW)(e));
              let i = (0, o.hC)(e);
              if (!i.valid)
                throw Error("Invalid private key derived from mnemonic seed");
              let A = (0, o.Ai)(i, t);
              if ("string" == typeof A) throw A;
              let a = (0, o.od)(A);
              return (0, o.Q$)({ network: r, node: a });
            }
            (o = (A.then ? (await A)() : A)[0]), i();
          } catch (s) {
            i(s);
          }
        });
      },
      86707: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { M: () => A });
            var n = r(12909),
              o = e([n]);
            function A(e) {
              return n.bP.hash(n.JQ.hash(e));
            }
            (n = (o.then ? (await o)() : o)[0]), i();
          } catch (a) {
            i(a);
          }
        });
      },
      19149: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.r(t),
              r.d(t, {
                BalanceResponse: () => b.dO,
                ExchangeRate: () => E.Iw,
                RuntimePlatform: () => f.b,
                amountInSatoshi: () => n.a,
                asSendRequestObject: () => o.U,
                atob: () => A.t,
                balanceFromSatoshi: () => b.$e,
                balanceResponseFromSatoshi: () => b.Wk,
                binToBase64: () => c.yM,
                binToHex: () => a.UM,
                btoa: () => A.r,
                checkTokenaddr: () => p.fl,
                convert: () => l.O,
                convertObject: () => l.d,
                delay: () => u.g,
                deriveCashaddr: () => p.hJ,
                derivePublicKeyHash: () => I.E,
                deriveTokenaddr: () => p.H$,
                derivedNetwork: () => h.m,
                getAddrsByXpubKey: () => d.yd,
                getAddrsByXpubKeyObject: () => d.ux,
                getRandomInt: () => Q.X,
                getRuntimePlatform: () => f.B,
                getUsdRate: () => C.U,
                getXPubKey: () => v.h,
                getXpubKeyInfo: () => d.uC,
                getXpubKeyInfoObject: () => d.Br,
                hash160: () => B.M,
                hexToBin: () => a.kW,
                isTokenaddr: () => p.Fl,
                randomValues: () => S,
                sanitizeAddress: () => y.Y,
                sanitizeUnit: () => m.O,
                sha256: () => g.JQ,
                sumUtxoValue: () => w.O,
                toCashaddr: () => p.US,
                toTokenaddr: () => p.Gf,
                utf8ToBin: () => s.L,
              });
            var n = r(10149),
              o = r(88594),
              A = r(12795),
              a = r(34684),
              s = r(43137),
              c = r(66998),
              g = r(12909),
              l = r(1546),
              u = r(26131),
              h = r(65715),
              I = r(93321),
              p = r(63862),
              d = r(25599),
              f = r(62853),
              C = r(34843),
              B = r(86707),
              E = r(3473),
              y = r(12676),
              m = r(59490),
              Q = r(93074),
              v = r(94052),
              S = r(22162),
              w = r(56724),
              b = r(59059),
              k = e([n, o, A, g, l, h, I, p, d, B, y, v, b]);
            ([n, o, A, g, l, h, I, p, d, B, y, v, b] = k.then
              ? (await k)()
              : k),
              i();
          } catch (e) {
            i(e);
          }
        });
      },
      35702: (e, t, r) => {
        "use strict";
        r.d(t, { U: () => o });
        var i = r(62853),
          n = r(36667);
        function o(e = 32) {
          return "node" === (0, i.B)()
            ? n.randomBytes(e)
            : window.crypto.getRandomValues(new Uint8Array(e));
        }
      },
      93074: (e, t, r) => {
        "use strict";
        function i(e) {
          return Math.floor(Math.random() * Math.floor(e));
        }
        r.d(t, { X: () => i });
      },
      22162: (e, t, r) => {
        "use strict";
        r.r(t);
        var i = r(62853),
          n = r(36667);
        "node" === (0, i.B)() &&
          ((globalThis.crypto && globalThis.crypto.getRandomValues) ||
            (globalThis.crypto = n));
      },
      12676: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { Y: () => A });
            var n = r(93321),
              o = e([n]);
            function A(e) {
              return e.includes(":") ? e : `${(0, n.G)(e)}:${e}`;
            }
            (n = (o.then ? (await o)() : o)[0]), i();
          } catch (a) {
            i(a);
          }
        });
      },
      59490: (e, t, r) => {
        "use strict";
        function i(e) {
          if (e) return e.toLocaleLowerCase();
          throw Error(
            "Attempted to sanitize a unit of value, but the unit was undefined."
          );
        }
        r.d(t, { O: () => i });
      },
      4780: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { b: () => c });
            var n = r(98650),
              o = r(46634),
              A = r(3473),
              a = r(59490),
              s = e([o]);
            async function c(e, t) {
              switch ((0, a.O)(t)) {
                case o.ZX.BCH:
                  return e / n.U.subUnits;
                case o.ZX.SATOSHI:
                case o.ZX.SAT:
                case o.ZX.SATS:
                case o.ZX.SATOSHIS:
                  return e;
                case o.ZX.USD:
                  let t = await A.Iw.get("usd"),
                    r = n.U.subUnits,
                    i = Number(e * (t / r)).toFixed(2);
                  return Number.parseFloat(i);
                default:
                  throw Error("Unit of value not defined");
              }
            }
            (o = (s.then ? (await s)() : s)[0]), i();
          } catch (g) {
            i(g);
          }
        });
      },
      25540: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { m: () => a });
            var n = r(34167),
              o = r(10149),
              A = e([n, o]);
            async function a(e) {
              return e
                ? (
                    await Promise.all(
                      e.map(async (e) =>
                        e instanceof n.Lt
                          ? BigInt(await (0, o.a)(e.value, e.unit))
                          : e instanceof n.n9
                          ? BigInt(e.value || 1e3)
                          : BigInt(0)
                      )
                    )
                  ).reduce(s, BigInt(0))
                : BigInt(0);
            }
            function s(e, t) {
              if (t instanceof Error) throw t;
              return BigInt(e) + BigInt(t);
            }
            ([n, o] = A.then ? (await A)() : A), i();
          } catch (c) {
            i(c);
          }
        });
      },
      56724: (e, t, r) => {
        "use strict";
        function i(e) {
          return e.length > 0
            ? e.map((e) => e.satoshis).reduce((e, t) => e + t, 0)
            : 0;
        }
        function n(e, t) {
          return e.length > 0
            ? e
                .filter((e) => e.token?.tokenId === t)
                .map((e) => e.token?.amount || 0)
                .reduce((e, t) => e + t, 0)
            : 0;
        }
        r.d(t, { G: () => n, O: () => i });
      },
      1345: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { $: () => a });
            var n = r(34684),
              o = r(12909),
              A = e([o]);
            async function a(e) {
              const t = (0, n.kW)(e);
              return (0, n.UM)(o.JQ.hash(o.JQ.hash(t)).reverse());
            }
            (o = (A.then ? (await A)() : A)[0]), i();
          } catch (s) {
            i(s);
          }
        });
      },
      8153: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { c: () => g, h: () => u });
            var n = r(11761),
              o = r(46634),
              A = r(62853),
              a = r(45230),
              s = r(85858),
              c = e([o, a]);
            [o, a] = c.then ? (await c)() : c;
            class g {
              constructor(e = "", t = o.td.Mainnet, r = s.K.Seed) {
                (this.derivationPath = "m/44'/0'/0'/0/0"),
                  (this.parentDerivationPath = "m/44'/0'/0'"),
                  (this.name = e),
                  (this.network = t),
                  (this.walletType = r),
                  (this.provider = this.getNetworkProvider(this.network)),
                  (this.isTestnet = this.network !== o.td.Mainnet);
              }
              getNetworkProvider(e = o.td.Mainnet) {
                throw Error("getNetworkProvider called on base wallet");
              }
              getDepositAddress() {
                return this.address;
              }
              getDepositQr() {
                return (0, a.t)(this.getDepositAddress());
              }
              getSeed() {
                if (!this.mnemonic)
                  throw Error("Wallet mnemonic seed phrase not set");
                if (!this.derivationPath)
                  throw Error("Wallet derivation path not set");
                return {
                  seed: this.mnemonic,
                  derivationPath: this.derivationPath,
                  parentDerivationPath: this.parentDerivationPath,
                };
              }
              static async fromId(e) {
                return new this().fromId(e);
              }
              static async fromSeed(e, t) {
                return new this().fromSeed(e, t);
              }
              static async newRandom(e = "", t) {
                return new this().newRandom(e, t);
              }
              static async watchOnly(e) {
                return new this().watchOnly(e);
              }
              static async named(e, t, r) {
                return new this().named(e, t, r);
              }
              static async replaceNamed(e, t, r) {
                return new this().replaceNamed(e, t, r);
              }
              static async namedExists(e, t) {
                return new this().namedExists(e, t);
              }
              generate() {
                throw Error("generate called on base wallet");
              }
              fromId(e) {
                let [t, r, i, n] = e.split(":");
                if (this.network != r)
                  throw Error(
                    `Network prefix ${r} to a ${this.network} wallet`
                  );
                switch (t) {
                  case "watch":
                    return n
                      ? this.watchOnly(`${i}:${n}`)
                      : this.watchOnly(`${i}`);
                  case "named":
                    return n ? this.named(i, n) : this.named(i);
                  case "seed":
                    return n ? this.fromSeed(i, n) : this.fromSeed(i);
                  default:
                    throw Error(`Unknown wallet type '${t}'`);
                }
              }
              async fromSeed(e, t) {
                throw Error("fromSeed called on base wallet");
              }
              async newRandom(e, t) {
                return e.length > 0 ? this.named(e, t) : this.generate();
              }
              async watchOnly(e) {
                throw Error("fromSeed called on base wallet");
              }
              async named(e, t, r = !1) {
                if (0 === e.length)
                  throw Error("Named wallets must have a non-empty name");
                l(this), (this.name = e), (t = t || this.network);
                let i = (0, n.m)(t);
                if (i) {
                  await i.init();
                  let n = await i.getWallet(e);
                  if (n) {
                    if ((await i.close(), r))
                      throw Error(
                        `A wallet with the name ${e} already exists in ${t}`
                      );
                    let o = await this.fromId(n.wallet);
                    return (o.name = n.name), o;
                  }
                  {
                    let e = await this.generate();
                    return (
                      await i.addWallet(e.name, e.toDbString()),
                      await i.close(),
                      e
                    );
                  }
                }
                throw Error(
                  "No database was available or configured to store the named wallet."
                );
              }
              async replaceNamed(e, t, r) {
                if (0 === e.length)
                  throw Error("Named wallets must have a non-empty name");
                l(this), (this.name = e), (r = r || this.network);
                let i = (0, n.m)(r);
                if (i) {
                  await i.init();
                  let r = await i.getWallet(e);
                  return (
                    await this.fromId(t),
                    r ? await i.updateWallet(e, t) : await i.addWallet(e, t),
                    await i.close(),
                    this
                  );
                }
                throw Error(
                  "No database was available or configured to store the named wallet."
                );
              }
              async namedExists(e, t) {
                if (0 === e.length)
                  throw Error("Named wallets must have a non-empty name");
                l(this), (t = t || this.network);
                let r = (0, n.m)(t);
                if (r) {
                  await r.init();
                  let t = await r.getWallet(e);
                  return await r.close(), void 0 !== t;
                }
                throw Error(
                  "No database was available or configured to store the named wallet."
                );
              }
              toDbString() {
                return this.walletType == s.K.Seed
                  ? `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`
                  : this.walletType == s.K.Watch
                  ? `${this.walletType}:${
                      this.network
                    }:${this.getDepositAddress()}`
                  : "";
              }
              toString() {
                return this.name
                  ? `named:${this.network}:${this.name}`
                  : this.walletType == s.K.Seed
                  ? `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`
                  : this.walletType == s.K.Watch
                  ? `${this.walletType}:${
                      this.network
                    }:${this.getDepositAddress()}`
                  : "";
              }
              async getBalance(e) {
                throw Error("sendMax called on base wallet");
              }
              async getMaxAmountToSend(e) {
                throw Error("getMaxAmountToSend called on base wallet");
              }
              async send(e, t) {
                throw Error("send called on base wallet");
              }
              async sendMax(e, t) {
                throw Error("sendMax called on base wallet");
              }
            }
            const l = function (e) {
              if (
                "node" === (0, A.B)() &&
                "false" === process.env.ALLOW_MAINNET_USER_WALLETS &&
                e.network === o.td.Mainnet
              )
                throw Error(
                  'Refusing to save wallet in an open public database, remove ALLOW_MAINNET_USER_WALLETS="false", if this service is secure and private'
                );
            };
            async function u(e, t) {
              if (0 === e.length)
                throw Error("Named wallets must have a non-empty name");
              t = t || t;
              let r = (0, n.m)(t);
              if (r) {
                await r.init();
                let i = await r.getWallet(e);
                if ((await r.close(), void 0 !== i)) return i.wallet;
                throw Error(`No record was found for ${e} in db: ${t}`);
              }
              throw Error(
                "No database was available or configured to store the named wallet."
              );
            }
            i();
          } catch (h) {
            i(h);
          }
        });
      },
      77657: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, { H: () => h });
            var n = r(34684),
              o = r(12909),
              A = r(43137),
              a = r(78997),
              s = r(30861),
              c = r(89644),
              g = r(89341),
              l = r(64822),
              u = e([o, l, s]);
            [o, l, s] = u.then ? (await u)() : u;
            class h {
              static getRegistries() {
                return this.metadataRegistries;
              }
              static resetRegistries() {
                this.metadataRegistries = [];
              }
              static async fetchMetadataRegistry(e, t) {
                if ((e.indexOf("https://") < 0 && (e = `https://${e}`), t)) {
                  const r = await c.get(e, {
                      responseType: "text",
                      transformResponse: (e) => e,
                    }),
                    i = (0, n.UM)(o.JQ.hash((0, A.L)(r.data)));
                  if (t != i)
                    throw new Error(
                      `Content hash mismatch for URI: ${e}\nreceived: ${i}\nrequired: ${t}`
                    );
                  return JSON.parse(r.data);
                }
                return (await c.get(e)).data;
              }
              static addMetadataRegistry(e) {
                this.metadataRegistries.some(
                  (t) => JSON.stringify(t) === JSON.stringify(e)
                ) || this.metadataRegistries.push(e);
              }
              static async addMetadataRegistryFromUri(e, t) {
                const r = await this.fetchMetadataRegistry(e, t);
                this.addMetadataRegistry(r);
              }
              static async buildAuthChain(e) {
                void 0 === e.network && (e.network = g.Z.MAINNET),
                  void 0 === e.followToHead && (e.followToHead = !0),
                  void 0 === e.resolveBase && (e.resolveBase = !1);
                const t = await (0, l.$B)(e.network);
                void 0 === e.rawTx &&
                  (e.rawTx = await t.getRawTransactionObject(
                    e.transactionHash
                  ));
                const r = async () => {
                    const r =
                        e.historyCache ||
                        (await t.getHistory(
                          e.rawTx.vout[0].scriptPubKey.addresses[0]
                        )),
                      i = r.find((t) => t.tx_hash === e.transactionHash);
                    let n = r.filter((e) =>
                      e.height > 0
                        ? e.height >= i.height || e.height <= 0
                        : e.height <= 0 && e.tx_hash !== i.tx_hash
                    );
                    for (const r of n) {
                      const i = await t.getRawTransactionObject(r.tx_hash);
                      if (
                        i.vin.find(
                          (t) => t.txid === e.transactionHash && 0 === t.vout
                        )
                      )
                        return {
                          rawTx: i,
                          historyCache:
                            e.rawTx.vout[0].scriptPubKey.addresses[0] ===
                            i.vout[0].scriptPubKey.addresses[0]
                              ? n
                              : void 0,
                        };
                    }
                  },
                  i = (e, t) => {
                    let r,
                      i = !1;
                    if (e.hasOwnProperty("vout")) {
                      const t = e;
                      (r = t.vout
                        .filter((e) => "nulldata" === e.scriptPubKey.type)
                        .map((e) => e.scriptPubKey.hex)),
                        (i = t.vin.some((e) => 0 === e.vout));
                    } else {
                      const t = e;
                      (r = t.outputs
                        .map((e) => (0, n.UM)(e.lockingBytecode))
                        .filter((e) => 0 === e.indexOf("6a"))),
                        (i = t.inputs.some((e) => 0 === e.outpointIndex));
                    }
                    if (!i)
                      throw new Error(
                        "Invalid authchain transaction (does not spend 0th output of previous transaction)"
                      );
                    if (
                      0 ===
                      r.filter(
                        (e) =>
                          0 === e.indexOf("6a0442434d52") ||
                          0 === e.indexOf("6a4c0442434d52") ||
                          0 === e.indexOf("6a4d040042434d52") ||
                          0 === e.indexOf("6a4e0400000042434d52")
                      ).length
                    )
                      return { txHash: t, contentHash: "", uri: "" };
                    const o = r[0],
                      s = (0, n.kW)(o),
                      c = [];
                    let g = 1;
                    for (; s[g]; ) {
                      let e = 0;
                      76 === s[g]
                        ? ((e = s[g + 1]), (g += 2))
                        : 77 === s[g]
                        ? ((e = (0, a.ED)(s.slice(g + 1, g + 3))), (g += 3))
                        : ((e = s[g]), (g += 1)),
                        c.push(s.slice(g, g + e)),
                        (g += e);
                    }
                    if (c.length < 2 || c.length > 3)
                      throw new Error(`Malformed BCMR output: ${o}`);
                    const l = { txHash: t, contentHash: "", uri: "" };
                    if (2 === c.length) {
                      l.contentHash = (0, n.UM)(c[1]);
                      const e = (0, A.x)(c[1]);
                      l.uri = `https://dweb.link/ipfs/${e}`;
                    } else
                      (l.contentHash = (0, n.UM)(c[1].slice().reverse())),
                        (l.uri = (0, A.x)(c[2])),
                        l.uri.indexOf("https://") < 0 &&
                          (l.uri = `https://${l.uri}`);
                    return l;
                  };
                let c;
                try {
                  c = i(e.rawTx, e.rawTx.hash);
                } catch (t) {
                  const i = await r();
                  if (i)
                    return await h.buildAuthChain({
                      ...e,
                      transactionHash: i.rawTx.hash,
                      rawTx: i.rawTx,
                      historyCache: i.historyCache,
                    });
                  throw t;
                }
                let u = [];
                if (e.resolveBase) {
                  const r = await this.fetchMetadataRegistry(
                    c.uri,
                    c.contentHash
                  );
                  if (
                    r.extensions &&
                    r.extensions.authchain &&
                    Object.keys(r.extensions.authchain).length
                  )
                    u = Object.values(r.extensions.authchain)
                      .map((e) => {
                        const t = (0, n.kW)(e),
                          r = (0, s.c8)(t);
                        if ("string" == typeof r)
                          throw new Error(
                            `Error decoding transaction ${JSON.stringify(
                              e
                            )}, ${r}`
                          );
                        return {
                          decoded: r,
                          hash: (0, n.UM)(o.JQ.hash(o.JQ.hash(t)).reverse()),
                        };
                      })
                      .map(({ decoded: e, hash: t }) => i(e, t));
                  else {
                    let r = !1,
                      n = { ...e.rawTx },
                      o = 10;
                    for (; 0 == r || 0 === o; ) {
                      const e = n.vin.find((e) => 0 === e.vout);
                      n = await t.getRawTransactionObject(e.txid);
                      try {
                        const e = i(n, n.hash);
                        u.unshift(e), o--;
                      } catch {
                        r = !0;
                      }
                    }
                  }
                }
                if (e.followToHead) {
                  const t = await r();
                  if (t) {
                    const r = await h.buildAuthChain({
                      transactionHash: t.rawTx.hash,
                      network: e.network,
                      rawTx: t.rawTx,
                      historyCache: t.historyCache,
                      followToHead: e.followToHead,
                      resolveBase: !1,
                    });
                    return [...u, c, ...r].filter((e) => e.uri.length);
                  }
                }
                return [...u, c].filter((e) => e.uri.length);
              }
              static async addMetadataRegistryAuthChain(e) {
                const t = await this.buildAuthChain({ ...e, resolveBase: !1 });
                if (!t.length)
                  throw new Error(
                    `There were no BCMR entries in the resolved authchain ${JSON.stringify(
                      t,
                      null,
                      2
                    )}`
                  );
                const r = await this.fetchMetadataRegistry(t.reverse()[0].uri);
                return this.addMetadataRegistry(r), t;
              }
              static getTokenInfo(e) {
                for (const t of this.metadataRegistries.slice().reverse()) {
                  const r = t.identities?.[e];
                  if (!r) continue;
                  const i = Object.keys(r)[0];
                  if (void 0 !== i) return r[i];
                }
              }
            }
            (h.metadataRegistries = []), i();
          } catch (e) {
            i(e);
          }
        });
      },
      8060: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              AG: () => y,
              GS: () => w,
              Hs: () => m,
              QL: () => k,
              U8: () => v,
              Wo: () => b,
              qQ: () => S,
              rT: () => Q,
              uU: () => E,
            });
            var n = r(46827),
              o = r(34782),
              A = r(12561),
              a = r(45230),
              s = r(6391),
              c = r(37051),
              g = r(1318),
              l = r(97534),
              u = r(34684),
              h = r(68700),
              I = r(82366),
              p = r(26131),
              d = r(31699),
              f = r(85858),
              C = r(62853),
              B = e([I, A, n, a, l, g, d]);
            [I, A, n, a, l, g, d] = B.then ? (await B)() : B;
            class E {
              constructor(e) {
                (this.spentParentUtxos = []),
                  (this.slpaddr = (0, h.toSlpAddress)(e.cashaddr)),
                  (this.wallet = e);
                let t = E.defaultProvider;
                (0, C.B)() === C.b.node &&
                  process.env.SLP_PROVIDER &&
                  (t = process.env.SLP_PROVIDER),
                  (this.provider =
                    "gspp" === t
                      ? new I.UI(this.wallet.network)
                      : new A.A(this.wallet.network));
              }
              static get walletType() {
                return n.w5;
              }
              setProvider(e) {
                return (this.provider = e);
              }
              getDepositAddress() {
                return this.slpaddr;
              }
              getDepositQr() {
                const e = (0, a.t)(this.slpaddr);
                return (
                  (e.alt = "A Bitcoin Cash Simple Ledger Protocol QR Code"), e
                );
              }
              getTokenInfo(e) {
                return this.provider.SlpTokenInfo(e);
              }
              async getSlpOutpoints() {
                return this.provider.SlpOutpoints(this.slpaddr);
              }
              async getSlpUtxos() {
                return this.provider.SlpUtxos(this.slpaddr);
              }
              async getFormattedSlpUtxos() {
                return (await this.getSlpUtxos()).map((e) => {
                  let t = {};
                  return (
                    (t.ticker = e.ticker),
                    (t.tokenId = e.tokenId),
                    (t.value = e.value.toString()),
                    (t.satoshis = e.satoshis),
                    (t.decimals = e.decimals),
                    (t.txId = e.txid),
                    (t.index = e.vout),
                    (t.utxoId = t.txId + ":" + t.index),
                    (t.type = e.type),
                    t
                  );
                });
              }
              async getBatonUtxos(e) {
                return this.provider.SlpBatonUtxos(this.slpaddr, e);
              }
              async getHistory(e) {
                return this.provider.SlpAddressTransactionHistory(
                  this.slpaddr,
                  e
                );
              }
              async getLastTransaction(e = !1) {
                let t = await this.getHistory();
                e && (t = t.filter((e) => e.height > 0));
                const [r] = t.slice(-1);
                return this.wallet.provider.getRawTransactionObject(r.tx_hash);
              }
              async getBalance(e) {
                if (!e) throw new Error(`Invalid tokenId ${e}`);
                return this.provider.SlpTokenBalance(this.slpaddr, e);
              }
              async getAllBalances() {
                return this.provider.SlpAllTokenBalances(this.slpaddr);
              }
              watchBalance(e, t) {
                return this.provider.SlpWatchBalance(e, this.slpaddr, t);
              }
              async waitForBalance(e, t) {
                return this.provider.SlpWaitForBalance(e, this.slpaddr, t);
              }
              watchTransactions(e, t) {
                return this.provider.SlpWatchTransactions(e, this.slpaddr, t);
              }
              async waitForTransaction(e) {
                return this.provider.SlpWaitForTransaction(this.slpaddr, e);
              }
              async genesis(e) {
                let t = await this._processGenesis(e);
                return { tokenId: t, balance: await this.getBalance(t) };
              }
              async nftParentGenesis(e) {
                e.type = o.I.NftParent;
                let t = await this._processGenesis(e);
                return { tokenId: t, balance: await this.getBalance(t) };
              }
              async nftChildGenesis(e) {
                if (!e.parentTokenId)
                  throw new Error(
                    `The 'parentTokenId' was not set or invalid ${e.parentTokenId}`
                  );
                let t = await this.provider.SlpSpendableUtxos(
                  this.slpaddr,
                  e.parentTokenId
                );
                if (
                  ((t = t.filter(
                    (e) =>
                      -1 ===
                      this.spentParentUtxos.indexOf(`${e.txid}:${e.vout}`)
                  )),
                  (t = t.sort((e, t) => e.value.comparedTo(t.value))),
                  !t.length)
                )
                  throw new Error(
                    `You do not own any NFT parent tokens with id ${e.parentTokenId}`
                  );
                if (t[0].type !== o.I.NftParent)
                  throw new Error(
                    `The 'parentTokenId' is not of type ${o.I.NftParent}`
                  );
                if (t[0].value.isGreaterThan(new s(1)))
                  return (
                    await this.send([
                      {
                        slpaddr: this.slpaddr,
                        tokenId: e.parentTokenId,
                        value: new s(1),
                      },
                    ]),
                    await this.nftChildGenesis(e)
                  );
                (e.type = o.I.NftChild),
                  (e.endBaton = !0),
                  (e.initialAmount = 1),
                  (e.decimals = 0);
                let r = await this._processGenesis(e, [t[0]]);
                return (
                  (
                    await this.wallet.provider.getRawTransactionObject(r)
                  ).vin.forEach((e) =>
                    this.spentParentUtxos.push(`${e.txid}:${e.vout}`)
                  ),
                  { tokenId: r, balance: await this.getBalance(r) }
                );
              }
              async _processGenesis(e, t = []) {
                e = this.substituteOptionals(e);
                let r = await (0, l.OJ)(e),
                  i = await this.wallet
                    .slpAware(!0)
                    .getAddressUtxos(this.wallet.cashaddr);
                return (i = [...t, ...i]), this.processSlpTransaction(i, r);
              }
              async sendMax(e, t) {
                const r = [await this.getBalance(t)].map((t) => ({
                  slpaddr: e,
                  value: t.value,
                  ticker: t.ticker,
                  tokenId: t.tokenId,
                }));
                return this.send(r);
              }
              explorerUrl(e) {
                return (
                  {
                    mainnet: "https://simpleledger.info/#tx/",
                    testnet: "https://testnet.simpleledger.info/#tx/",
                    regtest: "",
                  }[this.wallet.network] + e
                );
              }
              async send(e) {
                let [t, r] = await this._processSendRequests(e);
                return {
                  txId: r,
                  balance: await this.getBalance(t),
                  explorerUrl: this.explorerUrl(r),
                };
              }
              async _processSendRequests(e) {
                if (!e.length) throw Error("Empty send requests");
                if (e.length > 19)
                  throw Error("Too many send requests in one transaction");
                if (new Set(e.map((e) => e.tokenId)).size > 1)
                  throw Error(
                    "You have two different token types with the same ticker. Pass tokenId parameter"
                  );
                const t = e[0].tokenId;
                if (!t.match(/^[0-9a-fA-F]{64}$/))
                  throw new Error(
                    "Invalid tokenId, must be 64 character long hexadecimal string"
                  );
                const r = await this.provider.SlpSpendableUtxos(
                  this.slpaddr,
                  t
                );
                let i = await (0, l.h0)(this.slpaddr, r, e),
                  n = await this.wallet
                    .slpAware(!0)
                    .getAddressUtxos(this.wallet.cashaddr);
                n = [...i.FundingSlpUtxos.map((e) => e), ...n];
                const o = r[0].tokenId;
                return [o, await this.processSlpTransaction(n, i, o)];
              }
              async mint(e) {
                let [t, r] = await this._processMint(e);
                return { txId: r, balance: await this.getBalance(t) };
              }
              async _processMint(e) {
                if (
                  (((e = this.substituteOptionals(e)).value = new s(e.value)),
                  e.value.isLessThanOrEqualTo(0) &&
                    e.batonReceiverSlpAddr === this.slpaddr)
                )
                  throw Error("Mint amount should be greater than zero");
                const t = await this.getBatonUtxos(e.tokenId);
                if (!t.length)
                  throw Error(
                    `You do not possess the minting baton for ${e.tokenId}`
                  );
                let r = await (0, l.JR)(e, t),
                  i = await this.wallet
                    .slpAware(!0)
                    .getAddressUtxos(this.wallet.cashaddr);
                return (
                  (i = [...r.FundingSlpUtxos.map((e) => e), ...i]),
                  [e.tokenId, await this.processSlpTransaction(i, r, e.tokenId)]
                );
              }
              async processSlpTransaction(e, t, r) {
                if (!this.wallet.privateKey)
                  throw new Error(
                    `Wallet ${this.wallet.name} is missing either a network or private key`
                  );
                if (!e.length)
                  throw new Error("No bch available to fund this transaction");
                const i = await this.wallet.provider.getBlockHeight(),
                  n = await (0, c.H)(this.wallet.provider),
                  o = await (0, g.Um)({
                    utxos: e,
                    sendRequests: t.BchSendRequests,
                    privateKey: this.wallet.privateKey,
                    sourceAddress: this.wallet.cashaddr,
                    relayFeePerByteInSatoshi: n,
                    slpOutputs: t.SlpOutputs,
                    feePaidBy: f.F.change,
                  }),
                  A = t.BchSendRequests.map((e) => e.value).reduce(
                    (e, t) => e + t,
                    0
                  );
                let a = await (0, g.pD)(
                  e,
                  BigInt(A) + BigInt(o),
                  i,
                  f.F.change,
                  t.BchSendRequests
                );
                if (0 === a.length)
                  throw Error(
                    "The available inputs couldn't satisfy the request with fees"
                  );
                const s = await (0, g.Um)({
                    utxos: a,
                    sendRequests: t.BchSendRequests,
                    privateKey: this.wallet.privateKey,
                    sourceAddress: this.wallet.cashaddr,
                    relayFeePerByteInSatoshi: n,
                    slpOutputs: t.SlpOutputs,
                    feePaidBy: f.F.change,
                  }),
                  { encodedTransaction: l } = await (0, g.v3)({
                    inputs: a,
                    outputs: t.BchSendRequests,
                    signingKey: this.wallet.privateKey,
                    sourceAddress: this.wallet.cashaddr,
                    fee: s,
                    discardChange: !1,
                    slpOutputs: t.SlpOutputs,
                  });
                return this._submitTransaction(l, r);
              }
              async _submitTransaction(e, t) {
                let r = (0, u.UM)(e);
                const i = new Promise(async (e) => {
                    const i = await d.Zr.getTransactionHash(r),
                      n = this.provider.SlpWatchTransactions(
                        async (t) => {
                          t.tx_hash === i && (n(), e(i));
                        },
                        void 0,
                        t || i
                      );
                  }),
                  n = this.wallet.provider.sendRawTransaction(r, !0),
                  [o, A] = await Promise.all([i, n]);
                return await (0, p.g)(100), A;
              }
              substituteOptionals(e) {
                return (
                  e.batonReceiverSlpAddr ||
                    (e.batonReceiverSlpAddr = this.slpaddr),
                  e.tokenReceiverSlpAddr ||
                    (e.tokenReceiverSlpAddr = this.slpaddr),
                  void 0 === e.endBaton && (e.endBaton = !1),
                  e
                );
              }
              static async fromId(e) {
                const t = await this.walletType.fromId(e);
                return (t._slpAware = !0), t;
              }
              static async named(e, t, r) {
                const i = await this.walletType.named(e, t, r);
                return (
                  (i.derivationPath = "m/44'/245'/0'/0/0"),
                  (i._slpAware = !0),
                  i
                );
              }
              static async fromSeed(e, t = "m/44'/245'/0'/0/0") {
                const r = await this.walletType.fromSeed(e, t);
                return (r._slpAware = !0), r;
              }
              static async newRandom(e = "", t) {
                const r = await this.walletType.newRandom(e, t);
                return (
                  (r.derivationPath = "m/44'/245'/0'/0/0"),
                  (r._slpAware = !0),
                  r
                );
              }
              static async fromWIF(e) {
                const t = await this.walletType.fromWIF(e);
                return (
                  (t.derivationPath = "m/44'/245'/0'/0/0"),
                  (t._slpAware = !0),
                  t
                );
              }
              static async watchOnly(e) {
                const t = await this.walletType.watchOnly(
                  (0, h.toCashAddress)(e)
                );
                return (
                  (t.derivationPath = "m/44'/245'/0'/0/0"),
                  (t._slpAware = !0),
                  t
                );
              }
              static async fromCashaddr(e) {
                const t = await this.walletType.fromCashaddr(e);
                return (
                  (t.derivationPath = "m/44'/245'/0'/0/0"),
                  (t._slpAware = !0),
                  t
                );
              }
              static async fromSlpaddr(e) {
                const t = await this.walletType.fromSlpaddr(e);
                return (
                  (t.derivationPath = "m/44'/245'/0'/0/0"),
                  (t._slpAware = !0),
                  t
                );
              }
            }
            E.defaultProvider = "slpdb";
            class y extends E {
              static get walletType() {
                return n.fO;
              }
            }
            class m extends E {
              static get walletType() {
                return n.zl;
              }
            }
            class Q extends E {
              static get walletType() {
                return n.rn;
              }
            }
            class v extends E {
              static get walletType() {
                return n.Ay;
              }
            }
            class S extends E {
              static get walletType() {
                return n.Ci;
              }
            }
            class w extends E {
              static get walletType() {
                return n.t8;
              }
            }
            class b extends E {
              static get walletType() {
                return n.Cb;
              }
            }
            class k extends E {
              static get walletType() {
                return n.LG;
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      31699: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              At: () => f,
              Au: () => C,
              HF: () => I,
              HM: () => B,
              HP: () => p,
              Pt: () => d,
              U8: () => u,
              Zr: () => l,
              im: () => h,
            });
            var n = r(46827),
              o = r(34684),
              A = r(30861),
              a = r(11779),
              s = r(98650),
              c = r(1345),
              g = e([n, c, A, a]);
            [n, c, A, a] = g.then ? (await g)() : g;
            class l {
              constructor(e) {
                this.wallet = e;
              }
              static get walletType() {
                return n.w5;
              }
              async getTransactionHash(e) {
                return (0, c.$)(e);
              }
              static async getTransactionHash(e) {
                return (0, c.$)(e);
              }
              async decodeTransaction(e, t = !1) {
                let r, i, n;
                e.length > 64
                  ? ((n = await this.getTransactionHash(e)),
                    (i = (0, o.kW)(e)),
                    (r = e))
                  : ((n = e),
                    (r = await this.wallet.provider.getRawTransaction(n)),
                    (i = (0, o.kW)(r)));
                const a = (0, A.c8)(i);
                if ("string" == typeof a) throw Error(a);
                const s = this.mapToElectrumRawTransaction(a, n, r);
                if (t) {
                  const e = [...new Set(s.vin.map((e) => e.txid))],
                    t = await Promise.all(
                      e.map((e) => this.decodeTransaction(e, !1))
                    ),
                    r = new Map();
                  t.forEach((e) => r.set(e.hash, e)),
                    s.vin.forEach((e) => {
                      const t = r.get(e.txid).vout.find((t) => t.n === e.vout);
                      (e.address = t.scriptPubKey.addresses[0]),
                        (e.value = t.value),
                        (e.tokenData = t.tokenData);
                    });
                }
                return s;
              }
              mapToElectrumRawTransaction(e, t, r) {
                let i = {};
                return (
                  (i.vin = e.inputs.map((e) => ({
                    scriptSig: { hex: (0, o.UM)(e.unlockingBytecode) },
                    sequence: e.sequenceNumber,
                    txid: (0, o.UM)(e.outpointTransactionHash),
                    vout: e.outpointIndex,
                  }))),
                  (i.vout = e.outputs.map((e, t) => ({
                    n: t,
                    scriptPubKey: {
                      addresses: [
                        (0, a.PG)(
                          e.lockingBytecode,
                          this.wallet.networkPrefix
                        ).toString(),
                      ],
                      hex: (0, o.UM)(e.lockingBytecode),
                    },
                    value: Number(e.valueSatoshis) / s.U.subUnits,
                  }))),
                  (i.locktime = e.locktime),
                  (i.version = e.version),
                  (i.hash = t),
                  (i.hex = r),
                  (i.txid = t),
                  (i.size = r.length / 2),
                  i
                );
              }
              static async decodeTransaction(e, t = !1) {
                return new this.walletType().util.decodeTransaction(e, t);
              }
            }
            class u extends l {
              static get walletType() {
                return n.fO;
              }
            }
            class h extends l {
              static get walletType() {
                return n.zl;
              }
            }
            class I extends l {
              static get walletType() {
                return n.rn;
              }
            }
            class p extends l {
              static get walletType() {
                return n.Ay;
              }
            }
            class d extends l {
              static get walletType() {
                return n.Ci;
              }
            }
            class f extends l {
              static get walletType() {
                return n.t8;
              }
            }
            class C extends l {
              static get walletType() {
                return n.Cb;
              }
            }
            class B extends l {
              static get walletType() {
                return n.LG;
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      46827: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              Ay: () => q,
              Cb: () => z,
              Ci: () => J,
              LG: () => V,
              fO: () => L,
              rn: () => Y,
              t8: () => j,
              w5: () => G,
              zl: () => K,
            });
            var n = r(59431),
              o = r(12909),
              A = r(34684),
              a = r(41118),
              s = r(19555),
              c = r(5102),
              g = r(36832),
              l = r(46634),
              u = r(89341),
              h = r(8153),
              I = r(85858),
              p = r(34167),
              d = r(1318),
              f = r(88594),
              C = r(59059),
              B = r(65937),
              E = r(63862),
              y = r(93321),
              m = r(26463),
              Q = r(59490),
              v = r(56724),
              S = r(25540),
              w = r(37051),
              b = r(8060),
              k = r(89644),
              N = r(68700),
              _ = r(31699),
              D = r(20252),
              O = r(35702),
              T = r(56688),
              P = r(10149),
              x = r(94052),
              R = r(20200),
              U = r(41873),
              F = r(77657),
              H = r(45230),
              M = e([
                h,
                l,
                b,
                _,
                D,
                H,
                y,
                m,
                x,
                n,
                p,
                E,
                B,
                s,
                C,
                P,
                F,
                d,
                f,
                S,
                U,
                o,
                T,
              ]);
            [
              h,
              l,
              b,
              _,
              D,
              H,
              y,
              m,
              x,
              n,
              p,
              E,
              B,
              s,
              C,
              P,
              F,
              d,
              f,
              S,
              U,
              o,
              T,
            ] = M.then ? (await M)() : M;
            class G extends h.c {
              constructor(e = "", t = l.td.Mainnet, r = I.K.Seed) {
                super(e, t, r),
                  (this.derivationPath = "m/44'/0'/0'/0/0"),
                  (this.parentDerivationPath = "m/44'/0'/0'"),
                  (this._slpAware = !1),
                  (this._slpSemiAware = !1),
                  (this.fromId = async (e) => {
                    let [t, r, i] = e.split(":");
                    if (this.network != r)
                      throw Error(
                        `Network prefix ${r} to a ${this.network} wallet`
                      );
                    return "wif" === t ? this.fromWIF(i) : super.fromId(e);
                  }),
                  (this.networkPrefix = l.cM[this.network]);
              }
              get slp() {
                return (
                  this._slp ||
                    ((this._slp = new b.uU(this)), (this._slpAware = !0)),
                  this._slp
                );
              }
              static get slp() {
                return b.uU;
              }
              get util() {
                return this._util || (this._util = new _.Zr(this)), this._util;
              }
              static get util() {
                return _.Zr;
              }
              slpAware(e = !0) {
                return (this._slpAware = e), this;
              }
              slpSemiAware(e = !0) {
                return (this._slpSemiAware = e), this;
              }
              getNetworkProvider(e = u.Z.MAINNET) {
                return (0, D.ku)(e);
              }
              getTokenDepositAddress() {
                return this.tokenaddr;
              }
              getTokenDepositQr() {
                return (0, H.t)(this.getTokenDepositAddress());
              }
              explorerUrl(e) {
                return (
                  {
                    mainnet: "https://blockchair.com/bitcoin-cash/transaction/",
                    testnet: "https://www.blockchain.com/bch-testnet/tx/",
                    regtest: "",
                  }[this.network] + e
                );
              }
              getInfo() {
                return {
                  cashaddr: this.cashaddr,
                  tokenaddr: this.tokenaddr,
                  isTestnet: this.isTestnet,
                  name: this.name,
                  network: this.network,
                  seed: this.mnemonic ? this.getSeed().seed : void 0,
                  derivationPath: this.mnemonic
                    ? this.getSeed().derivationPath
                    : void 0,
                  parentDerivationPath: this.mnemonic
                    ? this.getSeed().parentDerivationPath
                    : void 0,
                  parentXPubKey: this.parentXPubKey
                    ? this.parentXPubKey
                    : void 0,
                  publicKey: this.publicKey
                    ? (0, A.UM)(this.publicKey)
                    : void 0,
                  publicKeyHash: (0, A.UM)(this.publicKeyHash),
                  privateKey: this.privateKey
                    ? (0, A.UM)(this.privateKey)
                    : void 0,
                  privateKeyWif: this.privateKeyWif,
                  walletId: this.toString(),
                  walletDbEntry: this.toDbString(),
                };
              }
              getPublicKey(e = !1) {
                if (this.publicKey)
                  return e ? (0, A.UM)(this.publicKey) : this.publicKey;
                throw Error(
                  "The public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress."
                );
              }
              getPublicKeyCompressed(e = !1) {
                if (this.publicKeyCompressed)
                  return e
                    ? (0, A.UM)(this.publicKeyCompressed)
                    : this.publicKeyCompressed;
                throw Error(
                  "The compressed public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress."
                );
              }
              getPublicKeyHash(e = !1) {
                if (this.publicKeyHash)
                  return e ? (0, A.UM)(this.publicKeyHash) : this.publicKeyHash;
                throw Error(
                  "The public key hash for this wallet is not known. If this wallet was created from the constructor directly, calling the deriveInfo() function may help. "
                );
              }
              static async fromWIF(e) {
                return new this().fromWIF(e);
              }
              static async fromCashaddr(e) {
                const t = (0, y.G)(e);
                return new this("", l.f8[t], I.K.Watch).watchOnly(e);
              }
              static async fromTokenaddr(e) {
                const t = (0, y.G)(e);
                return new this("", l.f8[t], I.K.Watch).watchOnly(e);
              }
              static async fromSlpaddr(e) {
                return this.fromCashaddr((0, N.toCashAddress)(e));
              }
              async generate() {
                if (this.walletType === I.K.Wif)
                  return await this._generateWif();
                if (this.walletType === I.K.Watch) return this;
                if (this.walletType === I.K.Hd) throw Error("Not implemented");
                if (this.walletType === I.K.Seed)
                  return await this._generateMnemonic();
                throw (
                  (console.log(this.walletType),
                  Error(`Could not determine walletType: ${this.walletType}`))
                );
              }
              async _generateWif() {
                return (
                  this.privateKey ||
                    (this.privateKey = (0, a.w)(() => (0, O.U)(32))),
                  this.deriveInfo()
                );
              }
              async _generateMnemonic() {
                if (((this.mnemonic = (0, g.OF)()), 0 == this.mnemonic.length))
                  throw Error("refusing to create wallet from empty mnemonic");
                let e = (0, g.Z1)(this.mnemonic);
                (0, m.d)(e);
                let t = this.isTestnet ? "testnet" : "mainnet";
                this.parentXPubKey = await (0, x.h)(
                  e,
                  this.parentDerivationPath,
                  t
                );
                let r = (0, n.hC)(e);
                if (!r.valid)
                  throw Error("Invalid private key derived from mnemonic seed");
                let i = (0, n.Ai)(r, this.derivationPath);
                if ("string" == typeof i) throw Error(i);
                return (
                  (this.privateKey = i.privateKey),
                  (this.walletType = I.K.Seed),
                  await this.deriveInfo()
                );
              }
              async getXPubKeys(e) {
                if (this.mnemonic)
                  return e
                    ? [await this.deriveHdPaths(e)]
                    : await this.deriveHdPaths(R.DERIVATION_PATHS);
                throw Error(
                  "xpubkeys can only be derived from seed type wallets."
                );
              }
              async fromSeed(e, t) {
                if (
                  ((this.mnemonic = e.trim().toLowerCase()),
                  0 == this.mnemonic.length)
                )
                  throw Error("refusing to create wallet from empty mnemonic");
                let r = (0, g.Z1)(this.mnemonic);
                (0, m.d)(r);
                let i = (0, n.hC)(r);
                if (!i.valid)
                  throw Error("Invalid private key derived from mnemonic seed");
                if (t) {
                  this.derivationPath = t;
                  let e = t.split("/");
                  "0/0" == e.slice(-2).join("/") &&
                    (this.parentDerivationPath = e.slice(0, -2).join("/"));
                }
                let o = (0, n.Ai)(i, this.derivationPath);
                if ("string" == typeof o) throw Error(o);
                this.privateKey = o.privateKey;
                let A = this.isTestnet ? "testnet" : "mainnet";
                return (
                  (this.parentXPubKey = await (0, x.h)(
                    r,
                    this.parentDerivationPath,
                    A
                  )),
                  (this.walletType = I.K.Seed),
                  await this.deriveInfo(),
                  this
                );
              }
              async deriveHdPaths(e) {
                if (!this.mnemonic)
                  throw Error("refusing to create wallet from empty mnemonic");
                let t = (0, g.Z1)(this.mnemonic);
                (0, m.d)(t);
                let r = (0, n.hC)(t);
                if (!r.valid)
                  throw Error("Invalid private key derived from mnemonic seed");
                let i = [];
                for (const t of e) {
                  if ("m" === t)
                    throw Error(
                      "Storing or sharing of parent public key may lead to loss of funds. Storing or sharing *root* parent public keys is strongly discouraged, although all parent keys have risk. See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#implications"
                    );
                  let e = (0, n.Ai)(r, t);
                  if ("string" == typeof e) throw Error(e);
                  let o = (0, n.od)(e);
                  if ("string" == typeof o) throw Error(o);
                  let A = (0, n.Q$)({ network: this.network, node: o }),
                    a = new p.bB({ path: t, xPubKey: A });
                  i.push(await a.ready());
                }
                return await Promise.all(i).then((e) => e);
              }
              async watchOnly(e) {
                this.walletType = I.K.Watch;
                let t,
                  r,
                  i = e.split(":");
                if (1 === i.length) (r = i.shift()), (t = (0, y.G)(r));
                else if (
                  ((t = i.shift()),
                  (r = i.shift()),
                  t in l.f8 && l.f8[t] != this.network)
                )
                  throw Error(
                    `a ${t} address cannot be watched from a ${this.network} Wallet`
                  );
                return (
                  (this.cashaddr = `${t}:${r}`),
                  (this.address = this.cashaddr),
                  (this.publicKeyHash = (0, y.E)(this.cashaddr)),
                  (this.tokenaddr = (0, E.H$)(
                    this.publicKeyHash,
                    this.networkPrefix
                  )),
                  this
                );
              }
              async fromWIF(e) {
                (0, B.u)(e, this.network);
                let t = (0, s.L)(e);
                if ("string" == typeof t) throw Error(t);
                let r = t;
                return (
                  (this.privateKey = r.privateKey),
                  (this.privateKeyWif = e),
                  (this.walletType = I.K.Wif),
                  await this.deriveInfo(),
                  this
                );
              }
              async newRandom(e, t) {
                return (t = t || this.networkPrefix), super.newRandom(e, t);
              }
              async named(e, t, r = !1) {
                return (t = t || this.networkPrefix), super.named(e, t, r);
              }
              async replaceNamed(e, t, r) {
                return (
                  (r = r || this.networkPrefix), super.replaceNamed(e, t, r)
                );
              }
              async namedExists(e, t) {
                return (t = t || this.networkPrefix), super.namedExists(e, t);
              }
              toString() {
                const e = super.toString();
                if (e) return e;
                if (this.walletType === I.K.Wif)
                  return `${this.walletType}:${this.network}:${this.privateKeyWif}`;
                throw Error("toString unsupported wallet type");
              }
              toDbString() {
                const e = super.toDbString();
                if (e) return e;
                if (this.walletType === I.K.Wif)
                  return `${this.walletType}:${this.network}:${this.privateKeyWif}`;
                throw Error("toDbString unsupported wallet type");
              }
              async getAddressUtxos(e) {
                if ((e || (e = this.cashaddr), this._slpAware)) {
                  const [t, r] = await Promise.all([
                    this.provider.getUtxos(e),
                    this.slp.getSlpOutpoints(),
                  ]);
                  return t.filter(
                    (e) =>
                      -1 === r.findIndex((t) => `${e.txid}:${e.vout}` === t)
                  );
                }
                return this._slpSemiAware
                  ? (await this.provider.getUtxos(e)).filter(
                      (e) => e.satoshis > R.DUST_UTXO_THRESHOLD
                    )
                  : await this.provider.getUtxos(e);
              }
              async getUtxos() {
                if (!this.cashaddr)
                  throw Error("Attempted to get utxos without an address");
                return await this.getAddressUtxos(this.cashaddr);
              }
              async getBalance(e, t = !0) {
                if (e) {
                  const r = (0, Q.O)(e);
                  return await (0, C.$e)(
                    await this.getBalanceFromProvider(),
                    r,
                    t
                  );
                }
                return await (0, C.Wk)(await this.getBalanceFromProvider(), t);
              }
              async getBalanceFromUtxos() {
                const e = (await this.getAddressUtxos(this.cashaddr)).filter(
                  (e) => void 0 === e.token
                );
                return (0, v.O)(e);
              }
              async getBalanceFromProvider() {
                return this.getBalanceFromUtxos();
              }
              watchAddress(e) {
                return this.provider.watchAddress(this.getDepositAddress(), e);
              }
              watchAddressTransactions(e) {
                return this.provider.watchAddressTransactions(
                  this.getDepositAddress(),
                  e
                );
              }
              watchAddressTokenTransactions(e) {
                return this.provider.watchAddressTokenTransactions(
                  this.getDepositAddress(),
                  e
                );
              }
              watchBalance(e) {
                return this.provider.watchAddressStatus(
                  this.getDepositAddress(),
                  async (t) => {
                    const r = await this.getBalance();
                    e(r);
                  }
                );
              }
              watchBalanceUsd(e, t = 3e4) {
                let r = -1;
                const i = async () => {
                    const t = await this.getBalance(void 0, !1);
                    r !== t.usd && ((r = t.usd), e(t));
                  },
                  n = this.provider.watchAddressStatus(
                    this.getDepositAddress(),
                    i
                  ),
                  o = setInterval(i, t);
                return async () => {
                  await n(), clearInterval(o);
                };
              }
              async waitForBalance(e, t = l.ZX.BCH) {
                return new Promise(async (r) => {
                  const i = this.watchBalance(async (n) => {
                    const o = await (0, P.a)(e, t);
                    n.sat >= o && (await i(), r(n));
                  });
                });
              }
              watchTokenBalance(e, t) {
                let r;
                return this.provider.watchAddressStatus(
                  this.getDepositAddress(),
                  async (i) => {
                    const n = await this.getTokenBalance(e);
                    r != n && t(n), (r = n);
                  }
                );
              }
              async waitForTokenBalance(e, t) {
                return new Promise(async (r) => {
                  const i = this.watchTokenBalance(e, async (e) => {
                    e >= t && (await i(), r(e));
                  });
                });
              }
              async getTokenInfo(e) {
                return F.H.getTokenInfo(e);
              }
              async _getMaxAmountToSend(e = { outputCount: 1, options: {} }) {
                if (!this.privateKey && !0 !== e.options?.buildUnsigned)
                  throw Error(
                    "Couldn't get network or private key for wallet."
                  );
                if (!this.cashaddr)
                  throw Error("attempted to send without a cashaddr");
                let t, r;
                e.options && e.options.slpAware && (this._slpAware = !0),
                  e.options &&
                    e.options.slpSemiAware &&
                    (this._slpSemiAware = !0),
                  (t =
                    e.options && e.options.feePaidBy
                      ? e.options.feePaidBy
                      : I.F.change),
                  (r =
                    e.options && e.options.utxoIds
                      ? e.options.utxoIds.map((e) =>
                          "string" == typeof e ? (0, p.hx)(e) : e
                        )
                      : (await this.getAddressUtxos(this.cashaddr)).filter(
                          (e) => !e.token
                        ));
                const i = await this.provider.getBlockHeight(),
                  n = new p.Lt({
                    cashaddr: this.cashaddr,
                    value: 100,
                    unit: "sat",
                  }),
                  o = Array(e.outputCount)
                    .fill(0)
                    .map(() => n),
                  A = await (0, d.pD)(r, void 0, i, t, o),
                  a = await (0, w.H)(this.provider),
                  s = await (0, d.Um)({
                    utxos: A,
                    sendRequests: o,
                    privateKey: this.privateKey ?? Uint8Array.from([]),
                    sourceAddress: this.cashaddr,
                    relayFeePerByteInSatoshi: a,
                    slpOutputs: [],
                    feePaidBy: t,
                  });
                let c = (0, v.O)(A) - s;
                return c < 0 && (c = 0), { value: c, utxos: A };
              }
              async getMaxAmountToSend(e = { outputCount: 1, options: {} }) {
                const { value: t } = await this._getMaxAmountToSend(e);
                return await (0, C.Wk)(t);
              }
              async send(e, t) {
                const {
                    encodedTransaction: r,
                    tokenIds: i,
                    sourceOutputs: n,
                  } = await this.encodeTransaction(e, void 0, t),
                  o = new p.fb({});
                if (((o.tokenIds = i), !0 !== t?.buildUnsigned)) {
                  const e = await this.submitTransaction(
                    r,
                    void 0 === t?.awaitTransactionPropagation ||
                      !0 === t?.awaitTransactionPropagation
                  );
                  (o.txId = e),
                    (o.explorerUrl = this.explorerUrl(o.txId)),
                    (void 0 !== t?.queryBalance && !0 !== t?.queryBalance) ||
                      (o.balance = await this.getBalance());
                } else
                  (o.unsignedTransaction = (0, A.UM)(r)), (o.sourceOutputs = n);
                return o;
              }
              async sendMax(e, t) {
                return await this.sendMaxRaw(e, t);
              }
              async sendMaxRaw(e, t) {
                const { value: r, utxos: i } = await this._getMaxAmountToSend({
                  outputCount: 1,
                  options: t,
                });
                t || (t = {}), (t.utxoIds = i);
                const n = new p.Lt({ cashaddr: e, value: r, unit: "sat" }),
                  {
                    encodedTransaction: o,
                    tokenIds: a,
                    sourceOutputs: s,
                  } = await this.encodeTransaction([n], !0, t),
                  c = new p.fb({});
                if (((c.tokenIds = a), !0 !== t?.buildUnsigned)) {
                  const e = await this.submitTransaction(
                    o,
                    void 0 === t?.awaitTransactionPropagation ||
                      !0 === t?.awaitTransactionPropagation
                  );
                  (c.txId = e),
                    (c.explorerUrl = this.explorerUrl(c.txId)),
                    (void 0 !== t?.queryBalance && !0 !== t?.queryBalance) ||
                      (c.balance = await this.getBalance());
                } else
                  (c.unsignedTransaction = (0, A.UM)(o)), (c.sourceOutputs = s);
                return c;
              }
              async encodeTransaction(e, t = !1, r) {
                let i,
                  n,
                  o = (0, f.U)(e);
                if (!this.privateKey && !0 !== r?.buildUnsigned)
                  throw new Error(
                    `Wallet ${this.name} is missing either a network or private key`
                  );
                if (!this.cashaddr)
                  throw Error("attempted to send without a cashaddr");
                r && r.slpAware && (this._slpAware = !0),
                  r && r.slpSemiAware && (this._slpSemiAware = !0),
                  (i = r && r.feePaidBy ? r.feePaidBy : I.F.change),
                  (n = r && r.changeAddress ? r.changeAddress : this.cashaddr);
                let A,
                  a = !0;
                r && !1 === r.checkTokenQuantities && (a = !1),
                  (A =
                    r && r.utxoIds
                      ? r.utxoIds.map((e) =>
                          "string" == typeof e ? (0, p.hx)(e) : e
                        )
                      : await this.getAddressUtxos(this.cashaddr)),
                  a &&
                    !o.some((e) => e instanceof p.n9) &&
                    (A = A.filter((e) => !e.token)),
                  ((e, t) => {
                    if (!a) return;
                    const i = e.filter((e) => e.token),
                      o = t.filter((e) => e instanceof p.n9),
                      A = o
                        .map((e) => e.tokenId)
                        .filter((e, t, r) => r.indexOf(e) === t);
                    for (let e of A) {
                      const A = i.filter((t) => t.token?.tokenId === e),
                        a = A.reduce((e, t) => e + t.token.amount, 0),
                        s = o.filter((t) => t.tokenId === e),
                        c = s.reduce((e, t) => e + t.amount, 0),
                        g = a - c;
                      if (g < 0)
                        throw new Error("Not enough token amount to send");
                      if (g >= 0) {
                        let i = 0,
                          o = 0;
                        const a = [];
                        for (const e of A.filter((e) => e.token?.amount))
                          if ((a.push(e), (i += e.token?.amount), i >= c)) {
                            o = i - c;
                            break;
                          }
                        a.length &&
                          (r || (r = {}),
                          (r.ensureUtxos = [
                            ...(r.ensureUtxos ?? []),
                            ...a,
                          ].filter(
                            (e, t, r) =>
                              r.findIndex(
                                (t) => t.txid === e.txid && t.vout === e.vout
                              ) === t
                          ))),
                          o > 0 &&
                            t.push(
                              new p.n9({
                                cashaddr: (0, E.Gf)(n) || this.tokenaddr,
                                amount: o,
                                tokenId: e,
                                commitment: s[0].commitment,
                                capability: s[0].capability,
                                value: s[0].value,
                              })
                            );
                      }
                    }
                  })(A, o);
                const s = await this.provider.getBlockHeight(),
                  c = await (0, S.m)(o);
                if (0 === A.length)
                  throw Error("There were no Unspent Outputs");
                if ("bigint" != typeof c)
                  throw Error(
                    "Couldn't get spend amount when building transaction"
                  );
                const g = await (0, w.H)(this.provider),
                  l = await (0, d.Um)({
                    utxos: A,
                    sendRequests: o,
                    privateKey: this.privateKey ?? Uint8Array.from([]),
                    sourceAddress: this.cashaddr,
                    relayFeePerByteInSatoshi: g,
                    slpOutputs: [],
                    feePaidBy: i,
                  }),
                  u = await (0, d.pD)(
                    A,
                    BigInt(c) + BigInt(l),
                    s,
                    i,
                    o,
                    r?.ensureUtxos || [],
                    r?.tokenOperation
                  );
                if (0 === u.length)
                  throw Error(
                    "The available inputs couldn't satisfy the request with fees"
                  );
                const h = await (0, d.Um)({
                    utxos: u,
                    sendRequests: o,
                    privateKey: this.privateKey ?? Uint8Array.from([]),
                    sourceAddress: this.cashaddr,
                    relayFeePerByteInSatoshi: g,
                    slpOutputs: [],
                    feePaidBy: i,
                  }),
                  { encodedTransaction: C, sourceOutputs: B } = await (0, d.v3)(
                    {
                      inputs: u,
                      outputs: o,
                      signingKey: this.privateKey ?? Uint8Array.from([]),
                      sourceAddress: this.cashaddr,
                      fee: h,
                      discardChange: t,
                      slpOutputs: [],
                      feePaidBy: i,
                      changeAddress: n,
                      buildUnsigned: !0 === r?.buildUnsigned,
                    }
                  );
                return {
                  encodedTransaction: C,
                  tokenIds: [
                    ...u
                      .filter((e) => e.token?.tokenId)
                      .map((e) => e.token.tokenId),
                    ...o.filter((e) => e instanceof p.n9).map((e) => e.tokenId),
                  ].filter((e, t, r) => r.indexOf(e) === t),
                  sourceOutputs: B,
                };
              }
              async signUnsignedTransaction(e, t) {
                if (!this.privateKey)
                  throw Error(
                    "Can not sign a transaction with watch-only wallet."
                  );
                return (0, d.uv)(e, t, this.privateKey);
              }
              async submitTransaction(e, t = !0) {
                if (!this.provider)
                  throw Error("Wallet network provider was not initialized");
                let r = (0, A.UM)(e);
                return await this.provider.sendRawTransaction(r, t);
              }
              async getRawHistory() {
                return await this.provider.getHistory(this.cashaddr);
              }
              async getHistory(e, t, r, i) {
                return (0, U.T)(this.cashaddr, this.provider, e, t, r, i);
              }
              async getLastTransaction(e = !1) {
                let t = await this.getRawHistory();
                if ((e && (t = t.filter((e) => e.height > 0)), !t.length))
                  return null;
                const [r] = t.slice(-1);
                return this.provider.getRawTransactionObject(r.tx_hash);
              }
              async waitForTransaction(
                e = { getTransactionInfo: !0, getBalance: !1, txHash: void 0 }
              ) {
                return (
                  void 0 === e.getTransactionInfo &&
                    (e.getTransactionInfo = !0),
                  new Promise(async (t) => {
                    let r = !1;
                    const i = async (t) => {
                      const r = {},
                        i = [void 0, void 0];
                      !0 === e.getBalance && (i[0] = this.getBalance()),
                        !0 === e.getTransactionInfo &&
                          (i[1] = t
                            ? this.provider.getRawTransactionObject(t)
                            : this.getLastTransaction());
                      const n = await Promise.all(i);
                      return (r.balance = n[0]), (r.transactionInfo = n[1]), r;
                    };
                    if (e.txHash) {
                      const n = async (o) => {
                        o &&
                          o[0] === e.txHash &&
                          ((r = !0),
                          this.provider.unsubscribeFromTransaction(e.txHash, n),
                          t(i(e.txHash)));
                      };
                      return void this.provider.subscribeToTransaction(
                        e.txHash,
                        n
                      );
                    }
                    const n = this.provider.watchAddressStatus(
                      this.getDepositAddress(),
                      async (e) => {
                        n(), t(i());
                      }
                    );
                  })
                );
              }
              watchBlocks(e) {
                return this.provider.watchBlocks(e);
              }
              async waitForBlock(e) {
                return this.provider.waitForBlock(e);
              }
              async deriveInfo() {
                const e = o.kA.derivePublicKeyUncompressed(this.privateKey);
                if ("string" == typeof e) throw new Error(e);
                this.publicKey = e;
                const t = o.kA.derivePublicKeyCompressed(this.privateKey);
                if ("string" == typeof t) throw new Error(t);
                this.publicKeyCompressed = t;
                const r =
                  this.network === l.td.Regtest ? l.td.Testnet : this.network;
                return (
                  (this.privateKeyWif = (0, s.ep)(this.privateKey, r)),
                  (0, B.u)(this.privateKeyWif, this.network),
                  (this.cashaddr = (0, E.hJ)(
                    this.privateKey,
                    this.networkPrefix
                  )),
                  (this.tokenaddr = (0, E.H$)(
                    this.privateKey,
                    this.networkPrefix
                  )),
                  (this.address = this.cashaddr),
                  (this.publicKeyHash = (0, y.E)(this.cashaddr)),
                  this
                );
              }
              async sign(e) {
                return await G.signedMessage.sign(e, this.privateKey);
              }
              async verify(e, t, r) {
                return await G.signedMessage.verify(e, t, this.cashaddr, r);
              }
              async tokenGenesis(e, t = [], r) {
                let i;
                Array.isArray(t) || (t = [t]),
                  (i =
                    r && r.utxoIds
                      ? r.utxoIds.map((e) =>
                          "string" == typeof e ? (0, p.hx)(e) : e
                        )
                      : await this.getAddressUtxos(this.cashaddr));
                const n = i.filter((e) => 0 === e.vout && !e.token);
                if (0 === n.length)
                  throw new Error(
                    "No suitable inputs with vout=0 available for new token genesis"
                  );
                const o = new p.n9({
                  cashaddr: e.cashaddr || this.tokenaddr,
                  amount: e.amount,
                  value: e.value || 1e3,
                  capability: e.capability,
                  commitment: e.commitment,
                  tokenId: n[0].txid,
                });
                return this.send([o, ...t], {
                  ...r,
                  utxoIds: i,
                  ensureUtxos: [n[0]],
                  checkTokenQuantities: !1,
                  queryBalance: !1,
                  tokenOperation: "genesis",
                });
              }
              async tokenMint(e, t, r = !1, i) {
                if (64 !== e?.length)
                  throw Error(`Invalid tokenId supplied: ${e}`);
                Array.isArray(t) || (t = [t]);
                const n = (await this.getAddressUtxos(this.cashaddr)).filter(
                  (t) =>
                    t.token?.tokenId === e &&
                    t.token?.capability === u.h.minting
                );
                if (!n.length)
                  throw new Error(
                    "You do not have any token UTXOs with minting capability for specified tokenId"
                  );
                const o =
                    r && n[0].token.amount > 0
                      ? n[0].token.amount - t.length
                      : n[0].token.amount,
                  A = Math.max(0, o),
                  a = new p.n9({
                    cashaddr: this.tokenaddr,
                    tokenId: e,
                    capability: n[0].token.capability,
                    commitment: n[0].token.commitment,
                    amount: A,
                    value: n[0].satoshis,
                  });
                return this.send(
                  [
                    a,
                    ...t.map(
                      (t) =>
                        new p.n9({
                          cashaddr: t.cashaddr || this.tokenaddr,
                          amount: 0,
                          tokenId: e,
                          value: t.value,
                          capability: t.capability,
                          commitment: t.commitment,
                        })
                    ),
                  ],
                  {
                    ...i,
                    ensureUtxos: [n[0]],
                    checkTokenQuantities: !1,
                    queryBalance: !1,
                    tokenOperation: "mint",
                  }
                );
              }
              async tokenBurn(e, t, r) {
                if (64 !== e.tokenId?.length)
                  throw Error(`Invalid tokenId supplied: ${e.tokenId}`);
                const i = (await this.getAddressUtxos(this.cashaddr)).filter(
                  (t) =>
                    t.token?.tokenId === e.tokenId &&
                    t.token?.capability === e.capability &&
                    t.token?.commitment === e.commitment
                );
                if (!i.length)
                  throw new Error(
                    "You do not have suitable token UTXOs to perform burn"
                  );
                const n = i.reduce((e, t) => e + (t.token?.amount || 0), 0),
                  o = e.amount && e.amount > 0 ? e.amount : 0;
                let A,
                  a = [];
                if (e.capability || e.commitment)
                  if (0 === n) (A = []), a.push(i[0]);
                  else {
                    let t = 0;
                    for (const e of i.filter((e) => e.token?.amount))
                      if ((a.push(e), (t += e.token?.amount), t >= o)) break;
                    const r = n - o,
                      s = Math.max(0, r);
                    A = [
                      new p.n9({
                        cashaddr: e.cashaddr || this.tokenaddr,
                        tokenId: e.tokenId,
                        capability: e.capability,
                        commitment: e.commitment,
                        amount: s,
                        value: i[0].satoshis,
                      }),
                    ];
                  }
                else if (n === o) (A = []), a.push(i[0]);
                else {
                  let t = 0;
                  for (const e of i.filter((e) => e.token?.amount))
                    if ((a.push(e), (t += e.token?.amount), t >= o)) break;
                  const r = n - o,
                    s = Math.max(0, r);
                  A = [
                    new p.n9({
                      cashaddr: e.cashaddr || this.tokenaddr,
                      tokenId: e.tokenId,
                      amount: s,
                      value: i[0].satoshis,
                    }),
                  ];
                }
                const s = p.Rb.fromString(t || "");
                return this.send([s, ...A], {
                  ...r,
                  checkTokenQuantities: !1,
                  queryBalance: !1,
                  ensureUtxos: a.length > 0 ? a : void 0,
                  tokenOperation: "burn",
                });
              }
              async getTokenUtxos(e) {
                return (await this.getAddressUtxos(this.address)).filter((t) =>
                  e ? t.token?.tokenId === e : t.token
                );
              }
              async getTokenBalance(e) {
                const t = (await this.getTokenUtxos(e)).filter(
                  (e) => e.token?.amount
                );
                return (0, v.G)(t, e);
              }
              async getNftTokenBalance(e) {
                return (await this.getTokenUtxos(e)).filter(
                  (e) => void 0 !== e.token?.commitment
                ).length;
              }
              async getAllTokenBalances() {
                const e = {},
                  t = (await this.getTokenUtxos()).filter(
                    (e) => e.token?.amount
                  );
                for (const r of t)
                  e[r.token.tokenId] || (e[r.token.tokenId] = 0),
                    (e[r.token.tokenId] += r.token.amount);
                return e;
              }
              async getAllNftTokenBalances() {
                const e = {},
                  t = (await this.getTokenUtxos()).filter(
                    (e) => void 0 !== e.token?.commitment
                  );
                for (const r of t)
                  e[r.token.tokenId] || (e[r.token.tokenId] = 0),
                    (e[r.token.tokenId] += 1);
                return e;
              }
            }
            G.signedMessage = new T.u();
            class L extends G {
              constructor(e = "") {
                super(e, l.td.Testnet);
              }
              async getTestnetSatoshis() {
                try {
                  return (
                    await k.post(`${L.faucetServer}/faucet/get_testnet_bch`, {
                      cashaddr: this.cashaddr,
                    })
                  ).data.txId;
                } catch (e) {
                  throw e;
                }
              }
              async returnTestnetSatoshis() {
                try {
                  const e = (
                    await k.post(`${L.faucetServer}/faucet/get_addresses`)
                  ).data;
                  return await this.slpAware().sendMax(e.bchtest);
                } catch (e) {
                  throw (
                    (console.log(e),
                    console.log(e.response ? e.response.data : ""),
                    e)
                  );
                }
              }
              async getTestnetSlp(e) {
                try {
                  return (
                    await k.post(`${L.faucetServer}/faucet/get_testnet_slp`, {
                      slpaddr: this.slp.slpaddr,
                      tokenId: e,
                    })
                  ).data.txId;
                } catch (e) {
                  throw e;
                }
              }
              async returnTestnetSlp(e) {
                try {
                  const t = (
                    await k.post(`${L.faucetServer}/faucet/get_addresses`)
                  ).data;
                  return await this.slp.sendMax(t.slptest, e);
                } catch (e) {
                  throw (
                    (console.log(e),
                    console.log(e.response ? e.response.data : ""),
                    e)
                  );
                }
              }
              static get slp() {
                return b.AG;
              }
              static get util() {
                return _.U8;
              }
            }
            (L.networkPrefix = c.s.testnet),
              (L.faucetServer = "https://rest-unstable.mainnet.cash");
            class K extends G {
              constructor(e = "") {
                super(e, l.td.Regtest);
              }
              static get slp() {
                return b.Hs;
              }
              static get util() {
                return _.im;
              }
            }
            K.networkPrefix = c.s.regtest;
            class Y extends G {
              constructor(e = "") {
                super(e, l.td.Mainnet, I.K.Wif);
              }
              static get slp() {
                return b.rT;
              }
              static get util() {
                return _.HF;
              }
            }
            (Y.networkPrefix = c.s.mainnet), (Y.walletType = I.K.Wif);
            class q extends G {
              constructor(e = "") {
                super(e, l.td.Testnet, I.K.Wif);
              }
              static get slp() {
                return b.U8;
              }
              static get util() {
                return _.HP;
              }
            }
            (q.networkPrefix = c.s.testnet), (q.walletType = I.K.Wif);
            class J extends G {
              constructor(e = "") {
                super(e, l.td.Regtest, I.K.Wif);
              }
              static get slp() {
                return b.qQ;
              }
              static get util() {
                return _.Pt;
              }
            }
            (J.networkPrefix = c.s.regtest), (J.walletType = I.K.Wif);
            class j extends G {
              constructor(e = "") {
                super(e, l.td.Mainnet, I.K.Watch);
              }
              static get slp() {
                return b.GS;
              }
              static get util() {
                return _.At;
              }
            }
            (j.networkPrefix = c.s.mainnet), (j.walletType = I.K.Watch);
            class z extends G {
              constructor(e = "") {
                super(e, l.td.Testnet, I.K.Watch);
              }
              static get slp() {
                return b.Wo;
              }
              static get util() {
                return _.Au;
              }
            }
            (z.networkPrefix = c.s.testnet), (z.walletType = I.K.Watch);
            class V extends G {
              constructor(e = "") {
                super(e, l.td.Regtest, I.K.Watch);
              }
              static get slp() {
                return b.QL;
              }
              static get util() {
                return _.HM;
              }
            }
            (V.networkPrefix = c.s.regtest), (V.walletType = I.K.Watch), i();
          } catch (e) {
            i(e);
          }
        });
      },
      64447: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              $2: () => l,
              EK: () => h,
              NS: () => u,
              SQ: () => p,
              VK: () => C,
              Zq: () => d,
              c0: () => s,
              jS: () => I,
              yk: () => g,
            });
            var n = r(46827),
              o = r(8153),
              A = r(46634),
              a = e([n, A, o]);
            [n, A, o] = a.then ? (await a)() : a;
            const s = {
              wif: {
                mainnet: () => n.rn,
                testnet: () => n.Ay,
                regtest: () => n.Ci,
              },
              seed: {
                mainnet: () => n.w5,
                testnet: () => n.fO,
                regtest: () => n.zl,
              },
              watch: {
                mainnet: () => n.t8,
                testnet: () => n.Cb,
                regtest: () => n.LG,
              },
            };
            function c(e, t, r) {
              if (e.network != r)
                throw Error(
                  `A wallet already exists with name ${e.name}, but with network ${e.network} not ${r}, per request`
                );
              if (e.walletType != t)
                throw Error(
                  `A wallet already exists with name ${e.name}, but with type ${e.walletType} not ${t}, per request`
                );
            }
            async function g(e) {
              const t = e.type ? e.type : "seed",
                r = e.network ? e.network : "mainnet",
                i = e.name;
              return await s[t][r]().namedExists(i);
            }
            async function l(e, t, r) {
              if (!e) throw Error("Wallet name is required for this operation");
              let i;
              const n = A.cM[r];
              if (void 0 !== s[t]) (i = await s[t][r]().named(e)), c(i, t, r);
              else {
                let t = await (0, o.h)(e, n);
                if (void 0 === t)
                  throw Error(
                    "A named wallet, without wallet type, was passed but there was no corresponding record for the named wallet in the database."
                  );
                (i = await C(t)), (i.name = e);
              }
              return i;
            }
            async function u(e) {
              let t;
              const r = e.type ? e.type : "seed",
                i = e.network ? e.network : "mainnet",
                n = e.name,
                o = e.walletId;
              if (!n || !o)
                throw Error(
                  "Wallet name and walletId are required for this operation"
                );
              return (t = await s[r][i]().replaceNamed(n, o)), t;
            }
            async function h(e) {
              let t,
                r = e.type ? e.type : "seed",
                i = e.network ? e.network : "mainnet";
              if (e.name && e.name.length > 0)
                return (t = await l(e.name, r, i)), t;
              {
                let e = s[r][i]();
                return (t = await new e()), (t.walletType = r), t.generate();
              }
            }
            async function I(e) {
              let t,
                r = e.type ? e.type : "seed",
                i = e.network ? e.network : "mainnet";
              if (e.name && e.name.length > 0) {
                if (((t = await s[r][i]().slp.named(e.name)), t.network != i))
                  throw Error(
                    `A wallet already exists with name ${e.name}, but with network ${t.network} not ${e.network}, per request`
                  );
                if (t.walletType != r)
                  throw Error(
                    `A wallet already exists with name ${e.name}, but with type ${t.walletType} not ${e.type}, per request`
                  );
                return t;
              }
              return (
                (t = await s[r][i]().slp.newRandom()), (t.walletType = r), t
              );
            }
            async function p(e) {
              let t = await h(e);
              if (t) return f(t);
              throw Error("Error creating wallet");
            }
            async function d(e) {
              let t = await I(e);
              if (t) return f(t);
              throw Error("Error creating wallet");
            }
            function f(e) {
              return e.mnemonic
                ? {
                    name: e.name,
                    cashaddr: e.cashaddr,
                    slpaddr: e.slp.slpaddr,
                    walletId: e.toString(),
                    ...e.getSeed(),
                    network: e.network,
                  }
                : {
                    name: e.name,
                    cashaddr: e.cashaddr,
                    slpaddr: e.slp.slpaddr,
                    walletId: e.toString(),
                    wif: e.privateKeyWif,
                    network: e.network,
                  };
            }
            async function C(e) {
              let [t, r, i] = e.split(":");
              if ("named" === t) return await l(i, t, r);
              let n = { name: "", network: r, type: t },
                o = await h(n);
              return await o.fromId(e), o;
            }
            i();
          } catch (B) {
            i(B);
          }
        });
      },
      85858: (e, t, r) => {
        "use strict";
        var i, n;
        r.d(t, { F: () => n, K: () => i }),
          (function (e) {
            (e.Wif = "wif"),
              (e.Seed = "seed"),
              (e.Hd = "hd"),
              (e.Watch = "watch"),
              (e.PrivateKey = "privkey");
          })(i || (i = {})),
          (function (e) {
            (e.change = "change"),
              (e.first = "firstOutput"),
              (e.any = "anyOutputs"),
              (e.last = "lastOutput"),
              (e.changeThenFirst = "changeThenFirst"),
              (e.changeThenAny = "changeThenAny"),
              (e.changeThenLast = "changeThenLast");
          })(n || (n = {}));
      },
      34167: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              GV: () => Q,
              HO: () => C,
              Lt: () => I,
              Rb: () => B,
              UC: () => p,
              ZT: () => d,
              bB: () => y,
              fb: () => E,
              hx: () => m,
              n9: () => f,
            });
            var n = r(59059),
              o = r(59490),
              A = r(20200),
              a = r(43137),
              s = r(78997),
              c = r(34684),
              g = r(16543),
              l = r(63862),
              u = r(48834).Buffer,
              h = e([l, n]);
            [l, n] = h.then ? (await h)() : h;
            class I {
              constructor({ cashaddr: e, value: t, unit: r }) {
                (this.cashaddr = e),
                  (this.value = t),
                  (this.unit = (0, o.O)(r));
              }
            }
            class p {
              constructor({
                amount: e,
                capability: t,
                commitment: r,
                cashaddr: i,
                value: n,
              }) {
                (this.amount = e),
                  (this.capability = t),
                  (this.commitment = r),
                  (this.cashaddr = i),
                  (this.value = n);
              }
            }
            class d {
              constructor({
                tokenId: e,
                capability: t,
                commitment: r,
                amount: i,
                cashaddr: n,
              }) {
                (this.tokenId = e),
                  (this.capability = t),
                  (this.commitment = r),
                  (this.amount = i),
                  (this.cashaddr = n);
              }
            }
            class f {
              constructor({
                cashaddr: e,
                value: t,
                amount: r,
                tokenId: i,
                capability: n,
                commitment: o,
              }) {
                (0, l.fl)(e, g.D.EnforceCashTokenReceiptAddresses),
                  (this.cashaddr = e),
                  (this.value = t),
                  (this.amount = r || 0),
                  (this.tokenId = i),
                  (this.capability = n),
                  (this.commitment = o);
              }
            }
            class C {
              constructor({
                capability: e,
                commitment: t,
                cashaddr: r,
                value: i,
              }) {
                (this.capability = e),
                  (this.commitment = t),
                  (this.cashaddr = r),
                  (this.value = i);
              }
            }
            class B {
              constructor(e) {
                this.buffer = u.from(e);
              }
              static from(e) {
                return this.fromArray([e]);
              }
              static fromString(e) {
                return this.fromArray([e]);
              }
              static fromBuffer(e) {
                return 106 !== e[0] ? this.fromArray([e]) : new this(e);
              }
              static fromUint8Array(e) {
                return 106 !== e[0] ? this.fromArray([e]) : new this(u.from(e));
              }
              static fromArray(e) {
                let t = u.from([106]);
                for (const r of e) {
                  let e, i, n;
                  if ("string" == typeof r) (i = (0, a.L)(r)), (e = i.length);
                  else if (r instanceof u) (i = r), (e = i.length);
                  else {
                    if (!(r instanceof Uint8Array))
                      throw new Error("Wrong data array element");
                    (i = u.from(r)), (e = i.length);
                  }
                  if (e < 76) n = [e];
                  else {
                    if (!(e < 223))
                      throw new Error(
                        "OP_RETURN data can not exceed 220 bytes in size"
                      );
                    n = [76, e];
                  }
                  t = u.from([...t, ...n, ...i]);
                }
                if (t.length > 220)
                  throw new Error(
                    "OP_RETURN data can not exceed 220 bytes in size"
                  );
                return new this(t);
              }
              static parseBinary(e) {
                const t = [];
                let r = 1;
                for (; e[r]; ) {
                  let i = 0;
                  76 === e[r]
                    ? ((i = e[r + 1]), (r += 2))
                    : 77 === e[r]
                    ? ((i = (0, s.ED)(e.slice(r + 1, r + 3))), (r += 3))
                    : ((i = e[r]), (r += 1)),
                    t.push(e.slice(r, r + i)),
                    (r += i);
                }
                return t;
              }
              static parse(e) {
                return this.parseBinary((0, c.kW)(e)).map((e) => (0, a.x)(e));
              }
            }
            class E {
              constructor({ txId: e, balance: t, explorerUrl: r }) {
                (this.txId = e),
                  (this.balance = new n.dO(t)),
                  (this.explorerUrl = r);
              }
            }
            class y {
              constructor({ path: e, xPubKey: t }) {
                (this.path = e), (this.xPubKey = t);
              }
              async ready() {
                return await this.xPubKey, this.asObject();
              }
              asObject() {
                return { path: this.path, xPubKey: this.xPubKey };
              }
            }
            const m = (e) => {
                const [t, r, i, n, o, a, s] = e.split(A.DELIMITER);
                return {
                  satoshis: i ? parseInt(i) : 0,
                  vout: parseInt(r),
                  txid: t,
                  token: n
                    ? {
                        tokenId: n,
                        amount: parseInt(o),
                        capability: a || void 0,
                        commitment: s || void 0,
                      }
                    : void 0,
                };
              },
              Q = (e) =>
                [
                  e.txid,
                  e.vout,
                  e.satoshis,
                  e.token?.tokenId,
                  e.token?.amount,
                  e.token?.capability,
                  e.token?.commitment,
                ]
                  .join(A.DELIMITER)
                  .replace(/:+$/, "");
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      56217: (e, t, r) => {
        "use strict";
        r.d(t, { CM: () => o, Ez: () => n, G2: () => a });
        var i,
          n,
          o,
          A = r(89644);
        !(function (e) {
          (e.transactionIn = "transaction:in"),
            (e.transactionOut = "transaction:out"),
            (e.transactionInOut = "transaction:in,out"),
            (e.balance = "balance"),
            (e.slpTransactionIn = "slptransaction:in"),
            (e.slpTransactionOut = "slptransaction:out"),
            (e.slpTransactionInOut = "slptransaction:in,out"),
            (e.slpBalance = "slpbalance");
        })(n || (n = {})),
          (function (e) {
            (e.once = "once"), (e.recurrent = "recurrent");
          })(o || (o = {}));
        class a {
          constructor(e) {
            Object.assign(this, e);
          }
          async start() {}
          async stop() {}
          async destroy() {
            this.id && (await this.db.deleteWebhook(this.id));
          }
          async post(e) {
            try {
              return await A.post(this.url, e), !0;
            } catch (e) {
              return !(!e.message || 200 !== e.message.status);
            }
          }
        }
        a.debug =
          (((i = class {
            static setupAxiosMocks() {
              A.interceptors.request.use((e) => {
                const t = e.url;
                if (!t.startsWith("http://example.com")) return e;
                let r;
                return (
                  (r =
                    "http://example.com/fail" === t
                      ? { status: 503 }
                      : { status: 200 }),
                  t in this.responses
                    ? this.responses[t].push(r)
                    : (this.responses[t] = [r]),
                  { ...e, cancelToken: new A.CancelToken((e) => e(r)) }
                );
              });
            }
            static reset() {
              this.responses = {};
            }
          }).responses = {}),
          i);
      },
      93379: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.r(t), r.d(t, { WebhookBch: () => c });
            var n = r(59059),
              o = r(46827),
              A = r(56217),
              a = r(27564),
              s = e([o, n]);
            [o, n] = s.then ? (await s)() : s;
            class c extends A.G2 {
              constructor(e) {
                super(e), (this.seenStatuses = []), Object.assign(this, e);
              }
              async stop() {
                await this.wallet.provider.unsubscribeFromAddress(
                  this.cashaddr,
                  this.callback
                );
              }
              async start() {
                (this.callback = async (e) => {
                  let t = "";
                  if ("string" == typeof e) {
                    if (((t = e), "" === this.status)) return;
                  } else {
                    if (!(e instanceof Array)) return;
                    if (((t = e[1]), e[0] !== this.cashaddr)) return;
                  }
                  t != this.status &&
                    -1 === this.seenStatuses.indexOf(t) &&
                    (this.seenStatuses.push(t), await this.handler(t));
                }),
                  (this.wallet = await o.w5.fromCashaddr(this.cashaddr)),
                  await this.wallet.provider.subscribeToAddress(
                    this.cashaddr,
                    this.callback
                  );
              }
              async handler(e) {
                const t = await this.wallet.provider.getHistory(this.cashaddr);
                let r = [];
                if ("" === e) r = t.slice(-1);
                else {
                  const e = t.reverse();
                  this.tx_seen = this.tx_seen.map((t) => {
                    if (t.height <= 0) {
                      const r = e.find((e) => e.tx_hash === t.tx_hash);
                      r && (t.height = r.height);
                    }
                    return t;
                  });
                  const i = this.tx_seen.map((e) => e.tx_hash);
                  r = t.filter(
                    (e) =>
                      (e.height >= this.last_height || e.height <= 0) &&
                      !i.includes(e.tx_hash)
                  );
                }
                let i = !0;
                for (const e of r) {
                  let t = !1;
                  if (this.type.indexOf("transaction:") >= 0) {
                    const r =
                        await this.wallet.provider.getRawTransactionObject(
                          e.tx_hash
                        ),
                      i = await Promise.all(
                        r.vin.map((e) =>
                          this.wallet.provider.getRawTransactionObject(e.txid)
                        )
                      ),
                      n = r.vout.some((e) =>
                        e.scriptPubKey.addresses.includes(this.cashaddr)
                      ),
                      o = i.some((e) =>
                        e.vout.some((e) =>
                          e.scriptPubKey.addresses.includes(this.cashaddr)
                        )
                      ),
                      a = this.type.indexOf("in") >= 0,
                      s = this.type.indexOf("out") >= 0,
                      c =
                        o && n
                          ? A.Ez.transactionInOut
                          : o
                          ? A.Ez.transactionOut
                          : A.Ez.transactionIn;
                    if (a && n) t = await this.post({ direction: c, data: r });
                    else {
                      if (!s || !o) continue;
                      t = await this.post({ direction: c, data: r });
                    }
                  } else if (this.type === A.Ez.balance) {
                    const e = await this.wallet.provider.getBalance(
                        this.cashaddr
                      ),
                      r = await (0, n.Wk)(e);
                    t = await this.post(r);
                  }
                  t
                    ? (this.tx_seen.push(e),
                      await this.db.setWebhookSeenTxLastHeight(
                        this.id,
                        this.tx_seen,
                        this.last_height
                      ))
                    : (i = !1);
                }
                if (i) {
                  if (this.recurrence === A.CM.once)
                    return (
                      await (await a.Z.instance()).stopHook(this),
                      void (await this.destroy())
                    );
                  (this.status = e), await this.db.setWebhookStatus(this.id, e);
                  const t = Math.max(...this.tx_seen.map((e) => e.height));
                  t >= this.last_height &&
                    ((this.last_height = t),
                    (this.tx_seen = this.tx_seen.filter(
                      (e) => e.height === t || e.height <= 0
                    )),
                    await this.db.setWebhookSeenTxLastHeight(
                      this.id,
                      this.tx_seen,
                      this.last_height
                    ));
                }
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      39757: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.r(t), r.d(t, { WebhookSlp: () => c });
            var n = r(68700),
              o = r(46827),
              A = r(56217),
              a = r(27564),
              s = e([o]);
            o = (s.then ? (await s)() : s)[0];
            class c extends A.G2 {
              constructor(e) {
                super(e),
                  Object.assign(this, e),
                  (this.cashaddr = (0, n.toSlpAddress)(this.cashaddr));
              }
              async start() {
                const e = async (e) => {
                  let t = !1;
                  (t =
                    "_id" in e.details
                      ? await this.slpDbHandler(e)
                      : await this.gsppHandler(e)),
                    t &&
                      this.recurrence === A.CM.once &&
                      (await (await a.Z.instance()).stopHook(this),
                      await this.destroy());
                };
                (this.callback = e),
                  (this.wallet = await o.w5.fromSlpaddr(this.cashaddr)),
                  (this.cancelFn = this.wallet.slp.watchTransactions(
                    e,
                    this.tokenId
                  ));
              }
              async slpDbHandler(e) {
                let t = !1;
                const r = this.type,
                  i = e.details;
                if (this.type === A.Ez.slpTransactionInOut)
                  t = await this.post({ direction: r, data: e });
                else if (
                  this.type === A.Ez.slpTransactionIn &&
                  i.out.findIndex((e) => e.e.a === this.cashaddr) > -1
                )
                  t = await this.post({ direction: r, data: e });
                else if (
                  this.type === A.Ez.slpTransactionOut &&
                  i.in.findIndex((e) => e.e.a === this.cashaddr) > -1
                )
                  t = await this.post({ direction: r, data: e });
                else if (this.type === A.Ez.slpBalance) {
                  const e = this.wallet.slp.getBalance(this.tokenId);
                  t = await this.post({ direction: r, data: e });
                }
                return t;
              }
              async gsppHandler(e) {
                let t = !1;
                const r = this.type,
                  i = e.details;
                if (this.type === A.Ez.slpTransactionInOut)
                  t = await this.post({ direction: r, data: e });
                else if (
                  this.type === A.Ez.slpTransactionIn &&
                  i.outputs.findIndex((e) => e === this.cashaddr) > -1
                )
                  t = await this.post({ direction: r, data: e });
                else if (
                  this.type === A.Ez.slpTransactionOut &&
                  i.inputs.findIndex((e) => e === this.cashaddr) > -1
                )
                  t = await this.post({ direction: r, data: e });
                else if (this.type === A.Ez.slpBalance) {
                  const e = this.wallet.slp.getBalance(this.tokenId);
                  t = await this.post({ direction: r, data: e });
                }
                return t;
              }
              async stop() {
                await this.cancelFn();
              }
            }
            i();
          } catch (e) {
            i(e);
          }
        });
      },
      27564: (e, t, r) => {
        "use strict";
        r.d(t, { Z: () => n });
        var i = r(11853);
        class n {
          constructor() {
            (this.activeHooks = new Map()),
              (this.callbacks = new Map()),
              (this.checkInterval = void 0),
              (this.db = new i.Z());
          }
          static async instance() {
            return (
              n._instance ||
                ((n._instance = new n()), await n._instance.init()),
              n._instance
            );
          }
          async init() {
            await this.db.init(),
              await this.evictOldHooks(),
              await this.pickupHooks(!0),
              this.checkInterval ||
                (this.checkInterval = setInterval(async () => {
                  await this.evictOldHooks(), await this.pickupHooks(!0);
                }, 3e5));
          }
          async destroy() {
            await this.stopAll(),
              this.checkInterval &&
                (clearInterval(this.checkInterval),
                (this.checkInterval = void 0));
          }
          async pickupHooks(e = !1) {
            const t = await this.db.getWebhooks();
            for (const r of t)
              this.activeHooks.has(r.id) ||
                (this.activeHooks.set(r.id, r), e && (await r.start()));
          }
          async evictOldHooks() {
            const e = new Date(),
              t = await this.db.getWebhooks();
            for (const r of t)
              e >= r.expires_at &&
                (this.activeHooks.has(r.id) && (await this.stopHook(r)),
                await this.db.deleteWebhook(r.id));
          }
          async registerWebhook(e, t = !0) {
            const r = await this.db.addWebhook(e);
            return t && (this.activeHooks.set(r.id, r), await r.start()), r.id;
          }
          async getWebhook(e) {
            return this.activeHooks.has(e)
              ? this.activeHooks.get(e)
              : await this.db.getWebhook(e);
          }
          async deleteWebhook(e) {
            this.activeHooks.has(e) &&
              (await this.stopHook(this.activeHooks.get(e))),
              await this.db.deleteWebhook(e);
          }
          async deleteAllWebhooks() {
            await this.stopAll(), await this.db.clearWebhooks();
          }
          async stopAll() {
            for (const [, e] of this.activeHooks) await this.stopHook(e);
          }
          async stopHook(e) {
            this.activeHooks.has(e.id) &&
              (await e.stop(), this.activeHooks.delete(e.id));
          }
        }
      },
      48078: (e, t, r) => {
        "use strict";
        r.a(e, async (e, i) => {
          try {
            r.d(t, {
              CM: () => o.CM,
              Ez: () => o.Ez,
              G2: () => o.G2,
              M1: () => A.WebhookBch,
              dm: () => a.WebhookSlp,
              vj: () => n.Z,
            });
            var n = r(27564),
              o = r(56217),
              A = r(93379),
              a = r(39757),
              s = e([A, a]);
            ([A, a] = s.then ? (await s)() : s), i();
          } catch (e) {
            i(e);
          }
        });
      },
      19521: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}'
        );
      },
      94556: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]'
        );
      },
      69095: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]'
        );
      },
      31955: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]'
        );
      },
      32308: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]'
        );
      },
      48004: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]'
        );
      },
      70061: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]'
        );
      },
      99148: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]'
        );
      },
      17428: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]'
        );
      },
      58930: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]'
        );
      },
      95565: (e) => {
        "use strict";
        e.exports = JSON.parse(
          '["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]'
        );
      },
    },
    c = {};
  function g(e) {
    var t = c[e];
    if (void 0 !== t) return t.exports;
    var r = (c[e] = { id: e, loaded: !1, exports: {} });
    return s[e].call(r.exports, r, r.exports, g), (r.loaded = !0), r.exports;
  }
  (g.m = s),
    (e =
      "function" == typeof Symbol
        ? Symbol("webpack queues")
        : "__webpack_queues__"),
    (t =
      "function" == typeof Symbol
        ? Symbol("webpack exports")
        : "__webpack_exports__"),
    (r =
      "function" == typeof Symbol
        ? Symbol("webpack error")
        : "__webpack_error__"),
    (i = (e) => {
      e &&
        !e.d &&
        ((e.d = 1),
        e.forEach((e) => e.r--),
        e.forEach((e) => (e.r-- ? e.r++ : e())));
    }),
    (g.a = (n, o, A) => {
      var a;
      A && ((a = []).d = 1);
      var s,
        c,
        g,
        l = new Set(),
        u = n.exports,
        h = new Promise((e, t) => {
          (g = t), (c = e);
        });
      (h[t] = u),
        (h[e] = (e) => (a && e(a), l.forEach(e), h.catch((e) => {}))),
        (n.exports = h),
        o(
          (n) => {
            var o;
            s = ((n) =>
              n.map((n) => {
                if (null !== n && "object" == typeof n) {
                  if (n[e]) return n;
                  if (n.then) {
                    var o = [];
                    (o.d = 0),
                      n.then(
                        (e) => {
                          (A[t] = e), i(o);
                        },
                        (e) => {
                          (A[r] = e), i(o);
                        }
                      );
                    var A = {};
                    return (A[e] = (e) => e(o)), A;
                  }
                }
                var a = {};
                return (a[e] = (e) => {}), (a[t] = n), a;
              }))(n);
            var A = () =>
                s.map((e) => {
                  if (e[r]) throw e[r];
                  return e[t];
                }),
              c = new Promise((t) => {
                (o = () => t(A)).r = 0;
                var r = (e) =>
                  e !== a &&
                  !l.has(e) &&
                  (l.add(e), e && !e.d && (o.r++, e.push(o)));
                s.map((t) => t[e](r));
              });
            return o.r ? c : A();
          },
          (e) => (e ? g((h[r] = e)) : c(u), i(a))
        ),
        a && (a.d = 0);
    }),
    (g.n = (e) => {
      var t = e && e.__esModule ? () => e.default : () => e;
      return g.d(t, { a: t }), t;
    }),
    (o = Object.getPrototypeOf
      ? (e) => Object.getPrototypeOf(e)
      : (e) => e.__proto__),
    (g.t = function (e, t) {
      if ((1 & t && (e = this(e)), 8 & t)) return e;
      if ("object" == typeof e && e) {
        if (4 & t && e.__esModule) return e;
        if (16 & t && "function" == typeof e.then) return e;
      }
      var r = Object.create(null);
      g.r(r);
      var i = {};
      n = n || [null, o({}), o([]), o(o)];
      for (var A = 2 & t && e; "object" == typeof A && !~n.indexOf(A); A = o(A))
        Object.getOwnPropertyNames(A).forEach((t) => (i[t] = () => e[t]));
      return (i.default = () => e), g.d(r, i), r;
    }),
    (g.d = (e, t) => {
      for (var r in t)
        g.o(t, r) &&
          !g.o(e, r) &&
          Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
    (g.f = {}),
    (g.e = (e) =>
      Promise.all(Object.keys(g.f).reduce((t, r) => (g.f[r](e, t), t), []))),
    (g.u = (e) => e + "-1.1.13.js"),
    (g.g = (function () {
      if ("object" == typeof globalThis) return globalThis;
      try {
        return this || new Function("return this")();
      } catch (e) {
        if ("object" == typeof window) return window;
      }
    })()),
    (g.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (A = {}),
    (a = "@mainnet-cash/contract:"),
    (g.l = (e, t, r, i) => {
      if (A[e]) A[e].push(t);
      else {
        var n, o;
        if (void 0 !== r)
          for (
            var s = document.getElementsByTagName("script"), c = 0;
            c < s.length;
            c++
          ) {
            var l = s[c];
            if (
              l.getAttribute("src") == e ||
              l.getAttribute("data-webpack") == a + r
            ) {
              n = l;
              break;
            }
          }
        n ||
          ((o = !0),
          ((n = document.createElement("script")).charset = "utf-8"),
          (n.timeout = 120),
          g.nc && n.setAttribute("nonce", g.nc),
          n.setAttribute("data-webpack", a + r),
          (n.src = e),
          0 !== n.src.indexOf(window.location.origin + "/") &&
            (n.crossOrigin = "anonymous")),
          (A[e] = [t]);
        var u = (t, r) => {
            (n.onerror = n.onload = null), clearTimeout(h);
            var i = A[e];
            if (
              (delete A[e],
              n.parentNode && n.parentNode.removeChild(n),
              i && i.forEach((e) => e(r)),
              t)
            )
              return t(r);
          },
          h = setTimeout(
            u.bind(null, void 0, { type: "timeout", target: n }),
            12e4
          );
        (n.onerror = u.bind(null, n.onerror)),
          (n.onload = u.bind(null, n.onload)),
          o && document.head.appendChild(n);
      }
    }),
    (g.r = (e) => {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (g.nmd = (e) => ((e.paths = []), e.children || (e.children = []), e)),
    (() => {
      var e;
      g.g.importScripts && (e = g.g.location + "");
      var t = g.g.document;
      if (!e && t && (t.currentScript && (e = t.currentScript.src), !e)) {
        var r = t.getElementsByTagName("script");
        r.length && (e = r[r.length - 1].src);
      }
      if (!e)
        throw new Error(
          "Automatic publicPath is not supported in this browser"
        );
      (e = e
        .replace(/#.*$/, "")
        .replace(/\?.*$/, "")
        .replace(/\/[^\/]+$/, "/")),
        (g.p = e);
    })(),
    (() => {
      var e = { 679: 0 };
      g.f.j = (t, r) => {
        var i = g.o(e, t) ? e[t] : void 0;
        if (0 !== i)
          if (i) r.push(i[2]);
          else {
            var n = new Promise((r, n) => (i = e[t] = [r, n]));
            r.push((i[2] = n));
            var o = g.p + g.u(t),
              A = new Error();
            g.l(
              o,
              (r) => {
                if (g.o(e, t) && (0 !== (i = e[t]) && (e[t] = void 0), i)) {
                  var n = r && ("load" === r.type ? "missing" : r.type),
                    o = r && r.target && r.target.src;
                  (A.message =
                    "Loading chunk " + t + " failed.\n(" + n + ": " + o + ")"),
                    (A.name = "ChunkLoadError"),
                    (A.type = n),
                    (A.request = o),
                    i[1](A);
                }
              },
              "chunk-" + t,
              t
            );
          }
      };
      var t = (t, r) => {
          var i,
            n,
            [o, A, a] = r,
            s = 0;
          if (o.some((t) => 0 !== e[t])) {
            for (i in A) g.o(A, i) && (g.m[i] = A[i]);
            a && a(g);
          }
          for (t && t(r); s < o.length; s++)
            (n = o[s]), g.o(e, n) && e[n] && e[n][0](), (e[n] = 0);
        },
        r = (self.webpackChunk_mainnet_cash_contract =
          self.webpackChunk_mainnet_cash_contract || []);
      r.forEach(t.bind(null, 0)), (r.push = t.bind(null, r.push.bind(r)));
    })();
  var l = g(99562);
  self.__contractPromise = l;
})();
